<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: QA | atodorov.org - you can logoff, but you can never leave]]></title>
  <link href="http://atodorov.org/blog/categories/qa/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2015-09-21T13:45:07+03:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[4000+ bugs in Fedora - checksec failures]]></title>
    <link href="http://atodorov.org/blog/2015/09/16/4000-bugs-in-fedora-checksec-failures/"/>
    <updated>2015-09-16T17:03:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/09/16/4000-bugs-in-fedora-checksec-failures</id>
    <content type="html"><![CDATA[<p>In the last week I've been trying to figure out how many packages
conform to the new
<a href="https://fedoraproject.org/wiki/Changes/Harden_All_Packages">Harden All Packages</a>
policy in Fedora!</p>

<p>From 46884 RPMs, 17385 are 'x86_64' meaning they may contain ELF objects.
From them 4489 are reported as failed <code>checksec</code>.</p>

<p>What you should see as the output from <code>checksec is</code></p>

<pre><code>Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH
Full RELRO      Canary found      NX enabled    DSO             No RPATH   No RUNPATH
</code></pre>

<p>The first line is for binaries, the second one for libraries b/c
DSOs on x86_64 are always position-independent. Some RPATHs are acceptable,
e.g. <code>%{_libdir}/foo/</code> and I've tried to exclude them unless
other offenses are found. The script which does this is
<a href="https://github.com/atodorov/fedora-scripts/blob/master/checksec-collect">checksec-collect</a>.</p>

<p>Most often I'm seeing <em>Partial RELRO</em>, <em>No canary found</em> and <em>No PIE</em> errors.
Since all packages potentially process untrusted input, it makes sense for all of them
to be hardened and enhance the security of Fedora. That's why all of these errors
should be considered valid bugs.</p>

<h2>Attn package maintainers</h2>

<p>Please see if your package is in the list and try to fix it or let me know
why it should be excluded, for example it's a boot loader and doesn't function
properly with hardening enabled. The full list is available at
<a href="https://github.com/atodorov/fedora-scripts/blob/master/checksec.log">GitHub</a>.</p>

<p>For more information about the different protection mechanisms see the following
links:</p>

<ul>
<li><a href="http://tk-blog.blogspot.bg/2009/02/relro-not-so-well-known-memory.html">Partial vs Full RELRO</a></li>
<li><a href="https://en.wikipedia.org/wiki/Buffer_overflow_protection#Canaries">Stack canaries</a></li>
<li><a href="https://en.wikipedia.org/wiki/NX_bit#Linux">NX memory protection</a></li>
<li><a href="https://securityblog.redhat.com/2012/11/28/position-independent-executables-pie/">Position Independent Executables</a></li>
<li><a href="https://fedoraproject.org/wiki/Packaging:Guidelines#Beware_of_Rpath">RPATH</a></li>
<li><a href="http://blog.tremily.us/posts/rpath/">RUNPATH</a></li>
</ul>


<p><strong>UPDATE 2015-09-17</strong></p>

<p>I've posted my findings on
<a href="https://lists.fedoraproject.org/pipermail/devel/2015-September/thread.html">fedora-devel</a>
and the comments are more than interesting even revealing an old bug in libtool.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minor Typo Bug in Messenger for bg_BG.UTF-8]]></title>
    <link href="http://atodorov.org/blog/2015/08/20/minor-typo-bug-in-messenger/"/>
    <updated>2015-08-20T16:34:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/08/20/minor-typo-bug-in-messenger</id>
    <content type="html"><![CDATA[<p><img src="/images/messenger_typo.png" title="Messenger typo" alt="Messenger typo" /></p>

<p>There's a typo in the Bulgarian translation of Messenger.com.
It is highlighted by the red dot on the picture.</p>

<p><em>hunspell</em> easily catches it so either Facebook doesn't run their
translations through a spell checker or their spell checker is
borked.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pedometer Bug in Samsung S Health]]></title>
    <link href="http://atodorov.org/blog/2015/08/17/pedometer-bug-in-samsung-s-health/"/>
    <updated>2015-08-17T16:43:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/08/17/pedometer-bug-in-samsung-s-health</id>
    <content type="html"><![CDATA[<p>Do you remember the
<a href="/blog/2015/01/09/pedometer-bug-in-samsung-gear-fit-smartwatch/">pedometer bug in Samsung Gear Fit</a>
I've discovered earlier ? It turns out that Samsung is a fan of this one
and has the exact same bug in their <em>S Health</em> application.</p>

<p>The application doesn't block pedometer(e.g. steps counting) while
performing other activities such as cycling for example. So in reallity it
reports incorrect value for burned callories. At this time I call it
bad software development practice/architecture on Samsung's part which leads
to this bug being present.</p>

<p>Btw for more interesting bugs see
<a href="http://gearfitbugs.tumblr.com/">Samsung Gear Fit Bug-of-the-Day</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Call for Ideas: Graphical Test Coverage Reports]]></title>
    <link href="http://atodorov.org/blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports/"/>
    <updated>2015-07-27T13:04:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports</id>
    <content type="html"><![CDATA[<p>If you are working with Python and writing unit tests chances are you are
familiar with the <a href="http://nedbatchelder.com/code/coverage/">coverage</a> reporting
tool. However there are testing scenarios in which we either don't use unit tests
or maybe execute different code paths(test cases) independent of each other.</p>

<p>For example, this is the case with installation testing in Fedora. Because anaconda
- the installer is very complex the easiest way is to test it live, not with unit tests.
Even though we can get a coverage report (anaconda is written in Python) it reflects
only the test case it was collected from.</p>

<p><code>coverage combine</code> can be used to combine several data files and produce an aggregate
report. This can tell you how much test coverage you have across all your tests.</p>

<p>As far as I can tell Python's coverage doesn't tell you how many times a particular
line of code has been executed. It also doesn't tell you which test cases executed
a particular line
(see <a href="https://bitbucket.org/ned/coveragepy/pull-request/59">PR #59</a>).
In the Fedora example, I have the feeling many of our tests are touching the same
code base and not contributing that much to the overall test coverage.
So I started working on these items.</p>

<p>I imagine a script which will read coverage data from several test executions
(preferably in JSON format,
<a href="https://bitbucket.org/ned/coveragepy/pull-request/60">PR #60</a>) and produce a
graphical report similar to what GitHub does for your commit activity.</p>

<p>See an example <a href="https://s3.amazonaws.com/atodorov/blog/pykickstart_report.html">here</a>!</p>

<p>The example uses darker colors to indicate more line executions, lighter for less
executions. Check the HTML for the actual numbers b/c there are no hints yet.
The input JSON files are
<a href="https://s3.amazonaws.com/atodorov/blog/coverage_json_reports.tar.gz">here</a> and
the script to generate the above HTML is at
<a href="https://github.com/atodorov/fedora-scripts/blob/master/coverage-tool">GitHub</a>.</p>

<p>Now I need your ideas and comments!</p>

<p>What kinds of coverage reports are you using in your job ? How do you generate them ?
How do they look like ?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bug in VMware Open House Website]]></title>
    <link href="http://atodorov.org/blog/2015/05/21/bug-in-vmware-open-house-website/"/>
    <updated>2015-05-21T14:55:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/05/21/bug-in-vmware-open-house-website</id>
    <content type="html"><![CDATA[<p><img src="/images/vmware_bug.png" title="Bug in VMware Open House website" alt="&quot;Open House website bug&quot;" /></p>

<p>This is a slightly annoying UI bug in
<a href="http://www.openhouse.vmware-bulgaria.com/">VMware's Open House</a> website. I've reported
it and hopefully they will fix it.</p>
]]></content>
  </entry>
  
</feed>
