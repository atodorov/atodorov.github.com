<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>atodorov.org</title><link href="http://atodorov.org/" rel="alternate"></link><link href="http://atodorov.org/blog/categories/tips/atom.xml" rel="self"></link><id>http://atodorov.org/</id><updated>2015-11-23T15:50:00+02:00</updated><entry><title>Tip: Running DNF Plugins from git</title><link href="http://atodorov.org/blog/2015/11/23/tip-running-dnf-plugins-from-git/" rel="alternate"></link><updated>2015-11-23T15:50:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-23:blog/2015/11/23/tip-running-dnf-plugins-from-git/</id><summary type="html">&lt;p&gt;This is mostly for self reference because it is not currently documented
in the code. To use dnf plugins from a local git checkout modify your
&lt;code&gt;/etc/dnf/dnf.conf&lt;/code&gt; and add the following line under the &lt;code&gt;[main]&lt;/code&gt; section:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;pluginpath=/path/to/dnf-plugins-core/plugins
&lt;/pre&gt;&lt;/div&gt;</summary><category term="QA"></category><category term="fedora.planet"></category><category term="tips"></category></entry><entry><title>Tip: Try F10 When Editing grub2 Menu in EFI Mode</title><link href="http://atodorov.org/blog/2015/08/14/tip-try-f10-when-editing-grub2-menu-in-efi-mode/" rel="alternate"></link><updated>2015-08-14T14:06:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-08-14:blog/2015/08/14/tip-try-f10-when-editing-grub2-menu-in-efi-mode/</id><summary type="html">&lt;p&gt;When editing the grub2 menu (especially in EFI mode) it tells you to
press Ctrl-x to save your changes and continue the boot process.
However this doesn't work on Apple hardware
(&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1253637"&gt;rhbz#1253637&lt;/a&gt;(https://bugzilla.redhat.com/show_bug.cgi?id=1253637))
and maybe some other platforms. If this is the case try pressing &lt;strong&gt;F10&lt;/strong&gt; 
instead. It works for me!&lt;/p&gt;</summary><category term="Fedora"></category><category term="RHEL"></category><category term="Mac"></category><category term="fedora.planet"></category><category term="tips"></category></entry><entry><title>How to Enable backspace Key to Navigate Back in Firefox</title><link href="http://atodorov.org/blog/2015/04/27/how-to-enable-backspace-key-to-navigate-back-in-firefox/" rel="alternate"></link><updated>2015-04-27T23:53:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-27:blog/2015/04/27/how-to-enable-backspace-key-to-navigate-back-in-firefox/</id><summary type="html">&lt;p&gt;Open &lt;code&gt;about:config&lt;/code&gt; and set &lt;code&gt;browser.backspace_action&lt;/code&gt; to 0.
For more information see &lt;a href="http://kb.mozillazine.org/Browser.backspace_action"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="tips"></category></entry><entry><title>Tip: Linux-IO default LUN is 0 instead of 1</title><link href="http://atodorov.org/blog/2015/04/08/tip-linux-io-default-lun-is-0-instead-of-1/" rel="alternate"></link><updated>2015-04-08T15:09:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-08:blog/2015/04/08/tip-linux-io-default-lun-is-0-instead-of-1/</id><summary type="html">&lt;p&gt;I've been testing iBFT in KVM which worked quite well with a RHEL 6 iSCSI target
and failed miserably when I switched to RHEL 7 iSCSI target.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;iPXE&amp;gt; dhcp net0
DHCP (net0 52:54:00:12:34:56)... ok
iPXE&amp;gt; set keep-san 1
iPXE&amp;gt; sanboot iscsi:10.0.0.1:::1:iqn.2015-05.com.example:target1
Could not open SAN device: Input/output error (http://ipxe.org/1d704539)
iPXE&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;a href="http://ipxe.org/err/1d7045"&gt;error page&lt;/a&gt; says&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the default configuration when Linux is the target is for the disk to be LUN 1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well this is not true for Linux-IO (targetcli). &lt;strong&gt;The default LUN is 0!&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;iPXE&amp;gt; sanboot iscsi:10.0.0.1:::0:iqn.2015-05.com.example:target1
Registered SAN device 0x80
Booting from SAN device 0x80
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kudos to Bruno Goncalves from Red Hat in helping me debug this issue!&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category><category term="tips"></category></entry><entry><title>Tip: Collecting Emails - Webhooks for UserVoice and WordPress.com</title><link href="http://atodorov.org/blog/2014/07/12/tip-collecting-emails-with-webhooks-uservoice-wordpress/" rel="alternate"></link><updated>2014-07-12T23:15:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-07-12:blog/2014/07/12/tip-collecting-emails-with-webhooks-uservoice-wordpress/</id><summary type="html">&lt;p&gt;In my practice I like to use webhooks and integrate auxiliary services with
my internal processes or businesses. One of these is the collection of emails.
In this short article I'll show you an example of how to collect email addresses
from the comments of a WordPress.com blog and the UserVoice feedback/ticketing system.&lt;/p&gt;
&lt;h2&gt;WordPress.com&lt;/h2&gt;
&lt;p&gt;For your WordPress.com blog from the Admin Dashboard navigate to 
Settings -&amp;gt; Webhooks and add a new webhook with action &lt;code&gt;comment_post&lt;/code&gt;
and fields &lt;code&gt;comment_author&lt;/code&gt;, &lt;code&gt;comment_author_email&lt;/code&gt;. A simple
Django view that handles the input is shown below.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@csrf_exempt&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hook_wp_comment_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Not a POST&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;hook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hook&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hook&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;comment_post&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Go away&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;comment_author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;last_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;

    &lt;span class="n"&gt;details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;comment_author_email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;store_user_details&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;details&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OK&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;UserVoice&lt;/h2&gt;
&lt;p&gt;For UserVoice navigate to Admin Dashboard -&amp;gt; Settings -&amp;gt; Integrations -&amp;gt; 
Service Hooks and add a custom web hook for the New Ticket notification.
Then use a sample code like that:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@csrf_exempt&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hook_uservoice_new_ticket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Not a POST&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;event&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;new_ticket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Go away&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ticket&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;contact&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;store_user_details&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;details&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OK&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;store_user_details()&lt;/code&gt; is a function which handles the email/name received in the webhook,
possibly adding them to a database or anything else.&lt;/p&gt;
&lt;p&gt;I find webhooks extremely easy to setup and develop and used them whenever they are
supported by the service provider. What other services do you use webhooks for? Please
share your story in the comments.&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category><category term="start-up"></category></entry><entry><title>Tip: How to Build updates.img for Fedora</title><link href="http://atodorov.org/blog/2014/02/07/tip-how-to-build-updates.img-for-fedora/" rel="alternate"></link><updated>2014-02-07T11:01:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-07:blog/2014/02/07/tip-how-to-build-updates.img-for-fedora/</id><summary type="html">&lt;p&gt;Anaconda the Fedora, CentOS and Red Hat Enterprise Linux installer has the
capability to incorporate
&lt;a href="https://fedoraproject.org/wiki/Anaconda/Updates"&gt;updates at runtime&lt;/a&gt;.
These updates are generally distributed as an &lt;code&gt;updates.img&lt;/code&gt; file. Here is how
to easily build one from a working installation tree.&lt;/p&gt;
&lt;p&gt;Instead of using the git sources to build an updates.img I prefer using the SRPM
from the tree which I am installing. &lt;strike&gt;This way the resulting updates image will be
more consistent with the anaconda version already available in the tree. And in theory
everything you need to build it should already be available as well.&lt;/strike&gt;
&lt;strong&gt;UPDATE 2014-02-08:&lt;/strong&gt; You can also build the &lt;code&gt;updates.img&lt;/code&gt; from the git source tree
which is shown at the bottom of this article. &lt;/p&gt;
&lt;p&gt;The following steps work for me on a Fedora 20 system. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download the source RPM for anaconda from the tree and extract the sources to a working
directory. Then;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;anaconda-20.25.16-1
git init
git add .
git commit -m &lt;span class="s2"&gt;&amp;quot;initial import&amp;quot;&lt;/span&gt;
git tag anaconda-20.25.16-1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The above steps will create a local git repository and tag the initial contents before
modification. The tag is required later by the script which creates the updates image;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After making your changes commit them and from the top anaconda directory execute:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;./scripts/makeupdates -t anaconda-20.25.16-1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also add RPM contents to the updates.img but you need to download the packages first:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;yumdownloader python-coverage python-setuptools

./scripts/makeupdates -t anaconda-20.25.16-1 -a ~/python-coverage-3.7-1.fc20.x86_64.rpm -a ~/python-setuptools-1.4.2-1.fc20.noarch.rpm 
BUILDDIR /home/atodorov/anaconda-20.25.16-1
Including anaconda
&lt;span class="m"&gt;2&lt;/span&gt; RPMs added manually:
python-setuptools-1.4.2-1.fc20.noarch.rpm
python-coverage-3.7-1.fc20.x86_64.rpm
&lt;span class="nb"&gt;cd&lt;/span&gt; /home/atodorov/anaconda-20.25.16-1/updates &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rpm2cpio /home/atodorov/python-setuptools-1.4.2-1.fc20.noarch.rpm &lt;span class="p"&gt;|&lt;/span&gt; cpio -dium
&lt;span class="m"&gt;3534&lt;/span&gt; blocks
&lt;span class="nb"&gt;cd&lt;/span&gt; /home/atodorov/anaconda-20.25.16-1/updates &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rpm2cpio /home/atodorov/python-coverage-3.7-1.fc20.x86_64.rpm &lt;span class="p"&gt;|&lt;/span&gt; cpio -dium
&lt;span class="m"&gt;1214&lt;/span&gt; blocks
&amp;lt;stdin&amp;gt; to &amp;lt;stdout&amp;gt; &lt;span class="m"&gt;4831&lt;/span&gt; blocks

updates.img ready
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the above example I have only modified the top level anaconda file (&lt;code&gt;/usr/sbin/anaconda&lt;/code&gt;
inside the installation environment) experimenting with
&lt;a href="http://nedbatchelder.com/code/coverage/"&gt;python-coverage&lt;/a&gt; integration.&lt;/p&gt;
&lt;p&gt;You are done! Make the &lt;code&gt;updates.img&lt;/code&gt; available to Anaconda and start using it!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2014-02-08:&lt;/strong&gt; If you prefer working with the anaconda source tree here's
how to do it:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git clone git://git.fedorahosted.org/git/anaconda.git
&lt;span class="nb"&gt;cd &lt;/span&gt;anaconda/
git checkout anaconda-20.25.16-1 -b my_feature-branch

... make changes ...

git commit -a -m &lt;span class="s2"&gt;&amp;quot;Fixed something&amp;quot;&lt;/span&gt;

./scripts/makeupdates -t anaconda-20.25.16-1
&lt;/pre&gt;&lt;/div&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>AWS Tip: Shrinking EBS Root Volume Size</title><link href="http://atodorov.org/blog/2014/02/07/aws-tip-shrinking-ebs-root-volume-size/" rel="alternate"></link><updated>2014-02-07T00:23:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-07:blog/2014/02/07/aws-tip-shrinking-ebs-root-volume-size/</id><summary type="html">&lt;p&gt;Amazon's Elastic Block Store volumes are easy to use and expand but notoriously
hard to shrink once their size has grown. Here is my tip for shrinking EBS size
and saving some money from over-provisioned storage. I'm assuming that you want to
shrink the root volume which is on EBS. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write down the block device name for the root volume (/dev/sda1) - &lt;em&gt;from AWS console:
Instances; Select instance; Look at Details tab; See Root device or Block devices&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Write down the availability zone of your instance - &lt;em&gt;from AWS console: Instances;
column Availability Zone&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Stop instance;&lt;/li&gt;
&lt;li&gt;Create snapshot of the root volume;&lt;/li&gt;
&lt;li&gt;From the snapshot, create a second volume, in the &lt;strong&gt;same availability zone&lt;/strong&gt; as
your instance (you will have to attach it later). This will be your pristine source;&lt;/li&gt;
&lt;li&gt;Create new empty EBS volume (not based on a snapshot), with smaller size,
in the same availability zone - &lt;em&gt;from AWS console: Volumes; Create Volume;
Snapshot == No Snapshot&lt;/em&gt;; &lt;strong&gt;IMPORTANT&lt;/strong&gt; - size should be large enough to hold
all the files from the source file system (try &lt;code&gt;df -h&lt;/code&gt; on the source first);&lt;/li&gt;
&lt;li&gt;Attach both volumes to instance while taking note of the block devices names
you assign for them in the AWS console;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example: In my case &lt;code&gt;/dev/sdc1&lt;/code&gt; is the source snapshot and &lt;code&gt;/dev/sdd1&lt;/code&gt; is the
empty target.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start instance;&lt;/li&gt;
&lt;li&gt;Optionally check the source file system with &lt;code&gt;e2fsck -f /dev/sdc1&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Create a file system for the empty volume - &lt;code&gt;mkfs.ext4 /dev/sdd1&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Mount volumes at &lt;code&gt;/source&lt;/code&gt; and &lt;code&gt;/target&lt;/code&gt; respectively;&lt;/li&gt;
&lt;li&gt;Now sync the files: &lt;code&gt;rsync -aHAXxSP /source/ /target&lt;/code&gt;. &lt;strong&gt;Note the missing slash (/)
after &lt;code&gt;/target&lt;/code&gt;&lt;/strong&gt;. If you add it you will end up with files inside &lt;code&gt;/target/source/&lt;/code&gt;
which you don't want;&lt;/li&gt;
&lt;li&gt;Quickly verify the new directory structure with &lt;code&gt;ls -l /target&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Unmount &lt;code&gt;/target&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Optionally check the new file system for consistency &lt;code&gt;e2fsck -f /dev/sdd1&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; - check how &lt;code&gt;/boot/grub/grub.conf&lt;/code&gt; specifies the root volume - 
by UUID, by LABEL, by device name, etc. You will have to duplicate the same for the
new smaller volume or update &lt;code&gt;/target/boot/grub/grub.conf&lt;/code&gt; to match the new volume.
Check &lt;code&gt;/target/etc/fstab&lt;/code&gt; as well!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my case I had to &lt;code&gt;e2label /dev/sdd1 /&lt;/code&gt; because both &lt;code&gt;grub.conf&lt;/code&gt; and &lt;code&gt;fstab&lt;/code&gt; were
using the device label.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shutdown the instance;&lt;/li&gt;
&lt;li&gt;Detach all volumes;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; - attach the new smaller volume to the instance using the same block device
name from the first step (e.g. &lt;code&gt;/dev/sda1&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;Start the instance and verify it is working correctly;&lt;/li&gt;
&lt;li&gt;DELETE auxiliary volumes and snapshots so they don't take space and accumulate costs!&lt;/li&gt;
&lt;/ul&gt;</summary><category term="tips"></category><category term="Amazon"></category><category term="cloud"></category></entry><entry><title>Tip: Cut Leading or Trailing Fields From Strings in Bash</title><link href="http://atodorov.org/blog/2013/11/19/tip-cut-leading-or-trailing-fields-from-strings-in-bash/" rel="alternate"></link><updated>2013-11-19T00:16:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-19:blog/2013/11/19/tip-cut-leading-or-trailing-fields-from-strings-in-bash/</id><summary type="html">&lt;p&gt;Today I was looking for a command sequence to cut a string in two by predefined
delimiter (e.g. like &lt;code&gt;cut&lt;/code&gt; does). I wanted to get the last field only and all
fields but the last as separate variables.&lt;/p&gt;
&lt;p&gt;The proposed solutions I've found suggested using &lt;code&gt;awk&lt;/code&gt; but I don't like it.
Here's a simple solution using &lt;code&gt;cut&lt;/code&gt; and &lt;code&gt;rev&lt;/code&gt; which can extract arbitrary
field counts from the end of the string. &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f1 -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f-2 -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
fedoraproject.org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f-3 -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
phx2.fedoraproject.org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f2- -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
buildvm-08.phx2.fedoraproject
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f3- -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
buildvm-08.phx2
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f4- -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
buildvm-08
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The magic here is done by &lt;code&gt;rev&lt;/code&gt; which reverses the order of characters in every
line. It comes with the &lt;em&gt;util-linux-ng&lt;/em&gt; package.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note to Self:&lt;/strong&gt; &lt;em&gt;util-linux-ng&lt;/em&gt; appears to contain more useful commands which
I wasn't aware of. Need to RTFM a little bit.&lt;/p&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>Tip: Extending Btrfs Filesystem for Fedora Virtual Machine</title><link href="http://atodorov.org/blog/2013/10/13/tip-extending-btrfs-filesystem-for-fedora-virtual-machine/" rel="alternate"></link><updated>2013-10-13T14:53:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-13:blog/2013/10/13/tip-extending-btrfs-filesystem-for-fedora-virtual-machine/</id><summary type="html">&lt;p&gt;I was testing Fedora 20 inside a KVM guest this week when the disk
space run out. The system was configured to use Btrfs filesystem and this is how
to extend it.&lt;/p&gt;
&lt;p&gt;First you have to extend the underlying guest storage. On the host I'm using LVM
so this is a no brainer:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# pvs
  PV                                                    VG              Fmt  Attr PSize   PFree  
  /dev/mapper/luks-f3f6cea1-baba-4aaf-bca8-33a0ec540369 vg_redbull_mini lvm2 a--  289,11g 134,11g

# lvs
  LV            VG              Attr      LSize   Pool Origin Data%  Move Log Cpy%Sync Convert
  vm_fedora     vg_redbull_mini -wi-ao---  15,00g                                             

# lvextend -L +5G /dev/mapper/vg_redbull_mini-vm_fedora 
  Extending logical volume vm_fedora to 20,00 GiB
  Logical volume vm_fedora successfully resized

# lvs
  LV            VG              Attr      LSize   Pool Origin Data%  Move Log Cpy%Sync Convert
  vm_fedora     vg_redbull_mini -wi-ao---  20,00g                                             

# pvs
  PV                                                    VG              Fmt  Attr PSize   PFree  
  /dev/mapper/luks-f3f6cea1-baba-4aaf-bca8-33a0ec540369 vg_redbull_mini lvm2 a--  289,11g 129,11g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the VM we have a default Btrfs layout:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# blkid
/dev/vda1: UUID=&amp;quot;410ee563-e701-42ff-9d5f-5805dd103e35&amp;quot; TYPE=&amp;quot;ext4&amp;quot; PARTUUID=&amp;quot;0000330f-01&amp;quot; 
/dev/vda2: UUID=&amp;quot;f4addad4-a0fc-482e-ad5a-240864b76f09&amp;quot; TYPE=&amp;quot;swap&amp;quot; PARTUUID=&amp;quot;0000330f-02&amp;quot; 
/dev/vda3: LABEL=&amp;quot;fedora&amp;quot; UUID=&amp;quot;f0b589ce-061c-4ac3-826e-7f3f8c8a6d30&amp;quot; UUID_SUB=&amp;quot;11aa8414-3ce1-4fe7-a506-9a4f91ba5c30&amp;quot; TYPE=&amp;quot;btrfs&amp;quot; PARTUUID=&amp;quot;0000330f-03&amp;quot; 

# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/vda3        13G   11G  1.4G  89% /
devtmpfs        996M     0  996M   0% /dev
tmpfs          1002M   80K 1002M   1% /dev/shm
tmpfs          1002M  668K 1002M   1% /run
tmpfs          1002M     0 1002M   0% /sys/fs/cgroup
tmpfs          1002M   16K 1002M   1% /tmp
/dev/vda3        13G   11G  1.4G  89% /home
/dev/vda1       477M   72M  376M  17% /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now power-off (not reboot) and power-on the VM guest so that it sees the new size
of the underlying storage. See the fdisk header (line 9 below), vda is now 20GiB!&lt;/p&gt;
&lt;p&gt;Before extending the filesystem you have to extend the underlying disk partition! This is the
trickiest part. Using fdisk or parted you have to delete the partition and add it again.
Make sure to use the &lt;strong&gt;SAME&lt;/strong&gt; starting sector for the new partition (line 33)!&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# fdisk /dev/vda&lt;/span&gt;

Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux 2.24-rc1&lt;span class="o"&gt;)&lt;/span&gt;.
Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
Be careful before using the write command.


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/vda: &lt;span class="m"&gt;20&lt;/span&gt; GiB, &lt;span class="m"&gt;21474836480&lt;/span&gt; bytes, &lt;span class="m"&gt;41943040&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disk label &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x0000330f

Device    Boot     Start       End   Blocks  Id System
/dev/vda1 *         &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;1026047&lt;/span&gt;   &lt;span class="m"&gt;512000&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/vda2        &lt;span class="m"&gt;1026048&lt;/span&gt;   &lt;span class="m"&gt;5253119&lt;/span&gt;  &lt;span class="m"&gt;2113536&lt;/span&gt;  &lt;span class="m"&gt;82&lt;/span&gt; Linux swap / Solaris
/dev/vda3        &lt;span class="m"&gt;5253120&lt;/span&gt;  &lt;span class="m"&gt;31457279&lt;/span&gt; &lt;span class="m"&gt;13102080&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: d
Partition number &lt;span class="o"&gt;(&lt;/span&gt;1-3, default 3&lt;span class="o"&gt;)&lt;/span&gt;: 3

Partition &lt;span class="m"&gt;3&lt;/span&gt; is deleted

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n

Partition &lt;span class="nb"&gt;type&lt;/span&gt;:
   p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;2&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
   e   extended
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;3,4, default 3&lt;span class="o"&gt;)&lt;/span&gt;: 3
First sector &lt;span class="o"&gt;(&lt;/span&gt;5253120-41943039, default 5253120&lt;span class="o"&gt;)&lt;/span&gt;: 
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;5253120-41943039, default 41943039&lt;span class="o"&gt;)&lt;/span&gt;: 

Created a new partition &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size 17,5 GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/vda: &lt;span class="m"&gt;20&lt;/span&gt; GiB, &lt;span class="m"&gt;21474836480&lt;/span&gt; bytes, &lt;span class="m"&gt;41943040&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disk label &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x0000330f

Device    Boot     Start       End   Blocks  Id System
/dev/vda1 *         &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;1026047&lt;/span&gt;   &lt;span class="m"&gt;512000&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/vda2        &lt;span class="m"&gt;1026048&lt;/span&gt;   &lt;span class="m"&gt;5253119&lt;/span&gt;  &lt;span class="m"&gt;2113536&lt;/span&gt;  &lt;span class="m"&gt;82&lt;/span&gt; Linux swap / Solaris
/dev/vda3        &lt;span class="m"&gt;5253120&lt;/span&gt;  &lt;span class="m"&gt;41943039&lt;/span&gt; &lt;span class="m"&gt;18344960&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: w

The partition table has been altered.
Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
Re-reading the partition table failed.: Device or resource busy

The kernel still uses the old table. The new table will be used at the next reboot or after you run partprobe&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt; or kpartx&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt;.

&lt;span class="c"&gt;# partprobe&lt;/span&gt;
Error: Partition&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; on /dev/vda have been written, but we have been unable to inform the kernel of the change, probably because it/they are in use.  As a result, the old partition&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; will remain in use.  You should reboot now before making further changes.

&lt;span class="c"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;See lines 36 and 49 above. The new partition has a greater size.
After reboot just resize the filesystem and verify the new space has been added&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# btrfs filesystem resize max /
Resize &amp;#39;/&amp;#39; of &amp;#39;max&amp;#39;

# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/vda3        18G   11G  6.4G  63% /
devtmpfs        996M     0  996M   0% /dev
tmpfs          1002M   80K 1002M   1% /dev/shm
tmpfs          1002M  660K 1002M   1% /run
tmpfs          1002M     0 1002M   0% /sys/fs/cgroup
tmpfs          1002M   16K 1002M   1% /tmp
/dev/vda3        18G   11G  6.4G  63% /home
/dev/vda1       477M   72M  376M  17% /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is it, more disk space available for the virtual machine. Let me know how it works
for you.&lt;/p&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>Tip: Installing Missing debuginfo Packages for ABRT</title><link href="http://atodorov.org/blog/2013/10/12/tip-installing-missing-debuginfo-packages-for-abrt/" rel="alternate"></link><updated>2013-10-12T14:38:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-12:blog/2013/10/12/tip-installing-missing-debuginfo-packages-for-abrt/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Reporting disabled&amp;quot;" src="/images/reporting_disabled.png" title="Reporting disabled" /&gt;&lt;/p&gt;
&lt;p&gt;Every once in a while ABRT will tell you that reporting is disabled because
backtrace is unusable. What it means is that it can't read some of the debugging
symbols and the most likely reason for that is debuginfo packages are missing.&lt;/p&gt;
&lt;p&gt;To install them first locate the directory containing the files for that particular
crash. Use the &lt;code&gt;executable&lt;/code&gt; file to find out if you are looking into the correct
directory. Then use this one liner to install the missing debuginfo packages.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# pwd
/var/tmp/abrt/ccpp-2013-10-10-15:55:18-15533
# cat backtrace | grep lib | tr -s &amp;#39; &amp;#39; | cut -f4 -d&amp;#39; &amp;#39; | sort | uniq | grep &amp;quot;/&amp;quot; | xargs rpm -qf --qf &amp;quot;%{name}\n&amp;quot; | xargs debuginfo-install -y
&lt;/pre&gt;&lt;/div&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>Tip: How to Find Your Red Hat Account Number</title><link href="http://atodorov.org/blog/2013/08/23/how-to-find-your-red-hat-account-number/" rel="alternate"></link><updated>2013-08-23T11:55:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-23:blog/2013/08/23/how-to-find-your-red-hat-account-number/</id><summary type="html">&lt;p&gt;&lt;img src="/images/redhat_account_number.png" style="float:left;display:inline-block;margin-right:10px;" /&gt;&lt;/p&gt;
&lt;p&gt;One thing you need to know when ordering Red Hat subscriptions is your
account number. It is available in the drop down menu at the top right
corner after you login at &lt;a href="https://access.redhat.com"&gt;https://access.redhat.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;New accounts don't have an account number. It will be generated after
the first subscription activation.&lt;/p&gt;
&lt;p&gt;If you need to know more about Red Hat's ordering process just ask me!&lt;/p&gt;</summary><category term="RHEL"></category><category term="tips"></category></entry><entry><title>SSH from Linux to BlackBerry Z10</title><link href="http://atodorov.org/blog/2013/07/19/ssh-from-linux-to-blackberry-z10/" rel="alternate"></link><updated>2013-07-19T23:31:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-19:blog/2013/07/19/ssh-from-linux-to-blackberry-z10/</id><summary type="html">&lt;p&gt;You can SSH into a &lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt; device even on Linux.
I'm using Red Hat Enterprise Linux 6 and here is how to establish the connection.&lt;/p&gt;
&lt;p&gt;1) &lt;a href="/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/"&gt;Enable USB networking&lt;/a&gt;
between your Linux desktop and the Z10;&lt;/p&gt;
&lt;p&gt;2) Install the &lt;a href="https://developer.blackberry.com/develop/platform_choice/ndk.html"&gt;Momentics IDE&lt;/a&gt;.
You need it to create debug tokens and to start the SSH daemon on the device;&lt;/p&gt;
&lt;p&gt;3) Obtain &lt;a href="https://www.blackberry.com/SignedKeys/codesigning.html"&gt;signing keys&lt;/a&gt;
and create a debug token by following the wizard in the IDE.
I just started a new project and followed the instructions;&lt;/p&gt;
&lt;p&gt;4) Install debug token on device using the IDE. From &lt;code&gt;Window -&amp;gt; Preferences&lt;/code&gt; select
&lt;code&gt;Blackberry -&amp;gt; Signing&lt;/code&gt;. Just create and deploy the debug token on the device. Mine was
automatically discovered so I just had to follow the prompts;&lt;/p&gt;
&lt;p&gt;5) Reboot and re-enable development mode (I'm not sure if this was necessary);&lt;/p&gt;
&lt;p&gt;6) Generate a &lt;strong&gt;4096 bit&lt;/strong&gt; key for SSH. Smaller keys won't work. You can use your
current key if it is 4096 bit;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -t rsa -b 4096
Generating public/private rsa key pair.
Enter file in which to save the key &lt;span class="o"&gt;(&lt;/span&gt;/home/atodorov/.ssh/id_rsa&lt;span class="o"&gt;)&lt;/span&gt;: /home/atodorov/.rim/testKey_4096_rsa
/home/atodorov/.rim/testKey_4096_rsa already exists.
Overwrite &lt;span class="o"&gt;(&lt;/span&gt;y/n&lt;span class="o"&gt;)&lt;/span&gt;? y
Enter passphrase &lt;span class="o"&gt;(&lt;/span&gt;empty &lt;span class="k"&gt;for&lt;/span&gt; no passphrase&lt;span class="o"&gt;)&lt;/span&gt;:
Enter same passphrase again:
Your identification has been saved in /home/atodorov/.rim/testKey_4096_rsa.
Your public key has been saved in /home/atodorov/.rim/testKey_4096_rsa.pub.
The key fingerprint is:
77:73:55:03:e1:fc:5b:df:a6:e9:2c:b4:d4:1e:0c:b2 atodorov@redbull.mini
The key&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s randomart image is:
+--&lt;span class="o"&gt;[&lt;/span&gt; RSA 4096&lt;span class="o"&gt;]&lt;/span&gt;----+
&lt;span class="p"&gt;|&lt;/span&gt;             oo..&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;            o   o&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;             o  .&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;          . . .. &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;        S .oo+...&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;         .E.oo+ &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           o o o+&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;            o..+ &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;             &lt;span class="nv"&gt;o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
+-----------------+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;7) Update key permissions, since ssh complains:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;    $ chmod 600 ~/.rim/testKey_4096_rsa.pub
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;8) By default SSH is not listening on your BlackBerry. Use the &lt;code&gt;blackberry-connect&lt;/code&gt;
command to start the SSH daemon on the device. It will upload your public SSH key
to the device and start the SSH daemon on the other side. &lt;code&gt;password&lt;/code&gt; is your device
password;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/atodorov/bbndk/host_10_1_0_231/linux/x86/usr/bin

&lt;span class="nv"&gt;$ &lt;/span&gt;./blackberry-connect 169.254.0.1 -password &lt;span class="m"&gt;123456&lt;/span&gt; -sshPublicKey ~/.rim/testKey_4096_rsa.pub
Info: Connecting to target 169.254.0.1:4455
Info: Authenticating with target 169.254.0.1:4455
Info: Encryption parameters verified
Info: Authenticating with target credentials.
Info: Successfully authenticated with target credentials.
Info: Sending ssh key to target 169.254.0.1:4455
Info: ssh key successfully transferred.
Info: Successfully connected. This application must remain running in order to use debug tools. Exiting the application will terminate this connection.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;9) Check if SSH is running on the device&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nmap 169.254.0.1

Starting Nmap 5.51 &lt;span class="o"&gt;(&lt;/span&gt; http://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2013-07-18 10:19 EEST
Stats: 0:00:01 elapsed&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; hosts completed &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; up&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;1&lt;/span&gt; undergoing Connect Scan
Connect Scan Timing: About 14.30% &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; ETC: 10:20 &lt;span class="o"&gt;(&lt;/span&gt;0:00:06 remaining&lt;span class="o"&gt;)&lt;/span&gt;
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; 169.254.0.1
Host is up &lt;span class="o"&gt;(&lt;/span&gt;0.00097s latency&lt;span class="o"&gt;)&lt;/span&gt;.
Not shown: &lt;span class="m"&gt;991&lt;/span&gt; closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
139/tcp  open  netbios-ssn
443/tcp  open  https
445/tcp  open  microsoft-ds
1111/tcp open  lmsocialserver
5555/tcp open  freeciv
8000/tcp open  http-alt
8443/tcp open  https-alt

Nmap &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="m"&gt;1&lt;/span&gt; IP address &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; host up&lt;span class="o"&gt;)&lt;/span&gt; scanned in 12.47 seconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;10)  Use SSH with the specified key to connect to the Z10. Username is &lt;code&gt;devuser&lt;/code&gt;.
Here's a simple session:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -i ~/.rim/testKey_4096_rsa devuser@169.254.0.1
&lt;span class="nv"&gt;$ &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/accounts/devuser
&lt;span class="nv"&gt;$ &lt;/span&gt;uname -a 
QNX atodorovZ10 8.0.0 2013/05/02-08:42:48EDT OMAP4470_ES1.0_HS_London_Rev:08 armle
&lt;span class="nv"&gt;$ &lt;/span&gt;date
Fri Jul &lt;span class="m"&gt;19&lt;/span&gt; 23:39:19 EEST 2013
&lt;span class="nv"&gt;$ &lt;/span&gt;ifconfig 
lo0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8049&amp;lt;UP,LOOPBACK,RUNNING,MULTICAST&amp;gt; mtu 33192
    inet 127.0.0.1 netmask 0xff000000
    inet6 ::1 prefixlen 128
    inet6 fe80::1%lo0 prefixlen &lt;span class="m"&gt;64&lt;/span&gt; scopeid 0x1
tiw_drv0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
tiw_sta0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;40008c43&amp;lt;UP,BROADCAST,RUNNING,OACTIVE,SIMPLEX,MULTICAST,ACCEPTRTADV&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
    inet 192.168.0.100 netmask 0xffffff00 broadcast 192.168.0.255
    inet6 fe80::1e69:a5ff:fed0:10cd%tiw_sta0 prefixlen &lt;span class="m"&gt;64&lt;/span&gt; scopeid 0x12
tiw_p2pdev0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
tiw_p2pgrp0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
tiw_ibss0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
pflog0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; mtu 33192
lo2: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8048&amp;lt;LOOPBACK,RUNNING,MULTICAST&amp;gt; mtu 33192
cellular0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
cellular1: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
cellular2: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
cellular3: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
cellular4: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
bptp0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8043&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt; mtu 1356
    inet6 fe80::1e69:a5ff:fed0:10cd%bptp0 prefixlen &lt;span class="m"&gt;64&lt;/span&gt; scopeid 0x2d
    inet6 fd02:42ac:77b2:d543:c158:fabb:6276:80e6 prefixlen 8
ecm0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8a43&amp;lt;UP,BROADCAST,RUNNING,ALLMULTI,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1e:69:a5:d0:10:cd
    inet 169.254.0.1 netmask 0xfffffffc broadcast 169.254.0.3
    inet6 fe80::1c69:a5ff:fed0:10cd%ecm0 prefixlen &lt;span class="m"&gt;64&lt;/span&gt; scopeid 0x2e
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; you can also use the WiFi address of the device to pass to
&lt;code&gt;backberry-connect&lt;/code&gt; and ssh. It works for me.&lt;/p&gt;
&lt;p&gt;I'm starting to explore the dark world of QNX in the next couple of days
and will keep you posted! Until then - happy hacking.&lt;/p&gt;</summary><category term="tips"></category><category term="BlackBerry"></category><category term="Z10"></category><category term="RHEL"></category></entry><entry><title>Tip: How To Enable USB Networking Between BlackBerry Z10 and Red Hat Enterprise Linux 6</title><link href="http://atodorov.org/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/" rel="alternate"></link><updated>2013-07-17T11:06:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-17:blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/</id><summary type="html">&lt;p&gt;On Linux there is a feature called USB networking which provides you with a 
TCP/IP connection to another device connected via USB cable. Here is how to
connect your &lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt;
to your Linux laptop over USB. I use Red Hat Enterprise Linux but should work
out of the box for other distros too.&lt;/p&gt;
&lt;p&gt;Connect the Z10 to your laptop:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;    $ lsusb
    Bus 001 Device 005: ID 0fca:8020 Research In Motion, Ltd. Blackberry Playbook (CD-Rom mode)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default many USB devices will present a virtual CD-ROM with drivers for Windows.
This is the case here too. To change it go to &lt;code&gt;Settings - Storage and Access&lt;/code&gt; and
set &lt;code&gt;USB Connection&lt;/code&gt; to &lt;code&gt;Connect to Mac&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;If necessary plug out and back in the Z10. &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;    $ lsusb
    Bus 001 Device 007: ID 0fca:8013 Research In Motion, Ltd.

    $ ifconfig
    usb0      Link encap:Ethernet  HWaddr 1E:69:A5:D0:11:0A  
              inet addr:169.254.0.2  Bcast:169.254.0.3  Mask:255.255.255.252
              inet6 addr: fe80::1c69:a5ff:fed0:110a/64 Scope:Link
              UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
              RX packets:49 errors:0 dropped:0 overruns:0 frame:0
              TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
              collisions:0 txqueuelen:1000 
              RX bytes:16002 (15.6 KiB)  TX bytes:1152 (1.1 KiB)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; In the same &lt;code&gt;Storage and Access&lt;/code&gt; screen scroll down to
&lt;code&gt;USB Mass Storage&lt;/code&gt; and turn it &lt;code&gt;Off&lt;/code&gt;. If you don't do this your Z10 will appear
as USB flash drive and no USB networking will be available. This is how it looks:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;    $ lsusb
    Bus 001 Device 008: ID 0fca:8014 Research In Motion, Ltd.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; If you need your Z10 storage accessible together with USB networking
you can try accessing the device over Wi-Fi.
Configure it from the same &lt;code&gt;Storage and Access&lt;/code&gt; screen. Then your device will be
available through Samba on its wireless IP address. I've tried it, works for me!&lt;/p&gt;
&lt;p&gt;You don't need anything else to get this working. All set!&lt;/p&gt;
&lt;p&gt;My intention is to use either USB networking or Wi-Fi to
&lt;a href="http://supportforums.blackberry.com/t5/Testing-and-Deployment/How-to-use-blackberry-connect-to-Enable-SSH-Access/ta-p/1515447"&gt;connect to the Z10 shell&lt;/a&gt;
and explore it in more details.&lt;/p&gt;</summary><category term="tips"></category><category term="RHEL"></category><category term="BlackBerry"></category><category term="Z10"></category></entry><entry><title>Tip: Setting Secure ENV variables on Red Hat OpenShift</title><link href="http://atodorov.org/blog/2013/07/08/tip-setting-secure-env-variables-on-red-hat-openshift/" rel="alternate"></link><updated>2013-07-08T21:39:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-08:blog/2013/07/08/tip-setting-secure-env-variables-on-red-hat-openshift/</id><summary type="html">&lt;p&gt;OpenShift is
&lt;a href="https://www.openshift.com/content/custom-environment-variables"&gt;still missing&lt;/a&gt;
the client side tools to set environment variables without exposing the values
in source code but there is a way to do it. Here is how.&lt;/p&gt;
&lt;p&gt;First ssh into your application and navigate to the &lt;code&gt;$OPENSHIFT_DATA_DIR&lt;/code&gt;.
Create a file to define your environment. &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rhc ssh -a difio
Password: ***

&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com 51d32a854382ecf7a9000116&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; vi myenv.sh
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; cat myenv.sh
&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;MYENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; chmod a+x myenv.sh 
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
Connection to difio-otb.rhcloud.com closed.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now modify your code and git push to OpenShift. Then ssh into the app once
again to verify that your configuration is still in place. &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;atodorov@redbull difio&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rhc ssh -a difio
Password: ***

&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com 51d32a854382ecf7a9000116&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; ls -l
total 4
-rwxr-xr-x. &lt;span class="m"&gt;1&lt;/span&gt; 51d32a854382ecf7a9000116 51d32a854382ecf7a9000116 &lt;span class="m"&gt;34&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt; jul 14,33 myenv.sh
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Use the defined variables as you wish.&lt;/p&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Tip: Caching Large Objects for Celery and Amazon SQS</title><link href="http://atodorov.org/blog/2013/06/19/tip-caching-large-objects-for-celery-and-amazon-sqs/" rel="alternate"></link><updated>2013-06-19T14:29:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-19:blog/2013/06/19/tip-caching-large-objects-for-celery-and-amazon-sqs/</id><summary type="html">&lt;p&gt;Some time ago a guy called Matt
&lt;a href="https://groups.google.com/forum/?fromgroups=#!topic/celery-users/RFAuGjZwtmg"&gt;asked&lt;/a&gt;
about passing large objects through their messaging queue. They were switching from
RabbitMQ to Amazon SQS which has a limit of 64K total message size.&lt;/p&gt;
&lt;p&gt;Recently I've made some changes in &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; which require passing
larger objects as parameters to a Celery task. Since Difio is also using SQS I faced the
same problem. Here is the solution using a cache back-end: &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery.task&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;cache_module&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;some_method&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;skip&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

    &lt;span class="n"&gt;task_cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache_module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_cache&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;taskq&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;task_cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;handle_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;skip&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="nd"&gt;@task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;task_cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache_module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_cache&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;taskq&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;task_cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;stuff&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Objects are persisted in a secondary cache back-end, not the default one, to avoid
accidental destruction. &lt;code&gt;uuid&lt;/code&gt; parameter is a string.&lt;/p&gt;
&lt;p&gt;Although the objects passed are smaller than 64K I haven't seen any issues
with this solution so far. Let me know if you are using something similar in your code
and how it works for you. &lt;/p&gt;</summary><category term="tips"></category><category term="Amazon"></category><category term="SQS"></category><category term="cloud"></category></entry><entry><title>Django Tips: Using Cache for Stateful HTTP</title><link href="http://atodorov.org/blog/2013/06/19/django-tips-using-cache-for-stateful-http/" rel="alternate"></link><updated>2013-06-19T13:50:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-19:blog/2013/06/19/django-tips-using-cache-for-stateful-http/</id><summary type="html">&lt;p&gt;How do you keep state when working with a stateless protocol like HTTP? 
One possible answer is to use a cache back-end. &lt;/p&gt;
&lt;p&gt;I'm working on an IVR application demo with Django and Twilio. The caller
will make multiple choices using the phone keyboard. All of this needs to be
put together and sent back to another server for processing. In my views
I've added a simple cache get/set lines to preserve the selection.&lt;/p&gt;
&lt;p&gt;Here's how it looks with actual application logic omitted&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;incoming_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;call_sid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;CallSid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;caller_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;From&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;from&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;caller_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_sid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;step2.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;step2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;call_sid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;CallSid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;selection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Digits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_sid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;step2_selection&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;
    &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_sid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;final_step.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;final_step&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;call_sid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;CallSid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;selection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Digits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_sid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;final_step_selection&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;

    &lt;span class="n"&gt;Backend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;process_user_selections&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;thank_you.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At each step Django will update the current state associated with this call and return
a &lt;a href="https://www.twilio.com/docs/api/twiml"&gt;TwiML&lt;/a&gt; XML response. &lt;code&gt;CallSid&lt;/code&gt; is a handy unique
identifier provided by Twilio.&lt;/p&gt;
&lt;p&gt;I am using the latest &lt;a href="http://github.com/atodorov/django-s3-cache"&gt;django-s3-cache&lt;/a&gt; version
which properly works with directories. When going to production that will likely switch to
Amazon ElastiCache.&lt;/p&gt;</summary><category term="Django"></category><category term="tips"></category><category term="Twilio"></category><category term="cloud"></category></entry><entry><title>Nibbler - W3C Validator on Steroids</title><link href="http://atodorov.org/blog/2013/06/18/nibbler-w3c-validator-on-steroids/" rel="alternate"></link><updated>2013-06-18T23:59:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-18:blog/2013/06/18/nibbler-w3c-validator-on-steroids/</id><summary type="html">&lt;p&gt;I've recently found Nibbler which gives you a report scoring the website out of
10 for various important criteria including accessibility, SEO, social media
and technology.&lt;/p&gt;
&lt;p&gt;The produced report is very interesting. Here is the
&lt;a href="http://nibbler.silktide.com/reports/atodorov.org"&gt;report for this blog&lt;/a&gt;. 
There are things I definitely need to work on!&lt;/p&gt;
&lt;p&gt;For comparison &lt;a href="http://nibbler.silktide.com/reports/sofiavalley.com"&gt;SofiaValley&lt;/a&gt;
scores far beyond this blog. It is stronger in marketing and popularity but
apparently weaker on the technology section. This is interesting!&lt;/p&gt;
&lt;p&gt;PS: sorry for not producing technical content lately. I've been very busy
with some current projects however I've got lots of ideas and topics to blog about. 
I hope to make it up to speed in the next few weeks. -- Alex&lt;/p&gt;</summary><category term="tips"></category></entry><entry><title>Configuring Anonymous FTP Uploads On Red Hat Enterprise Linux 6</title><link href="http://atodorov.org/blog/2013/05/30/configuring-anonymous-ftp-uploads-on-red-hat-enterprise-linux-6/" rel="alternate"></link><updated>2013-05-30T13:07:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-05-30:blog/2013/05/30/configuring-anonymous-ftp-uploads-on-red-hat-enterprise-linux-6/</id><summary type="html">&lt;p&gt;Install related packages and make configuration changes:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;yum -y install vsftp policycoreutils-python
sed -i &amp;quot;s/#anon_upload_enable=YES/anon_upload_enable=YES/&amp;quot; /etc/vsftpd/vsftpd.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configure writable directory for uploads:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mkdir /var/ftp/pub/upload
chgrp ftp /var/ftp/pub/upload
chmod 730 /var/ftp/pub/upload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configure SELinux - this is &lt;strong&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=968935"&gt;MISSING&lt;/a&gt;&lt;/strong&gt;
from Red Hat's official docs:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;setsebool -P allow_ftpd_anon_write=1
semanage fcontext -a -t public_content_rw_t &amp;#39;/var/ftp/pub/upload(/.*)&amp;#39;
chcon -t public_content_rw_t /var/ftp/pub/upload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Start the service:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;chkconfig vsftpd on
service vsftpd start
&lt;/pre&gt;&lt;/div&gt;</summary><category term="RHEL"></category><category term="tips"></category></entry><entry><title>How to Deploy Python Hotfix on RedHat OpenShift Cloud</title><link href="http://atodorov.org/blog/2013/04/24/how-to-deploy-python-hotfix-on-redhat-openshift-cloud/" rel="alternate"></link><updated>2013-04-24T11:58:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-24:blog/2013/04/24/how-to-deploy-python-hotfix-on-redhat-openshift-cloud/</id><summary type="html">&lt;p&gt;In this article I will show you how to deploy hotfix versions for
Python packages on the RedHat &lt;a href="http://openshift.com"&gt;OpenShift&lt;/a&gt; PaaS cloud.&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;You are already running a Python application on your OpenShift instance.
You are using some 3rd party dependencies when you find a bug in one of them.
You go forward, fix the bug and submit a
&lt;a href="https://github.com/ahupp/python-magic/pull/31"&gt;pull request&lt;/a&gt;.
You don't want to wait for upstream to release a new version but rather
build a hotfix package yourself and deploy to production immediately.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;There are two basic approaches to solving this problem: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Include the hotfix package source code in your application, i.e.
add it to your git tree or;&lt;/li&gt;
&lt;li&gt;Build the hotfix separately and deploy as a dependency. Don't
include it in your git tree, just add a requirement on the hotfix version. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I will talk about the later. The tricky part here is to instruct the cloud environment
to use your package (including the proper location) and not upstream or their local
mirror.&lt;/p&gt;
&lt;p&gt;Python applications hosted at &lt;a href="http://openshift.com"&gt;OpenShift&lt;/a&gt; don't support
&lt;code&gt;requirements.txt&lt;/code&gt; which can point to various package sources and even install
packages directly from GitHub. They support &lt;code&gt;setup.py&lt;/code&gt; which fetches packages
from &lt;a href="http://pypi.python.org"&gt;http://pypi.python.org&lt;/a&gt; but it is flexible enough to support other locations.&lt;/p&gt;
&lt;h2&gt;Building the hotfix&lt;/h2&gt;
&lt;p&gt;First of all we'd like to build a hotfix package. This will be the upstream
version that we are currently using plus the patch for our critical issue:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://pypi.python.org/packages/source/p/python-magic/python-magic-0.4.3.tar.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;tar -xzvf python-magic-0.4.3.tar.gz 
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;python-magic-0.4.3
&lt;span class="nv"&gt;$ &lt;/span&gt;curl https://github.com/ahupp/python-magic/pull/31.patch &lt;span class="p"&gt;|&lt;/span&gt; patch
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Verify the patch has been applied correctly and then modify &lt;code&gt;setup.py&lt;/code&gt; to
increase the version string. In this case I will set it to &lt;code&gt;version='0.4.3.1'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then build the new package using &lt;code&gt;python setup.py sdist&lt;/code&gt; and upload it to a web server.&lt;/p&gt;
&lt;h2&gt;Deploying to OpenShift&lt;/h2&gt;
&lt;p&gt;Modify &lt;code&gt;setup.py&lt;/code&gt; and specify the hotfix version. Because this version is not on PyPI
and will not be on OpenShift's local mirror you need to provide the location where it can
be found. This is done with the &lt;code&gt;dependency_links&lt;/code&gt; parameter to &lt;code&gt;setup()&lt;/code&gt;. Here's how it looks:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff --git a/setup.py b/setup.py&lt;/span&gt;
&lt;span class="gh"&gt;index c6e837c..2daa2a9 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/setup.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/setup.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -6,5 +6,6 @@ setup(name=&amp;#39;YourAppName&amp;#39;,&lt;/span&gt;
       author=&amp;#39;Your Name&amp;#39;,
       author_email=&amp;#39;example@example.com&amp;#39;,
       url=&amp;#39;http://www.python.org/sigs/distutils-sig/&amp;#39;,
&lt;span class="gd"&gt;-      install_requires=[&amp;#39;python-magic==0.4.3&amp;#39;],&lt;/span&gt;
&lt;span class="gi"&gt;+      dependency_links=[&amp;#39;https://s3.amazonaws.com/atodorov/blog/python-magic-0.4.3.1.tar.gz&amp;#39;],&lt;/span&gt;
&lt;span class="gi"&gt;+      install_requires=[&amp;#39;python-magic==0.4.3.1&amp;#39;],&lt;/span&gt;
      )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now just git push to OpenShift and observe the console output:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;YourAppName&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Searching&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Best&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Downloading&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;amazonaws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="sr"&gt;/atodorov/blog/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="sr"&gt;/setup.py -q bdist_egg --dist-dir /tmp/easy_install-ZRVMBg/python-magic-0.4.3.1/&lt;/span&gt;&lt;span class="n"&gt;egg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R_Nxie&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;zip_safe&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;analyzing&lt;/span&gt; &lt;span class="n"&gt;archive&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Removing&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;easy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pth&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Adding&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;easy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pth&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Congratulations! Your hotfix package has just been deployed.&lt;/p&gt;
&lt;p&gt;This approach should work for other cloud providers and other programming languages
as well. Let me know if you have any experience with that.&lt;/p&gt;</summary><category term="tips"></category><category term="Python"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Creating RPM .spec Files From Scratch Using Vim</title><link href="http://atodorov.org/blog/2013/04/09/creating-rpm-spec-files-from-scratch-using-vim/" rel="alternate"></link><updated>2013-04-09T15:24:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-09:blog/2013/04/09/creating-rpm-spec-files-from-scratch-using-vim/</id><summary type="html">&lt;p&gt;On a Red Hat Enterprise Linux or Fedora (or compatible) system execute&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vim example.spec
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will create a new file with all the important sections and fields
already there. The template used is &lt;code&gt;/usr/share/vim/vimfiles/template.spec&lt;/code&gt;
and is part of the &lt;em&gt;vim-common&lt;/em&gt; RPM package.&lt;/p&gt;
&lt;p&gt;This is very useful trick which I didn't know. Until now I always used the spec files
from previously built packages when creating new RPMs. This wasn't as fast as
creating a template and filling in the blanks.&lt;/p&gt;
&lt;p&gt;For a detailed description about recommended RPM build practices see
the &lt;a href="https://fedoraproject.org/wiki/Packaging:Guidelines"&gt;Fedora Packaging Guidelines&lt;/a&gt;.&lt;/p&gt;</summary><category term="tips"></category><category term="RPM"></category></entry><entry><title>Using Django built-in template tags and filters in code</title><link href="http://atodorov.org/blog/2013/04/06/using-django-built-in-template-tags-and-filters-in-code/" rel="alternate"></link><updated>2013-04-06T22:26:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-06:blog/2013/04/06/using-django-built-in-template-tags-and-filters-in-code/</id><summary type="html">&lt;p&gt;In case you are wondering how to use Django's
&lt;a href="https://docs.djangoproject.com/en/dev/ref/templates/builtins/"&gt;built-in template tags and filters&lt;/a&gt;
in your source code, not inside a template here is how:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template.defaultfilters&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filesizeformat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;1.0 KB&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filesizeformat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1020&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;1020 bytes&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filesizeformat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;102412354&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;97.7 MB&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All built-ins live in &lt;code&gt;pythonX.Y/site-packages/django/template/defaultfilters.py&lt;/code&gt;.&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category><category term="Python"></category></entry><entry><title>Tip: Renaming Model Fields in Django</title><link href="http://atodorov.org/blog/2013/04/06/tip-renaming-model-fields-in-django/" rel="alternate"></link><updated>2013-04-06T01:18:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-06:blog/2013/04/06/tip-renaming-model-fields-in-django/</id><summary type="html">&lt;p&gt;Did you ever have to re-purpose a column in your database schema? 
Here's a quick and easy way to do this if you happen to be using Django.&lt;/p&gt;
&lt;h2&gt;Scenario&lt;/h2&gt;
&lt;p&gt;I had an integer field in my model called &lt;code&gt;lines&lt;/code&gt; which counted the lines of 
code in a particular tar.gz package. I figured the file size is a better indicator
so decided to start using it. I was not planning to use the old field anymore and
I didn't care about the data it was holding. So I decided to re-purpose it
as the &lt;code&gt;size&lt;/code&gt; field.&lt;/p&gt;
&lt;h2&gt;Possible methods&lt;/h2&gt;
&lt;p&gt;Looking around I figured several different ways to do this: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Continue using the existing &lt;code&gt;lines&lt;/code&gt; field and keep referencing the old name in the code.
This is no-brainer but feels awkward and is a disaster waiting to happen;&lt;/li&gt;
&lt;li&gt;Add new &lt;code&gt;size&lt;/code&gt; field and remove the old &lt;code&gt;lines&lt;/code&gt; field. This involves modification to
the DB schema and requires at least a backup with possible down time. Not something
I will jump at right away;&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;size&lt;/code&gt; property in the model class which will persist to &lt;code&gt;self.lines&lt;/code&gt;.
This is a quick way to go but I'm not sure if one can use the property with the
Django QuerySet API (objects.filter(), objects.update(), etc.) I suspect not.
If you don't filter by the property or use it in bulk operations this method is fine though;&lt;/li&gt;
&lt;li&gt;Change the field name to &lt;code&gt;size&lt;/code&gt; but continue to use the &lt;code&gt;lines&lt;/code&gt; DB column;
Mind my wording here :);&lt;/li&gt;
&lt;li&gt;Rename the column in the DB schema and then update the model class field.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;How I did it&lt;/h2&gt;
&lt;p&gt;I decided to go for option 4 above: 
change the field name to &lt;code&gt;size&lt;/code&gt; but continue to use the &lt;code&gt;lines&lt;/code&gt; DB column.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff --git a/models.py b/models.py&lt;/span&gt;
&lt;span class="gh"&gt;index e06d2b2..18cad6f 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/models.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/models.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -667,7 +667,7 @@ class Package(models.Model):&lt;/span&gt;
&lt;span class="gd"&gt;-    lines = models.IntegerField(default=None, null=True, blank=True)&lt;/span&gt;
&lt;span class="gi"&gt;+    size  = models.IntegerField(default=None, null=True, blank=True, db_column=&amp;#39;lines&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Removed all references to &lt;code&gt;lines&lt;/code&gt; from the code except the model class. This served as clean up as well. &lt;/li&gt;
&lt;li&gt;Renamed the model field to &lt;code&gt;size&lt;/code&gt; but continued using the &lt;code&gt;lines&lt;/code&gt; DB column as shown above.
Django's &lt;em&gt;db_column&lt;/em&gt; option makes this possible.&lt;/li&gt;
&lt;li&gt;From the Django shell (./manage.py shell) reset &lt;code&gt;size&lt;/code&gt; to None (NULL) for all objects;&lt;/li&gt;
&lt;li&gt;Finally implement my new code and functionality behind the &lt;code&gt;size&lt;/code&gt; field.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The entire process happened for under 10 minutes. I will also opt for renaming the DB column at a later time.
This is to sync the naming used in Python code and in MySQL in case I ever need to use raw SQL or anything but Django.&lt;/p&gt;
&lt;p&gt;If you were me, how would you do this? Please share in the comments below.&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category></entry><entry><title>Django QuerySet tip - Search and Order By Exact Match</title><link href="http://atodorov.org/blog/2013/03/21/django-queryset-tip-search-and-order-by-exact-match/" rel="alternate"></link><updated>2013-03-21T22:56:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-21:blog/2013/03/21/django-queryset-tip-search-and-order-by-exact-match/</id><summary type="html">&lt;p&gt;How do you order Django QuerySet results so that first item is the
exact match if using &lt;code&gt;contains&lt;/code&gt; or &lt;code&gt;icontains&lt;/code&gt; ? Both solutions were proposed on the
&lt;a href="https://groups.google.com/d/topic/django-users/OCNmIXrRgag/discussion"&gt;django-users&lt;/a&gt;
mailing list.&lt;/p&gt;
&lt;p&gt;Solution by Tom Evans, example is mine:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Django&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Django&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;match&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;name = &amp;quot;Django&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-match&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Django&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appomatic_django_cms&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appomatic_django_filer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appomatic_django_vcs&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BabelDjango&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BDD4Django&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blanc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;skin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bootstrap&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;capistrano&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ccnmtldjango&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;collective&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;csdjango&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contactform&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cykooz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;djangopaste&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cykooz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;djangorecipe&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;d51&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;virtualenv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test_runner&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;503&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;absolute&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;abstract&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;templates&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;...(remaining elements truncated)...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another one:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm not sure this is the right way, but you could drop the Q objects, use
only icontains and sort by the length of 'name'&lt;/p&gt;
&lt;p&gt;Gabriel https://groups.google.com/d/topic/django-users/OCNmIXrRgag/discussion&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;packages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Dancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;u&amp;#39;Dancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;breakdancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Task::Dancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;App::Dancer2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer::Routes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;DancerX::Routes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;DancerX::Config&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Task::DWIM::Dancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer::Plugin::CDN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;Dancer::Plugin::Feed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer::Plugin::LDAP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer::Plugin::Lucy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="s"&gt;&amp;#39;...(remaining elements truncated)...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's all folks. If you have other more interesting sorting needs please comment below.
Thanks!&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category></entry><entry><title>Virtualization Platforms Supported by Red Hat Enterprise Linux</title><link href="http://atodorov.org/blog/2013/03/20/virtualization-platforms-supported-by-red-hat-enterprise-linux/" rel="alternate"></link><updated>2013-03-20T15:04:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-20:blog/2013/03/20/virtualization-platforms-supported-by-red-hat-enterprise-linux/</id><summary type="html">&lt;p&gt;This is mostly for my own reference, to have a handy list
of supported virtualization platforms by Red Hat Enterprise Linux.&lt;/p&gt;
&lt;h2&gt;Software virtualization solutions&lt;/h2&gt;
&lt;p&gt;A guest RHEL operating system is supported if it runs on the following
platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xen shipped with RHEL Server&lt;/li&gt;
&lt;li&gt;KVM shipped with RHEL Server or RHEV for Servers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/VMware"&gt;VMware&lt;/a&gt; ESX/vSphere&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/Microsoft"&gt;Microsoft Hyper-V&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Red Hat does not support Citrix XenServer. However, customers can
&lt;a href="http://otb.bg"&gt;buy RHEL Server&lt;/a&gt; and use it with Citrix XenServer
with the understanding that Red Hat will only support technical
issues that can be reproduced on bare metal.&lt;/p&gt;
&lt;p&gt;The 
&lt;a href="http://www.redhat.com/resourcelibrary/articles/enterprise-linux-virtualization-support"&gt;official virtualization support matrix&lt;/a&gt;
shows which host/guest operating systems combinations are supported.&lt;/p&gt;
&lt;h2&gt;Hardware partitioning&lt;/h2&gt;
&lt;p&gt;Red Hat supports RHEL on hardware partitioning and virtualization solutions such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;amp;quicksearch=IBM+System+Z"&gt;IBM System Z&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;amp;quicksearch=IBM+POWER"&gt;IBM Power&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;amp;quicksearch=PRIMEQUEST"&gt;Fujitsu PRIMEQUEST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;amp;quicksearch=Virtage"&gt;Hitachi Virtage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfortunately the &lt;a href="https://access.redhat.com/knowledge/articles/263573"&gt;recently updated&lt;/a&gt;
hardware catalog
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=923802"&gt;doesn't allow to filter by hardware partitioning vs. virtualization platform&lt;/a&gt;
so you need to know what you are looking for to find it :(.&lt;/p&gt;
&lt;h2&gt;Red Hat Enterprise Linux as a guest on the Cloud&lt;/h2&gt;
&lt;p&gt;Multiple public cloud providers are supported. Comprehensive list can be found here:
http://www.redhat.com/solutions/cloud-computing/public-cloud/find-partner/&lt;/p&gt;
&lt;p&gt;You can also try &lt;a href="http://redhat.force.com/finder/"&gt;Red Hat Partner Locator's&lt;/a&gt;
advanced search. However at the time of this writing there are no partners
listed in the Cloud / Virtualization category.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; It is known that Amazon uses Xen with custom
modifications (not sure what version) and HP Cloud uses KVM but there
is not much public record about hypervisor technology used by most cloud providers.
Red Hat has partner agreements with these vendors and will commercially support 
only their platforms. This means that if you decide to use upstream Xen or anything
else not listed above, you are on your own. &lt;strong&gt;You have been warned!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Unsupported but works&lt;/h2&gt;
&lt;p&gt;I'm not a big fan of running on top of unsupported environments
and I don't have the need to do so.
I've heard about people running CentOS (RHEL compatible) on VirtualBox
but I have no idea how well it works.&lt;/p&gt;
&lt;p&gt;If you are using a different virtualization platform
(like LXC, OpenVZ, UML, 
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-brandtextbin=Parallels%20Software&amp;linkCode=ur2&amp;node=229534&amp;tag=atodorovorg-20"&gt;Parallels&lt;/a&gt;&lt;img src="https://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
or other) let me know if CentOS/Fedora works on it.
Alternatively I can give it a try if you can provide me with ssh/VNC access to the machine.&lt;/p&gt;</summary><category term="RHEL"></category><category term="virtualization"></category><category term="tips"></category></entry><entry><title>django-social-auth tip: Reminder of Login Provider</title><link href="http://atodorov.org/blog/2013/03/14/django-social-auth-tip-reminder-of-login-provider/" rel="alternate"></link><updated>2013-03-14T12:04:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-14:blog/2013/03/14/django-social-auth-tip-reminder-of-login-provider/</id><summary type="html">&lt;p&gt;Every now and then users forget their passwords. This is why I prefer using
OAuth and social network accounts like GitHub or Twitter. But what do you do
when somebody forgets which OAuth provider they used to login to your site?
Your website needs a reminder. This is how to implement one if using
django-social-auth.&lt;/p&gt;
&lt;h2&gt;Back-end&lt;/h2&gt;
&lt;p&gt;Create a similar view on your Django back-end&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ajax_social_auth_provider_reminder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Remind the user which social auth provider they used to login.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Not a POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Invalid address!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;No user with address &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; found!&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;providers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;UserSocialAuth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;provider&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;providers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;send_templated_mail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;social_provider_reminder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;from_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Difio &amp;lt;reminder@dif.io&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;recipient_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;providers&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Reminder sent to &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;User found but no social providers found!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This example assumes it is called via POST request which contains the email address.
All responses are handled at the front-end via JavaScript. If a user with the specified
email address exists this address will receive a reminder listing all social auth providers
associated with the user account.&lt;/p&gt;
&lt;h2&gt;Front-end&lt;/h2&gt;
&lt;p&gt;On the browser side I like to use &lt;a href="http://dojotoolkit.org"&gt;Dojo&lt;/a&gt;.
Here is a simple script which connects to a form and POSTs the data
back to the server.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dojo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dijit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sendReminderForm&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;byId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;reminderForm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;onsubmit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stopEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;dijit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;byId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dlgForgot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xhrArgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;handleAs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);},&lt;/span&gt;
            &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ioargs&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ioargs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;);}&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;deferred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;xhrPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xhrArgs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sendReminderForm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can try this out at &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; and let me know how it works for you!&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category><category term="django-social-auth"></category></entry><entry><title>Python Twitter + django-social-auth == Hello New User</title><link href="http://atodorov.org/blog/2013/03/07/python-twitter-django-social-auth-hello-new-user/" rel="alternate"></link><updated>2013-03-07T21:47:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-07:blog/2013/03/07/python-twitter-django-social-auth-hello-new-user/</id><summary type="html">&lt;p&gt;I have been experimenting with the &lt;a href="https://pypi.python.org/pypi/twitter"&gt;twitter&lt;/a&gt;
module for Python and decided to combine it with 
&lt;a href="https://github.com/omab/django-social-auth"&gt;django-social-auth&lt;/a&gt; to welcome new
users who join &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt;. In this post I will show you how to
tweet on behalf of the user when they join your site and send them a welcome email.&lt;/p&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;In django-social-auth the authentication workflow is handled by an operations
pipeline where custom functions can be added or default items can be removed to
provide custom behavior. This is how our pipeline looks:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;span class="filename"&gt;settings.py&lt;/span&gt;&lt;pre&gt;&lt;span class="n"&gt;SOCIAL_AUTH_PIPELINE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.social.social_auth_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c"&gt;#&amp;#39;social_auth.backends.pipeline.associate.associate_by_email&amp;#39;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.user.get_username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.user.create_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.social.associate_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.social.load_extra_data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.user.update_user_details&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;myproject.tasks.welcome_new_user&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is the default plus an additional method at the end to welcome new users.&lt;/p&gt;
&lt;p&gt;You also have to create and configure a Twitter application so that users
can login with Twitter OAuth to your site.
&lt;a href="http://django-social-auth.readthedocs.org/en/latest/backends/index.html"&gt;RTFM&lt;/a&gt;
for more information on how to do this.&lt;/p&gt;
&lt;h2&gt;Custom pipeline actions&lt;/h2&gt;
&lt;p&gt;This is how the custom pipeline action should look:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;span class="filename"&gt;myproject/tasks.py&lt;/span&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urlparse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;parse_qs&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;welcome_new_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;social_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_new&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_association&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Part of SOCIAL_AUTH_PIPELINE. Works with django-social-auth==0.7.21 or newer&lt;/span&gt;
&lt;span class="sd"&gt;        @backend - social_auth.backends.twitter.TwitterBackend (or other) object&lt;/span&gt;
&lt;span class="sd"&gt;        @user - User (if is_new) or django.utils.functional.SimpleLazyObject (if new_association)&lt;/span&gt;
&lt;span class="sd"&gt;        @social_user - UserSocialAuth object&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;send_welcome_email&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_new&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;new_association&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;social_user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extra_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;access_token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;parsed_tokens&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse_qs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;oauth_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_tokens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;oauth_token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;oauth_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_tokens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;oauth_token_secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;tweet_on_join&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oauth_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oauth_secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This code works with django-social-auth==0.7.21 or newer. In older versions the
&lt;code&gt;new_association&lt;/code&gt; parameter is missing as 
&lt;a href="https://groups.google.com/forum/?fromgroups=#!topic/django-social-auth/Nxf-0iRD27Y"&gt;I discovered&lt;/a&gt;.
If you use an older version you won't be able to distinguish between newly created
accounts and ones which have associated another OAuth backend. You are warned!&lt;/p&gt;
&lt;h2&gt;Tweet &amp;amp; email&lt;/h2&gt;
&lt;p&gt;Sending the welcome email is out of the scope of this post. I am using
&lt;a href="https://github.com/bradwhittington/django-templated-email"&gt;django-templated-email&lt;/a&gt;
to define how emails look and sending them via Amazon SES. See 
&lt;a href="/blog/2013/02/28/email-logging-django-redhat-openshift-amazon-ses/"&gt;Email Logging for Django on RedHat OpenShift With Amazon SES&lt;/a&gt;
for more information on how to configure emailing with SES.&lt;/p&gt;
&lt;p&gt;Here is how the Twitter code looks:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;span class="filename"&gt;myproject/tasks.py&lt;/span&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;twitter&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery.task&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;settings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TWITTER_CONSUMER_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TWITTER_CONSUMER_SECRET&lt;/span&gt;

&lt;span class="nd"&gt;@task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tweet_on_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oauth_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oauth_secret&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Tweet when the user is logged in for the first time or&lt;/span&gt;
&lt;span class="sd"&gt;        when new Twitter account is associated.&lt;/span&gt;

&lt;span class="sd"&gt;        @oauth_token - string&lt;/span&gt;
&lt;span class="sd"&gt;        @oauth_secret - string&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;twitter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Twitter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;twitter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;oauth_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oauth_secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;TWITTER_CONSUMER_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TWITTER_CONSUMER_SECRET&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;statuses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Started following open source changes at http://www.dif.io!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will post a new tweet on behalf of the user, telling everyone they joined
your website!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
&lt;code&gt;tweet_on_join&lt;/code&gt; and &lt;code&gt;send_welcome_email&lt;/code&gt; are Celery tasks, not ordinary Python
functions. This has the advantage of being able to execute these actions async
and not slow down the user interface.&lt;/p&gt;
&lt;p&gt;Are you doing something special when a user joins your website? Please share
your comments below. Thanks!&lt;/p&gt;</summary><category term="Django"></category><category term="django-social-auth"></category><category term="Twitter"></category><category term="tips"></category></entry><entry><title>Tip: Delete User Profiles with django-social-auth</title><link href="http://atodorov.org/blog/2013/03/06/tip-delete-user-profiles-django-social-auth/" rel="alternate"></link><updated>2013-03-06T21:02:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-06:blog/2013/03/06/tip-delete-user-profiles-django-social-auth/</id><summary type="html">&lt;p&gt;Common functionality for websites is the 'DELETE ACCOUNT' or 'DISABLE ACCOUNT'
button. This is how to implement it if using 
&lt;a href="https://github.com/omab/django-social-auth"&gt;django-social-auth&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;span class="filename"&gt;views.py&lt;/span&gt;&lt;pre&gt;&lt;span class="n"&gt;delete_objects_for_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# optional&lt;/span&gt;
&lt;span class="n"&gt;UserSocialAuth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;django.contrib.auth.views.logout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This snippet does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Delete (or archive) all objects for the current user;&lt;/li&gt;
&lt;li&gt;Delete the social auth profile(s) because there is no way to disable them.
DSA will create new objects if the user logs in again;&lt;/li&gt;
&lt;li&gt;Disable the &lt;code&gt;User&lt;/code&gt; object. You could also delete it but mind foreign keys;&lt;/li&gt;
&lt;li&gt;Clear the email for the &lt;code&gt;User&lt;/code&gt; object - if a new user is created after deletion
we don't want duplicated email addresses in the database;&lt;/li&gt;
&lt;li&gt;Finally redirect the user to the logout view.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="tips"></category><category term="Django"></category><category term="django-social-auth"></category></entry><entry><title>Email Logging for Django on RedHat OpenShift with Amazon SES</title><link href="http://atodorov.org/blog/2013/02/28/email-logging-django-redhat-openshift-amazon-ses/" rel="alternate"></link><updated>2013-02-28T23:19:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-28:blog/2013/02/28/email-logging-django-redhat-openshift-amazon-ses/</id><summary type="html">&lt;p&gt;Sending email in the cloud can be tricky. IPs of cloud providers are blacklisted
because of frequent abuse. For that reason I use
&lt;a href="http://aws.amazon.com/ses/"&gt;Amazon SES&lt;/a&gt; as my email backend. Here is how to
configure &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; to send emails to site admins
when something goes wrong.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;span class="filename"&gt;settings.py&lt;/span&gt;&lt;pre&gt;&lt;span class="c"&gt;# Valid addresses only.&lt;/span&gt;
&lt;span class="n"&gt;ADMINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Alexander Todorov&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;atodorov@example.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;LOGGING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;disable_existing_loggers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;handlers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;mail_admins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ERROR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django.utils.log.AdminEmailHandler&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;loggers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;django.request&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;handlers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mail_admins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ERROR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;propagate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
 
&lt;span class="c"&gt;# Used as the From: address when reporting errors to admins&lt;/span&gt;
&lt;span class="c"&gt;# Needs to be verified in Amazon SES as a valid sender&lt;/span&gt;
&lt;span class="n"&gt;SERVER_EMAIL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django@example.com&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Amazon Simple Email Service settings&lt;/span&gt;
&lt;span class="n"&gt;AWS_SES_ACCESS_KEY_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xxxxxxxxxxxx&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;AWS_SES_SECRET_ACCESS_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xxxxxxxx&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_BACKEND&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django_ses.SESBackend&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You also need the &lt;a href="https://github.com/hmarr/django-ses"&gt;django-ses&lt;/a&gt;
dependency.&lt;/p&gt;
&lt;p&gt;See &lt;a href="http://docs.djangoproject.com/en/dev/topics/logging"&gt;http://docs.djangoproject.com/en/dev/topics/logging&lt;/a&gt; for
more details on how to customize your logging configuration.&lt;/p&gt;
&lt;p&gt;I am using this configuration successfully at RedHat's OpenShift PaaS environment.
Other users have
&lt;a href="https://openshift.redhat.com/community/forums/express/missing-email-on-500-ise-w-django"&gt;reported&lt;/a&gt;
it works for them too. Should work with any other PaaS provider.&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category><category term="Amazon"></category><category term="SES"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Tip: Generating Directory Listings with wget</title><link href="http://atodorov.org/blog/2013/02/21/tip-generating-directory-listings-with-wget/" rel="alternate"></link><updated>2013-02-21T12:12:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-21:blog/2013/02/21/tip-generating-directory-listings-with-wget/</id><summary type="html">&lt;p&gt;Today I was looking to generate a list of all files under remote site directory,
including sub directories. I found no built-in options for this in
&lt;a href="https://www.gnu.org/software/wget/"&gt;wget&lt;/a&gt;. This is how I did it:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;wget http://example.com/dir/ --spider -r -np 2&amp;gt;&amp;amp;1 | grep http:// | tr -s &amp;#39; &amp;#39; | cut -f3 -d&amp;#39; &amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I managed to retrieve 12212 entries from the URL I was exploring.&lt;/p&gt;</summary><category term="tips"></category></entry><entry><title>Secure VNC Installation of Red Hat Enterprise Linux 6</title><link href="http://atodorov.org/blog/2013/02/13/secure-vnc-installation-red-hat-enterprise-linux/" rel="alternate"></link><updated>2013-02-13T15:40:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-13:blog/2013/02/13/secure-vnc-installation-red-hat-enterprise-linux/</id><summary type="html">&lt;p&gt;&lt;img src="/images/rhel6_welcome.png" alt="RHEL 6 welcome screen" /&gt;
Image CC-BY-SA,
&lt;a href="https://access.redhat.com/knowledge/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Installation_Guide/sn-welcome-s390.html"&gt;Red Hat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;From time to time I happen to remotely
&lt;a href="http://otb.bg"&gt;install Red Hat Enterprise Linux&lt;/a&gt;
servers via the Internet.
When the system configuration is not decided upfront you need
to use interactive mode. This means VNC in my case.&lt;/p&gt;
&lt;p&gt;In this tutorial I will show you how to make VNC installations more secure
when using public networks to connect to the server.&lt;/p&gt;
&lt;h2&gt;Meet your tools&lt;/h2&gt;
&lt;p&gt;Starting with Red Hat Enterprise Linux 6 and all the latest Fedora releases, the
installer supports SSH connections during install.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that by default, root has a blank password.&lt;/p&gt;
&lt;p&gt;If you don't want any user to be able to ssh in and have full access to your hardware, 
you must specify sshpw for username root. Also note that if Anaconda fails to parse the 
kickstart file, it will allow anyone to login as root and have full access to your hardware.&lt;/p&gt;
&lt;p&gt;Fedora Kickstart manual https://fedoraproject.org/wiki/Anaconda/Kickstart#sshpw&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Preparation&lt;/h2&gt;
&lt;p&gt;We are going to use SSH port forwarding and tunnel VNC traffic through it.
Create a kickstart file as shown below:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;install
url --url http://example.com/path/to/rhel6
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp
vnc --password=s3cr3t
sshpw --user=root s3cr3t
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first 5 lines configure the loader portion of the installer. They will setup
networking and fetch the installer image called stage2. This is completely automated.
&lt;strong&gt;NB:&lt;/strong&gt; If you miss some of the lines or have a syntax error the installer will prompt for
values. You either need a remote console access or somebody present at the server console!&lt;/p&gt;
&lt;p&gt;The last 2 lines configure passwords for VNC and SSH respectively.&lt;/p&gt;
&lt;p&gt;Make this file
&lt;a href="https://fedoraproject.org/wiki/Anaconda/Kickstart#Chapter_6._Making_the_Kickstart_File_Available"&gt;available&lt;/a&gt;
over HTTP(S), FTP or NFS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; Make sure that the file is available on the same network where your server is,
or use HTTPS if on public networks.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Now, using your favorite installation media start the
installation process like this: &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linux&lt;/span&gt; &lt;span class="n"&gt;sshd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cfg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After a minute or more the installer will load stage2, with the
interactive VNC session. You need to know the IP address or hostname
of the server. Either look into DHCP logs, have somebody look at the
server console and tell you that (it's printed on tty1) or script it in
a &lt;a href="https://fedoraproject.org/wiki/Anaconda/Kickstart#Chapter_4._Pre-installation_Script"&gt;%pre&lt;/a&gt;
script which will send you an email for example.&lt;/p&gt;
&lt;p&gt;When ready, redirect one of your local ports through SSH to the VNC port on the server:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -L 5902:localhost:5901 -N root@server.example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now connect to DISPLAY :2 on your system to begin the installation:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vncviewer localhost:2 &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Warning Bugs Present&lt;/h2&gt;
&lt;p&gt;As it happens, I find bugs everywhere. This is no exception.
Depending on your network/DHCP configuration IP address during install may 
change mid-air and cause VNC client connection to freeze.&lt;/p&gt;
&lt;p&gt;The reason for this bug is evident from the code (rhel6-branch):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;span class="filename"&gt;iw/timezone_gui.py&lt;/span&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isKickstart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcCheckbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_active&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;hasWindows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bootloader&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;span class="filename"&gt;textw/timezone_text.py&lt;/span&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isKickstart&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;hasWindows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bootloader&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;asUtc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Because we are using a kickstart file Anaconda will assume the system clock &lt;strong&gt;DOES NOT&lt;/strong&gt;
use UTC. If you forget to configure it manually you may see time on the server shifting
back or forward (depending on your timezone) while installing. If your DHCP is configured
for short lease time the address will expire before the installation completes. When new
address is requested from DHCP it may be different and this will cause your VNC connection
to freeze.&lt;/p&gt;
&lt;p&gt;To workaround this issue select the appropriate value for the system clock settings during install
and possibly use static IP address during the installation.&lt;/p&gt;
&lt;h2&gt;Feedback&lt;/h2&gt;
&lt;p&gt;As always I'd love to hear your feedback in the comments section below. Let me know 
your tips and tricks to perform secure remote installations using public networks.&lt;/p&gt;</summary><category term="RHEL"></category><category term="tips"></category></entry><entry><title>Tip: Save Money on Amazon - Buy Used Books</title><link href="http://atodorov.org/blog/2013/01/31/tip-save-money-on-amazon-buy-used-books/" rel="alternate"></link><updated>2013-01-31T22:41:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-01-31:blog/2013/01/31/tip-save-money-on-amazon-buy-used-books/</id><summary type="html">&lt;p&gt;I like to buy books, the real ones, printed on paper. This however comes at
a certain price when buying from Amazon. The book price itself is
usually bearable but many times shipping costs to Bulgaria
will double the price. Especially if you are making a single book order.&lt;/p&gt;
&lt;p&gt;To save money I started buying used books when available. For books that are
not so popular I look for items that have been owned by a library.&lt;/p&gt;
&lt;p&gt;This is how I got a hardcover 1984 edition of
&lt;a href="http://www.amazon.com/gp/product/190676820X/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=190676820X&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The Gentlemen's Clubs of London&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=190676820X" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Anthony Lejeune for $10. This is my best deal so far.
The book was brand new I dare to say. There was no edge wear, no damaged pages,
with nice and vibrant colors. The second page had the library sign and no other marks.&lt;/p&gt;
&lt;p&gt;Let me know if you had an experience buying used books online? Did you score a great
deal like I did?&lt;/p&gt;</summary><category term="tips"></category><category term="Amazon"></category><category term="books"></category></entry><entry><title>Combining PDF Files On The Command Line</title><link href="http://atodorov.org/blog/2012/07/12/combining-pdf-files-on-the-command-line/" rel="alternate"></link><updated>2012-07-12T11:06:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-07-12:blog/2012/07/12/combining-pdf-files-on-the-command-line/</id><summary type="html">&lt;p&gt;&lt;strong&gt;VERSION&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Red Hat Enterprise Linux 6&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PROBLEM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You have to create a single PDF file by combining multiple files -
for example individually scanned pages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ASSUMPTIONS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You know how to start a shell and havigate to the directory containing the files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If individual PDF files are named, for example, &lt;code&gt;doc_01.pdf&lt;/code&gt;, &lt;code&gt;doc_02.pdf&lt;/code&gt;, &lt;code&gt;doc_03.pdf&lt;/code&gt;,
&lt;code&gt;doc_04.pdf&lt;/code&gt;, then you can combine them with the &lt;code&gt;gs&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;    $ gs -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile=mydocument.pdf doc_*.pdf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The resulting PDF file will contain all pages from the individual files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MORE INFO&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;gs&lt;/code&gt; command is part of the &lt;a href="http://www.ghostscript.com/"&gt;ghostscript&lt;/a&gt; rpm package.
You can find more about it using &lt;code&gt;man gs&lt;/code&gt;, the documentation file &lt;code&gt;/usr/share/doc/ghostscript-*/index.html&lt;/code&gt;
or &lt;a href="http://www.ghostscript.com"&gt;http://www.ghostscript.com&lt;/a&gt;.&lt;/p&gt;</summary><category term="tips"></category><category term="RHEL"></category></entry><entry><title>OpenShift Cron Takes Over Celerybeat</title><link href="http://atodorov.org/blog/2012/03/14/openshift-cron-takes-over-celerybeat/" rel="alternate"></link><updated>2012-03-14T20:48:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-03-14:blog/2012/03/14/openshift-cron-takes-over-celerybeat/</id><summary type="html">&lt;p&gt;&lt;a href="http://celeryproject.org/"&gt;&lt;em&gt;Celery&lt;/em&gt;&lt;/a&gt; is an asynchronous task queue/job queue
based on distributed message passing. You can define tasks as Python functions,
execute them in the background and in a periodic fashion.
&lt;a href="http://www.dif.io"&gt;&lt;em&gt;Difio&lt;/em&gt;&lt;/a&gt; uses &lt;em&gt;Celery&lt;/em&gt; for virtually everything.
Some of the tasks are scheduled after some event takes place (like user pressed a button)
or scheduled periodically.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Celery&lt;/em&gt; provides several components of which &lt;em&gt;celerybeat&lt;/em&gt; is the periodic task scheduler.
When combined with &lt;a href="http://djangoproject.com"&gt;&lt;em&gt;Django&lt;/em&gt;&lt;/a&gt; it gives you a very nice admin interface
which allows periodic tasks to be added to the scheduler.&lt;/p&gt;
&lt;h2&gt;Why change&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Difio&lt;/em&gt; has relied on &lt;em&gt;celerybeat&lt;/em&gt; for a couple of months. Back then, when &lt;em&gt;Difio&lt;/em&gt; launched,
there was no cron support for OpenShift so running &lt;em&gt;celerybeat&lt;/em&gt; sounded reasonable.
It used to run on a dedicated virtual server and for most of the time that was fine. &lt;/p&gt;
&lt;p&gt;There were a number of issues which &lt;em&gt;Difio&lt;/em&gt; faced during its first months:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;celerybeat&lt;/em&gt; would sometime die due to no free memory on the virtual instance.
When that happened no new tasks were scheduled and data was left unprocessed.
Let alone that higher memory instance and the processing power which comes with it
cost extra money.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Difio&lt;/em&gt; is split into several components which need to have the same code base
locally - the most important are database settings and the periodic tasks
code. At least in one occasion &lt;em&gt;celerybeat&lt;/em&gt; failed to start because of a buggy 
task code. The offending code was fixed in the application server on OpenShift but
not properly synced to the &lt;em&gt;celerybeat&lt;/em&gt; instance. Keeping code in sync is a priority
for distributed projects which rely on &lt;em&gt;Celery&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Celery&lt;/em&gt; and &lt;em&gt;django-celery&lt;/em&gt; seem to be updated quite often. This poses a significant risk
of ending up with different versions on the scheduler, worker nodes and the app server. This will
bring the whole application to a halt if at some point a backward incompatible change is introduced
and not properly tested and updated. Keeping infrastructure components in sync can be a big challenge
and I try to minimize this effort as much as possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Having to navigate to the admin pages every time I add a new task or want to change the execution
frequency doesn't feel very natural for a console user like myself and IMHO is less productive.
For the record I primarily use &lt;em&gt;mcedit&lt;/em&gt;. I wanted to have something more close to the
write, commit and push work-flow.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The take over&lt;/h2&gt;
&lt;p&gt;It's been some time since OpenShift
&lt;a href="https://www.redhat.com/openshift/community/blogs/getting-started-with-cron-jobs-on-openshift"&gt;introduced&lt;/a&gt;
the cron cartridge and I decided to give it a try.&lt;/p&gt;
&lt;p&gt;The first thing I did is to write a simple script which can execute any task from the difio.tasks module
by piping it to the Django shell (a Python shell actually).&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;span class="filename"&gt;run_celery_task&lt;/span&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Copyright (c) 2012, Alexander Todorov &amp;lt;atodorov@nospam.otb.bg&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# This script is symlinked to from the hourly/minutely, etc. directories&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# SYNOPSIS&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# ./run_celery_task cron_search_dates&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# OR&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# ln -s run_celery_task cron_search_dates&lt;/span&gt;
&lt;span class="c"&gt;# ./cron_search_dates&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;

&lt;span class="nv"&gt;TASK_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$TASK_NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;TASK_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$OPENSHIFT_APP_DIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_APP_DIR&lt;/span&gt;/virtenv/bin/activate
    &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PYTHON_EGG_CACHE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;/.python-eggs
    &lt;span class="nv"&gt;REPO_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$OPENSHIFT_REPO_DIR&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;REPO_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/../../..&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;import difio.tasks; difio.tasks.&lt;/span&gt;&lt;span class="nv"&gt;$TASK_NAME&lt;/span&gt;&lt;span class="s2"&gt;.delay()&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;$REPO_DIR&lt;/span&gt;/wsgi/difio/manage.py shell
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a multicall script which allows symlinks with different names to point to it. 
Thus to add a new task to cron I just need to make a symlink to the script from one of the
hourly/, minutely/, daily/, etc. directories under cron/.&lt;/p&gt;
&lt;p&gt;The script accepts a parameter as well which allows me to execute it locally for debugging purposes
or to schedule some tasks out of band.
This is how it looks like on the file system:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls -l .openshift/cron/hourly/
some_task_name -&amp;gt; ../tasks/run_celery_task
another_task -&amp;gt; ../tasks/run_celery_task
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After having done these preparations I only had to embed the cron cartridge and git push to OpenShift:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;rhc-ctl-app -a difio -e add-cron-1.4 &amp;amp;&amp;amp; git push
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;What's next&lt;/h2&gt;
&lt;p&gt;At present OpenShift can schedule your jobs every minute, hour, day, week or month and does so using the
&lt;em&gt;run-parts&lt;/em&gt; script. You can't schedule a script to execute at 4:30 every Monday or every 45 minutes for example.
See &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=803485"&gt;rhbz #803485&lt;/a&gt; if you want to follow the
progress. Luckily &lt;em&gt;Difio&lt;/em&gt; doesn't use this sort of job scheduling for the moment.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Difio&lt;/em&gt; is scheduling periodic tasks from OpenShift cron for a few days already. 
It seems to work reliably and with no issues. One less component to maintain and worry about.
More time to write code.&lt;/p&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Tip: How to Get to the OpenShift Shell</title><link href="http://atodorov.org/blog/2012/03/09/how-to-get-to-the-openshift-shell/" rel="alternate"></link><updated>2012-03-09T21:43:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-03-09:blog/2012/03/09/how-to-get-to-the-openshift-shell/</id><summary type="html">&lt;p&gt;I wanted to examine the Perl environment on OpenShift and got tired of making snapshots,
unzipping the archive and poking through the files. I wanted a shell. Here's how to get one.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get the application info first&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rhc-domain-info 
Password: 
Application &lt;span class="nv"&gt;Info&lt;/span&gt;
&lt;span class="o"&gt;================&lt;/span&gt;
myapp
    Framework: perl-5.10
     Creation: 2012-03-08T13:34:46-04:00
         UUID: 8946b976ad284cf5b2401caf736186bd
      Git URL: ssh://8946b976ad284cf5b2401caf736186bd@myapp-mydomain.rhcloud.com/~/git/myapp.git/
   Public URL: http://myapp-mydomain.rhcloud.com/

 Embedded: 
      None
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Git URL has your username and host&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now just ssh into the application&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh 8946b976ad284cf5b2401caf736186bd@myapp-mydomain.rhcloud.com

    Welcome to OpenShift shell

    This shell will assist you in managing OpenShift applications.

    !!! IMPORTANT !!! IMPORTANT !!! IMPORTANT !!!
    Shell access is quite powerful and it is possible &lt;span class="k"&gt;for&lt;/span&gt; you to
    accidentally damage your application.  Proceed with care!
    If worse comes to worst, destroy your application with &lt;span class="s1"&gt;&amp;#39;rhc app destroy&amp;#39;&lt;/span&gt;
    and recreate it
    !!! IMPORTANT !!! IMPORTANT !!! IMPORTANT !!!

    Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more info.

&lt;span class="o"&gt;[&lt;/span&gt;myapp-mydomain.rhcloud.com ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Voila!&lt;/strong&gt;&lt;/p&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>How to Update Dependencies on OpenShift</title><link href="http://atodorov.org/blog/2012/02/18/how-to-update-dependencies-on-openshift/" rel="alternate"></link><updated>2012-02-18T01:00:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-02-18:blog/2012/02/18/how-to-update-dependencies-on-openshift/</id><summary type="html">&lt;p&gt;If you are already running some cool application on &lt;a href="http://openshift.redhat.com"&gt;OpenShift&lt;/a&gt;
it could be the case that you have to update some of the packages installed as dependencies.
Here is an example for an application using the python-2.6 cartridge.&lt;/p&gt;
&lt;h2&gt;Pull latest upstream packages&lt;/h2&gt;
&lt;p&gt;The most simple method is to update everything to the latest upstream versions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Backup! Backup! Backup!&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;rhc-snapshot -a mycoolapp
mv mycoolapp.tar.gz mycoolapp-backup-before-update.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you haven't specified any particular version in &lt;code&gt;setup.py&lt;/code&gt; it will
look like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;difio-openshift-python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;MySQL-python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;Markdown&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To update simply push to OpenShift instructing it to rebuild your virtualenv:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;cd mycoolapp/
touch .openshift/markers/force_clean_build
git add .openshift/markers/force_clean_build
git commit -m &amp;quot;update to latest upstream&amp;quot;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Voila! The environment hosting your application is rebuilt from scratch.&lt;/p&gt;
&lt;h2&gt;Keeping some packages unchanged&lt;/h2&gt;
&lt;p&gt;Suppose that before the update you have &lt;code&gt;Markdown-2.0.1&lt;/code&gt; and you want to keep it!
This is easily solved by adding versioned dependency to &lt;code&gt;setup.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gd"&gt;-       &amp;#39;Markdown&amp;#39;,&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;#39;Markdown==2.0.1&amp;#39;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you do that OpenShift will install the same &lt;code&gt;Markdown&lt;/code&gt; version when rebuilding your
application. Everything else will use the latest available versions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; after the update it's recommended that you remove the 
&lt;code&gt;.openshift/markers/force_clean_build&lt;/code&gt; file. This will speed up the push/build process
and will not surprise you with unwanted changes.&lt;/p&gt;
&lt;h2&gt;Update only selected packages&lt;/h2&gt;
&lt;p&gt;Unless your application is really simple or you have tested the updates, I suspect that
you want to update only selected packages. This can be done without rebuilding the whole
virtualenv. Use versioned dependencies in &lt;code&gt;setup.py&lt;/code&gt; :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gd"&gt;-       &amp;#39;Markdown==2.0.1&amp;#39;,&lt;/span&gt;
&lt;span class="gd"&gt;-       &amp;#39;django-countries&amp;#39;,&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;#39;Markdown&amp;gt;=2.1&amp;#39;,&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;#39;django-countries&amp;gt;=1.1.2&amp;#39;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No need for &lt;code&gt;force_clean_build&lt;/code&gt; this time. Just&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;    git commit &amp;amp;&amp;amp; git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At the time of writing my application was using &lt;code&gt;Markdown-2.0.1&lt;/code&gt; and &lt;code&gt;django-countries-1.0.5&lt;/code&gt;.
Then it updated to &lt;code&gt;Markdown-2.1.1&lt;/code&gt; and &lt;code&gt;django-countires-1.1.2&lt;/code&gt; which also happened to be
the latest versions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this will not work without &lt;code&gt;force_clean_build&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gd"&gt;-       &amp;#39;django-countries==1.0.5&amp;#39;,&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;#39;django-countries&amp;#39;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Warning&lt;/h2&gt;
&lt;p&gt;OpenShift uses a local mirror of &lt;a href="http://pypi.python.org"&gt;Python Package Index&lt;/a&gt;.
It seems to be updated every 24 hours or so. Have this in mind if you want to update
to a package that was just released. It will not work! See
&lt;a href="/blog/2013/04/24/how-to-deploy-python-hotfix-on-redhat-openshift-cloud/"&gt;How to Deploy Python Hotfix on OpenShift&lt;/a&gt;
if you wish to work around this limitation.&lt;/p&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Spinning-up a Development Instance on OpenShift</title><link href="http://atodorov.org/blog/2012/02/10/spinning-up-a-development-instance-on-openshift/" rel="alternate"></link><updated>2012-02-10T21:19:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-02-10:blog/2012/02/10/spinning-up-a-development-instance-on-openshift/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; is hosted on &lt;a href="http://openshift.redhat.com"&gt;OpenShift&lt;/a&gt;.
During development I often need to spin-up another copy of Difio to use for testing and development.
With OpenShift this is easy and fast. Here's how:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create another application on OpenShift. This will be your development instance.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;rhc-create-app -a myappdevel -t python-2.6
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find out the git URL for the production application:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rhc-user-info
Application &lt;span class="nv"&gt;Info&lt;/span&gt;
&lt;span class="o"&gt;================&lt;/span&gt;
myapp
    Framework: python-2.6
     Creation: 2012-02-10T12:39:53-05:00
         UUID: 723f0331e17041e8b34228f87a6cf1f5
      Git URL: ssh://723f0331e17041e8b34228f87a6cf1f5@myapp-mydomain.rhcloud.com/~/git/myapp.git/
   Public URL: http://myapp-mydomain.rhcloud.com/
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push the current code base from the production instance to devel instance:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;cd myappdevel
git remote add production -m master ssh://723f0331e17041e8b34228f87a6cf1f5@myapp-mydomain.rhcloud.com/~/git/myapp.git/
git pull -s recursive -X theirs production master
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now your &lt;code&gt;myappdevel&lt;/code&gt; is the same as your production instance. You will probably want to
modify your database connection settings at this point and start adding new features.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry></feed>