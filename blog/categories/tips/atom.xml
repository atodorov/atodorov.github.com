<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tips | atodorov.org]]></title>
  <link href="http://atodorov.org/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2013-09-23T15:48:52+03:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tip: How to Find Your Red Hat Account Number]]></title>
    <link href="http://atodorov.org/blog/2013/08/23/how-to-find-your-red-hat-account-number/"/>
    <updated>2013-08-23T11:55:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/08/23/how-to-find-your-red-hat-account-number</id>
    <content type="html"><![CDATA[<p><img src="http://atodorov.org/images/redhat_account_number.png" style="float:left;display:inline-block;margin-right:10px;" /></p>

<p>One thing you need to know when ordering Red Hat subscriptions is your
account number. It is available in the drop down menu at the top right
corner after you login at <a href="https://access.redhat.com">https://access.redhat.com</a>.</p>

<p>New accounts don't have an account number. It will be generated after
the first subscription activation.</p>

<p>If you need to know more about Red Hat's ordering process just ask me!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH from Linux to BlackBerry Z10]]></title>
    <link href="http://atodorov.org/blog/2013/07/19/ssh-from-linux-to-blackberry-z10/"/>
    <updated>2013-07-19T23:31:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/07/19/ssh-from-linux-to-blackberry-z10</id>
    <content type="html"><![CDATA[<p>You can SSH into a <a href="http://amzn.to/12y4ewJ">BlackBerry Z10</a> device even on Linux.
I'm using Red Hat Enterprise Linux 6 and here is how to establish the connection.</p>

<p>1) <a href="/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/">Enable USB networking</a>
between your Linux desktop and the Z10;</p>

<p>2) Install the <a href="https://developer.blackberry.com/develop/platform_choice/ndk.html">Momentics IDE</a>.
You need it to create debug tokens and to start the SSH daemon on the device;</p>

<p>3) Obtain <a href="https://www.blackberry.com/SignedKeys/codesigning.html">signing keys</a>
and create a debug token by following the wizard in the IDE.
I just started a new project and followed the instructions;</p>

<p>4) Install debug token on device using the IDE. From <code>Window - Preferences</code> select
<code>Blackberry - Signing</code>. Just create and deploy the debug token on the device. Mine was
automatically discovered so I just had to follow the prompts;</p>

<p>5) Reboot and re-enable development mode (I'm not sure if this was necessary);</p>

<p>6) Generate a <strong>4096 bit</strong> key for SSH. Smaller keys won't work. You can use your
current key if it is 4096 bit;</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa -b 4096
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>Enter file in which to save the key <span class="o">(</span>/home/atodorov/.ssh/id_rsa<span class="o">)</span>: /home/atodorov/.rim/testKey_4096_rsa
</span><span class='line'>/home/atodorov/.rim/testKey_4096_rsa already exists.
</span><span class='line'>Overwrite <span class="o">(</span>y/n<span class="o">)</span>? y
</span><span class='line'>Enter passphrase <span class="o">(</span>empty <span class="k">for </span>no passphrase<span class="o">)</span>:
</span><span class='line'>Enter same passphrase again:
</span><span class='line'>Your identification has been saved in /home/atodorov/.rim/testKey_4096_rsa.
</span><span class='line'>Your public key has been saved in /home/atodorov/.rim/testKey_4096_rsa.pub.
</span><span class='line'>The key fingerprint is:
</span><span class='line'>77:73:55:03:e1:fc:5b:df:a6:e9:2c:b4:d4:1e:0c:b2 atodorov@redbull.mini
</span><span class='line'>The key<span class="err">&#39;</span>s randomart image is:
</span><span class='line'>+--<span class="o">[</span> RSA 4096<span class="o">]</span>----+
</span><span class='line'>|             oo..|
</span><span class='line'>|            o   o|
</span><span class='line'>|             o  .|
</span><span class='line'>|          . . .. |
</span><span class='line'>|        S .oo+...|
</span><span class='line'>|         .E.oo+ <span class="o">=</span>|
</span><span class='line'>|           o o o+|
</span><span class='line'>|            o..+ |
</span><span class='line'>|             <span class="nv">o</span><span class="o">=</span>  |
</span><span class='line'>+-----------------+
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>7) Update key permissions, since ssh complains:</p>

<pre><code>    $ chmod 600 ~/.rim/testKey_4096_rsa.pub
</code></pre>

<p>8) By default SSH is not listening on your BlackBerry. Use the <code>blackberry-connect</code>
command to start the SSH daemon on the device. It will upload your public SSH key
to the device and start the SSH daemon on the other side. <code>password</code> is your device
password;</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">pwd</span>
</span><span class='line'>/home/atodorov/bbndk/host_10_1_0_231/linux/x86/usr/bin&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>./blackberry-connect 169.254.0.1 -password 123456 -sshPublicKey ~/.rim/testKey_4096_rsa.pub
</span><span class='line'>Info: Connecting to target 169.254.0.1:4455
</span><span class='line'>Info: Authenticating with target 169.254.0.1:4455
</span><span class='line'>Info: Encryption parameters verified
</span><span class='line'>Info: Authenticating with target credentials.
</span><span class='line'>Info: Successfully authenticated with target credentials.
</span><span class='line'>Info: Sending ssh key to target 169.254.0.1:4455
</span><span class='line'>Info: ssh key successfully transferred.
</span><span class='line'>Info: Successfully connected. This application must remain running in order to use debug tools. Exiting the application will terminate this connection.
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>9) Check if SSH is running on the device</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>nmap 169.254.0.1&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Starting Nmap 5.51 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2013-07-18 10:19 EEST
</span><span class='line'>Stats: 0:00:01 elapsed; 0 hosts completed <span class="o">(</span>1 up<span class="o">)</span>, 1 undergoing Connect Scan
</span><span class='line'>Connect Scan Timing: About 14.30% <span class="k">done</span>; ETC: 10:20 <span class="o">(</span>0:00:06 remaining<span class="o">)</span>
</span><span class='line'>Nmap scan report <span class="k">for </span>169.254.0.1
</span><span class='line'>Host is up <span class="o">(</span>0.00097s latency<span class="o">)</span>.
</span><span class='line'>Not shown: 991 closed ports
</span><span class='line'>PORT     STATE SERVICE
</span><span class='line'>22/tcp   open  ssh
</span><span class='line'>80/tcp   open  http
</span><span class='line'>139/tcp  open  netbios-ssn
</span><span class='line'>443/tcp  open  https
</span><span class='line'>445/tcp  open  microsoft-ds
</span><span class='line'>1111/tcp open  lmsocialserver
</span><span class='line'>5555/tcp open  freeciv
</span><span class='line'>8000/tcp open  http-alt
</span><span class='line'>8443/tcp open  https-alt&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned in 12.47 seconds
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>10)  Use SSH with the specified key to connect to the Z10. Username is <code>devuser</code>.
Here's a simple session:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh -i ~/.rim/testKey_4096_rsa devuser@169.254.0.1
</span><span class='line'><span class="err">$</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">pwd</span>
</span><span class='line'>/accounts/devuser
</span><span class='line'><span class="nv">$ </span>uname -a
</span><span class='line'>QNX atodorovZ10 8.0.0 2013/05/02-08:42:48EDT OMAP4470_ES1.0_HS_London_Rev:08 armle
</span><span class='line'><span class="nv">$ </span>date
</span><span class='line'>Fri Jul 19 23:39:19 EEST 2013
</span><span class='line'><span class="nv">$ </span>ifconfig
</span><span class='line'>lo0: <span class="nv">flags</span><span class="o">=</span>8049&amp;lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 33192&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;inet 127.0.0.1 netmask 0xff000000
</span><span class='line'>inet6 ::1 prefixlen 128
</span><span class='line'>inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;tiw_drv0: <span class="nv">flags</span><span class="o">=</span>8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&gt; mtu 1500&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;address: 1c:69:a5:d0:10:cd
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;tiw_sta0: <span class="nv">flags</span><span class="o">=</span>40008c43&amp;lt;UP,BROADCAST,RUNNING,OACTIVE,SIMPLEX,MULTICAST,ACCEPTRTADV&gt; mtu 1500&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;address: 1c:69:a5:d0:10:cd
</span><span class='line'>inet 192.168.0.100 netmask 0xffffff00 broadcast 192.168.0.255
</span><span class='line'>inet6 fe80::1e69:a5ff:fed0:10cd%tiw_sta0 prefixlen 64 scopeid 0x12
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;tiw_p2pdev0: <span class="nv">flags</span><span class="o">=</span>8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&gt; mtu 1500&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;address: 1c:69:a5:d0:10:cd
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;tiw_p2pgrp0: <span class="nv">flags</span><span class="o">=</span>8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&gt; mtu 1500&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;address: 1c:69:a5:d0:10:cd
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;tiw_ibss0: <span class="nv">flags</span><span class="o">=</span>8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&gt; mtu 1500&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;address: 1c:69:a5:d0:10:cd
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;pflog0: <span class="nv">flags</span><span class="o">=</span>0 mtu 33192
</span><span class='line'>lo2: <span class="nv">flags</span><span class="o">=</span>8048&amp;lt;LOOPBACK,RUNNING,MULTICAST&gt; mtu 33192
</span><span class='line'>cellular0: <span class="nv">flags</span><span class="o">=</span>8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&gt; mtu 1500
</span><span class='line'>cellular1: <span class="nv">flags</span><span class="o">=</span>8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&gt; mtu 1500
</span><span class='line'>cellular2: <span class="nv">flags</span><span class="o">=</span>8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&gt; mtu 1500
</span><span class='line'>cellular3: <span class="nv">flags</span><span class="o">=</span>8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&gt; mtu 1500
</span><span class='line'>cellular4: <span class="nv">flags</span><span class="o">=</span>8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&gt; mtu 1500
</span><span class='line'>bptp0: <span class="nv">flags</span><span class="o">=</span>8043&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1356&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;inet6 fe80::1e69:a5ff:fed0:10cd%bptp0 prefixlen 64 scopeid 0x2d
</span><span class='line'>inet6 fd02:42ac:77b2:d543:c158:fabb:6276:80e6 prefixlen 8
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;ecm0: <span class="nv">flags</span><span class="o">=</span>8a43&amp;lt;UP,BROADCAST,RUNNING,ALLMULTI,SIMPLEX,MULTICAST&gt; mtu 1500&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;address: 1e:69:a5:d0:10:cd
</span><span class='line'>inet 169.254.0.1 netmask 0xfffffffc broadcast 169.254.0.3
</span><span class='line'>inet6 fe80::1c69:a5ff:fed0:10cd%ecm0 prefixlen 64 scopeid 0x2e
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>IMPORTANT:</strong> you can also use the WiFi address of the device to pass to
<code>backberry-connect</code> and ssh. It works for me.</p>

<p>I'm starting to explore the dark world of QNX in the next couple of days
and will keep you posted! Until then - happy hacking.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip: How To Enable USB Networking Between BlackBerry Z10 and Red Hat Enterprise Linux 6]]></title>
    <link href="http://atodorov.org/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/"/>
    <updated>2013-07-17T11:06:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6</id>
    <content type="html"><![CDATA[<p>On Linux there is a feature called USB networking which provides you with a
TCP/IP connection to another device connected via USB cable. Here is how to
connect your <a href="http://amzn.to/12y4ewJ">BlackBerry Z10</a>
to your Linux laptop over USB. I use Red Hat Enterprise Linux but should work
out of the box for other distros too.</p>

<p>Connect the Z10 to your laptop:</p>

<pre><code>    $ lsusb
    Bus 001 Device 005: ID 0fca:8020 Research In Motion, Ltd. Blackberry Playbook (CD-Rom mode)
</code></pre>

<p>By default many USB devices will present a virtual CD-ROM with drivers for Windows.
This is the case here too. To change it go to <code>Settings - Storage and Access</code> and
set <code>USB Connection</code> to <code>Connect to Mac</code>!</p>

<p>If necessary plug out and back in the Z10.</p>

<pre><code>    $ lsusb
    Bus 001 Device 007: ID 0fca:8013 Research In Motion, Ltd.

    $ ifconfig
    usb0      Link encap:Ethernet  HWaddr 1E:69:A5:D0:11:0A  
              inet addr:169.254.0.2  Bcast:169.254.0.3  Mask:255.255.255.252
              inet6 addr: fe80::1c69:a5ff:fed0:110a/64 Scope:Link
              UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
              RX packets:49 errors:0 dropped:0 overruns:0 frame:0
              TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
              collisions:0 txqueuelen:1000 
              RX bytes:16002 (15.6 KiB)  TX bytes:1152 (1.1 KiB)
</code></pre>

<p><strong>IMPORTANT:</strong> In the same <code>Storage and Access</code> screen scroll down to
<code>USB Mass Storage</code> and turn it <code>Off</code>. If you don't do this your Z10 will appear
as USB flash drive and no USB networking will be available. This is how it looks:</p>

<pre><code>    $ lsusb
    Bus 001 Device 008: ID 0fca:8014 Research In Motion, Ltd. 
</code></pre>

<p><strong>IMPORTANT:</strong> If you need your Z10 storage accessible together with USB networking
you can try accessing the device over Wi-Fi.
Configure it from the same <code>Storage and Access</code> screen. Then your device will be
available through Samba on its wireless IP address. I've tried it, works for me!</p>

<p>You don't need anything else to get this working. All set!</p>

<p>My intention is to use either USB networking or Wi-Fi to
<a href="http://supportforums.blackberry.com/t5/Testing-and-Deployment/How-to-use-blackberry-connect-to-Enable-SSH-Access/ta-p/1515447">connect to the Z10 shell</a>
and explore it in more details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip: Setting Secure ENV variables on Red Hat OpenShift]]></title>
    <link href="http://atodorov.org/blog/2013/07/08/tip-setting-secure-env-variables-on-red-hat-openshift/"/>
    <updated>2013-07-08T21:39:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/07/08/tip-setting-secure-env-variables-on-red-hat-openshift</id>
    <content type="html"><![CDATA[<p>OpenShift is
<a href="https://www.openshift.com/content/custom-environment-variables">still missing</a>
the client side tools to set environment variables without exposing the values
in source code but there is a way to do it. Here is how.</p>

<p>First ssh into your application and navigate to the <code>$OPENSHIFT_DATA_DIR</code>.
Create a file to define your environment.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rhc ssh -a difio
</span><span class='line'>Password: ***&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>difio-otb.rhcloud.com 51d32a854382ecf7a9000116<span class="o">]</span>&gt; <span class="nb">cd</span> <span class="nv">$OPENSHIFT_DATA_DIR</span>
</span><span class='line'><span class="o">[</span>difio-otb.rhcloud.com data<span class="o">]</span>&gt; vi myenv.sh
</span><span class='line'><span class="o">[</span>difio-otb.rhcloud.com data<span class="o">]</span>&gt; cat myenv.sh&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;export <span class="nv">MYENV</span><span class="o">=</span><span class="s2">&quot;hello&quot;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>difio-otb.rhcloud.com data<span class="o">]</span>&gt; chmod a+x myenv.sh
</span><span class='line'><span class="o">[</span>difio-otb.rhcloud.com data<span class="o">]</span>&gt; <span class="nb">exit</span>
</span><span class='line'>Connection to difio-otb.rhcloud.com closed.
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now modify your code and git push to OpenShift. Then ssh into the app once
again to verify that your configuration is still in place.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>atodorov@redbull difio<span class="o">]</span><span class="nv">$ </span>rhc ssh -a difio
</span><span class='line'>Password: ***&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>difio-otb.rhcloud.com 51d32a854382ecf7a9000116<span class="o">]</span>&gt; <span class="nb">cd</span> <span class="nv">$OPENSHIFT_DATA_DIR</span>
</span><span class='line'><span class="o">[</span>difio-otb.rhcloud.com data<span class="o">]</span>&gt; ls -l
</span><span class='line'>total 4
</span><span class='line'>-rwxr-xr-x. 1 51d32a854382ecf7a9000116 51d32a854382ecf7a9000116 34  8 jul 14,33 myenv.sh
</span><span class='line'><span class="o">[</span>difio-otb.rhcloud.com data<span class="o">]</span>&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Use the defined variables as you wish.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip: Caching Large Objects for Celery and Amazon SQS ]]></title>
    <link href="http://atodorov.org/blog/2013/06/19/tip-caching-large-objects-for-celery-and-amazon-sqs/"/>
    <updated>2013-06-19T14:29:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/06/19/tip-caching-large-objects-for-celery-and-amazon-sqs</id>
    <content type="html"><![CDATA[<p>Some time ago a guy called Matt
<a href="https://groups.google.com/forum/?fromgroups=#!topic/celery-users/RFAuGjZwtmg">asked</a>
about passing large objects through their messaging queue. They were switching from
RabbitMQ to Amazon SQS which has a limit of 64K total message size.</p>

<p>Recently I've made some changes in <a href="http://www.dif.io">Difio</a> which require passing
larger objects as parameters to a Celery task. Since Difio is also using SQS I faced the
same problem. Here is the solution using a cache back-end:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">celery.task</span> <span class="kn">import</span> <span class="n">task</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">django.core</span> <span class="kn">import</span> <span class="n">cache</span> <span class="k">as</span> <span class="n">cache_module</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">some_method</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;...</span> <span class="n">skip</span> <span class="o">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">task_cache</span> <span class="o">=</span> <span class="n">cache_module</span><span class="o">.</span><span class="n">get_cache</span><span class="p">(</span><span class="s">&#39;taskq&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">task_cache</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">uuid</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="mi">3600</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">handle_data</span><span class="o">.</span><span class="n">delay</span><span class="p">(</span><span class="n">uuid</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">...</span> <span class="n">skip</span> <span class="o">...</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">handle_data</span><span class="p">(</span><span class="n">uuid</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">task_cache</span> <span class="o">=</span> <span class="n">cache_module</span><span class="o">.</span><span class="n">get_cache</span><span class="p">(</span><span class="s">&#39;taskq&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="n">task_cache</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">uuid</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>    <span class="k">return</span>
</span><span class='line'>
</span><span class='line'><span class="o">...</span> <span class="n">do</span> <span class="n">stuff</span> <span class="o">...</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Objects are persisted in a secondary cache back-end, not the default one, to avoid
accidental destruction. <code>uuid</code> parameter is a string.</p>

<p>Although the objects passed are smaller than 64K I haven't seen any issues
with this solution so far. Let me know if you are using something similar in your code
and how it works for you.</p>
]]></content>
  </entry>
  
</feed>
