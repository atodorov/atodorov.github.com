<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Amazon | atodorov.org]]></title>
  <link href="http://atodorov.org/blog/categories/amazon/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2013-06-26T23:03:28+03:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Performance test: Amazon ElastiCache vs Amazon S3]]></title>
    <link href="http://atodorov.org/blog/2013/06/26/performance-test-amazon-elasticache-vs-amazon-s3/"/>
    <updated>2013-06-26T21:22:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/06/26/performance-test-amazon-elasticache-vs-amazon-s3</id>
    <content type="html"><![CDATA[<p>Which Django cache backend is faster? Amazon ElastiCache or Amazon S3 ?</p>

<p>Previously I've mentioned about
<a href="/blog/2013/06/19/django-tips-using-cache-for-stateful-http/">using Django's cache to keep state between HTTP requests</a>.
In my demo described there I was using <a href="http://github.com/atodorov/django-s3-cache">django-s3-cache</a>.
It is time to move to production so I decided to measure the performance difference between the two
cache options available at Amazon Web Services.</p>

<h2>Test infrastructure</h2>

<ul>
<li>One Amazon S3 bucket, located in US Standard (aka US East) region;</li>
<li>One Amazon ElastiCache cluster with one Small Cache Node (cache.m1.small) with Moderate I/O capacity;</li>
<li>One Amazon Elasticache cluster with one Large Cache Node (cache.m1.large) with High I/O Capacity.</li>
</ul>


<h2>Test Scenario</h2>

<p>The test platform is Django. I've created a
<a href="https://github.com/atodorov/Amazon-ElastiCache-vs-Amazon-S3-Django">skeleton project</a>
with only <code>CACHES</code> settings
defined and necessary dependencies installed. A file called <code>test.py</code> holds the
test cases, which use the standard timeit module. The object which is stored in cache
is very small - it holds a phone/address identifiers and couple of user made selections.
The code looks like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">timeit</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s3_set</span> <span class="o">=</span> <span class="n">timeit</span><span class="o">.</span><span class="n">Timer</span><span class="p">(</span>
</span><span class='line'><span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">for i in range(1000):&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">&lt;pre&gt;&lt;code&gt;s3_cache.set(i, MyObject)</span>
</span><span class='line'><span class="sd">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">&lt;p&gt;&quot;&quot;&quot;</span>
</span><span class='line'><span class="p">,</span>
</span><span class='line'><span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">from django.core import cache&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">&lt;p&gt;s3_cache = cache.get_cache(&#39;default&#39;)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">&lt;p&gt;MyObject = {&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">&lt;pre&gt;&lt;code&gt;&#39;from&#39; : &#39;359123456789&#39;,</span>
</span><span class='line'><span class="sd">&#39;address&#39; : &#39;6afce9f7-acff-49c5-9fbe-14e238f73190&#39;,</span>
</span><span class='line'><span class="sd">&#39;hour&#39; : &#39;12:30&#39;,</span>
</span><span class='line'><span class="sd">&#39;weight&#39; : 5,</span>
</span><span class='line'><span class="sd">&#39;type&#39; : 1,</span>
</span><span class='line'><span class="sd">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">&lt;p&gt;}</span>
</span><span class='line'><span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s3_get</span> <span class="o">=</span> <span class="n">timeit</span><span class="o">.</span><span class="n">Timer</span><span class="p">(</span>
</span><span class='line'><span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">for i in range(1000):&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">&lt;pre&gt;&lt;code&gt;MyObject = s3_cache.get(i)</span>
</span><span class='line'><span class="sd">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">&lt;p&gt;&quot;&quot;&quot;</span>
</span><span class='line'><span class="p">,</span>
</span><span class='line'><span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">from django.core import cache&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">&lt;p&gt;s3_cache = cache.get_cache(&#39;default&#39;)</span>
</span><span class='line'><span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h3</span><span class="o">&gt;</span><span class="n">skip</span><span class="o">&lt;/</span><span class="n">h3</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Tests were executed from the Django shell on my laptop:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="err">$</span> <span class="o">./</span><span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">shell</span>
</span><span class='line'><span class="n">Python</span> <span class="mf">2.6</span><span class="o">.</span><span class="mi">6</span> <span class="p">(</span><span class="n">r266</span><span class="p">:</span><span class="mi">84292</span><span class="p">,</span> <span class="n">Oct</span> <span class="mi">12</span> <span class="mi">2012</span><span class="p">,</span> <span class="mi">14</span><span class="p">:</span><span class="mi">23</span><span class="p">:</span><span class="mi">48</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="n">GCC</span> <span class="mf">4.4</span><span class="o">.</span><span class="mi">6</span> <span class="mi">20120305</span> <span class="p">(</span><span class="n">Red</span> <span class="n">Hat</span> <span class="mf">4.4</span><span class="o">.</span><span class="mi">6</span><span class="o">-</span><span class="mi">4</span><span class="p">)]</span> <span class="n">on</span> <span class="n">linux2</span>
</span><span class='line'><span class="n">Type</span> <span class="s">&quot;help&quot;</span><span class="p">,</span> <span class="s">&quot;copyright&quot;</span><span class="p">,</span> <span class="s">&quot;credits&quot;</span> <span class="ow">or</span> <span class="s">&quot;license&quot;</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="o">.</span>
</span><span class='line'><span class="p">(</span><span class="n">InteractiveConsole</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">blockquote</span><span class="o">&gt;&lt;</span><span class="n">blockquote</span><span class="o">&gt;&lt;</span><span class="n">blockquote</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">test</span> <span class="kn">import</span> <span class="o">*&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s3_set</span><span class="o">.</span><span class="n">repeat</span><span class="p">(</span><span class="n">repeat</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">number</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mf">534.49202704429626</span><span class="p">,</span> <span class="mf">515.13989496231079</span><span class="p">,</span> <span class="mf">515.26534104347229</span><span class="p">]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">ecs_set</span><span class="o">.</span><span class="n">repeat</span><span class="p">(</span><span class="n">repeat</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">number</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mf">3.1153659820556641</span><span class="p">,</span> <span class="mf">3.102524995803833</span><span class="p">,</span> <span class="mf">3.1101429462432861</span><span class="p">]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">ecl_set</span><span class="o">.</span><span class="n">repeat</span><span class="p">(</span><span class="n">repeat</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">number</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mf">3.1070160865783691</span><span class="p">,</span> <span class="mf">3.1004979610443115</span><span class="p">,</span> <span class="mf">3.1082391738891602</span><span class="p">]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s3_get</span><span class="o">.</span><span class="n">repeat</span><span class="p">(</span><span class="n">repeat</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">number</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mf">354.0339789390564</span><span class="p">,</span> <span class="mf">383.1578528881073</span><span class="p">,</span> <span class="mf">371.23516583442688</span><span class="p">]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">ecs_get</span><span class="o">.</span><span class="n">repeat</span><span class="p">(</span><span class="n">repeat</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">number</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mf">3.0982329845428467</span><span class="p">,</span> <span class="mf">3.1075088977813721</span><span class="p">,</span> <span class="mf">3.1198301315307617</span><span class="p">]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">ecl_get</span><span class="o">.</span><span class="n">repeat</span><span class="p">(</span><span class="n">repeat</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">number</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mf">3.1206800937652588</span><span class="p">,</span> <span class="mf">3.0972812175750732</span><span class="p">,</span> <span class="mf">3.1136119365692139</span><span class="p">]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Results</h2>

<p>As expected ElastiCache is much faster compared to S3. However the difference
between the two ElastiCache node types is subtle. I will stay with the smallest
possible node to minimize costs.</p>

<p>Depending on your objects size or how many set/get operations you perform per
second you may need to go with the larger nodes. Just test it!</p>

<p>It surprised me how slow django-s3-cache is. A quick look at the code
of the two backends shows some differences. The one I immediately see is that
for every cache key django-s3-cache creates an sha1 hash which is used as the
storage file name. This was modeled after the filesystem backend but I think the
design is wrong.</p>

<p>Another one is that django-s3-cache time-stamps all objects and uses pickle to serialize them.
I wonder if it can't just write them as binary blobs directly. There's definitely lots
of room for improvement of django-s3-cache. I will let you know my findings once I
get to it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Twilio is Located in Amazon Web Services US East]]></title>
    <link href="http://atodorov.org/blog/2013/06/24/twilio-is-located-in-amazon-web-services-us-east/"/>
    <updated>2013-06-24T23:43:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/06/24/twilio-is-located-in-amazon-web-services-us-east</id>
    <content type="html"><![CDATA[<p><blockquote><p>Where do I store my audio files in order to minimize download and call wait time?</p></blockquote></p>

<p>Twilio is a cloud vendor that provides telephony services.
It can download and <code>&lt;Play&gt;</code> arbitrary audio files and will cache the files
for better performance.</p>

<p>Twilio support told me they are not disclosing the location of their servers,
so from my web application hosted in AWS US East:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ivr-otb.rhcloud.com logs<span class="o">]</span>&gt; grep TwilioProxy access_log-* | cut -f 1 -d <span class="s1">&#39;-&#39;</span> | sort | uniq
</span><span class='line'>10.125.90.172
</span><span class='line'>10.214.183.239
</span><span class='line'>10.215.187.220
</span><span class='line'>10.245.155.18
</span><span class='line'>10.255.119.159
</span><span class='line'>10.31.197.102
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now let's map these addresses to host names. From another EC2 system, also in Amazon US East:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip-10-29-206-86 ~<span class="o">]</span><span class="nv">$ </span>dig -x 10.125.90.172 -x 10.214.183.239 -x 10.215.187.220 -x 10.245.155.18 -x 10.255.119.159 -x 10.31.197.102&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;; &amp;lt;&amp;lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.29.amzn1 &amp;lt;&amp;lt;&gt;&gt; -x 10.125.90.172 -x 10.214.183.239 -x 10.215.187.220 -x 10.245.155.18 -x 10.255.119.159 -x 10.31.197.102
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 43245
</span><span class='line'>;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; QUESTION SECTION:
</span><span class='line'>;172.90.125.10.in-addr.arpa.    IN      PTR&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; ANSWER SECTION:
</span><span class='line'>172.90.125.10.in-addr.arpa. 113 IN      PTR     ip-10-125-90-172.ec2.internal.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Query <span class="nb">time</span>: 1 msec
</span><span class='line'>;; SERVER: 172.16.0.23#53<span class="o">(</span>172.16.0.23<span class="o">)</span>
</span><span class='line'>;; WHEN: Mon Jun 24 20:48:21 2013
</span><span class='line'>;; MSG SIZE  rcvd: 87&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 52693
</span><span class='line'>;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; QUESTION SECTION:
</span><span class='line'>;239.183.214.10.in-addr.arpa.   IN      PTR&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; ANSWER SECTION:
</span><span class='line'>239.183.214.10.in-addr.arpa. 42619 IN   PTR     domU-12-31-39-0B-B0-01.compute-1.internal.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Query <span class="nb">time</span>: 0 msec
</span><span class='line'>;; SERVER: 172.16.0.23#53<span class="o">(</span>172.16.0.23<span class="o">)</span>
</span><span class='line'>;; WHEN: Mon Jun 24 20:48:21 2013
</span><span class='line'>;; MSG SIZE  rcvd: 100&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 25255
</span><span class='line'>;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; QUESTION SECTION:
</span><span class='line'>;220.187.215.10.in-addr.arpa.   IN      PTR&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; ANSWER SECTION:
</span><span class='line'>220.187.215.10.in-addr.arpa. 43140 IN   PTR     domU-12-31-39-0C-B8-2E.compute-1.internal.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Query <span class="nb">time</span>: 0 msec
</span><span class='line'>;; SERVER: 172.16.0.23#53<span class="o">(</span>172.16.0.23<span class="o">)</span>
</span><span class='line'>;; WHEN: Mon Jun 24 20:48:21 2013
</span><span class='line'>;; MSG SIZE  rcvd: 100&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 15099
</span><span class='line'>;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; QUESTION SECTION:
</span><span class='line'>;18.155.245.10.in-addr.arpa.    IN      PTR&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; ANSWER SECTION:
</span><span class='line'>18.155.245.10.in-addr.arpa. 840 IN      PTR     ip-10-245-155-18.ec2.internal.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Query <span class="nb">time</span>: 0 msec
</span><span class='line'>;; SERVER: 172.16.0.23#53<span class="o">(</span>172.16.0.23<span class="o">)</span>
</span><span class='line'>;; WHEN: Mon Jun 24 20:48:21 2013
</span><span class='line'>;; MSG SIZE  rcvd: 87&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 28878
</span><span class='line'>;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; QUESTION SECTION:
</span><span class='line'>;159.119.255.10.in-addr.arpa.   IN      PTR&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; ANSWER SECTION:
</span><span class='line'>159.119.255.10.in-addr.arpa. 43140 IN   PTR     domU-12-31-39-01-70-51.compute-1.internal.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Query <span class="nb">time</span>: 0 msec
</span><span class='line'>;; SERVER: 172.16.0.23#53<span class="o">(</span>172.16.0.23<span class="o">)</span>
</span><span class='line'>;; WHEN: Mon Jun 24 20:48:21 2013
</span><span class='line'>;; MSG SIZE  rcvd: 100&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 28727
</span><span class='line'>;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; QUESTION SECTION:
</span><span class='line'>;102.197.31.10.in-addr.arpa.    IN      PTR&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; ANSWER SECTION:
</span><span class='line'>102.197.31.10.in-addr.arpa. 840 IN      PTR     ip-10-31-197-102.ec2.internal.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;;; Query <span class="nb">time</span>: 0 msec
</span><span class='line'>;; SERVER: 172.16.0.23#53<span class="o">(</span>172.16.0.23<span class="o">)</span>
</span><span class='line'>;; WHEN: Mon Jun 24 20:48:21 2013
</span><span class='line'>;; MSG SIZE  rcvd: 87
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In short:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip-10-125-90-172.ec2.internal.
</span><span class='line'>ip-10-245-155-18.ec2.internal.
</span><span class='line'>ip-10-31-197-102.ec2.internal.
</span><span class='line'>domU-12-31-39-01-70-51.compute-1.internal.
</span><span class='line'>domU-12-31-39-0B-B0-01.compute-1.internal.
</span><span class='line'>domU-12-31-39-0C-B8-2E.compute-1.internal.</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The <code>ip-*.ec2.internal</code> are clearly in US East. The <code>domU-*.computer-1.internal</code> also
look like US East although I'm not 100% sure what is the difference between the two.
The later ones look like HVM guests while the former ones are para-virtualized.</p>

<p>For comparison here are some internal addresses from my own EC2 systems:</p>

<ul>
<li>ip-10-228-237-207.eu-west-1.compute.internal - EU Ireland</li>
<li>ip-10-248-19-46.us-west-2.compute.internal - US West Oregon</li>
<li>ip-10-160-58-141.us-west-1.compute.internal - US West N. California</li>
</ul>


<p>After relocating my audio files to an S3 bucket in US East the average call length
dropped from 2:30 min to 2:00 min for the same IVR choices. This also minimizes
the costs since Twilio charges per minute of incoming/outgoing calls.
I think the audio quality has improved as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip: Caching Large Objects for Celery and Amazon SQS ]]></title>
    <link href="http://atodorov.org/blog/2013/06/19/tip-caching-large-objects-for-celery-and-amazon-sqs/"/>
    <updated>2013-06-19T14:29:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/06/19/tip-caching-large-objects-for-celery-and-amazon-sqs</id>
    <content type="html"><![CDATA[<p>Some time ago a guy called Matt
<a href="https://groups.google.com/forum/?fromgroups=#!topic/celery-users/RFAuGjZwtmg">asked</a>
about passing large objects through their messaging queue. They were switching from
RabbitMQ to Amazon SQS which has a limit of 64K total message size.</p>

<p>Recently I've made some changes in <a href="http://www.dif.io">Difio</a> which require passing
larger objects as parameters to a Celery task. Since Difio is also using SQS I faced the
same problem. Here is the solution using a cache back-end:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">celery.task</span> <span class="kn">import</span> <span class="n">task</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">django.core</span> <span class="kn">import</span> <span class="n">cache</span> <span class="k">as</span> <span class="n">cache_module</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">some_method</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;...</span> <span class="n">skip</span> <span class="o">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">task_cache</span> <span class="o">=</span> <span class="n">cache_module</span><span class="o">.</span><span class="n">get_cache</span><span class="p">(</span><span class="s">&#39;taskq&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">task_cache</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">uuid</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="mi">3600</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">handle_data</span><span class="o">.</span><span class="n">delay</span><span class="p">(</span><span class="n">uuid</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">...</span> <span class="n">skip</span> <span class="o">...</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nd">@task</span>
</span><span class='line'><span class="k">def</span> <span class="nf">handle_data</span><span class="p">(</span><span class="n">uuid</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">task_cache</span> <span class="o">=</span> <span class="n">cache_module</span><span class="o">.</span><span class="n">get_cache</span><span class="p">(</span><span class="s">&#39;taskq&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="n">task_cache</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">uuid</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>    <span class="k">return</span>
</span><span class='line'>
</span><span class='line'><span class="o">...</span> <span class="n">do</span> <span class="n">stuff</span> <span class="o">...</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Objects are persisted in a secondary cache back-end, not the default one, to avoid
accidental destruction. <code>uuid</code> parameter is a string.</p>

<p>Although the objects passed are smaller than 64K I haven't seen any issues
with this solution so far. Let me know if you are using something similar in your code
and how it works for you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Runs Your Start-up - Useful at Night]]></title>
    <link href="http://atodorov.org/blog/2013/03/27/what-runs-your-startup-useful-at-night/"/>
    <updated>2013-03-27T12:00:00+02:00</updated>
    <id>http://atodorov.org/blog/2013/03/27/what-runs-your-startup-useful-at-night</id>
    <content type="html"><![CDATA[<p><img style="float: left; margin-right: 10px;" src="http://atodorov.org/images/startup/usefulatnight.png" alt="Useful at Night logo" /></p>

<p><a href="http://usefulatnight.com/">Useful at Night</a> is a mobile guide for nightlife
empowering real time discovery of cool locations, allowing nightlife players
to identify opinion leaders. Through geo-location and data aggregation
capabilities, the application allows useful exploration of cities, places and
parties.</p>

<p><a href="http://about.me/velev">Evelin Velev</a> was kind enough to share what technologies
his team uses to run their star-up.</p>

<br/>


<h2>Main Technologies</h2>

<p>Main technologies used are Node.js, HTML 5 and NoSQL.</p>

<p>Back-end application servers are written in Node.js and hosted at Heroku,
coupled with <a href="http://www.redistogo.com/">RedisToGo</a> for caching and
CouchDB served by <a href="https://cloudant.com/">Cloudant</a> for storage.</p>

<p>Their mobile front-end supports both iOS and Android platforms and is built using
HTML5 and a homemade UI framework called RAPID. There are some native parts developed
in Objective-C and Java respectively.</p>

<p>In addition <em>Useful at Night</em> uses MongoDB for metrics data with a custom metrics solution
written in Node.js; Amazon S3 for storing different assets; and a custom storage solution
called Divan (simple CouchDB like).</p>

<h2>Why Not Something Else?</h2>

<p><blockquote><p>We chose Node.js for our application servers, because it enables us to build efficient<br/>distributed systems while sharing significant amounts of code between client and server.<br/>Things get really interesting when you couple Node.js with Redis for data structure<br/>sharing and message passing, as the two technologies play very well together.</p></p><p><p>We chose CouchDB as our main back-end because it is the most schema-less data-store that<br/>supports secondary indexing. Once you get fluent with its map-reduce views, you can<br/>compute an index out of practically anything. For comparison, even MongoDB requires<br/>that you design your documents as to enable certain indexing patterns. Put otherwise,<br/>we'd say CouchDB is a data-store that enables truly lean engineering - we have never had<br/>to re-bake or migrate our data since day one, while we're constantly experimenting with<br/>new ways to index, aggregate and query it.</p></p><p><p>We chose HTML5 as our front-end technology, because it's cross-platform and because we<br/>believe it's ... almost ready. Things are still really problematic on Android, but iOS<br/>boasts a gorgeous web presentation platform, and Windows 8 is also joining the game with<br/>a very good web engine. Obviously we're constantly running into issues and limitations,<br/>mostly related to the unfortunate fact that in spite of some recent developments,<br/>a web app is still mostly single threaded. However, we're getting there, and we're proud<br/>to say we're running a pretty graphically complex hybrid app with near-native GUI performance<br/>on the iPhone 4S and above.</p></blockquote></p>

<h2>Want More Info?</h2>

<p>If you'd like to hear more from <em>Useful at Night</em> please comment below. I will ask them
to follow this thread and reply to your questions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Email Logging for Django on RedHat OpenShift with Amazon SES]]></title>
    <link href="http://atodorov.org/blog/2013/02/28/email-logging-django-redhat-openshift-amazon-ses/"/>
    <updated>2013-02-28T23:19:00+02:00</updated>
    <id>http://atodorov.org/blog/2013/02/28/email-logging-django-redhat-openshift-amazon-ses</id>
    <content type="html"><![CDATA[<p>Sending email in the cloud can be tricky. IPs of cloud providers are blacklisted
because of frequent abuse. For that reason I use
<a href="http://aws.amazon.com/ses/">Amazon SES</a> as my email backend. Here is how to
configure <a href="https://www.djangoproject.com/">Django</a> to send emails to site admins
when something goes wrong.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>settings.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Valid</span> <span class="n">addresses</span> <span class="n">only</span><span class="o">.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">ADMINS</span> <span class="o">=</span> <span class="p">(</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">(</span><span class="s">&#39;Alexander Todorov&#39;</span><span class="p">,</span> <span class="s">&#39;atodorov@example.com&#39;</span><span class="p">),</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">LOGGING</span> <span class="o">=</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="s">&#39;version&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'><span class="s">&#39;disable_existing_loggers&#39;</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
</span><span class='line'><span class="s">&#39;handlers&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;mail_admins&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;level&#39;</span><span class="p">:</span> <span class="s">&#39;ERROR&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;class&#39;</span><span class="p">:</span> <span class="s">&#39;django.utils.log.AdminEmailHandler&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="s">&#39;loggers&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;django.request&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;handlers&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;mail_admins&#39;</span><span class="p">],</span>
</span><span class='line'>        <span class="s">&#39;level&#39;</span><span class="p">:</span> <span class="s">&#39;ERROR&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;propagate&#39;</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Used</span> <span class="k">as</span> <span class="n">the</span> <span class="n">From</span><span class="p">:</span> <span class="n">address</span> <span class="n">when</span> <span class="n">reporting</span> <span class="n">errors</span> <span class="n">to</span> <span class="n">admins</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Needs</span> <span class="n">to</span> <span class="n">be</span> <span class="n">verified</span> <span class="ow">in</span> <span class="n">Amazon</span> <span class="n">SES</span> <span class="k">as</span> <span class="n">a</span> <span class="n">valid</span> <span class="n">sender</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">SERVER_EMAIL</span> <span class="o">=</span> <span class="s">&#39;django@example.com&#39;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Amazon</span> <span class="n">Simple</span> <span class="n">Email</span> <span class="n">Service</span> <span class="n">settings</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">AWS_SES_ACCESS_KEY_ID</span> <span class="o">=</span> <span class="s">&#39;xxxxxxxxxxxx&#39;</span>
</span><span class='line'><span class="n">AWS_SES_SECRET_ACCESS_KEY</span> <span class="o">=</span> <span class="s">&#39;xxxxxxxx&#39;</span>
</span><span class='line'><span class="n">EMAIL_BACKEND</span> <span class="o">=</span> <span class="s">&#39;django_ses.SESBackend&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>You also need the <a href="https://github.com/hmarr/django-ses">django-ses</a>
dependency.</p>

<p>See <a href="http://docs.djangoproject.com/en/dev/topics/logging">http://docs.djangoproject.com/en/dev/topics/logging</a> for
more details on how to customize your logging configuration.</p>

<p>I am using this configuration successfully at RedHat's OpenShift PaaS environment.
Other users have
<a href="https://openshift.redhat.com/community/forums/express/missing-email-on-500-ise-w-django">reported</a>
it works for them too. Should work with any other PaaS provider.</p>
]]></content>
  </entry>
  
</feed>
