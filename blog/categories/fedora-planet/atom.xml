<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: fedora.planet | atodorov.org - you can logoff, but you can never leave]]></title>
  <link href="http://atodorov.org/blog/categories/fedora-planet/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2015-11-11T22:51:01+02:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building Docker Images with Anaconda]]></title>
    <link href="http://atodorov.org/blog/2015/10/28/building-docker-images-with-anaconda/"/>
    <updated>2015-10-28T16:10:00+02:00</updated>
    <id>http://atodorov.org/blog/2015/10/28/building-docker-images-with-anaconda</id>
    <content type="html"><![CDATA[<p>Anaconda, the Fedora and Red Hat Enterprise Linux installer, has gained some
features to facilitate building Docker images. These are only available
in kickstart. To build a Docker image for HTTPD, using packages provided in the
distro use the following ks.cfg file:</p>

<pre><code>install
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp

rootpw  --lock
firewall --disabled
timezone Europe/Sofia

clearpart --all --initlabel
part / --fstype=ext4 --size=1 --grow

bootloader --disabled

%packages --nocore --instLangs=en_US --excludedocs
httpd
-kernel
yum-langpacks # workaround for rhbz#1271766
%end
</code></pre>

<p>The above kickstart file will:</p>

<ul>
<li>install HTTPD and its dependencies</li>
<li>disable kernel installation by excluding it from the package list</li>
<li>disable installation of the boot loader using <code>--disabled</code>. The resulting image
will not be bootable</li>
<li>disable firewall</li>
<li>locks the root account so it can't login from the console</li>
<li>prevent installing @core using <code>--nocore</code></li>
<li>limit the installation of localization files using <code>--instLangs</code></li>
<li>limit the installation of documentation using <code>--excludedocs</code></li>
</ul>


<p><strong>Note:</strong> the previous <code>--nobase</code> option is deprected and doesn't have any effect.</p>

<p>After the VM installation is complete grab the contents of the root directory:</p>

<pre><code># virt-tar-out -a /var/lib/libvirt/images/disk.qcow2 / myimage.tar
</code></pre>

<p>Import the tarball into Docker and inspect the result:</p>

<pre><code># docker import myimage.tar local_images:ver1.0
8a2324e6d0e940a998b990262335894a17d261450c33f57dc153d3d1987e4fc1

# docker images
REPOSITORY                                             TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
local_images                                           ver1.0              8a2324e6d0e9        13 seconds ago      320.6 MB
registry.access.redhat.com/rhel                        latest              82ad5fa11820        6 weeks ago         158.3 MB
registry.access.redhat.com/rhscl_beta/httpd-24-rhel7   latest              55a8a150cf2d        9 weeks ago         201.1 MB
</code></pre>

<p>Run commands into a new container:</p>

<pre><code># docker run --name=bash_myimage -it 8a2324e6d0e9 /bin/bash
bash-4.2# cat /etc/redhat-release 
Red Hat Enterprise Linux Server release 7.2 Beta (Maipo)
bash-4.2# rpm -q httpd
httpd-2.4.6-40.el7.x86_64
bash-4.2# exit

# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
64f7ca6d5844        8a2324e6d0e9        "/bin/bash"         24 seconds ago      Exited (0) 19 seconds ago                       bash_myimage
</code></pre>

<p>As you can see the resulting image is bigger than stock images provided by Red Hat.
At this moment I don't know if this is the minimum package set which satisfies
dependencies or anaconda adds a bit more on its own. The full package list is
given below. There are some packages like  device-mapper, dracut, e2fsprogs,
iptables, kexec-tools, SELinux related, systemd and tzdata which look out
of place. My guess is some of them are pulled in from the various kickstart
commands and not really necessary. I will follow up with devel and see if
the content can be stripped down even more.</p>

<p>For more information check out these docs:</p>

<ul>
<li><a href="https://access.redhat.com/articles/881893">Get Started with Docker Formatted Container Images on Red Hat Systems</a></li>
<li><a href="https://access.redhat.com/documentation/en/red-hat-enterprise-linux-atomic-host/version-7/red-hat-enterprise-linux-atomic-host-7-getting-started-with-containers/chapter-7-get-started-with-docker-formatted-container-images">Chapter 7. Get Started with Docker Formatted Container Images</a></li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>full package list </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>acl-2.2.51-12.el7.x86_64
</span><span class='line'>apr-1.4.8-3.el7.x86_64
</span><span class='line'>apr-util-1.5.2-6.el7.x86_64
</span><span class='line'>audit-libs-2.4.1-5.el7.x86_64
</span><span class='line'>basesystem-10.0-7.el7.noarch
</span><span class='line'>bash-4.2.46-19.el7.x86_64
</span><span class='line'>bind-libs-lite-9.9.4-29.el7.x86_64
</span><span class='line'>bind-license-9.9.4-29.el7.noarch
</span><span class='line'>binutils-2.23.52.0.1-54.el7.x86_64
</span><span class='line'>bzip2-libs-1.0.6-13.el7.x86_64
</span><span class='line'>ca-certificates-2015.2.4-71.el7.noarch
</span><span class='line'>chkconfig-1.3.61-5.el7.x86_64
</span><span class='line'>chrony-2.1.1-1.el7.x86_64
</span><span class='line'>coreutils-8.22-15.el7.x86_64
</span><span class='line'>cpio-2.11-24.el7.x86_64
</span><span class='line'>cracklib-2.9.0-11.el7.x86_64
</span><span class='line'>cracklib-dicts-2.9.0-11.el7.x86_64
</span><span class='line'>cryptsetup-libs-1.6.7-1.el7.x86_64
</span><span class='line'>curl-7.29.0-25.el7.x86_64
</span><span class='line'>cyrus-sasl-lib-2.1.26-19.2.el7.x86_64
</span><span class='line'>dbus-1.6.12-13.el7.x86_64
</span><span class='line'>dbus-glib-0.100-7.el7.x86_64
</span><span class='line'>dbus-libs-1.6.12-13.el7.x86_64
</span><span class='line'>dbus-python-1.1.1-9.el7.x86_64
</span><span class='line'>device-mapper-1.02.107-5.el7.x86_64
</span><span class='line'>device-mapper-libs-1.02.107-5.el7.x86_64
</span><span class='line'>dhclient-4.2.5-42.el7.x86_64
</span><span class='line'>dhcp-common-4.2.5-42.el7.x86_64
</span><span class='line'>dhcp-libs-4.2.5-42.el7.x86_64
</span><span class='line'>diffutils-3.3-4.el7.x86_64
</span><span class='line'>dracut-033-358.el7.x86_64
</span><span class='line'>dracut-network-033-358.el7.x86_64
</span><span class='line'>e2fsprogs-1.42.9-7.el7.x86_64
</span><span class='line'>e2fsprogs-libs-1.42.9-7.el7.x86_64
</span><span class='line'>ebtables-2.0.10-13.el7.x86_64
</span><span class='line'>elfutils-libelf-0.163-3.el7.x86_64
</span><span class='line'>elfutils-libs-0.163-3.el7.x86_64
</span><span class='line'>ethtool-3.15-2.el7.x86_64
</span><span class='line'>expat-2.1.0-8.el7.x86_64
</span><span class='line'>file-libs-5.11-31.el7.x86_64
</span><span class='line'>filesystem-3.2-20.el7.x86_64
</span><span class='line'>findutils-4.5.11-5.el7.x86_64
</span><span class='line'>firewalld-0.3.9-14.el7.noarch
</span><span class='line'>gawk-4.0.2-4.el7.x86_64
</span><span class='line'>gdbm-1.10-8.el7.x86_64
</span><span class='line'>glib2-2.42.2-5.el7.x86_64
</span><span class='line'>glibc-2.17-105.el7.x86_64
</span><span class='line'>glibc-common-2.17-105.el7.x86_64
</span><span class='line'>gmp-6.0.0-11.el7.x86_64
</span><span class='line'>gnupg2-2.0.22-3.el7.x86_64
</span><span class='line'>gobject-introspection-1.42.0-1.el7.x86_64
</span><span class='line'>gpgme-1.3.2-5.el7.x86_64
</span><span class='line'>grep-2.20-2.el7.x86_64
</span><span class='line'>gzip-1.5-8.el7.x86_64
</span><span class='line'>hardlink-1.0-19.el7.x86_64
</span><span class='line'>hostname-3.13-3.el7.x86_64
</span><span class='line'>httpd-2.4.6-40.el7.x86_64
</span><span class='line'>httpd-tools-2.4.6-40.el7.x86_64
</span><span class='line'>info-5.1-4.el7.x86_64
</span><span class='line'>initscripts-9.49.30-1.el7.x86_64
</span><span class='line'>iproute-3.10.0-54.el7.x86_64
</span><span class='line'>iptables-1.4.21-16.el7.x86_64
</span><span class='line'>iputils-20121221-7.el7.x86_64
</span><span class='line'>kexec-tools-2.0.7-37.el7.x86_64
</span><span class='line'>keyutils-libs-1.5.8-3.el7.x86_64
</span><span class='line'>kmod-20-5.el7.x86_64
</span><span class='line'>kmod-libs-20-5.el7.x86_64
</span><span class='line'>kpartx-0.4.9-85.el7.x86_64
</span><span class='line'>krb5-libs-1.13.2-10.el7.x86_64
</span><span class='line'>langtable-0.0.31-3.el7.noarch
</span><span class='line'>langtable-data-0.0.31-3.el7.noarch
</span><span class='line'>langtable-python-0.0.31-3.el7.noarch
</span><span class='line'>libacl-2.2.51-12.el7.x86_64
</span><span class='line'>libassuan-2.1.0-3.el7.x86_64
</span><span class='line'>libattr-2.4.46-12.el7.x86_64
</span><span class='line'>libblkid-2.23.2-26.el7.x86_64
</span><span class='line'>libcap-2.22-8.el7.x86_64
</span><span class='line'>libcap-ng-0.7.5-4.el7.x86_64
</span><span class='line'>libcom_err-1.42.9-7.el7.x86_64
</span><span class='line'>libcurl-7.29.0-25.el7.x86_64
</span><span class='line'>libdb-5.3.21-19.el7.x86_64
</span><span class='line'>libdb-utils-5.3.21-19.el7.x86_64
</span><span class='line'>libedit-3.0-12.20121213cvs.el7.x86_64
</span><span class='line'>libffi-3.0.13-16.el7.x86_64
</span><span class='line'>libgcc-4.8.5-4.el7.x86_64
</span><span class='line'>libgcrypt-1.5.3-12.el7_1.1.x86_64
</span><span class='line'>libgpg-error-1.12-3.el7.x86_64
</span><span class='line'>libidn-1.28-4.el7.x86_64
</span><span class='line'>libmnl-1.0.3-7.el7.x86_64
</span><span class='line'>libmount-2.23.2-26.el7.x86_64
</span><span class='line'>libnetfilter_conntrack-1.0.4-2.el7.x86_64
</span><span class='line'>libnfnetlink-1.0.1-4.el7.x86_64
</span><span class='line'>libpwquality-1.2.3-4.el7.x86_64
</span><span class='line'>libselinux-2.2.2-6.el7.x86_64
</span><span class='line'>libselinux-python-2.2.2-6.el7.x86_64
</span><span class='line'>libsemanage-2.1.10-18.el7.x86_64
</span><span class='line'>libsepol-2.1.9-3.el7.x86_64
</span><span class='line'>libss-1.42.9-7.el7.x86_64
</span><span class='line'>libssh2-1.4.3-10.el7.x86_64
</span><span class='line'>libstdc++-4.8.5-4.el7.x86_64
</span><span class='line'>libtasn1-3.8-2.el7.x86_64
</span><span class='line'>libuser-0.60-7.el7_1.x86_64
</span><span class='line'>libutempter-1.1.6-4.el7.x86_64
</span><span class='line'>libuuid-2.23.2-26.el7.x86_64
</span><span class='line'>libverto-0.2.5-4.el7.x86_64
</span><span class='line'>libxml2-2.9.1-5.el7_1.2.x86_64
</span><span class='line'>lua-5.1.4-14.el7.x86_64
</span><span class='line'>lzo-2.06-8.el7.x86_64
</span><span class='line'>mailcap-2.1.41-2.el7.noarch
</span><span class='line'>ncurses-5.9-13.20130511.el7.x86_64
</span><span class='line'>ncurses-base-5.9-13.20130511.el7.noarch
</span><span class='line'>ncurses-libs-5.9-13.20130511.el7.x86_64
</span><span class='line'>nspr-4.10.8-1.el7_1.x86_64
</span><span class='line'>nss-3.19.1-17.el7.x86_64
</span><span class='line'>nss-softokn-3.16.2.3-13.el7_1.x86_64
</span><span class='line'>nss-softokn-freebl-3.16.2.3-13.el7_1.x86_64
</span><span class='line'>nss-sysinit-3.19.1-17.el7.x86_64
</span><span class='line'>nss-tools-3.19.1-17.el7.x86_64
</span><span class='line'>nss-util-3.19.1-3.el7_1.x86_64
</span><span class='line'>openldap-2.4.40-8.el7.x86_64
</span><span class='line'>openssl-libs-1.0.1e-42.el7_1.9.x86_64
</span><span class='line'>p11-kit-0.20.7-3.el7.x86_64
</span><span class='line'>p11-kit-trust-0.20.7-3.el7.x86_64
</span><span class='line'>pam-1.1.8-12.el7_1.1.x86_64
</span><span class='line'>pcre-8.32-15.el7.x86_64
</span><span class='line'>pinentry-0.8.1-14.el7.x86_64
</span><span class='line'>pkgconfig-0.27.1-4.el7.x86_64
</span><span class='line'>popt-1.13-16.el7.x86_64
</span><span class='line'>procps-ng-3.3.10-3.el7.x86_64
</span><span class='line'>pth-2.0.7-23.el7.x86_64
</span><span class='line'>pygobject3-base-3.14.0-3.el7.x86_64
</span><span class='line'>pygpgme-0.3-9.el7.x86_64
</span><span class='line'>pyliblzma-0.5.3-11.el7.x86_64
</span><span class='line'>python-2.7.5-34.el7.x86_64
</span><span class='line'>python-decorator-3.4.0-3.el7.noarch
</span><span class='line'>python-iniparse-0.4-9.el7.noarch
</span><span class='line'>python-libs-2.7.5-34.el7.x86_64
</span><span class='line'>python-pycurl-7.19.0-17.el7.x86_64
</span><span class='line'>python-slip-0.4.0-2.el7.noarch
</span><span class='line'>python-slip-dbus-0.4.0-2.el7.noarch
</span><span class='line'>python-urlgrabber-3.10-7.el7.noarch
</span><span class='line'>pyxattr-0.5.1-5.el7.x86_64
</span><span class='line'>qrencode-libs-3.4.1-3.el7.x86_64
</span><span class='line'>readline-6.2-9.el7.x86_64
</span><span class='line'>redhat-logos-70.0.3-4.el7.noarch
</span><span class='line'>redhat-release-server-7.2-7.el7.x86_64
</span><span class='line'>rpm-4.11.3-17.el7.x86_64
</span><span class='line'>rpm-build-libs-4.11.3-17.el7.x86_64
</span><span class='line'>rpm-libs-4.11.3-17.el7.x86_64
</span><span class='line'>rpm-python-4.11.3-17.el7.x86_64
</span><span class='line'>sed-4.2.2-5.el7.x86_64
</span><span class='line'>setup-2.8.71-6.el7.noarch
</span><span class='line'>shadow-utils-4.1.5.1-18.el7.x86_64
</span><span class='line'>shared-mime-info-1.1-9.el7.x86_64
</span><span class='line'>snappy-1.1.0-3.el7.x86_64
</span><span class='line'>sqlite-3.7.17-8.el7.x86_64
</span><span class='line'>systemd-219-19.el7.x86_64
</span><span class='line'>systemd-libs-219-19.el7.x86_64
</span><span class='line'>sysvinit-tools-2.88-14.dsf.el7.x86_64
</span><span class='line'>tzdata-2015g-1.el7.noarch
</span><span class='line'>ustr-1.0.4-16.el7.x86_64
</span><span class='line'>util-linux-2.23.2-26.el7.x86_64
</span><span class='line'>xz-5.1.2-12alpha.el7.x86_64
</span><span class='line'>xz-libs-5.1.2-12alpha.el7.x86_64
</span><span class='line'>yum-3.4.3-132.el7.noarch
</span><span class='line'>yum-langpacks-0.4.2-4.el7.noarch
</span><span class='line'>yum-metadata-parser-1.1.4-10.el7.x86_64
</span><span class='line'>zlib-1.2.7-15.el7.x86_64</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Anaconda &amp; coverage.py - Pt.3 - coverage-diff]]></title>
    <link href="http://atodorov.org/blog/2015/10/27/anaconda-coverage.py-coverage-diff/"/>
    <updated>2015-10-27T11:12:00+02:00</updated>
    <id>http://atodorov.org/blog/2015/10/27/anaconda-coverage.py-coverage-diff</id>
    <content type="html"><![CDATA[<p>In my <a href="/blog/2015/10/15/anaconda-coverage.py-details/">previous post</a>
I've talked about testing anaconda and friends and raised some questions.
Today I'm going to give an example of how to answer one of them:
"How different is the code execution path between different tests?"</p>

<h2>coverate-tools</h2>

<p>I'm going to use <a href="https://github.com/atodorov/coverage-tools">coverage-tools</a>
in my explanations below so a little introduction is required. All the tools
are executable Python scripts which build on top of existing coverage.py API.
The difference is mainly in flexibility of parameters and output formatting.
I've tried to keep as close as possible to the existing behavior of coverage.py.</p>

<p><em>coverage-annotate</em> - when given a .coverage data file prints the source code
annotated with line numbers and execution markers.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">!!!</span> <span class="n">missing</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib64</span><span class="o">/</span><span class="n">python2</span><span class="o">.</span><span class="mi">7</span><span class="o">/</span><span class="n">site</span><span class="o">-</span><span class="n">packages</span><span class="o">/</span><span class="n">pyanaconda</span><span class="o">/</span><span class="n">anaconda_argparse</span><span class="o">.</span><span class="n">py</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">blockquote</span><span class="o">&gt;&lt;</span><span class="n">blockquote</span><span class="o">&gt;&lt;</span><span class="n">blockquote</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">covered</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib64</span><span class="o">/</span><span class="n">python2</span><span class="o">.</span><span class="mi">7</span><span class="o">/</span><span class="n">site</span><span class="o">-</span><span class="n">packages</span><span class="o">/</span><span class="n">pyanaconda</span><span class="o">/</span><span class="n">anaconda_argparse</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="o">...</span> <span class="n">skip</span> <span class="o">...&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="mi">37</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="kn">import</span> <span class="nn">logging</span>
</span><span class='line'><span class="mi">38</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">log</span> <span class="o">=</span> <span class="n">logging</span><span class="o">.</span><span class="n">getLogger</span><span class="p">(</span><span class="s">&quot;anaconda&quot;</span><span class="p">)</span>
</span><span class='line'><span class="mi">39</span>
</span><span class='line'><span class="mi">40</span>   <span class="c"># Help text formatting constants</span>
</span><span class='line'><span class="mi">41</span>
</span><span class='line'><span class="mi">42</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">LEFT_PADDING</span> <span class="o">=</span> <span class="mi">8</span>  <span class="c"># the help text will start after 8 spaces</span>
</span><span class='line'><span class="mi">43</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">RIGHT_PADDING</span> <span class="o">=</span> <span class="mi">8</span>  <span class="c"># there will be 8 spaces left on the right</span>
</span><span class='line'><span class="mi">44</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">DEFAULT_HELP_WIDTH</span> <span class="o">=</span> <span class="mi">80</span>
</span><span class='line'><span class="mi">45</span>
</span><span class='line'><span class="mi">46</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="k">def</span> <span class="nf">get_help_width</span><span class="p">():</span>
</span><span class='line'><span class="mi">47</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>     <span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">48 &amp;gt;     Try to detect the terminal window width size and use it to</span>
</span><span class='line'><span class="s">49 &amp;gt;     compute optimal help text width. If it can&#39;t be detected</span>
</span><span class='line'><span class="s">50 &amp;gt;     a default values is returned.</span>
</span><span class='line'><span class="s">51   </span>
</span><span class='line'><span class="s">52 &amp;gt;     :returns: optimal help text width in number of characters</span>
</span><span class='line'><span class="s">53 &amp;gt;     :rtype: int</span>
</span><span class='line'><span class="s">54 &amp;gt;     &quot;&quot;&quot;</span>
</span><span class='line'><span class="mi">55</span>       <span class="c"># don&#39;t do terminal size detection on s390, it is not supported</span>
</span><span class='line'><span class="mi">56</span>       <span class="c"># by its arcane TTY system and only results in cryptic error messages</span>
</span><span class='line'><span class="mi">57</span>       <span class="c"># ending on the standard output</span>
</span><span class='line'><span class="mi">58</span>       <span class="c"># (we do the s390 detection here directly to avoid</span>
</span><span class='line'><span class="mi">59</span>       <span class="c">#  the delay caused by importing the Blivet module</span>
</span><span class='line'><span class="mi">60</span>       <span class="c">#  just for this single call)</span>
</span><span class='line'><span class="mi">61</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>     <span class="n">is_s390</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">uname</span><span class="p">()[</span><span class="mi">4</span><span class="p">]</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#39;s390&#39;</span><span class="p">)</span>
</span><span class='line'><span class="mi">62</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>     <span class="k">if</span> <span class="n">is_s390</span><span class="p">:</span>
</span><span class='line'><span class="mi">63</span> <span class="err">!</span>         <span class="k">return</span> <span class="n">DEFAULT_HELP_WIDTH</span>
</span><span class='line'><span class="mi">64</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;...</span> <span class="n">skip</span> <span class="o">...</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote></blockquote></blockquote>

<p>In the example above all lines starting with <strong>></strong> were executed by the interpreter.
All top-level import statements were executed as you would expect. Then the method
<em>get_help_width()</em> was executed (called from somewhere). Because this was on x86_64
machine line 63 was not executed. It is marked with <strong>!</strong>. The comments and empty
lines are of no interest.</p>

<p><em>coverage-diff</em> - produces git like diff reports on the text output of annotate.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">--- a/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/source.py</span>
</span><span class='line'><span class="gi">+++ b/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/source.py</span>
</span><span class='line'><span class="gu">@@ -634,7 +634,7 @@&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;634           # Wait to make sure the other threads are done before sending ready, otherwise
</span><span class='line'>635           # the spoke may not get be sensitive by _handleCompleteness in the hub.
</span><span class='line'>636 &amp;gt;         while not self.ready:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;ul&gt;
</span><span class='line'>&lt;li&gt;637 !             time.sleep(1)&lt;/li&gt;
</span><span class='line'>&lt;li&gt;637 &gt;             time.sleep(1)
</span><span class='line'>638 &gt;         hubQ.send_ready(self.&lt;strong&gt;class&lt;/strong&gt;.&lt;strong&gt;name&lt;/strong&gt;, False)
</span><span class='line'>639 &lt;br/&gt;
</span><span class='line'>640 &gt;     def refresh(self):\
</span></code></pre></td></tr></table></div></figure></notextile></div></li>
</ul>


<p>In this example line 637 was not executed in the first test run, while it was executed
in the second test run. Reading the comments above it is clear the difference between
the two test runs is just timing and synchronization.</p>

<h2>Kickstart vs. Kickstart</h2>

<p>How different is the code execution path between different tests? Looking at
<a href="https://fedoraproject.org/wiki/Test_Results:Fedora_23_Final_RC3_Installation">Fedora 23 test results</a>
we see several tests which differ only slightly in their setup - installation
via HTTP, FTP or NFS; installation to SATA, SCSI, SAS drives; installation using
RAID for the root file system; These are good candidates for further analysis.</p>

<p>Note: my results below are not from Fedora 23 but the conclusions still apply!
The tests were executed on bare metal and virtual machines, trying to use the
same hardware or same systems configurations where possible!</p>

<p>Example: HTTP vs. FTP
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">--- a/usr/lib64/python2.7/site-packages/pyanaconda/packaging/&lt;strong&gt;init&lt;/strong&gt;.py</span>
</span><span class='line'><span class="gi">+++ b/usr/lib64/python2.7/site-packages/pyanaconda/packaging/&lt;strong&gt;init&lt;/strong&gt;.py</span>
</span><span class='line'><span class="gu">@@ -891,7 +891,7 @@&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;891
</span><span class='line'>892               # Run any listeners for the new state
</span><span class='line'>893 &amp;gt;             for func in self._event_listeners[event_id]:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;ul&gt;
</span><span class='line'>&lt;li&gt;894 !                 func()&lt;/li&gt;
</span><span class='line'>&lt;li&gt;894 &gt;                 func()
</span><span class='line'>895 &lt;br/&gt;
</span><span class='line'>896 &gt;     def _runThread(self, storage, ksdata, payload, fallback, checkmount):
</span><span class='line'>897           # This is the thread entry
</span><span class='line'><span class="gd">--- a/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/lib/resize.py</span>
</span><span class='line'><span class="gi">+++ b/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/lib/resize.py</span>
</span><span class='line'><span class="gu">@@ -102,10 +102,10 @@</span>
</span><span class='line'>102           # Otherwise, fall back on increasingly vague information.
</span><span class='line'>103 &gt;         if not part.isleaf:
</span><span class='line'>104 &gt;             return self.storage.devicetree.getChildren(part)[0].name&lt;/li&gt;
</span><span class='line'>&lt;li&gt;105 &gt;         if getattr(part.format, &quot;label&quot;, None):&lt;/li&gt;
</span><span class='line'>&lt;li&gt;105 !         if getattr(part.format, &quot;label&quot;, None):
</span><span class='line'>106 !             return part.format.label&lt;/li&gt;
</span><span class='line'>&lt;li&gt;107 &gt;         elif getattr(part.format, &quot;name&quot;, None):&lt;/li&gt;
</span><span class='line'>&lt;li&gt;108 &gt;             return part.format.name&lt;/li&gt;
</span><span class='line'>&lt;li&gt;107 !         elif getattr(part.format, &quot;name&quot;, None):&lt;/li&gt;
</span><span class='line'>&lt;li&gt;108 !             return part.format.name
</span><span class='line'>109 !         else:
</span><span class='line'>110 !             return &quot;&quot;
</span><span class='line'>111 &lt;br/&gt;
</span><span class='line'><span class="gu">@@ -315,10 +315,10 @@</span>
</span><span class='line'>315 &gt;     def on_key_pressed(self, window, event, *args):
</span><span class='line'>316           # Handle any keyboard events.  Right now this is just delete for
</span><span class='line'>317           # removing a partition, but it could include more later.&lt;/li&gt;
</span><span class='line'>&lt;li&gt;318 &gt;         if not event or event and event.type != Gdk.EventType.KEY_RELEASE:&lt;/li&gt;
</span><span class='line'>&lt;li&gt;318 !         if not event or event and event.type != Gdk.EventType.KEY_RELEASE:
</span><span class='line'>319 !             return
</span><span class='line'>320&lt;/li&gt;
</span><span class='line'>&lt;li&gt;321 &gt;         if event.keyval == Gdk.KEY_Delete and self._deleteButton.get_sensitive():&lt;/li&gt;
</span><span class='line'>&lt;li&gt;321 !         if event.keyval == Gdk.KEY_Delete and self.&lt;em&gt;deleteButton.get_sensitive():
</span><span class='line'>322 !             self.&lt;/em&gt;deleteButton.emit(&quot;clicked&quot;)
</span><span class='line'>323 &lt;br/&gt;
</span><span class='line'>324 &gt;     def &lt;em&gt;sumReclaimableSpace(self, model, path, itr, *args):
</span><span class='line'><span class="gd">--- a/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/source.py</span>
</span><span class='line'><span class="gi">+++ b/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/source.py</span>
</span><span class='line'><span class="gu">@@ -634,7 +634,7 @@</span>
</span><span class='line'>634           # Wait to make sure the other threads are done before sending ready, otherwise
</span><span class='line'>635           # the spoke may not get be sensitive by &lt;/em&gt;handleCompleteness in the hub.
</span><span class='line'>636 &gt;         while not self.ready:&lt;/li&gt;
</span><span class='line'>&lt;li&gt;637 !             time.sleep(1)&lt;/li&gt;
</span><span class='line'>&lt;li&gt;637 &gt;             time.sleep(1)
</span><span class='line'>638 &gt;         hubQ.send_ready(self.&lt;strong&gt;class&lt;/strong&gt;.&lt;strong&gt;name&lt;/strong&gt;, False)
</span><span class='line'>639 &lt;br/&gt;
</span><span class='line'>640 &gt;     def refresh(self):
</span></code></pre></td></tr></table></div></figure></notextile></div></li>
</ul>


<p>The difference in <code>source.py</code> is from timing/synchronization and can safely be ignored.
I'm not exactly sure about <code>__init__.py</code> but doesn't look much of a big deal.
We're left with <code>resize.py</code>. The differences in <em>on_key_pressed()</em> are because
I've probably used the keyboard instead the mouse (these are indeed manual installs).
The other difference is in how the partition labels are displayed. One of the installs
was probably using fresh disks while the other not.</p>

<p>Example: SATA vs. SCSI - no difference</p>

<p>Example: SATA vs. SAS (mpt2sas driver)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">--- a/usr/lib64/python2.7/site-packages/pyanaconda/bootloader.py</span>
</span><span class='line'><span class="gi">+++ b/usr/lib64/python2.7/site-packages/pyanaconda/bootloader.py</span>
</span><span class='line'><span class="gu">@@ -109,10 +109,10 @@&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;109 &amp;gt;     try:
</span><span class='line'>110 &amp;gt;         opts.parity = arg[idx+0]
</span><span class='line'>111 &amp;gt;         opts.word   = arg[idx+1]
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;ul&gt;
</span><span class='line'>&lt;li&gt;112 !         opts.flow   = arg[idx+2]&lt;/li&gt;
</span><span class='line'>&lt;li&gt;113 !     except IndexError:&lt;/li&gt;
</span><span class='line'>&lt;li&gt;114 &gt;         pass&lt;/li&gt;
</span><span class='line'>&lt;li&gt;115 &gt;     return opts&lt;/li&gt;
</span><span class='line'>&lt;li&gt;112 &gt;         opts.flow   = arg[idx+2]&lt;/li&gt;
</span><span class='line'>&lt;li&gt;113 &gt;     except IndexError:&lt;/li&gt;
</span><span class='line'>&lt;li&gt;114 !         pass&lt;/li&gt;
</span><span class='line'>&lt;li&gt;115 !     return opts
</span><span class='line'>116 &lt;br/&gt;
</span><span class='line'>117 ! def _is_on_iscsi(device):
</span><span class='line'>118 !     &quot;&quot;&quot;Tells whether a given device is on an iSCSI disk or not.&quot;&quot;&quot;
</span><span class='line'><span class="gu">@@ -1075,13 +1075,13 @@</span>
</span><span class='line'>1075 &gt;             command = [&quot;serial&quot;]
</span><span class='line'>1076 &gt;             s = parse_serial_opt(self.console_options)
</span><span class='line'>1077 &gt;             if unit and unit != &#39;0&#39;:&lt;/li&gt;
</span><span class='line'>&lt;li&gt;1078 !                 command.append(&quot;--unit=%s&quot; % unit)&lt;/li&gt;
</span><span class='line'>&lt;li&gt;1078 &gt;                 command.append(&quot;--unit=%s&quot; % unit)
</span><span class='line'>1079 &gt;             if s.speed and s.speed != &#39;9600&#39;:
</span><span class='line'>1080 &gt;                 command.append(&quot;--speed=%s&quot; % s.speed)
</span><span class='line'>1081 &gt;             if s.parity:&lt;/li&gt;
</span><span class='line'>&lt;li&gt;1082 !                 if s.parity == &#39;o&#39;:&lt;/li&gt;
</span><span class='line'>&lt;li&gt;1082 &gt;                 if s.parity == &#39;o&#39;:
</span><span class='line'>1083 !                     command.append(&quot;--parity=odd&quot;)&lt;/li&gt;
</span><span class='line'>&lt;li&gt;1084 !                 elif s.parity == &#39;e&#39;:&lt;/li&gt;
</span><span class='line'>&lt;li&gt;1084 &gt;                 elif s.parity == &#39;e&#39;:
</span><span class='line'>1085 !                     command.append(&quot;--parity=even&quot;)
</span><span class='line'>1086 &gt;             if s.word and s.word != &#39;8&#39;:
</span><span class='line'>1087 !                 command.append(&quot;--word=%s&quot; % s.word)
</span></code></pre></td></tr></table></div></figure></notextile></div></li>
</ul>


<p>As you can see the difference is minimal, mostly related to the underlying
hardware. As far as I can tell this has to do with how the bootloader is
installed on disk but I'm no expert on this particular piece of code.
I've seen the same difference in other comparisons so it probably has to do
more with hardware than with what kind of disk/driver is used.</p>

<p>Example: RAID 0 vs. RAID 1 - manual install</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">--- a/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/datetime_spoke.py</span>
</span><span class='line'><span class="gi">+++ b/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/datetime_spoke.py</span>
</span><span class='line'><span class="gu">@@ -490,9 +490,9 @@&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;490
</span><span class='line'>491 &amp;gt;         time_init_thread = threadMgr.get(constants.THREAD_TIME_INIT)
</span><span class='line'>492 &amp;gt;         if time_init_thread is not None:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;ul&gt;
</span><span class='line'>&lt;li&gt;493 &gt;             hubQ.send_message(self.&lt;strong&gt;class&lt;/strong&gt;.&lt;strong&gt;name&lt;/strong&gt;,&lt;/li&gt;
</span><span class='line'>&lt;li&gt;494 &gt;                              _(&quot;Restoring hardware time...&quot;))&lt;/li&gt;
</span><span class='line'>&lt;li&gt;495 &gt;             threadMgr.wait(constants.THREAD_TIME_INIT)&lt;/li&gt;
</span><span class='line'>&lt;li&gt;493 !             hubQ.send_message(self.&lt;strong&gt;class&lt;/strong&gt;.&lt;strong&gt;name&lt;/strong&gt;,&lt;/li&gt;
</span><span class='line'>&lt;li&gt;494 !                              _(&quot;Restoring hardware time...&quot;))&lt;/li&gt;
</span><span class='line'>&lt;li&gt;495 !             threadMgr.wait(constants.THREAD_TIME_INIT)
</span><span class='line'>496 &lt;br/&gt;
</span><span class='line'>497 &gt;         hubQ.send_ready(self.&lt;strong&gt;class&lt;/strong&gt;.&lt;strong&gt;name&lt;/strong&gt;, False)
</span><span class='line'>498 &lt;br/&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></li>
</ul>


<p>As far as I can tell the difference is related to hardware clock settings,
probably due to different defaults in BIOS on the various hardware.
Additional tests with RAID 5 and RAID 6 reveals the same exact difference.
RAID 0 vs. RAID 10 shows no difference at all. Indeed as far as I know anaconda
delegates the creation of RAID arrays to mdadm once the desired configuration
is known so these results are to be expected.</p>

<h2>Conclusion</h2>

<p>As you can see sometimes there are tests which appear to be very important
but in reality they cover a corner case of the base test. For example if any
of the RAID levels works we can be pretty confident
<strike>all of them work</strike> <em>they won't break in anaconda</em>
(thanks Adam Williamson)!</p>

<p>What you do with this information is up to you. Sometimes QA is able to
execute all the tests and life is good. Sometimes we have to compromise,
skip some testing and accept the risks of doing so. Sometimes you can
execute all tests for every build, sometimes only once per milestone.
Whatever the case having the information to back up your decision is vital!</p>

<p>In my next post on this topic I'm going to talk more about functional tests
vs. unit tests. Both anaconda and blivet have both kinds of tests and I'm
interested to know if tests from the two categories focus on the same
functionality how are they different. If we have a unit test for feature X,
does it warrant to spend the resources doing functional testing for X as well?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Anaconda &amp; coverage.py - Pt.2 - Details]]></title>
    <link href="http://atodorov.org/blog/2015/10/15/anaconda-coverage.py-details/"/>
    <updated>2015-10-15T14:15:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/10/15/anaconda-coverage.py-details</id>
    <content type="html"><![CDATA[<p>My <a href="/blog/2015/10/14/anaconda-coverage.py-introduction/">previous post</a>
was an introduction to testing installation related components. Now I'm going to
talk more about anaconda and how it is tested.</p>

<p>There are two primary ways to test anaconda. You can execute <code>make check</code> in the
source directory which will trigger the package test suite. The other possibility
is to perform an actual installation, on bare meta or virtual machine, using the
<a href="https://kojipkgs.fedoraproject.org/mash/">latest Rawhide snapshots</a> which also
include the latest anaconda. For both of these methods we can collect code
coverage information. In live installation mode coverage is enabled via the
<code>inst.debug</code> boot argument. Fedora 23 and earlier use <code>debug=1</code> but that
can lead to <a href="https://github.com/rhinstaller/anaconda/pull/291">problems</a>
sometimes.</p>

<h2>Kickstart Testing</h2>

<p><a href="https://github.com/rhinstaller/pykickstart/blob/master/docs/kickstart-docs.rst">Kickstart</a>
is a method of automating the installation of Fedora by supplying the necessary
configuration into a text file and pointing the installer at this file. There is
the directory <code>tests/kickstart_tests</code>, inside the anaconda source, where each
test is a kickstart file and a shell script. The test runner provisions a virtual
machine using boot.iso and the kickstart file. A shell script then verifies
installation was as expected and copies files of interest to the host system.
Kickstart files are also the basis for testing Fedora installations in
<a href="https://beaker.fedoraproject.org/bkr/jobs/">Beaker</a>.</p>

<p>Naturally some of these in-package kickstart tests are the same as
<a href="https://bitbucket.org/fedoraqa/fedora-beaker-tests/">out-of-band kickstart tests</a>.
Hint: there are more available but not yet public.</p>

<p>The question which I don't have an answer for right now is
"Can we remove some of the duplicates and how this affects devel and QE teams" ?
The pros of in-package testing are that it is faster compared to Beaker. The cons
are that you're not testing the real distro (every snapshot is a possible final
release to the users).</p>

<h2>Dogtail</h2>

<p><a href="https://fedorahosted.org/dogtail/">Dogtail</a> uses accessibility technologies to
communicate with desktop applications. It is written in Python and can be used
as GUI test automation framework. Long time ago I've proposed support for Dogtail
in anaconda which was rejected, then couple of years later it was accepted and
later removed from the code again.</p>

<p>Anaconda has in-package Dogtail tests (<code>tests/gui/</code>). They work by attaching
a second disk image with the test suite to a VM running a LiveCD. Anaconda is
started on the LiveCD and an attempt to install Fedora on disk 1 is made.
Everything is driven by the Dogtail scripts. There are only a few of these
tests available and they are currently disabled.
Red Hat QE has also created another method for running Dogtail tests in anaconda
using an updates.img with the previous functionality.</p>

<p>Even if there are some duplicate tests I'm not convinced we have to drop the
<code>tests/gui/</code> directory from the code because
the framework used to drive the graphical interface of anaconda appears to be very
well written. The code is clean and easy to follow.
Also I don't have metrics of how much these two methods differ or how much they cover
in their testing. IMO they are pretty close and before we can find a way to
reliably execute them on a regular basis there isn't much to be done here.
One idea is to use the <code>--dirinstall</code> or <code>--image</code> options and skip the
LiveCD part entirely.</p>

<h2>How Much is Tested</h2>

<p><code>make ci</code> covers 10% of the entire code base for anaconda. Mind you that
<code>tests/storage</code> and <code>tests/gui</code> are currently disabled.
See <a href="https://github.com/rhinstaller/anaconda/pull/346">PR #346</a>,
<a href="https://github.com/rhinstaller/anaconda/pull/327">PR #327</a> and
<a href="https://github.com/rhinstaller/anaconda/pull/319">PR #319</a>!
There is definitely room for improvement.</p>

<p>On the other hand live installation testing is much
better. Text mode covers around 25% while graphical installations around 40%.
Text and graphical combined cover 50% though. These numbers will drop quite a bit
once anaconda learns to
<a href="https://github.com/rhinstaller/anaconda/pull/397">include all possible files</a>
in its report but it is a good estimate.</p>

<p>The important questions to ask here are:</p>

<ul>
<li>How much can PyUnit tests cover in anaconda?</li>
<li>How much can kickstart tests cover ?</li>
<li>Have we reached a threshold in any of the two primary methods for testing ?</li>
<li>Does UI automation (with Dogtail) improve anything ?</li>
<li>When testing a particular feature (say user creation) how different is the
code execution path between manual (GUI) testing, kickstart and unit testing ?
If not so different can we invest in unit tests instead of higher level tests then ?</li>
<li>How different is the code execution path between different tests (manual or kickstart) ?
In other words how much value are we getting from testing for the resources we're putting in ?</li>
</ul>


<p>In my next post I will talk more about these questions and some rudimentary
analysis against coverage data from the various test methods and test cases!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Anaconda &amp; coverage.py - Pt.1 - Introduction]]></title>
    <link href="http://atodorov.org/blog/2015/10/14/anaconda-coverage.py-introduction/"/>
    <updated>2015-10-14T13:44:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/10/14/anaconda-coverage.py-introduction</id>
    <content type="html"><![CDATA[<p>Since early 2015 I've been working on testing installation related
components in Rawhide. I'm interested in the code produced by the
<a href="https://github.com/rhinstaller/">Red Hat Installer Engineering Team</a> and in
particular in <em>anaconda</em>, <em>blivet</em>, <em>pyparted</em> and <em>pykickstart</em>. The goal of
this effort is to improve the overall testing of these components and also
have Red Hat QE contribute some of our knowledge back to the community. The benefit
of course will be better software for everyone. In the next
several posts I'll summarize what has been done so far and what's to be expected
in the future.</p>

<h2>Test Documentation Matters</h2>

<p>Do you want others to contribute tests? I certainly do! When I started looking
at the code it was obviously clear there was no documentation related to testing.
Everyone needs to know how to write and execute these tests! Currently we have
basic README files describing how to install necessary dependencies for development
and test execution, how to execute the tests (and what can be tested) and most
importantly what is the test architecture. There is description of how the file
structure is organized and which are the base classes to inherit from when adding
new tests. Most of the times each component goes through a <em>pylint</em> check and
a standard PyUnit test suite.</p>

<p>Test documentation is usually in a <code>tests/README</code> file. For example:</p>

<ul>
<li><a href="https://github.com/rhinstaller/anaconda/blob/master/tests/README.rst">anaconda</a></li>
<li><a href="https://github.com/rhinstaller/blivet/blob/master/tests/README.rst">blivet</a></li>
<li><a href="https://github.com/rhinstaller/pykickstart/blob/master/tests/README.rst">pykickstart</a></li>
<li><a href="https://github.com/rhinstaller/pyparted/blob/master/tests/README.rst">pyparted</a></li>
</ul>


<p>I've tried to explain as much as possible without bloating the files and going into
unnecessary details. If you spot something missing please send a pull request.</p>

<h2>Continuous Integration</h2>

<p>This has been largely an effort driven by Chris Lumens from the devel team.
All the components I'm interested in are tested regularly in a CI environment.
There is a <code>make ci</code> Makefile target for those of you interested in what exactly
gets executed.</p>

<h2>Test Coverage</h2>

<p>In order to <strong>improve</strong> something you need to know where you stand. We'll I didn't.
That's why the first step was to integrate the
<a href="https://bitbucket.org/ned/coveragepy">coverage.py</a> tool with all of these components.</p>

<p>With the exception of blivet (written in C) all of the other
components integrate well with coverage.py and produce good statistics. pykickstart is
the champ here with 90% coverage, while anaconda is somewhere between 10% and 50%.
Full test coverage measurement for anaconda isn't straight forward and will be the
subject of my next post. For the C based code we have to hook up with
<a href="https://gcc.gnu.org/onlinedocs/gcc/Gcov.html">Gcov</a> which shouldn't be too difficult.</p>

<p>At the moment there are several open pull requests to integrate the coverage test
targets with <code>make ci</code> and also report the results in human readable form. I will be
collecting these for historical references.</p>

<h2>Tools</h2>

<p>I've created some basic text-mode
<a href="https://github.com/atodorov/coverage-tools">coverage-tools</a> to help me combine and
compare data from different executions. These are only the start of it and I'm expanding
them as my needs for reporting and analytics evolve. I'm also looking into
<a href="/blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports/">more detailed coverage reports</a>
but I don't have enough data and use cases to work on this front at the moment.</p>

<p>Some ideas currently in mind:</p>

<ul>
<li>map code changes (git commits) to existing test coverage to get a feeling where to
invest in more testing;</li>
<li>map bugs to code areas and to existing test coverage to see if we aren't
missing tests in areas where the bugs are happening;</li>
</ul>


<h2>Bugs</h2>

<p>coverage.py is a very nice tool indeed but I guess most people use it in a very
limited way. Shortly after I started working with it I've found several places which
need improvements. These have to do with combining and reporting on multiple files.</p>

<p>Some of the interesting issues I've found and still open are:</p>

<ul>
<li><a href="https://bitbucket.org/ned/coveragepy/pull-requests/63/">PR #63 - New option --dont-remove when combining coverage data</a></li>
<li><a href="https://bitbucket.org/ned/coveragepy/issues/425">#425 - source parameter not including files which are explicitly specified</a></li>
<li><a href="https://bitbucket.org/ned/coveragepy/issues/426">#426 - Difference between coverage results with source specifies full dir instead of module name</a></li>
</ul>


<p>In my next post I will talk about anaconda code coverage and what I want to do with it.
In the mean time please use the comments to share your feedback.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thunderbolt to VGA adapter on Linux]]></title>
    <link href="http://atodorov.org/blog/2015/09/30/thunderbolt-to-vga-adapter-on-linux/"/>
    <updated>2015-09-30T11:59:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/09/30/thunderbolt-to-vga-adapter-on-linux</id>
    <content type="html"><![CDATA[<p>I've previously written about my
<a href="blog/2015/05/04/thunderbolt-to-ethernet-adapter-on-linux/">Thunderbolt to Ethernet adapter working on Linux</a>
despite claims that it should not. Recently I've used my MacBook to do a presentation
and the Thunderbolt to VGA adapter worked well enough.</p>

<p>It was an Acer adapter but I have no more details b/c it wasn't mine.</p>

<p>Before the event I've tested it and it worked so on the day of the event I've
freshly rebooted my laptop to be sure no crashed processes or anything like that
was running and gave it a go.</p>

<p>First time I plugged in the MacBook everything worked like a charm. Then my computer was
unplugged and the lid closed, causing it to suspend. The second time I've plugged it in
I was told there was nothing showing on the projector so I quickly plugged the adapter out
and then back in. It worked more or less.</p>

<p>At the time I had LibreOffice Impress in presentation
mode but I did see ABRT detecting a kernel problem. When my slides popped up the text
on the first one was mostly missing but the rest were ok!</p>

<p>Mind you I'm still running <a href="/blog/categories/mac/">RHEL 7 on my MacBook Air</a>. The above is
with kernel-3.10.0-229.14.1.el7.x86_64.</p>
]]></content>
  </entry>
  
</feed>
