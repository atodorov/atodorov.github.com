<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: fedora.planet | atodorov.org - you can logoff, but you can never leave]]></title>
  <link href="http://atodorov.org/blog/categories/fedora-planet/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2015-04-30T11:48:05+03:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fixing Tilde and Function Keys Mapping for MacBook Air on Linux]]></title>
    <link href="http://atodorov.org/blog/2015/04/30/fixing-tilde-and-function-keys-mapping-for-macbook-air-on-linux/"/>
    <updated>2015-04-30T11:33:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/04/30/fixing-tilde-and-function-keys-mapping-for-macbook-air-on-linux</id>
    <content type="html"><![CDATA[<p>Thera are two problems with the MacBook Air keyboard on Linux:</p>

<p>Function keys and media keys are switched and by default you have to
press Fn+F5 in order to refresh a browser page. The
<a href="https://chaidarun.com/fedora-mbp">solution</a> is</p>

<pre><code>echo 2 &gt; /sys/module/hid_apple/parameters/fnmode
</code></pre>

<p>The tilde key is mapped improperly, see
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=1025041#c2">RHBZ #1025041</a>.
To fix it</p>

<pre><code>echo 0 &gt; /sys/module/hid_apple/parameters/iso_layout
</code></pre>

<h2>Permanent fix</h2>

<p>Either you have to add the above commands in a boot script or you can
<code>yum install mba-kbd-fix</code> from my
<a href="/blog/2015/04/29/rhel-7-repository-for-macbook-air/">Macbook Air RHEL 7 repository</a>.
The RPM source can be found <a href="https://github.com/atodorov/mba-kbd-fix">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RHEL 7 Repository for MacBook Air]]></title>
    <link href="http://atodorov.org/blog/2015/04/29/rhel-7-repository-for-macbook-air/"/>
    <updated>2015-04-29T13:00:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/04/29/rhel-7-repository-for-macbook-air</id>
    <content type="html"><![CDATA[<p>I've made a repository with binary (x86_64 only) and source RPM packages which
are missing from Red Hat Enterprise Linux 7 and necessary when using a
MacBook Air. To install execute the commands below:</p>

<pre><code>cd /etc/yum.repos.d/
wget https://s3.amazonaws.com/atodorov/rpms/macbook/el7/rhel7-macbook.repo
</code></pre>

<h2>Wireless driver</h2>

<pre><code>yum install kmod-wl
</code></pre>

<h2>Display backlight driver</h2>

<pre><code>yum install kmod-mba6x_bl
</code></pre>

<p>And uncomment <code>/etc/X11/xorg.conf.d/98-mba_bl.conf</code>.</p>

<p><em>Note:</em> the .spec file is available from
<a href="https://github.com/patjak/mba6x_bl/pull/26">RP #26</a>.</p>

<h2>Fixing keyboard mapping</h2>

<pre><code>yum install mba-kbd-fix
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing Display Brightness on MacBook Air with RHEL 7]]></title>
    <link href="http://atodorov.org/blog/2015/04/29/fixing-display-brightness-on-macbook-air-with-rhel-7/"/>
    <updated>2015-04-29T12:14:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/04/29/fixing-display-brightness-on-macbook-air-with-rhel-7</id>
    <content type="html"><![CDATA[<p>One issue with RHEL/CentOS/Fedora on MacBook Air laptops is brightness control
and backlight behavior after suspend/resume. I've found the solution
<a href="http://mattoncloud.org/2014/02/05/fedora-20-on-a-macbook-air/">here</a>
and only tweaked it slightly for my use case.</p>

<h2>mba6x_bl doesn't load automatically</h2>

<p>The reason being the driver matches older hardware:</p>

<pre><code>$ modinfo mba6x_bl
filename:       /lib/modules/3.10.0-229.1.2.el7.x86_64/extra/mba6x_bl/mba6x_bl.ko
alias:          dmi:*:pnMacBookAir6*
license:        GPL
description:    MacBook Air 6,1 and 6,2 backlight driver
author:         Patrik Jakobsson &lt;patrik.r.jakobsson@gmail.com&gt;
rhelversion:    7.1
srcversion:     4D069C8EB0E470AF27E7F8D
depends:        video
vermagic:       3.10.0-229.1.2.el7.x86_64 SMP mod_unload modversions 
</code></pre>

<p>My system is <strong>MacBookAir7,2</strong> and doesn't match the module alias. So a
<a href="https://github.com/patjak/mba6x_bl/pull/25">quick fix</a> was needed.
For more info about <code>MODULE_ALIAS</code> see
<a href="https://wiki.archlinux.org/index.php/Modalias">ArchWiki</a>.
Alternatively on Red Hat based systems you can place a config file
under <code>/etc/sysconfig/modules</code>, see
<a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Deployment_Guide/sec-Persistent_Module_Loading.html">the docs</a>
for more details.</p>

<h2>intel_backlight driver is in the way</h2>

<p>On older systems mba6x_bl doesn't get used automatically. The problem is the offending
intel_backlight driver which gets used instead. To workaround it add this xorg.conf snippet:</p>

<pre><code>$ cat /etc/X11/xorg.conf.d/98-mba_bl.conf
Section "Device"
    Identifier      "Intel Graphics"
    Driver          "intel"
    Option          "Backlight"     "mba6x_backlight"
EndSection
</code></pre>

<p>For more info see <a href="https://bugzilla.redhat.com/show_bug.cgi?id=989555#c19">RHBZ 989555</a>.</p>

<h2>Everything in one go</h2>

<p>If you are using RHEL 7 or CentOS 7 (version 7.1 required) instead of Fedora you can take
a look at my <a href="/blog/2015/04/29/rhel-7-repository-for-macbook-air/">Macbook Air RHEL 7 repository</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disabling MacBook Startup Sound in Linux]]></title>
    <link href="http://atodorov.org/blog/2015/04/27/disabling-macbook-startup-sound-in-linux/"/>
    <updated>2015-04-27T23:23:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/04/27/disabling-macbook-startup-sound-in-linux</id>
    <content type="html"><![CDATA[<p>There is an easy way to disable the MacBook startup sound
(boot chime) even after wiping out OS X and installing Linux.</p>

<p>This sound can be easily disabled if you mute the volume in OS X
and shutdown the computer. The value is stored in NVRAM.</p>

<ol>
<li>Reboot the computer and hold Cmd+Alt(Option)+R. This will start
OS X Internet recovery mode;</li>
<li><p>Open the terminal and issue the following command</p>

<pre><code> nvram SystemAudioVolume=%00
</code></pre></li>
<li><p>Reboot.</p></li>
</ol>


<p>Voila. In Linux try this:</p>

<pre><code># efivar -l | grep SystemAudioVolume
 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolume
 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolumeDB

# efivar -n 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolume -p
GUID: 7c436110-ab2a-4bbb-a880-fe41995c9f82
Name: "SystemAudioVolume"
Attributes:
    Non-Volatile
    Boot Service Access
    Runtime Service Access
Value:
00000000  00                                                |.               |

# efivar -n 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolumeDB -p
GUID: 7c436110-ab2a-4bbb-a880-fe41995c9f82
Name: "SystemAudioVolumeDB"
Attributes:
    Non-Volatile
    Boot Service Access
    Runtime Service Access
Value:
00000000  00 
#
</code></pre>

<p><strong>Note 1</strong>: Before disabling both variables had non zero values. Also <em>SystemAudioVolumeDB</em>
doesn't seem to have any effect.</p>

<p><strong>Note 2:</strong> RHEL or CentOS users need to rebuild <em>efivar</em> from the
<a href="https://kojipkgs.fedoraproject.org//packages/efivar/0.14/1.fc22/src/efivar-0.14-1.fc22.src.rpm">Fedora src.rpm</a>.</p>

<p><strong>Note 3:</strong> several Internet sources suggest that writing EFI variables from Linux
may sometimes corrupt your Apple firmware. I didn't research this any further. If you
happen to figure out how to successfully write to these variables under Linux please let
everyone know in the comments (in case OS X recovery mode goes missing, you know).</p>

<p>Thanks to my reader Alexander, who
<a href="/blog/2015/04/26/installing-red-hat-enterprise-linux-7-on-macbook-air-2015/#disqus_thread">gave me the hint</a>
in a previous blog post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compiling Broadcom wl-kmod WiFi Driver for RHEL 7]]></title>
    <link href="http://atodorov.org/blog/2015/04/27/compiling-broadcom-wl-kmod-wifi-driver-for-rhel-7/"/>
    <updated>2015-04-27T12:17:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/04/27/compiling-broadcom-wl-kmod-wifi-driver-for-rhel-7</id>
    <content type="html"><![CDATA[<p>After I got my
<a href="/blog/2015/04/26/installing-red-hat-enterprise-linux-7-on-macbook-air-2015/">MacBook Air installed with RHEL 7.1</a>
the first priority was getting wireless working.
First check if your device isn't already supported
<a href="http://linuxwireless.org/en/users/Drivers/b43/#Supported_devices">upstream</a>. Mine isn't</p>

<pre><code>14e4:43a0: Broadcom Corporation BCM4360 802.11ac Wireless Network Adapter (rev 03)
</code></pre>

<p>Next grab the src.rpm files necessary to build the <em>wl</em> driver from RPM Fusion.
For <code>akmods-0.5.2-1.fc21.src.rpm</code>, <code>broadcom-wl-6.30.223.248-2.fc21.src.rpm</code>,
<code>kmodtool-1-23.fc20.src.rpm</code> just execute <em>rpmbuild --rebuild</em> against each file
and install <code>kmodtool</code> and <code>akmods</code>.</p>

<p>Then you need two more files <code>buildsys-build-rpmfusion</code> and <code>wl-kmod</code>.
The first one is a helper tool containing list of recent kernels to build against,
the later one is the driver source itself. Both needed minor modifications before
building on RHEL 7.</p>

<p>I've created my own
<a href="https://github.com/atodorov/buildsys-build-rpmfusion-for-rhel7">buildsys-build-rpmfusion</a> package listing the current kernels
for RHEL 7.1. For <a href="https://github.com/atodorov/wl-kmod-for-rhel7">wl-kmod</a> I've introduced a
<a href="https://github.com/atodorov/wl-kmod-for-rhel7/blob/master/wl-kmod-100_redhat.patch">patch</a>
which modifies the other patches in the package so it builds correctly on 7.1.</p>

<p><strong>Note:</strong> I don't know if there's a define which can be used to detect if we're building
on RHEL (maybe I can define my own) but direct kernel version number comparison doesn't
work here because Red Hat backports chosen functionality from more recent kernels without
changing the version number. This approach may not be the best one but I've tried to keep it clean
for easier maintenance in the future and it got me started very quickly.</p>

<p>Build the modified buildsys-build-rpmfusion and:</p>

<pre><code>yum install buildsys-build-rpmfusion-7-1.x86_64.rpm buildsys-build-rpmfusion-kerneldevpkgs-current-7-1.x86_64.rpm
</code></pre>

<p>Build the wl-kmod package and:</p>

<pre><code>yum install akmod-wl-6.30.223.248-5.el7.x86_64.rpm broadcom-wl-6.30.223.248-2.el7.noarch.rpm kmod-wl-3.10.0-229.el7.x86_64-6.30.223.248-5.el7.x86_64.rpm kmod-wl-6.30.223.248-5.el7.x86_64.rpm
</code></pre>

<p>If necessary re-create your initramfs image to include <em>wl.ko</em>.</p>
]]></content>
  </entry>
  
</feed>
