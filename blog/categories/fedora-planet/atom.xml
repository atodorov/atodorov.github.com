<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: fedora.planet | atodorov.org - you can logoff, but you can never leave]]></title>
  <link href="http://atodorov.org/blog/categories/fedora-planet/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2015-08-14T14:12:03+03:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tip: Try F10 When Editing grub2 Menu in EFI Mode]]></title>
    <link href="http://atodorov.org/blog/2015/08/14/tip-try-f10-when-editing-grub2-menu-in-efi-mode/"/>
    <updated>2015-08-14T14:06:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/08/14/tip-try-f10-when-editing-grub2-menu-in-efi-mode</id>
    <content type="html"><![CDATA[<p>When editing the grub2 menu (especially in EFI mode) it tells you to
press Ctrl-x to save your changes and continue the boot process.
However this doesn't work on Apple hardware
(<a href="https://bugzilla.redhat.com/show_bug.cgi?id=1253637">rhbz#1253637</a>)
and maybe some other platforms. If this is the case try pressing <strong>F10</strong>
instead. It works for me!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Call for Ideas: Graphical Test Coverage Reports]]></title>
    <link href="http://atodorov.org/blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports/"/>
    <updated>2015-07-27T13:04:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports</id>
    <content type="html"><![CDATA[<p>If you are working with Python and writing unit tests chances are you are
familiar with the <a href="http://nedbatchelder.com/code/coverage/">coverage</a> reporting
tool. However there are testing scenarios in which we either don't use unit tests
or maybe execute different code paths(test cases) independent of each other.</p>

<p>For example, this is the case with installation testing in Fedora. Because anaconda
- the installer is very complex the easiest way is to test it live, not with unit tests.
Even though we can get a coverage report (anaconda is written in Python) it reflects
only the test case it was collected from.</p>

<p><code>coverage combine</code> can be used to combine several data files and produce an aggregate
report. This can tell you how much test coverage you have across all your tests.</p>

<p>As far as I can tell Python's coverage doesn't tell you how many times a particular
line of code has been executed. It also doesn't tell you which test cases executed
a particular line
(see <a href="https://bitbucket.org/ned/coveragepy/pull-request/59">PR #59</a>).
In the Fedora example, I have the feeling many of our tests are touching the same
code base and not contributing that much to the overall test coverage.
So I started working on these items.</p>

<p>I imagine a script which will read coverage data from several test executions
(preferably in JSON format,
<a href="https://bitbucket.org/ned/coveragepy/pull-request/60">PR #60</a>) and produce a
graphical report similar to what GitHub does for your commit activity.</p>

<p>See an example <a href="https://s3.amazonaws.com/atodorov/blog/pykickstart_report.html">here</a>!</p>

<p>The example uses darker colors to indicate more line executions, lighter for less
executions. Check the HTML for the actual numbers b/c there are no hints yet.
The input JSON files are
<a href="https://s3.amazonaws.com/atodorov/blog/coverage_json_reports.tar.gz">here</a> and
the script to generate the above HTML is at
<a href="https://github.com/atodorov/fedora-scripts/blob/master/coverage-tool">GitHub</a>.</p>

<p>Now I need your ideas and comments!</p>

<p>What kinds of coverage reports are you using in your job ? How do you generate them ?
How do they look like ?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DEVit Conf 2015 Impressions]]></title>
    <link href="http://atodorov.org/blog/2015/05/22/devit-conf-2015-impressions/"/>
    <updated>2015-05-22T12:01:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/05/22/devit-conf-2015-impressions</id>
    <content type="html"><![CDATA[<p>It's been a busy week after <a href="http://devitconf.org/">DEVit conf</a> took place in
Thessaloniki. Here are my impressions.</p>

<p><img src="/images/devit2015.jpg" title="Crack, Train, Fix, Release" alt="Crack, Train, Fix, Release" /></p>

<h2>Sessions</h2>

<p>I've started the day with the session called "Crack, Train, Fix, Release" by
Chris Heilmann. While it was very interesting for some unknown reason I
was expecting a talk more closely related to software testing. Unfortunately at the
same time in the other room was a talk called "Integration Testing from the Trenches"
by Nicolas Frankel which I missed.</p>

<p>At the end Chris answered the question "What to do about old versions of IE ?".
And the answer pretty much was "Don't try to support everything, leave them with
basic functionality so that users can achieve what they came for on your website.
Don't put nice buttons b/c IE 6 users are not used to nice things and they get confused."</p>

<p>If you remember I had a similar question to Jeremy Keith at
<a href="/blog/2015/04/20/videos-from-bulgaria-web-summit-2015/">Bulgaria Web Summit</a> last month
and the answer was similar:</p>

<p><blockquote><p>Q: Which one is Jeremy's favorite device/browser to develop for.<br/>A: Your approach is wrong and instead we should be thinking in terms of what features are<br/>essential or non-essential for our websites and develop around features<br/>(if supported, if not supported) not around browsers!</p></blockquote></p>

<p>Btw I did ask Chris if he knows Jeremy and he does.</p>

<p>After the coffee break there was "JavaScript â™¥ Unicode" by Mathias Bynens which
I saw last year at <a href="http://how.camp/">How Camp</a> in Veliko Tarnovo so I just stopped by
to say hi and went to listen to
"The future of responsive web design: web component queries" by Nikos Zinas.
As far as I understood Nikos is a local rock-star developer. I'm not much into web
development but the opportunity to create your own HTML components (tags) looks
very promising. I guess there will be more business coming for
<a href="http://telerik.com">Telerik</a> :).</p>

<p>I wanted to listen to "Live Productive Coder" by Heinz Kabutz but that one started
in Greek so I switched the room for
"iOS real time content modifications using websockets" by  Benny Weingarten-Gabbay.</p>

<p>After lunch I went straight for
"Introduction to Docker: What is it and why should I care?" by Ian Miell
which IMO was the most interesting talk of the day. It wasn't very technical but
managed to clear some of the mysticism around Docker and what it actually is.
I tried to grab a few minutes of Ian's time and we found topics of common interest
to talk about (<a href="http://www.projectatomic.io/">Project Atomic</a> anyone?) but later
failed to find him and continue the talk. I guess I'll have to follow online.</p>

<p>Tim Perry with "Your Web Stack Would Betray You In An Instant" made a great show.
The room was packed, I myself was actually standing the whole time. He described a series
of failures across the entire web development stack which gave developers hard times
patching and upgrading their services. The lesson: everything fails, be prepared!</p>

<p>The last talk I visited was "GitHub Automation" by Forbes Lindesay. It was more of an
inspirational talk, rather than technical one. GitHub provides cool API so why not use it?</p>

<h2>Organization</h2>

<p><img src="/images/devit2015team.jpg" title="DEVit team" alt="DEVit team" /></p>

<p>From what I know this is the first year of DEVit. For a first timer the team did great!
I particularly liked the two coffee breaks before lunch and in the early afternoon and the
sponsors pitches in between the main talks.</p>

<p>All talks were recorded but I have no idea what's happening with the videos!</p>

<p>I will definitely make a point of visiting Thessaloniki more often and follow the local
IT and start-up scenes there. And tonight is Silicon Drinkabout which will be the official
after party of <a href="http://digitalk.bg/">DigitalK</a> in Sofia.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Free Software Testing Books]]></title>
    <link href="http://atodorov.org/blog/2015/05/20/free-software-testing-books/"/>
    <updated>2015-05-20T11:35:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/05/20/free-software-testing-books</id>
    <content type="html"><![CDATA[<p>There's a huge list of
<a href="https://github.com/ligurio/free-software-testing-books/blob/master/free-software-testing-books.md">free books</a>
on the topic of software testing. This will definitely be my summer reading list.
I hope you find it helpful.</p>

<h2>200 Graduation Theses About Software Testing</h2>

<p>The guys from <a href="http://qahelp.net">QAHelp</a> have compiled a list of 200
graduation theses from various universities which are freely accessible
online. The list can be found
<a href="http://qahelp.net/200-dissertatsij-po-testirovaniyu-v-svobodnoj-dostupe/">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why does sysctl not write under /sys]]></title>
    <link href="http://atodorov.org/blog/2015/05/13/why-does-sysctl-not-write-under-slash-sys/"/>
    <updated>2015-05-13T12:34:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/05/13/why-does-sysctl-not-write-under-slash-sys</id>
    <content type="html"><![CDATA[<p>Recently I've been looking into
<a href="/blog/2015/04/30/fixing-tilde-and-function-keys-mapping-for-macbook-air-on-linux/">fixing tilde and Fn keys mapping for MacBook Air</a>
and thought I could use <code>sysctl</code> to permanently set the desired values. Unfortunately this is not
possible. <code>sysctl</code> can only write under <code>/proc/sys</code> and this is
<a href="https://gitlab.com/procps-ng/procps/blob/master/sysctl.c#L54">hard-coded in the source</a>:</p>

<pre><code>static const char PROC_PATH[] = "/proc/sys/";
</code></pre>

<p>IMO this is relatively easy to patch and allow sysctl to read/write values under /sys.
The only open question I see is backward compatibility - maybe adding new parameter (e.g. --sysfs)
or adding extended sytax e.g. if variable name starts with / then treat it as absolute path.</p>

<p>I've asked sysctl maintainers on the
<a href="http://www.freelists.org/post/procps/Can-we-make-sysctl-readwrite-sys-values-along-with-procsys">procps mailing list</a>
but so far got no answer.</p>

<p>Is anyone else interested in this? How do you set parameter values under /sys then ?</p>

<p><strong>NOTE:</strong> for my particular purposes I could have used config files under
<em>/etc/modprobe.d/</em> or a startup script (I used that) instead.</p>
]]></content>
  </entry>
  
</feed>
