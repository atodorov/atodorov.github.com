<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>atodorov.org</title><link href="http://atodorov.org/" rel="alternate"></link><link href="http://atodorov.org/blog/categories/fedora/atom.xml" rel="self"></link><id>http://atodorov.org/</id><updated>2015-08-14T14:06:00+03:00</updated><entry><title>Tip: Try F10 When Editing grub2 Menu in EFI Mode</title><link href="http://atodorov.org/blog/2015/08/14/tip-try-f10-when-editing-grub2-menu-in-efi-mode/" rel="alternate"></link><updated>2015-08-14T14:06:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-08-14:blog/2015/08/14/tip-try-f10-when-editing-grub2-menu-in-efi-mode/</id><summary type="html">&lt;p&gt;When editing the grub2 menu (especially in EFI mode) it tells you to
press Ctrl-x to save your changes and continue the boot process.
However this doesn't work on Apple hardware
(&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1253637"&gt;rhbz#1253637&lt;/a&gt;)
and maybe some other platforms. If this is the case try pressing &lt;strong&gt;F10&lt;/strong&gt; 
instead. It works for me!&lt;/p&gt;</summary><category term="Fedora"></category><category term="RHEL"></category><category term="Mac"></category><category term="fedora.planet"></category><category term="tips"></category></entry><entry><title>Call for Ideas: Graphical Test Coverage Reports</title><link href="http://atodorov.org/blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports/" rel="alternate"></link><updated>2015-07-27T13:04:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-07-27:blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports/</id><summary type="html">&lt;p&gt;If you are working with Python and writing unit tests chances are you are
familiar with the &lt;a href="http://nedbatchelder.com/code/coverage/"&gt;coverage&lt;/a&gt; reporting
tool. However there are testing scenarios in which we either don't use unit tests
or maybe execute different code paths(test cases) independent of each other.&lt;/p&gt;
&lt;p&gt;For example, this is the case with installation testing in Fedora. Because anaconda
- the installer is very complex the easiest way is to test it live, not with unit tests.
Even though we can get a coverage report (anaconda is written in Python) it reflects
only the test case it was collected from.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;coverage combine&lt;/code&gt; can be used to combine several data files and produce an aggregate
report. This can tell you how much test coverage you have across all your tests.&lt;/p&gt;
&lt;p&gt;As far as I can tell Python's coverage doesn't tell you how many times a particular
line of code has been executed. It also doesn't tell you which test cases executed
a particular line
(see &lt;a href="https://bitbucket.org/ned/coveragepy/pull-request/59"&gt;PR #59&lt;/a&gt;).
In the Fedora example, I have the feeling many of our tests are touching the same
code base and not contributing that much to the overall test coverage.
So I started working on these items.&lt;/p&gt;
&lt;p&gt;I imagine a script which will read coverage data from several test executions
(preferably in JSON format, 
&lt;a href="https://bitbucket.org/ned/coveragepy/pull-request/60"&gt;PR #60&lt;/a&gt;) and produce a 
graphical report similar to what GitHub does for your commit activity.&lt;/p&gt;
&lt;p&gt;See an example &lt;a href="https://s3.amazonaws.com/atodorov/blog/pykickstart_report.html"&gt;here&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;The example uses darker colors to indicate more line executions, lighter for less
executions. Check the HTML for the actual numbers b/c there are no hints yet.
The input JSON files are
&lt;a href="https://s3.amazonaws.com/atodorov/blog/coverage_json_reports.tar.gz"&gt;here&lt;/a&gt; and
the script to generate the above HTML is at 
&lt;a href="https://github.com/atodorov/fedora-scripts/blob/master/coverage-tool"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now I need your ideas and comments!&lt;/p&gt;
&lt;p&gt;What kinds of coverage reports are you using in your job ? How do you generate them ?
How do they look like ?&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category><category term="Django"></category><category term="fedora.planet"></category></entry><entry><title>Videos from Bulgaria Web Summit 2015</title><link href="http://atodorov.org/blog/2015/04/20/videos-from-bulgaria-web-summit-2015/" rel="alternate"></link><updated>2015-04-20T10:45:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-20:blog/2015/04/20/videos-from-bulgaria-web-summit-2015/</id><summary type="html">&lt;p&gt;&lt;img alt="We're full" src="/images/bgws2015.jpg" title="We're full" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bulgariawebsummit.com"&gt;Bulgaria Web Summit&lt;/a&gt; 2015 is over. The event was
incredible and I had a lot of fun moderating the main room. We had many people
coming from other countries and I've made lots of new friends.
Thank you to everyone who attended!&lt;/p&gt;
&lt;p&gt;You can find video recordings of all talks in the main room (in order of appearance) below:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/3THnzZCI4sw?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/LtgPnYkEj3E?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/4IFyMSvoy-c?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ZGLKZSnCIUU?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/GBv4QWFDETY?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DhnsmsvSG7w?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Hope to see you next time in Sofia! &lt;/p&gt;
&lt;p&gt;Mean while I learned about &lt;a href="http://devitconf.org/"&gt;DEVit&lt;/a&gt; in Thessaloniki in May and another one in Zagreb in October.
See you there :)&lt;/p&gt;</summary><category term="Django"></category><category term="Fedora"></category></entry><entry><title>How to Find if LVM Volume is Thinly Provisioned</title><link href="http://atodorov.org/blog/2015/04/14/how-to-find-if-lvm-volume-is-thinly-provisioned/" rel="alternate"></link><updated>2015-04-14T15:40:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-14:blog/2015/04/14/how-to-find-if-lvm-volume-is-thinly-provisioned/</id><summary type="html">&lt;p&gt;The latest versions of Red Hat Enterprise Linux, CentOS and Fedora all
support LVM thin provisioning. Here's how to tell if a logical volume
has been thinly provisioned or not.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;lvs&lt;/code&gt; to display volume information look under the &lt;em&gt;Attr&lt;/em&gt; column.
Attribute values have the following meaning:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The lv_attr bits are:&lt;/p&gt;
&lt;p&gt;1  Volume type: (C)ache, (m)irrored, (M)irrored without initial sync, (o)rigin,
(O)rigin  with  merging  snapshot, (r)aid,  (R)aid  without  initial  sync,
(s)napshot,  merging  (S)napshot, (p)vmove, (v)irtual, mirror or raid (i)mage,
mirror or raid (I)mage out-of-sync, mirror (l)og device, under  (c)onversion,
thin  (V)olume,  (t)hin pool, (T)hin pool data, raid or pool m(e)tadata or
pool metadata spare.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is how &lt;code&gt;lvs&lt;/code&gt; looks like when you have a regular LVM setup:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# lvs
  LV   VG              Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root rhel_dhcp70-183 -wi-ao---- 17,47g                                                    
  swap rhel_dhcp70-183 -wi-ao----  2,00g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When using LVM thin provisioning you're looking for the left-most attribute bit
to be V, t or T. Here's an example:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# lvs
  LV     VG              Attr       LSize  Pool   Origin Data%  Meta%  Move Log Cpy%Sync Convert
  pool00 rhel_dhcp71-101 twi-aotz-- 14,55g               7,52   3,86                            
  root   rhel_dhcp71-101 Vwi-aotz-- 14,54g pool00        7,53                                   
  swap   rhel_dhcp71-101 -wi-ao----  2,00g
&lt;/pre&gt;&lt;/div&gt;</summary><category term="RHEL"></category><category term="Fedora"></category></entry><entry><title>Tip: Linux-IO default LUN is 0 instead of 1</title><link href="http://atodorov.org/blog/2015/04/08/tip-linux-io-default-lun-is-0-instead-of-1/" rel="alternate"></link><updated>2015-04-08T15:09:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-08:blog/2015/04/08/tip-linux-io-default-lun-is-0-instead-of-1/</id><summary type="html">&lt;p&gt;I've been testing iBFT in KVM which worked quite well with a RHEL 6 iSCSI target
and failed miserably when I switched to RHEL 7 iSCSI target.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;iPXE&amp;gt; dhcp net0
DHCP (net0 52:54:00:12:34:56)... ok
iPXE&amp;gt; set keep-san 1
iPXE&amp;gt; sanboot iscsi:10.0.0.1:::1:iqn.2015-05.com.example:target1
Could not open SAN device: Input/output error (http://ipxe.org/1d704539)
iPXE&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;a href="http://ipxe.org/err/1d7045"&gt;error page&lt;/a&gt; says&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the default configuration when Linux is the target is for the disk to be LUN 1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well this is not true for Linux-IO (targetcli). &lt;strong&gt;The default LUN is 0!&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;iPXE&amp;gt; sanboot iscsi:10.0.0.1:::0:iqn.2015-05.com.example:target1
Registered SAN device 0x80
Booting from SAN device 0x80
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kudos to Bruno Goncalves from Red Hat in helping me debug this issue!&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category><category term="tips"></category></entry><entry><title>How to Configure targetcli to Listen on IPv4 and IPv6</title><link href="http://atodorov.org/blog/2015/04/08/how-to-configure-targetcli-to-listen-on-ipv4-and-ipv6/" rel="alternate"></link><updated>2015-04-08T11:46:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-08:blog/2015/04/08/how-to-configure-targetcli-to-listen-on-ipv4-and-ipv6/</id><summary type="html">&lt;p&gt;In order to configure &lt;em&gt;targetcli&lt;/em&gt; to listen on both IPv4 and IPv6 one has to
delete the default IPv4 portal configuration and replace it with IPv6 instead.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# targetcli 
/&amp;gt;
/&amp;gt; cd iscsi/iqn.2015-04.com.example:target1/tpg1/portals
/iscsi/iqn.20.../tpg1/portals&amp;gt; ls
o- portals ............................................................................................................ [Portals: 1]
  o- 0.0.0.0:3260 ............................................................................................................. [OK]
/iscsi/iqn.20.../tpg1/portals&amp;gt; delete 0.0.0.0 3260
Deleted network portal 0.0.0.0:3260
/iscsi/iqn.20.../tpg1/portals&amp;gt; create ::0
Using default IP port 3260
Created network portal ::0:3260.
/iscsi/iqn.20.../tpg1/portals&amp;gt; ls
o- portals ............................................................................................................ [Portals: 1]
  o- [::0]:3260 ............................................................................................................... [OK]
/iscsi/iqn.20.../tpg1/portals&amp;gt; exit

# netstat -antp | grep 3260
tcp6       0      0 :::3260                 :::*                    LISTEN
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It appears the target is listening only on IPv6 but in fact it will
also accept connections over IPv4. I've tried it. &lt;/p&gt;
&lt;p&gt;This is a bit counter intuitive, however if you try adding the IPv6 address
without removing the default IPv4 one &lt;em&gt;targetcli&lt;/em&gt; will throw an error:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;/iscsi/iqn.20.../tpg1/portals&amp;gt; create ::0
Using default IP port 3260
Could not create NetworkPortal in configFS.
/&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more information about &lt;em&gt;targetcli&lt;/em&gt; usage see my previous post
&lt;a href="/blog/2015/04/07/how-to-configure-iscsi-target-on-red-hat-enterprise-linux-7/"&gt;How to Configure iSCSI Target on Red Hat Enterprise Linux 7&lt;/a&gt;.&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category><category term="fedora.planet"></category></entry><entry><title>How to Configure iSCSI Target on Red Hat Enterprise Linux 7</title><link href="http://atodorov.org/blog/2015/04/07/how-to-configure-iscsi-target-on-red-hat-enterprise-linux-7/" rel="alternate"></link><updated>2015-04-07T15:52:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-07:blog/2015/04/07/how-to-configure-iscsi-target-on-red-hat-enterprise-linux-7/</id><summary type="html">&lt;p&gt;Linux-IO (LIO) Target is an open-source implementation of the SCSI target that
has become the standard one included in the Linux kernel and the one present in
Red Hat Enterprise Linux 7. The popular &lt;em&gt;scsi-target-utils&lt;/em&gt; package is replaced
by the newer &lt;em&gt;targetcli&lt;/em&gt; which makes configuring a software iSCSI target quite
different.&lt;/p&gt;
&lt;p&gt;In earlier versions one had to edit the &lt;code&gt;/etc/tgtd/targets.conf&lt;/code&gt; file and
&lt;code&gt;service tgtd restart&lt;/code&gt;. Here is an example configuration:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;target&lt;/span&gt; &lt;span class="err"&gt;iqn.2008-09.com.example:server.target1&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    backing-store /dev/vg_iscsi/lv_lun1
    backing-store /dev/vg_iscsi/lv_lun2

    incominguser user2 secretpass23
    outgoinguser userA secretpassA
&lt;span class="nt"&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;targetcli&lt;/em&gt; can be used either as an interactive shell or as stand alone commands.
Here is an example shell session which creates a file-based disk image. Comments are
provided inline:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# yum install -y targetcli&lt;/span&gt;
&lt;span class="cp"&gt;# systemctl enable target&lt;/span&gt;

&lt;span class="cp"&gt;# targetcli&lt;/span&gt;

&lt;span class="cp"&gt;# first create a disk image with the name of disk1. All files are sparsely created.&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;backstores&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="n"&gt;fileio&lt;/span&gt; &lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;10737418240&lt;/span&gt;

&lt;span class="cp"&gt;# create an iSCSI target. NB: this only defines the target&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="n"&gt;TPG&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;
&lt;span class="n"&gt;Global&lt;/span&gt; &lt;span class="n"&gt;pref&lt;/span&gt; &lt;span class="n"&gt;auto_add_default_portal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;portal&lt;/span&gt; &lt;span class="n"&gt;listening&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;IPs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="mf"&gt;3260.&lt;/span&gt;

&lt;span class="cp"&gt;# TPGs (Target Portal Groups) allow the iSCSI to support multiple complete&lt;/span&gt;
&lt;span class="cp"&gt;# configurations within one target. This is useful for complex quality-of-service&lt;/span&gt;
&lt;span class="cp"&gt;# configurations. targetcli will automatically create one TPG when the target&lt;/span&gt;
&lt;span class="cp"&gt;# is created, and almost all setups only need one.&lt;/span&gt;

&lt;span class="cp"&gt;# switch to TPG definition for our target&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;

&lt;span class="cp"&gt;# list the contents&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; 
&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tpg1&lt;/span&gt; &lt;span class="p"&gt;.....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;acls&lt;/span&gt; &lt;span class="p"&gt;................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;ACLs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt; &lt;span class="p"&gt;................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;LUNs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Portals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3260&lt;/span&gt; &lt;span class="p"&gt;...........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="cp"&gt;# create a portal aka IP:port pairs which expose the target on the network&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;
&lt;span class="n"&gt;Using&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="mi"&gt;3260&lt;/span&gt;
&lt;span class="n"&gt;Binding&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;INADDR_ANY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;NetworkPortal&lt;/span&gt; &lt;span class="n"&gt;already&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;configFS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="cp"&gt;# create logical units (LUNs) aka disks inside our target&lt;/span&gt;
&lt;span class="cp"&gt;# in other words bind the target to its on-disk storage&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backstores&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="n"&gt;LUN&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;

&lt;span class="cp"&gt;# disable authentication&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Parameter&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="cp"&gt;# enable read/write mode&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;demo_mode_write_protect&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Parameter&lt;/span&gt; &lt;span class="n"&gt;demo_mode_write_protect&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="cp"&gt;# Enable generate_node_acls mode. This can be thought of as &lt;/span&gt;
&lt;span class="cp"&gt;# &amp;quot;ignore ACLs mode&amp;quot; -- both  authentication and LUN mapping&lt;/span&gt;
&lt;span class="cp"&gt;# will then use the TPG settings.&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;generate_node_acls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;Parameter&lt;/span&gt; &lt;span class="n"&gt;generate_node_acls&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tpg1&lt;/span&gt; &lt;span class="p"&gt;........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;acls&lt;/span&gt; &lt;span class="p"&gt;................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;ACLs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt; &lt;span class="p"&gt;................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;LUNs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lun0&lt;/span&gt; &lt;span class="p"&gt;.....................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Portals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3260&lt;/span&gt; &lt;span class="p"&gt;...........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="cp"&gt;# exit or Ctrl+D will save the configuration under /etc/target/saveconfig.json&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt;
&lt;span class="n"&gt;Global&lt;/span&gt; &lt;span class="n"&gt;pref&lt;/span&gt; &lt;span class="n"&gt;auto_save_on_exit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;Last&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;configs&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Configuration&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;saveconfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;

&lt;span class="cp"&gt;# after creating a second target the layout looks like this&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;.........................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[...]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;backstores&lt;/span&gt; &lt;span class="p"&gt;..............................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[...]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="p"&gt;..................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Storage&lt;/span&gt; &lt;span class="nl"&gt;Objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;fileio&lt;/span&gt; &lt;span class="p"&gt;.................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Storage&lt;/span&gt; &lt;span class="nl"&gt;Objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="p"&gt;..................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;activated&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;disk2&lt;/span&gt; &lt;span class="p"&gt;..................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;activated&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pscsi&lt;/span&gt; &lt;span class="p"&gt;..................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Storage&lt;/span&gt; &lt;span class="nl"&gt;Objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ramdisk&lt;/span&gt; &lt;span class="p"&gt;................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Storage&lt;/span&gt; &lt;span class="nl"&gt;Objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;iscsi&lt;/span&gt; &lt;span class="p"&gt;............................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt; &lt;span class="p"&gt;...................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;TPGs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tpg1&lt;/span&gt; &lt;span class="p"&gt;..................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;acls&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;ACLs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;LUNs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lun0&lt;/span&gt; &lt;span class="p"&gt;...............................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt; &lt;span class="p"&gt;....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Portals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3260&lt;/span&gt; &lt;span class="p"&gt;.....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target2&lt;/span&gt; &lt;span class="p"&gt;...................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;TPGs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tpg1&lt;/span&gt; &lt;span class="p"&gt;..................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;acls&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;ACLs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;LUNs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lun0&lt;/span&gt; &lt;span class="p"&gt;...............................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt; &lt;span class="p"&gt;....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Portals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3260&lt;/span&gt; &lt;span class="p"&gt;.....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loopback&lt;/span&gt; &lt;span class="p"&gt;.........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="cp"&gt;# enable CHAP and Reverse CHAP (mutual) for both discovery and login authentication&lt;/span&gt;

&lt;span class="cp"&gt;# discovery authentication is enabled under the global iscsi node&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;userid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;IncomingUser&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SomePassword1&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;mutual_userid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;OutgoingUser&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;mutual_password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AnotherPassword2&lt;/span&gt;

&lt;span class="cp"&gt;# login authentication is enabled either under the TPG node or under ACLs&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;userid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;IncomingUser2&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SomePassword3&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;mutual_userid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;OutgoingUser2&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;mutual_password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AnotherPassword4&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;activating targetcli service at boot is mandatory, otherwise your configuration won’t be read after a reboot&lt;/li&gt;
&lt;li&gt;if you type &lt;code&gt;cd&lt;/code&gt; &lt;em&gt;targetcli&lt;/em&gt; will display an interactive node tree&lt;/li&gt;
&lt;li&gt;after configuration is saved you don't need to restart anything&lt;/li&gt;
&lt;li&gt;the old &lt;em&gt;scsi-target-utils&lt;/em&gt; doesn't support discovery authentication&lt;/li&gt;
&lt;li&gt;&lt;em&gt;targetcli&lt;/em&gt; allows kernel memory to be shared as a block SCSI device via the
ramdisk backstore. It also supports "nullio" mode, which discards all writes, and returns all-zeroes for reads.&lt;/li&gt;
&lt;li&gt;I'm having troubles configuring portals to listen both on any IPv4 addresses and any IPv6 addresses
the system has. I've still not figured that out entirely.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information please read Chapter 25 from Red Hat's
&lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Storage_Administration_Guide/ch25.html"&gt;Storage Administration Guide&lt;/a&gt;&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category></entry><entry><title>SNAKE is no Longer Needed to Run Installation Tests in Beaker</title><link href="http://atodorov.org/blog/2014/07/18/snake-is-no-longer-needed-to-run-installation-tests-in-beaker/" rel="alternate"></link><updated>2014-07-18T23:05:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-07-18:blog/2014/07/18/snake-is-no-longer-needed-to-run-installation-tests-in-beaker/</id><summary type="html">&lt;p&gt;This is a quick status update for one of the pieces of
&lt;a href="/blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/"&gt;Fedora QA infrastructure&lt;/a&gt;
and mostly a self-note.&lt;/p&gt;
&lt;p&gt;Previously to control the kickstart configuration used during installation in Beaker one
had to either modify the job XML in Beaker or use SNAKE (&lt;code&gt;bkr workflow-snake&lt;/code&gt;) to render
a kickstart configuration from a Python template.&lt;/p&gt;
&lt;p&gt;SNAKE presented challenges when deploying and using
&lt;a href="https://beaker.fedoraproject.org"&gt;beaker.fedoraproject.org&lt;/a&gt; and is
virtually unmaintained.&lt;/p&gt;
&lt;p&gt;I present the new &lt;code&gt;bkr workflow-installer-test&lt;/code&gt; which uses Jinja2 templates to
generate a kickstart configuration when provisioning the system. This is already
available in beaker-client-0.17.1.&lt;/p&gt;
&lt;p&gt;The templates make use of all Jinja2 features (as far as I can tell) so you can create
very complex ones. You can even include snippets from one template into another if required.
The standard context that is passed to the template is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DISTRO&lt;/strong&gt; - if specified, the distro name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FAMILY&lt;/strong&gt; - as returned by Beaker server, e.g. &lt;em&gt;RedHatEnterpriseLinux6&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OS_MAJOR&lt;/strong&gt; and &lt;strong&gt;OS_MINOR&lt;/strong&gt; - also taken from Beaker server. e.g. OS_MAJOR=6 and OS_MINOR=5 for RHEL 6.5&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VARIANT&lt;/strong&gt; - if specified&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ARCH&lt;/strong&gt; - CPU architecture like x86_64&lt;/li&gt;
&lt;li&gt;any parameters passed to the test job with &lt;code&gt;--taskparam&lt;/code&gt;. They are processed last and can override previous values.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Installation related tests at &lt;a href="https://bitbucket.org/fedoraqa/fedora-beaker-tests"&gt;fedora-beaker-tests&lt;/a&gt;
have been updated with a &lt;code&gt;ks.cfg.tmpl&lt;/code&gt; templates to use with this new workflow.&lt;/p&gt;
&lt;p&gt;This workflow also has the ability to return boot arguments for the installer if needed. 
If any, they should be defined in a &lt;code&gt;{% block kernel_options %}{% endblock %}&lt;/code&gt;
block inside the template. A simpler variant is to define a comment line that stars with
&lt;em&gt;## kernel_options:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are still a few issues which need to be fixed before beaker.fedoraproject.org
can be used by the general public though. I will be writing another post about that
so stay tuned.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Book Review - Last 3 Months</title><link href="http://atodorov.org/blog/2014/05/13/book-review-last-3-months/" rel="alternate"></link><updated>2014-05-13T23:57:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-05-13:blog/2014/05/13/book-review-last-3-months/</id><summary type="html">&lt;p&gt;Hello folks, this is my book list for the past 3 months. It ranges from
tech and start-up related to Japanese and kid stories. Here's my quick review.&lt;/p&gt;
&lt;h2&gt;Lean UX&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/1449311652/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449311652&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=JNQIKHJJXU3KJ33H"&gt;Lean UX: Applying Lean Principles to Improve User Experience&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1449311652" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
is the second book I read on the subject after first reading
&lt;a href="/blog/2013/12/09/book-review-ux-for-lean-startups/"&gt;UX for Lean Startups&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is published before &lt;em&gt;UX for Lean Startups&lt;/em&gt; and is much more about principles than
any practical methods. Honestly I'm not sure if I took any real value out of it.
Maybe if I had read these two books in reverse order it would have been better.&lt;/p&gt;
&lt;h2&gt;The Hacienda - How Not to Run a Club&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/B00DEKLESK/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00DEKLESK&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=FOMGYFQW4BHGPPOL"&gt;The Hacienda: How Not to Run a Club&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B00DEKLESK" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Peter Hook is one of my favorites. It covers a great deal of music and clubland history,
depicts crazy parties and describes the adventure of owning one of the most
popular nightclubs in the world. All of that while struggling to make a buck and
pouring countless pounds into a black hole.&lt;/p&gt;
&lt;p&gt;The irony is The Hacienda became a legendary place only after it had closed down
and later on being demolished.&lt;/p&gt;
&lt;p&gt;A must read for anyone who is considering business in the entertainment industry
or wants to read a piece of history. My favorite quote of the book:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Years after, Tony Wilson found himself sitting opposite Madonna at dinner.&lt;/p&gt;
&lt;p&gt;‘I eventually plucked up the courage to look across the table to Madonna and ask,
“Are you aware that the first place you appeared outside of New York was our club in Manchester?”&lt;/p&gt;
&lt;p&gt;‘She gave me an ice-cold stare and said, “My memory seems to have wiped that.”’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Simple Science Experiments&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/0713428945/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0713428945&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=HU6TVCNR6DG67EFG"&gt;Simple Science Experiments&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0713428945" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Hans Jürgen Press is a very old book listing 200 experiments which you can
do at home using household materials. It is great for teaching basic science
to children. The book is very popular and is available in many languages
and editions - just search for it.&lt;/p&gt;
&lt;p&gt;I used to have this as a kid and was able to purchase the 1987 Bulgarian edition
at an antique bookstore in Varna two months ago.&lt;/p&gt;
&lt;h2&gt;Ronia, the Robber's Daughter&lt;/h2&gt;
&lt;p&gt;Decided to experiment a little bit and found
&lt;a href="http://www.amazon.com/gp/product/0140317201/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0140317201&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=FDHOPXQCZPMYCAA2"&gt;Ronia, the Robber's Daughter&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0140317201" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;.
It's a child's book telling the story of two kids whose fathers are rival
robbers. The book is an easy read (2-3 hrs before bed time) with stories
of magic woods, dwarfs and scary creatures mixed with human emotions
and the good vs. bad theme.&lt;/p&gt;
&lt;h2&gt;Japanese Short Stories&lt;/h2&gt;
&lt;p&gt;I've managed to find a 1973 compilation of Japanese short stories
translated into Bulgarian. Also one of my favorite books.&lt;/p&gt;
&lt;p&gt;If I'm not mistaken these are classic
Japanese authors, nothing modern or cutting edge. Most of the action happens
during the early 1900s as far as I can tell.
What impresses me most is the detailed description of nature and
surrounding details in all of the stories.&lt;/p&gt;
&lt;h2&gt;The Singularity Is Near&lt;/h2&gt;
&lt;p&gt;I've also started 
&lt;a href="http://www.amazon.com/gp/product/0143037889/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0143037889&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=BKMQ47NQEXNTDDRR"&gt;The Singularity Is Near: When Humans Transcend Biology&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0143037889" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Ray Kurzweil.&lt;/p&gt;
&lt;p&gt;It's a bit hard to read because the book is full of so many technical details
about genetics, nanotechnology, robotics and AI.&lt;/p&gt;
&lt;p&gt;Ray depicts a bright future where humans will transcend our biological
limitations and essentially become pure intelligence. Definitely a good
read and I will tell you more about it when I finish it.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;What have you been reading since January ? I'd love to see your book list
or connect on 
&lt;a href="https://www.goodreads.com/user/show/16191345-alexander-todorov"&gt;Goodreads&lt;/a&gt;.&lt;/p&gt;</summary><category term="Fedora"></category><category term="books"></category></entry><entry><title>OpenSource.com article - 10 steps to migrate your closed software to open source</title><link href="http://atodorov.org/blog/2014/05/06/opensource-dot-com-article-10-steps-to-migrate-your-closed-software-to-open-source/" rel="alternate"></link><updated>2014-05-06T16:14:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-05-06:blog/2014/05/06/opensource-dot-com-article-10-steps-to-migrate-your-closed-software-to-open-source/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Difio is a Django based application that keeps track of packages and tells you when they change.
Difio was created as closed software, then I decided to migrate it to open source ....&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Read more at
&lt;a href="http://opensource.com/business/14/5/10-steps-migrate-closed-to-open-source"&gt;OpenSource.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Btw I'm wondering if Telerik will share their experience opening up
the core of their Kendo UI framework on the
&lt;a href="http://www.telerik.com/campaigns/kendo-ui-build-free"&gt;webinar tomorrow&lt;/a&gt;.&lt;/p&gt;</summary><category term="Django"></category><category term="Fedora"></category></entry><entry><title>Screen Magnifier and Smart Phone! Has Anyone Used It ?</title><link href="http://atodorov.org/blog/2014/05/04/screen-magnifier-and-smart-phone-has-anyone-used-it/" rel="alternate"></link><updated>2014-05-04T10:25:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-05-04:blog/2014/05/04/screen-magnifier-and-smart-phone-has-anyone-used-it/</id><summary type="html">&lt;p&gt;Do you remember I was going to
&lt;a href="/blog/2013/08/01/laptop-vs-smartphone-part-one/"&gt;replace my laptop for a smartphone&lt;/a&gt;.
There's the issue with a desk working environment and one solution is to buy an external
display. The other one is to use a 
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=screen%20magnifier&amp;linkCode=ur2&amp;rh=i%3Aaps%2Ck%3Ascreen%20magnifier&amp;sprefix=screen%20magnifie%2Ccomputers%2C277&amp;tag=atodorovorg-20&amp;url=search-alias%3Daps&amp;linkId=KGF6F22QDNBRWAMP"&gt;screen magnifier&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
as shown on the picture
(source &lt;a href="http://www.ebay.co.uk/itm/2PC-Enlarger-Magnifier-for-Mobile-Screen-3-Times-for-All-Mobiles-Senior-2014-New-/181398272903?pt=UK_Holders_Mounts&amp;amp;hash=item2a3c2dfb87"&gt;eBay&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Mobile Screen Magnifier" src="/images/mobile_screen_magnifier.jpg" title="Mobile Screen Magnifier" /&gt;&lt;/p&gt;
&lt;p&gt;Does anyone have experience with these? Ultimately it should be possible to use
any 3x Fresnel lens magnifier and make your 5" phone display into a 15" laptop size one.
The magnifiers used for reading,
&lt;a href="http://www.amazon.com/gp/product/B001TLJXJ8/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B001TLJXJ8&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=HS6EY4BELCHBZ6HC"&gt;this one&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B001TLJXJ8" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
are cheap and portable but don't look very well around the edges.&lt;/p&gt;
&lt;p&gt;If anyone has such a device at hand I'd love to see if this works for you or not.
Thanks!&lt;/p&gt;</summary><category term="Fedora"></category></entry><entry><title>Spoiler: How to Open Source Existing Proprietary Code in 10 Steps</title><link href="http://atodorov.org/blog/2014/04/23/how-to-open-source-existing-proprietary-code-in-10-steps/" rel="alternate"></link><updated>2014-04-23T22:47:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-04-23:blog/2014/04/23/how-to-open-source-existing-proprietary-code-in-10-steps/</id><summary type="html">&lt;p&gt;We've heard about companies opening up their proprietary software products,
this is hardly news nowadays. But have you wondered what it is like to migrate
production software from closed to open source? I would like to share my own
experience about going open source as seen from behind the keyboard.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; was recently open sourced and the steps to go through
were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simplify - remove everything that can be deleted&lt;/li&gt;
&lt;li&gt;Create self contained modules aka re-organize the file structure&lt;/li&gt;
&lt;li&gt;Separate internal from external modules&lt;/li&gt;
&lt;li&gt;Refactor the existing code&lt;/li&gt;
&lt;li&gt;Select license and update copyright&lt;/li&gt;
&lt;li&gt;Update 3rd party dependencies to latest versions and add requirements.txt&lt;/li&gt;
&lt;li&gt;Add README and verbose settings example&lt;/li&gt;
&lt;li&gt;Split difio/ into its own git repository&lt;/li&gt;
&lt;li&gt;Test stand alone deployments on fresh environment&lt;/li&gt;
&lt;li&gt;Announce&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Do you want to know more? Use the comments and tell me what exactly!
I'm writing a longer version of this article so stay tuned!&lt;/p&gt;</summary><category term="Fedora"></category><category term="Django"></category></entry><entry><title>Positive Biological Effects of Open Source on Humans</title><link href="http://atodorov.org/blog/2014/04/08/positive-biological-effects-of-open-source-on-humans/" rel="alternate"></link><updated>2014-04-08T16:45:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-04-08:blog/2014/04/08/positive-biological-effects-of-open-source-on-humans/</id><summary type="html">&lt;p&gt;Recently I watched a &lt;a href="http://www.youtube.com/watch?v=ReRcHdeUG9Y"&gt;talk by Simon Sinek&lt;/a&gt;
about leadership. He talks about Endorphins, Dopamine, Serotonin and Oxytocin
and how they make us feel and act a particular way. Then I though - maybe that's why working
in the open source field always felt great and natural to me. Maybe we humans
are programmed to follow the open source way!&lt;/p&gt;
&lt;p&gt;This article scratches the surface where body chemistry and open source intersect.
I hope it will help both volunteers and community managers get an insight of the
driving forces in our bodies, how they relate to the open source world and promt
further exploration. By seeking to better understand the positive effects and avoid
the negative ones we can become better contributors and leaders which ultimately 
helps our communities.&lt;/p&gt;
&lt;h2&gt;Endorphins&lt;/h2&gt;
&lt;p&gt;Endorphins stand for endurance. Their job is to mask physical pain and it has been
suggested to have evolutionary roots based on the theory that they helped with the
survival of early humans. Athletes experience so called Runner's high.&lt;/p&gt;
&lt;p&gt;In the open source world one may work on a feature or task for hours and hours
without feeling exhausted. The task itself keeps you going and excited.
This is endorphins going through your brain.&lt;/p&gt;
&lt;p&gt;In software one may experience an endorphin rush during public release days for example. For large
projects like Fedora the release process includes many steps and may take several hours.
During all that time the release engineer is usually available regardless of their native
time zone.&lt;/p&gt;
&lt;p&gt;Effects of endorphins could potentially increase the likelihood of injury or extreme exhaustion,
as pain sensation could be more easily ignored. Work and rest cycles need to be properly balanced.&lt;/p&gt;
&lt;h2&gt;Dopamine&lt;/h2&gt;
&lt;p&gt;This is the feeling when we achieve our goals or found something we were looking for.
Dopamine helps us get things done! This is why we're told to write down our goals and then
cross them off. It makes people more productive.&lt;/p&gt;
&lt;p&gt;Getting dopamine through open source is very easy - all you need to do is fix a bug,
then another one, and another one, and another one ... After every task you complete the body
gets a small dopamine fix. "Release early, release often ..." and you get your fix :). &lt;/p&gt;
&lt;p&gt;Dopamine however is highly addictive and destructive if unbalanced. It has the same negative
effects as any other addiction - alcohol, drugs, etc. Be aware of that and don't fall for the
performance trap.&lt;/p&gt;
&lt;p&gt;Endorphins and Dopamine are so called selfish chemicals. You can get them without external help.
The next two are the social chemicals.&lt;/p&gt;
&lt;h2&gt;Serotonin&lt;/h2&gt;
&lt;p&gt;It is responsible for feelings of pride and status and assessing social rank.
Serotonin is produced when you are recognized for achievements by the open source community
or credited by somebody (e.g. Johnny Bravo mentioned a great idea on IRC today).&lt;/p&gt;
&lt;p&gt;As a contributor one may work on items which will help you get recognition but ultimately this
is not for you to decide. However practice shows that credit and recognition are relatively easy
to get in the open source world provided one has contributed to make the project and the
community better in some sort.&lt;/p&gt;
&lt;p&gt;In software this is being granted commit rights to a repository, being in the top spot of
some metrics, having your blog read by other members or simply people asking for help or 
what you think about some topic.&lt;/p&gt;
&lt;p&gt;Serotonin is considered the leadership chemical. As one becomes a leader recognized by the
community there's a catch - the more your status goes up the more work you have to
do. The more people recognize you as the leader the more they expect you to sacrifice yourself
in case it all goes Pete Tong. If you are not ready to step up find a more suitable place in
the community instead.&lt;/p&gt;
&lt;h2&gt;Oxytocin&lt;/h2&gt;
&lt;p&gt;Oxytocin is responsible for feelings of love, trust and friendship. It makes us feel safe.
It is also very good for the body because it makes us healthier, boosts our
immune system, increases ability to solve problems and increases creativity.&lt;/p&gt;
&lt;p&gt;One way to get Oxytocin is by physical touch - e.g. a hand shake. This is probably one of
the reasons beer gatherings are so popular among open source developers.
Working digitally we need a way to
reinforce human bonds in our communities. Knowing the person on the other end of the wire
ultimately makes us feel safer. If you are in open source just go for that conference or a
local beer bash you wanted to go - it is good for you (but don't get drunk).&lt;/p&gt;
&lt;p&gt;Another way to get Oxytocin is by performing or witnessing acts of human generosity. 
This comes natural in open source world where people give up their free time and energy to work towards
a shared goal. Just by working in an open source environment you get all that goodness for you.&lt;/p&gt;
&lt;p&gt;The best thing about Oxytocin is that it is not addictive and slowly builds up in the body. 
The bad side is that it takes a while to build up. This is why you have to stay a little longer
in open source before it starts feeling safe and welcoming.&lt;/p&gt;
&lt;h2&gt;Cortisol&lt;/h2&gt;
&lt;p&gt;The last chemical Simon talks about is Cortisol. It is bad, very bad. It will crash your body.
Cortisol means stress. It is designed to keep humans (and animals) alive by hyper tuning
our senses in case of danger. Trouble is you are not supposed to have it in your body for
long periods of time because it shuts down non-essential systems to deliver that extra energy.&lt;/p&gt;
&lt;p&gt;Luckily most open source projects are not stressful and I think can be considered a safe place
to work in. In the end one can always shift to another role or move to another project if it
becomes too pressing.&lt;/p&gt;
&lt;p&gt;By committing
to help another member or perform service to the community our bodies get all the good
stuff and beat the negative. Service to a community is exactly what open source does!
See, humans are programmed to live and work the open source way! &lt;/p&gt;</summary><category term="Fedora"></category></entry><entry><title>How Do You Test Thai Scalable Fonts</title><link href="http://atodorov.org/blog/2014/03/17/how-do-you-test-thai-scalable-fonts/" rel="alternate"></link><updated>2014-03-17T22:51:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-03-17:blog/2014/03/17/how-do-you-test-thai-scalable-fonts/</id><summary type="html">&lt;p&gt;Recently I wrote about &lt;a href="/blog/2014/03/04/how-do-you-test-fonts/"&gt;testing fonts&lt;/a&gt;.
I finally managed to get an answer from the authors of &lt;em&gt;thai-scalable-fonts&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;What is your approach for testing Fonts-TLWG?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's not automated test. What it does is generate PDF with sample
texts at several sizes (the waterfall), pangrams, and glyph table.
It needs human eyes to investigate.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What kind of problems is your test suite designed for ?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Shaping&lt;/li&gt;
&lt;li&gt;Glyph coverage&lt;/li&gt;
&lt;li&gt;Metrics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also make use of fontforge features to make spotting errors
easier, such as
- Show extremas
- Show almost vertical/horizontal lines/curves&lt;/p&gt;
&lt;p&gt;Theppitak Karoonboonyanan, Fonts-TLWG&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>How do You Test Fonts</title><link href="http://atodorov.org/blog/2014/03/04/how-do-you-test-fonts/" rel="alternate"></link><updated>2014-03-04T21:30:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-03-04:blog/2014/03/04/how-do-you-test-fonts/</id><summary type="html">&lt;p&gt;&lt;a href="/blog/2014/03/03/last-week-in-fedora-qa/"&gt;Previously&lt;/a&gt; I mentioned about testing
fonts but didn't have any idea how this is done. Authors
Khaled Hosny of &lt;a href="http://www.amirifont.org/"&gt;Amiri Font&lt;/a&gt; and Steve White of
&lt;a href="http://www.gnu.org/software/freefont/"&gt;GNU FreeFont&lt;/a&gt; provided valuable insight
and material for further reading. I've asked them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is your approach for testing ?&lt;/li&gt;
&lt;li&gt;What kind of problems is your test suite designed for ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's what they say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Currently my test suite consists of text strings (or lists of code
points) and expected output glyph sequences and then use HarfBuzz
(through its hb-shape command line tool) to check that the fonts always
output the expected sequence of glyphs, sometimes with the expected
positioning as well. Amiri is a complex font that have many glyph
substitution and positioning rules, so the test suite is designed to
make sure those rules are always executed correctly to catch regressions
in the font (or in HarfBuzz, which sometimes happens since the things I
do in my fonts are not always that common).&lt;/p&gt;
&lt;p&gt;I think Lohit project do similar testing for their fonts, and HarfBuzz
itself has a similar test suite with a bunch of nice scripts (though
they are not installed when building HarfBuzz, yet[1]).&lt;/p&gt;
&lt;p&gt;Recently I added more kinds of tests, namely checking that OTS[2]
sanitizes the fonts successfully as this is important for using them on
the web, and a test for a common mistakes I made in my feature files
that result in unexpected blank glyphs in the fonts.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/behdad/harfbuzz/pull/12"&gt;https://github.com/behdad/harfbuzz/pull/12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khaledhosny/ots"&gt;https://github.com/khaledhosny/ots&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Khaled Hosny, Amiri Font&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The answer is complicated.  I'll do what I can to answer.&lt;/p&gt;
&lt;p&gt;First, the FontForge application has a "verification" function which
can be run from a script, and which identifies numerous technical
problems.&lt;/p&gt;
&lt;p&gt;FontForge also has a "Find Problems" function that I run by hand.&lt;/p&gt;
&lt;p&gt;The monospaced face has special restrictions, first that all glyphs of
non-zero width must be of the same width, and second, that all glyphs
lie within the vertical bounds of the font.&lt;/p&gt;
&lt;p&gt;Beside this, I have several other scripts that check for a few things
that FontForge doesn't (duplicate names, that glyph slots agree with
Unicode code within Unicode character blocks).&lt;/p&gt;
&lt;p&gt;Several tests scripts have yet to be uploaded to the version control
system -- because I'm unsure of them.&lt;/p&gt;
&lt;p&gt;There is a more complicated check of TrueType tables, which attempts
to find cases of tables that have been "shadowed" by the
script/language specification of another table.  This is helpful, but
works imperfectly.&lt;/p&gt;
&lt;p&gt;ALL THAT SAID,&lt;/p&gt;
&lt;p&gt;In the end, every script used in the font has to be visually checked.
This process takes me weeks, and there's nothing systematic about it,
except that I look at printout of documents in each language to see if
things have gone awry.&lt;/p&gt;
&lt;p&gt;For a few documents in a few languages, I have images of how text
&lt;em&gt;should&lt;/em&gt; look, and can compare that visually (especially important for
complex scripts.)&lt;/p&gt;
&lt;p&gt;A few years back, somebody wrote a clever script that generated images
of text and compared them pixel-by-pixel.  This was a great idea, and
I wish I could use it more effectively, but the problem was that it
was much too sensitive.  A small change to the font (e.g. PostScript
parameters) would cause a small but global change in the rendering.
Also the rendering could vary from one version of the rendering
software to another.  So I don't use this anymore.&lt;/p&gt;
&lt;p&gt;That's all I can think of right now.&lt;/p&gt;
&lt;p&gt;In fact, testing has been a big problem in getting releases out.  In
the past, each release has taken at least two weeks to test, and then
another week to fix and bundle...if I was lucky.  And for the past
couple of years, I just haven't been able to justify the time
expenditure.  (Besides this, there are still a few serious problems
with the fonts--once again, a matter of time.)&lt;/p&gt;
&lt;p&gt;Have a look at the bugs pages, to get an idea of work being done.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://savannah.gnu.org/bugs/?group=freefont"&gt;http://savannah.gnu.org/bugs/?group=freefont&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Steve White, GNU FreeFont&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm not sure if ImageMagic or PIL can help solve the rendering and compare
problem Steve is talking about. They can definitely be used for
&lt;a href="/blog/2013/05/17/linux-and-python-tools-to-compare-images/"&gt;image comparison&lt;/a&gt;
so maybe coupled with some rendering library it's worth a quick try.&lt;/p&gt;
&lt;p&gt;If you happen to know more about fonts, please join me in 
&lt;a href="/blog/2014/02/28/action-improving-test-coverage-in-fedora/"&gt;improving overall test coverage in Fedora&lt;/a&gt;
by designing test suites for fonts packages.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Last Week in Fedora QA</title><link href="http://atodorov.org/blog/2014/03/03/last-week-in-fedora-qa/" rel="alternate"></link><updated>2014-03-03T10:23:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-03-03:blog/2014/03/03/last-week-in-fedora-qa/</id><summary type="html">&lt;p&gt;Here are some highlights from the past week discussions in Fedora which I found
interesting or participated in.&lt;/p&gt;
&lt;h2&gt;Call to Action: Improving Overall Test Coverage in Fedora&lt;/h2&gt;
&lt;p&gt;I can not stress enough how important it is to further
&lt;a href="/blog/2014/02/28/action-improving-test-coverage-in-fedora/"&gt;improve test coverage in Fedora&lt;/a&gt;!
You can help too. Here's how:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Join upstream and create a test suite for a package you find interesting;&lt;/li&gt;
&lt;li&gt;Provide patches - &lt;a href="https://lists.fedoraproject.org/pipermail/devel/2014-February/196035.html"&gt;first patch&lt;/a&gt;
came in less than 30 minutes of initial announcement :);&lt;/li&gt;
&lt;li&gt;Review packages in the wiki and help identify false negatives;&lt;/li&gt;
&lt;li&gt;Forward to people who may be interested to work on these items;&lt;/li&gt;
&lt;li&gt;Share and promote in your local open source and developer communities;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Auto BuildRequires&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://people.redhat.com/~rjones/auto-buildrequires/"&gt;Auto-BuildRequires&lt;/a&gt;
is a simple set of scripts which compliments &lt;code&gt;rpmbuild&lt;/code&gt; by
automatically suggesting BuildRequires lines for the just built package.&lt;/p&gt;
&lt;p&gt;It would be interesting to have this integrated into Koji and/or
continuous integration environment and compare the output between every two
consecutive builds (iow older and newer package versions). It sounds like a
good way to identify newly added or removed dependencies and update the package
specs accordingly.&lt;/p&gt;
&lt;h2&gt;How To Test Fonts Packages&lt;/h2&gt;
&lt;p&gt;This is exactly what 
&lt;a href="https://lists.fedoraproject.org/pipermail/test/2014-February/120570.html"&gt;Christopher Meng asked&lt;/a&gt;
and frankly I have no idea. &lt;/p&gt;
&lt;p&gt;I've come across a few fonts packages (&lt;em&gt;amiri-fonts&lt;/em&gt;, &lt;em&gt;gnu-free-fonts&lt;/em&gt; and &lt;em&gt;thai-scalable-fonts&lt;/em&gt;)
which seem to have some sort of test suites but I don't know how they work or
what type of problems they test for. On top of that all three have a different
way of doing things (e.g. not using a standardized test framework or a variation of such).&lt;/p&gt;
&lt;p&gt;I'll keep you posted on this once I manage to get more info from upstream developers.&lt;/p&gt;
&lt;h2&gt;Is URL Field in RPM Useless&lt;/h2&gt;
&lt;p&gt;So is it? Opinions here differ from totally useless to "don't remove it, I need it".
However I run a small test and from 2574 RPMs on the source DVD there is around 
40% of "something different than HTTP 200 OK". This means &lt;strong&gt;40% potentially broken URLs&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;The majority are responses in the 3XX range and only less than 10% are 
actual errors (4XX, 5XX, missing URLs or connection errors).&lt;/p&gt;
&lt;p&gt;It will be interesting to see if this can be removed from &lt;code&gt;rpm&lt;/code&gt; altogether.
I don't think it will happen soon but if we don't use it why have it there? &lt;/p&gt;
&lt;p&gt;My script for the test is
&lt;a href="https://github.com/atodorov/fedora-scripts/blob/master/test-rpm-url-field.sh"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Call to Action: Improving Overall Test Coverage in Fedora</title><link href="http://atodorov.org/blog/2014/02/28/action-improving-test-coverage-in-fedora/" rel="alternate"></link><updated>2014-02-28T14:46:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-28:blog/2014/02/28/action-improving-test-coverage-in-fedora/</id><summary type="html">&lt;p&gt;Around Christmas 2013
&lt;a href="/blog/2013/12/24/upstream-test-suite-status-of-fedora-20/"&gt;I said&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;... it looks like on average 30% of the packages execute their test suites at
build time in the %check section and less than 35% have test suites at all!
There’s definitely room for improvement and I plan to focus on this during 2014!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've recently started working on this goal by first identifying potential offending
packages and discussing the idea on Fedora's
&lt;a href="https://lists.fedoraproject.org/pipermail/devel/2014-February/thread.html"&gt;devel&lt;/a&gt;,
&lt;a href="https://lists.fedoraproject.org/pipermail/packaging/2014-February/thread.html"&gt;packaging&lt;/a&gt;
and &lt;a href="https://lists.fedoraproject.org/pipermail/test/2014-February/thread.html"&gt;test&lt;/a&gt;
mailing lists.&lt;/p&gt;
&lt;p&gt;May I present you nearly &lt;strong&gt;2000 packages&lt;/strong&gt; which need your love:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fedoraproject.org/wiki/QA/Testing_in_check"&gt;wiki/QA/Testing_in_check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fedoraproject.org/wiki/QA/Missing_upstream_test_suites"&gt;wiki/QA/Missing_upstream_test_suites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The intent for these pages is to serve as a source of working material for Fedora 
volunteers.&lt;/p&gt;
&lt;h2&gt;How Can I Help&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Join upstream and create a test suite for a package you find interesting;&lt;/li&gt;
&lt;li&gt;Provide patches - &lt;a href="https://lists.fedoraproject.org/pipermail/devel/2014-February/196035.html"&gt;first patch&lt;/a&gt;
came in less than 30 minutes of initial announcement :);&lt;/li&gt;
&lt;li&gt;Review packages in the wiki and help identify false negatives;&lt;/li&gt;
&lt;li&gt;Forward to people who may be interested to work on these items;&lt;/li&gt;
&lt;li&gt;Share and promote in your local open source and developer communities;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Important&lt;/h2&gt;
&lt;p&gt;If you would like to gain some open source practice and QA experience I will
happily provide mentorship and general help so you can start working on Fedora.
Just ping me!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Skip or Render Specific Blocks from Jinja2 Templates</title><link href="http://atodorov.org/blog/2014/02/21/skip-or-render-specific-blocks-from-jinja2-templates/" rel="alternate"></link><updated>2014-02-21T00:08:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-21:blog/2014/02/21/skip-or-render-specific-blocks-from-jinja2-templates/</id><summary type="html">&lt;p&gt;I wasn't able to find detailed information on how to skip rendering
or only render specific blocks from Jinja2 templates so here's my solution.
Hopefully you find it useful too.&lt;/p&gt;
&lt;p&gt;With below template I want to be able to render &lt;strong&gt;only&lt;/strong&gt; &lt;em&gt;kernel_options&lt;/em&gt; block
as a single line and then render the rest of the template &lt;strong&gt;excluding&lt;/strong&gt; &lt;em&gt;kernel_options&lt;/em&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;kernel_options&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;console=tty0&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;debug&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        debug=1&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="nv"&gt;kernel_options&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;OS_MAJOR&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;key --skip&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;%packages&lt;/span&gt;
&lt;span class="x"&gt;@base&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;OS_MAJOR&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;%end&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To render a particular block you have to use the low level Jinja API
&lt;em&gt;&lt;a href="http://jinja.pocoo.org/docs/api/#jinja2.Template.blocks"&gt;template.blocks&lt;/a&gt;&lt;/em&gt;.
This will return a dict of block rendering functions which need a &lt;em&gt;Context&lt;/em&gt; to work with.&lt;/p&gt;
&lt;p&gt;The second part is trickier. To remove a block we have to create an extension
which will filter it out. The provided &lt;em&gt;SkipBlockExtension&lt;/em&gt; class does
exactly this.&lt;/p&gt;
&lt;p&gt;Last but not least - if you'd like to use both together you have to disable
caching in the &lt;em&gt;Environment&lt;/em&gt; (so you get a fresh template every time), render
your blocks first, configure &lt;em&gt;env.skip_blocks&lt;/em&gt; and render the entire template
without the specified blocks.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jinja2.ext&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Extension&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jinja2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FileSystemLoader&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SkipBlockExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Extension&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SkipBlockExtension&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;skip_blocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;filter_stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;block_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;in_endblock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;block_begin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;block&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;block_level&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;look&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;skip_blocks&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                        &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;block_level&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;endblock&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;in_endblock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;block_end&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;in_endblock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;in_endblock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
                    &lt;span class="n"&gt;block_level&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;block_level&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;OS_MAJOR&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ARCH&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;x86_64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;abs_path&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;dir_name&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abs_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;base_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abs_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FileSystemLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir_name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SkipBlockExtension&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="n"&gt;cache_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;# disable cache b/c we do 2 get_template()&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# first render only the block we want&lt;/span&gt;
    &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;kernel_options&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new_context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Boot Args:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;---------------------------&amp;quot;&lt;/span&gt;

    &lt;span class="c"&gt;# now instruct SkipBlockExtension which blocks we don&amp;#39;t want&lt;/span&gt;
    &lt;span class="c"&gt;# and get a new instance of the template with these blocks removed&lt;/span&gt;
    &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;skip_blocks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;kernel_options&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;---------------------------&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above code results in the following output:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;j2&lt;/span&gt; 
&lt;span class="n"&gt;Boot&lt;/span&gt; &lt;span class="nl"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tty0&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; 
&lt;span class="o"&gt;---------------------------&lt;/span&gt;

&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;skip&lt;/span&gt;

&lt;span class="nf"&gt;%packages&lt;/span&gt;
&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;
&lt;span class="o"&gt;---------------------------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Teaser: this is part of my effort to replace SNAKE with a client side
kickstart template engine for
&lt;a href="/blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/"&gt;Beaker&lt;/a&gt;
so stay tuned!&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category><category term="Fedora"></category></entry><entry><title>7 Years and 1400 Bugs Later as Red Hat QA</title><link href="http://atodorov.org/blog/2014/02/19/7-years-1400-bugs-red-hat-qa/" rel="alternate"></link><updated>2014-02-19T10:43:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-19:blog/2014/02/19/7-years-1400-bugs-red-hat-qa/</id><summary type="html">&lt;p&gt;Today I celebrate my 7th year working at Red Hat's Quality Engineering department.
Here's my story!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Platform QE" src="/images/redhat_platform_qe.jpg" title="Platform QE" /&gt;&lt;/p&gt;
&lt;p&gt;On a cold winter Friday in 2007 I left my job as a software developer in Sofia,
packed my stuff together, purchased my &lt;a href="http://amzn.to/1hlPuyr"&gt;first laptop&lt;/a&gt; and
on Sunday jumped the train to Brno to join the Release Test Team at Red Hat.
Little did I know what it was all about. When I was offered the position
I was on a very noisy bus and had to pick between two positions. I didn't quite understood
what were the options and just picked the second one.
Luckily everything turned out great and continues to this day.&lt;/p&gt;
&lt;p&gt;I'm sharing my experience and highlighting some bugs which I've found.
Hopefully you will find this interesting and amusing. If you are a QA engineer
I urge you to take a look at &lt;a href="http://red.ht/1gbHElQ"&gt;my public bug portfolio&lt;/a&gt;,
dive into details, read the comments and learn as much as you can.&lt;/p&gt;
&lt;h2&gt;What do I do exactly&lt;/h2&gt;
&lt;p&gt;From all QE teams in Red Hat, Release Test Team is the first one and
last one to test a release. The team has both technical function and a more managerial one.
Our focus is on the core Red Hat Enterprise Linux product. 
Unfortunately I can't go into much details because this is not a public facing unit.
I will limit myself to &lt;strong&gt;public and/or non-sensitive information&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We are the first to test a new nightly build or a
snapshot of the upcoming RHEL release. If the tree is installable other teams take over
and do their magic. At the end when bits are published live we're the last to
verify that content is published where it is expected to be. In short this is
covering the work of the release engineering team which is to build a product and
publish the contents for consumption.&lt;/p&gt;
&lt;p&gt;The same principles apply to Fedora although the engagement here is less demanding.&lt;/p&gt;
&lt;p&gt;Personally I have been and continue to be responsible for Red Hat Enterprise Linux 5
family of releases. It's up to me to give the go ahead for further testing or request
a re-spin. This position
also has the power to block and delay the GA release if not happy with testing or
there is a considerable risk of failure until things are sorted out.&lt;/p&gt;
&lt;p&gt;Like in other QA teams I create test plan documents, write test case scenarios,
implement test automation scripts (and sometimes tools), regularly execute said test
plans and test cases, find and report any new bugs and verify old ones are fixed. 
Most importantly make sure RHEL installs and is usable for further testing :).&lt;/p&gt;
&lt;p&gt;Sometimes I have to deal with capacity planning and as RHEL 5 installation 
test lead I have to organize and manage the entire installation testing campaign
for that product.&lt;/p&gt;
&lt;p&gt;My favorite testing technique is
&lt;a href="https://en.wikipedia.org/wiki/Exploratory_testing"&gt;exploratory testing&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Stats and Numbers&lt;/h2&gt;
&lt;p&gt;It is hard (if not impossible) to &lt;a href="https://github.com/atodorov/qe-metrics"&gt;measure QA work&lt;/a&gt;
with numbers alone but here are some interesting facts about my experience so far.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nearly 1400 bugs filed (1390 at the time of writing);&lt;/li&gt;
&lt;li&gt;Reported bugs across 32 different products. Top 3 being RHEL 6, RHEL 5 and Fedora (1000+ bugs);&lt;/li&gt;
&lt;li&gt;Top 3 components for reporting bugs against: anaconda, releng, kernel;&lt;/li&gt;
&lt;li&gt;Nearly 100 bugs filed in my first year 2007;&lt;/li&gt;
&lt;li&gt;The 3 most productive years being 2010, 2009, 2011 (800 + bugs); &lt;/li&gt;
&lt;li&gt;Filed 200 bugs/year which is about 1 bug/day considering holidays;&lt;/li&gt;
&lt;li&gt;35th top bug reporter (excluding robot accounts). I was in top 10 a few years back;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many of &lt;a href="http://red.ht/1gbHElQ"&gt;the bugs I report&lt;/a&gt; are private so if you'd like
to know more stats just ask me and I'll see what I can do.&lt;/p&gt;
&lt;h2&gt;2007&lt;/h2&gt;
&lt;p&gt;My very first bug is &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=231860"&gt;RHBZ #231860&lt;/a&gt;(private)
which is about the graphical update tool Pup which used to show the wrong number of available
updates.&lt;/p&gt;
&lt;p&gt;Then I've played with adding &lt;a href="https://fedorahosted.org/dogtail/"&gt;Dogtail&lt;/a&gt; support to Anaconda.
While initially this was rejected (Fedora 6/7), it was &lt;a href="https://fedoraproject.org/wiki/Anaconda/Features/Dogtail"&gt;implemented&lt;/a&gt;
few years later (Fedora 9) and then removed once again during the big Anaconda rewrite.&lt;/p&gt;
&lt;p&gt;I've spent my time working extensively on RHEL 5 battling with multi-lib issues, SELinux denials and
generally making the 5 family less rough. Because I was still on-boarding I generally worked
on everything I could get my hands on and also did some work on RHEL3-U9 (latest release
before EOL) and some RHEL4-U6 testing.&lt;/p&gt;
&lt;p&gt;With ia64 on RHEL3 I found a corner case
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=240782"&gt;kernel bug&lt;/a&gt; which flooded the serial
console with messages and caused a multi-CPU system to freeze.&lt;/p&gt;
&lt;h2&gt;In 2008 Time went backwards&lt;/h2&gt;
&lt;p&gt;My first bug in 2008 is &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=428280"&gt;RHBZ #428280&lt;/a&gt;.
glibc introduced SHA-256/512 hashes for hashing passwords with crypt but that wasn't documented.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2014-02-21&lt;/strong&gt;
While testing 5.1 to 5.2 updates I found
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=435475"&gt;RHBZ #435475&lt;/a&gt; - a severe
&lt;strong&gt;performance degradation&lt;/strong&gt; in the package installation process. Upgrades
took almost twice as much time to complete, rising &lt;strong&gt;from 4 hours to 7 hours&lt;/strong&gt;
depending on hardware and package set. This was a tough one to test and verify.
&lt;strong&gt;END UPDATE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While dogfooding the 5.2 beta in March I hit
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=437252"&gt;RHBZ #437252&lt;/a&gt; - kernel: Timer ISR/0: Time went backwards.
To this date this is one of my favorite bugs with a great error message!&lt;/p&gt;
&lt;p&gt;Removal of a hack in RPM led to file conflicts under &lt;code&gt;/usr/share/doc&lt;/code&gt; in several packages:
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448905"&gt;RHBZ #448905&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448906"&gt;RHBZ #448906&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448907"&gt;RHBZ #448907&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448909"&gt;RHBZ #448909&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448910"&gt;RHBZ #448910&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448911"&gt;RHBZ #448911&lt;/a&gt;
which is also the first time I happen to file several bugs in a row.&lt;/p&gt;
&lt;p&gt;ia64 couldn't boot with encrypted partitions -
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=464769"&gt;RHBZ #464769&lt;/a&gt;,
RHEL 5 introduced support for ext4 - &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=465248"&gt;RHBZ #465248&lt;/a&gt;
and I've hit a fontconfig issue during upgrades - &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=469190"&gt;RHBZ #469190&lt;/a&gt;
which continued to resurface occasionally during the next 5 years.&lt;/p&gt;
&lt;p&gt;This is the year when I took over responsibility for the general installation
testing of RHEL 5 from James Laska and will continue to do so until it reaches end-of-life!&lt;/p&gt;
&lt;p&gt;I've also worked on RHEL 4, Fedora and even the OLPC project. On the testing side of things
I've participated in testing
&lt;a href="https://fedoraproject.org/wiki/QA/TestPlans/Networking"&gt;Fedora networking on the XO&lt;/a&gt;
hardware and worked on translation and general issues.&lt;/p&gt;
&lt;h2&gt;2009 - here comes RHEL 6&lt;/h2&gt;
&lt;p&gt;This year starts my 3 most productive years period. &lt;/p&gt;
&lt;p&gt;The second bug reported this
year is &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=481338"&gt;RHBZ #481338&lt;/a&gt; which
also mentions one of my hobbies - wrist watches. While browsing a particular
website Xorg CPU usage rose to 100%. I've seen a number of these through the years
and I'm still not sure if its Xorg or Firefox or both to blame. And I still see my
CPU usage go to 100% just like that and drain my battery. I'm open to suggestions how
to test and debug what's going on as it doesn't happen in a reproducible fashion.&lt;/p&gt;
&lt;p&gt;I happened to work on RHEL 4, RHEL 5, Fedora and the upcoming RHEL 6 releases and
managed to file bugs in a row not once but twice. 
I wish I was paid per bug reported back then :).&lt;/p&gt;
&lt;p&gt;The first series was about empty debuginfo packages with both empty packages which
shouldn't have existed at all
(e.g. &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=500628"&gt;redhat-release&lt;/a&gt;) 
and missing debuginfo information for binary packages
(e.g. &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=500612"&gt;nmap&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The second series is around 100 bugs which had to do with the texinfo
documentation of packages when installed with --excludedocs. The first one
is &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=515909"&gt;RHBZ #515909&lt;/a&gt; and the
last one &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=516014"&gt;RHBZ #516014&lt;/a&gt;.
While this works great for bumping up your bug count it made lots of developers
unhappy and not all bugs were fixed. Still the use case is valid and these
were proper software errors. It is also the first time I've used a script to
file the bugs automatically and not by hand.&lt;/p&gt;
&lt;p&gt;Near the end of the year I've started testing installation on new hardware
by the likes of Intel and AMD before they hit the market. I had the pleasure to work
with the latest chipsets and CPUs, even sometime pre-release versions and make sure
Red Hat Enterprise Linux installed and worked properly on them. I've stopped doing
this last year to free up time for other tasks.&lt;/p&gt;
&lt;h2&gt;2010 - one bug a day keeps developers at bay :)&lt;/h2&gt;
&lt;p&gt;My most productive year with 1+ bugs per day.&lt;/p&gt;
&lt;p&gt;2010 starts with a bug about file conflicts (private one) and continues with the same
narrative throughout the year.
As a matter of fact I did a small experiment and found around &lt;strong&gt;50000&lt;/strong&gt;
(you read that right, fifty thousand) potentially
conflicting files, mostly between multi-lib packages, which were being ignored by RPM
due to its multi-lib policies. However these were primarily man pages or documentation
and most of them didn't get fixed. The proper fix would have been to introduce a
-docs sub-package and split these files from the actual binaries. Fortunately the world
migrated to 64bit only and this isn't an issue anymore.&lt;/p&gt;
&lt;p&gt;By that time RHEL 6 development was running at its peak capacity and there were Beta
versions available. Almost the entire year I've been working on internal RHEL 6 snapshots
and discovering the many new bugs introduced with tons of new features in the installer.
Some of the new features included better IPv6 support, dracut and KVM.&lt;/p&gt;
&lt;p&gt;An interesting set of bugs from September are the rpmlint errors and warnings ones,
for example &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=634931"&gt;RHBZ #634931&lt;/a&gt;. I just
run the most basic test tool against some packages. It generated lots of false negatives
but also revealed bugs which were fixed.&lt;/p&gt;
&lt;p&gt;Although there were many bugs filed this year I don't see any particularly interesting ones.
It's been more like lots of work to improve the overall quality than exploring
edge cases and finding interesting failures. If you find a bug from this period that you
think is interesting I will comment on it.&lt;/p&gt;
&lt;h2&gt;2011 - Your system may be seriously compromised&lt;/h2&gt;
&lt;p&gt;This is the last year of my 3 year top cycle. &lt;/p&gt;
&lt;p&gt;It starts with &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=666687"&gt;RHBZ #666687&lt;/a&gt; -
a patch for my crappy printer-scanner-coffee maker which I've been carrying around
since &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=498228"&gt;2009&lt;/a&gt; when I bought it.&lt;/p&gt;
&lt;p&gt;I was still working primarily on RHEL 6 but helped test the latest RHEL 4 release
before it went end-of-life. The interesting thing about it was that unlike other
released RHEL4-U9 was not available on installation media but only as an update from
RHEL4-U8. This was a great experience which you happen to see
&lt;a href="https://access.redhat.com/site/support/policy/updates/errata/"&gt;every 4 to 5 years&lt;/a&gt; or so.&lt;/p&gt;
&lt;p&gt;Btw I've also led the installation testing effort and RTT team through the last few
RHEL 4 releases but given the product was approaching EOL there weren't many changes
and things went smoothly.&lt;/p&gt;
&lt;p&gt;A minor side activity was me playing around with
&lt;a href="/blog/2011/03/14/usb-multi-seat-on-red-hat-enterprise-linux-6/"&gt;USB Multi-seat&lt;/a&gt;
and finding a few bugs here and there along the way.&lt;/p&gt;
&lt;p&gt;Another interesting activity in 2011 was proof-reading the entire product documentation
before its release which I can now relate to the 
&lt;a href="/blog/2014/02/03/fosdem-2014-report-day-2-testing-and-automation/"&gt;Testing Documentation&lt;/a&gt;
talk at FOSDEM 2014.&lt;/p&gt;
&lt;p&gt;In 2011 I've started using the cloud and most notably Red Hat's OpenShift PaaS service.
First internally as an early adopter and later externally after the product was announced
to the public. There are a few interesting bugs here but they are private and I'm not
at liberty to share although they've all been fixed since then.&lt;/p&gt;
&lt;p&gt;An interesting bug with NUMA, Xen and ia64
(&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=696599"&gt;RHBZ #696599&lt;/a&gt; - private) had
me and devel banging our heads against the wall until we figured out that on this
particular system the NUMA configuration was not suitable for running Xen virtualization.&lt;/p&gt;
&lt;p&gt;Can you spot the problem here ?&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;kickstartGui&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Could not open display because no X server is running.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Try running &amp;#39;system-config-kickstart --help&amp;#39; for a list of options.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Be honest and use the comments form to tell me what you've found. If you struggled
then see &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=703085"&gt;RHBZ #703085&lt;/a&gt; and come
back again to comment. I'd love to hear from you.&lt;/p&gt;
&lt;p&gt;What do you do when you see an error message saying: 
&lt;strong&gt;Your system may be seriously compromised! /usr/sbin/NetworkManager tried to load a kernel module.&lt;/strong&gt;
This is the scariest error message I've ever seen. Luckily its just
SELinux overreacting, see &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=704090"&gt;RHBZ #704090&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;2012 is in the red zone&lt;/h2&gt;
&lt;p&gt;While the number of reported bugs dropped significantly compared to previous
years this is the year when I've reported almost exclusively high priority and
urgent bugs, the first one being 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=771901"&gt;RHBZ #771901&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=799384"&gt;RHBZ #799384&lt;/a&gt;(against Fedora)
is one of the rare cases when I was able to contribute
(although just by raising awareness) to localization and improved support for
Bulgarian and Cyrillic. 
The other one case was &lt;a href="http://atodorov.org/blog/2013/10/11/fedora-20-gnome-3-dot-10-test-day-post-mortem/"&gt;last year&lt;/a&gt;.
Btw I find it strange that although 
&lt;a href="https://en.wikipedia.org/wiki/Cyrillic_script"&gt;Cyrillic was invented by Bulgarians&lt;/a&gt;
we didn't (or still don't) have a native font co-maintainer.
Somebody please step up!&lt;/p&gt;
&lt;p&gt;The red zone bugs continue to span till the end of the year across RHEL 5, 6 and
early cuts of RHEL 7 with a pinch of OpenShift and some internal and external test tools.&lt;/p&gt;
&lt;h2&gt;In 2013 Bugzilla hit 1 million bugs&lt;/h2&gt;
&lt;p&gt;The year starts with a very annoying and still not fixed bug against ABRT.
It's very frustrating when the tool which is supposed to help you file bugs
doesn't work properly, see &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=903591"&gt;RHBZ #903591&lt;/a&gt;.
It's a known fact that
&lt;a href="/2012/07/13/mission-impossible-abrt-bugzilla-plugin-on-rhel6/"&gt;ABRT has problems&lt;/a&gt;
and for this scenario I may have a 
&lt;a href="/blog/2013/10/12/tip-installing-missing-debuginfo-packages-for-abrt/"&gt;tip&lt;/a&gt; for you.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=923416"&gt;RHBZ #923416&lt;/a&gt; - another one of these
100% CPU bugs. As I said they happen from time to time and mostly go by unfixed or
partially fixed because of their nature. Btw as I'm writing this post and have
a few tabs open in Firefox it keeps using between 15% and 20% CPU and the CPU
temperature is over 90 degrees C. And all I'm doing is writing text in the console.
Help!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=967229"&gt;RHBZ #967229&lt;/a&gt; - a minor one but
reveals an important thing - your output (and input for that matter) methods may
be producing different results. Worth testing if your software supports more than one.&lt;/p&gt;
&lt;p&gt;This year I did some odd jobs working on several of Red Hat's layered products mainly
Developer Toolset. It wasn't a tough job and was a refreshing break away from the mundane
installation testing.&lt;/p&gt;
&lt;p&gt;While I stopped working actively on the various RHEL families which are under development
or still supported I happened to be one of top 10 bug reporters for high/urgent priority bugs
for RHEL 7. In appreciation Red Hat sent me lots of corporate gifts and the Platform QE hoodie
pictured at the top of the page. Many thanks!&lt;/p&gt;
&lt;p&gt;In the summer Red Hat's 
&lt;a href="/blog/2013/08/23/red-hats-bugzilla-hits-one-million-bugs/"&gt;Bugzilla hit One Million bugs&lt;/a&gt;.
The closest I come to this milestone is
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=999941"&gt;RHBZ #999941&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I finally managed to transfer most of my responsibilities to co-workers and joined
the Fedora QA team as a part-time contributor. I had some highs and lows with
&lt;a href="/blog/2013/10/07/fedora-20-virtualization-and-gnome-test-days-at-init-lab-this-week/"&gt;Fedora test days in Sofia&lt;/a&gt;
as well. Good thing is I scored another 15 bugs across the
&lt;a href="/blog/2013/10/08/fedora-20-virtualization-test-day-post-mortem/"&gt;virtualization stack&lt;/a&gt;
and &lt;a href="/blog/2013/10/11/fedora-20-gnome-3-dot-10-test-day-post-mortem/"&gt;GNOME 3.10&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The year wraps up with another series of identical bugs,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1024729"&gt;RHBZ #1024729&lt;/a&gt; and
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1025289"&gt;RHBZ #1025289&lt;/a&gt; for example.
As it &lt;a href="/blog/2013/12/24/upstream-test-suite-status-of-fedora-20/"&gt;turned out&lt;/a&gt;
lots of packages don't have any test suites at all and those
which do don't always execute them automatically in %check. I've promised myself
to improve this but still haven't had time to work on it. Hopefully by
March I will have something in the works.&lt;/p&gt;
&lt;h2&gt;2014 - Fedora QA improvement&lt;/h2&gt;
&lt;p&gt;Last two months I've been working on some internal projects and looking
a little bit into improving processes, test coverage and QA infrastructure - 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1064895"&gt;RHBZ #1064895&lt;/a&gt;.
And Rawhide (upcoming Fedora 21) isn't behaving -
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1063245"&gt;RHBZ #1063245&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My goal for this year is to do more work on improving the overall test coverage
of Fedora and together with the Fedora QA team bring an
&lt;a href="/blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/"&gt;open testing infrastructure&lt;/a&gt;
to the community. &lt;/p&gt;
&lt;p&gt;Let's see how well that plays out!&lt;/p&gt;
&lt;h2&gt;What do I do now&lt;/h2&gt;
&lt;p&gt;During the last year I have gradually changed my responsibilities to work more on Fedora.
As a volunteer in the Fedora QA I'm regularly testing installation
of Rawhide trees and try to work closely with the community. I still have to
manage RHEL 5 test cycles where I don't expect nothing disruptive at this stage in the
product life-cycle!&lt;/p&gt;
&lt;p&gt;I'm open to any ideas and help which can improve test coverage and quality of software
in Fedora. If you're just joining the open source world this is an excellent
opportunity to do some good, get noticed and even maybe get a job. I will definitely
help you get through the process if you're willing to commit your time to this.&lt;/p&gt;
&lt;p&gt;I hope this long post has been useful and fun to read. Please use the comments form to tell
me if I'm missing something or you'd like to know more.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Looking forward to the next 7 years!&lt;/em&gt;&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Tip: How to Build updates.img for Fedora</title><link href="http://atodorov.org/blog/2014/02/07/tip-how-to-build-updates.img-for-fedora/" rel="alternate"></link><updated>2014-02-07T11:01:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-07:blog/2014/02/07/tip-how-to-build-updates.img-for-fedora/</id><summary type="html">&lt;p&gt;Anaconda the Fedora, CentOS and Red Hat Enterprise Linux installer has the
capability to incorporate
&lt;a href="https://fedoraproject.org/wiki/Anaconda/Updates"&gt;updates at runtime&lt;/a&gt;.
These updates are generally distributed as an &lt;code&gt;updates.img&lt;/code&gt; file. Here is how
to easily build one from a working installation tree.&lt;/p&gt;
&lt;p&gt;Instead of using the git sources to build an updates.img I prefer using the SRPM
from the tree which I am installing. &lt;strike&gt;This way the resulting updates image will be
more consistent with the anaconda version already available in the tree. And in theory
everything you need to build it should already be available as well.&lt;/strike&gt;
&lt;strong&gt;UPDATE 2014-02-08:&lt;/strong&gt; You can also build the &lt;code&gt;updates.img&lt;/code&gt; from the git source tree
which is shown at the bottom of this article. &lt;/p&gt;
&lt;p&gt;The following steps work for me on a Fedora 20 system. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download the source RPM for anaconda from the tree and extract the sources to a working
directory. Then;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;anaconda-20.25.16-1
git init
git add .
git commit -m &lt;span class="s2"&gt;&amp;quot;initial import&amp;quot;&lt;/span&gt;
git tag anaconda-20.25.16-1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The above steps will create a local git repository and tag the initial contents before
modification. The tag is required later by the script which creates the updates image;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After making your changes commit them and from the top anaconda directory execute:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;./scripts/makeupdates -t anaconda-20.25.16-1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also add RPM contents to the updates.img but you need to download the packages first:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;yumdownloader python-coverage python-setuptools

./scripts/makeupdates -t anaconda-20.25.16-1 -a ~/python-coverage-3.7-1.fc20.x86_64.rpm -a ~/python-setuptools-1.4.2-1.fc20.noarch.rpm 
BUILDDIR /home/atodorov/anaconda-20.25.16-1
Including anaconda
&lt;span class="m"&gt;2&lt;/span&gt; RPMs added manually:
python-setuptools-1.4.2-1.fc20.noarch.rpm
python-coverage-3.7-1.fc20.x86_64.rpm
&lt;span class="nb"&gt;cd&lt;/span&gt; /home/atodorov/anaconda-20.25.16-1/updates &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rpm2cpio /home/atodorov/python-setuptools-1.4.2-1.fc20.noarch.rpm &lt;span class="p"&gt;|&lt;/span&gt; cpio -dium
&lt;span class="m"&gt;3534&lt;/span&gt; blocks
&lt;span class="nb"&gt;cd&lt;/span&gt; /home/atodorov/anaconda-20.25.16-1/updates &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rpm2cpio /home/atodorov/python-coverage-3.7-1.fc20.x86_64.rpm &lt;span class="p"&gt;|&lt;/span&gt; cpio -dium
&lt;span class="m"&gt;1214&lt;/span&gt; blocks
&amp;lt;stdin&amp;gt; to &amp;lt;stdout&amp;gt; &lt;span class="m"&gt;4831&lt;/span&gt; blocks

updates.img ready
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the above example I have only modified the top level anaconda file (&lt;code&gt;/usr/sbin/anaconda&lt;/code&gt;
inside the installation environment) experimenting with
&lt;a href="http://nedbatchelder.com/code/coverage/"&gt;python-coverage&lt;/a&gt; integration.&lt;/p&gt;
&lt;p&gt;You are done! Make the &lt;code&gt;updates.img&lt;/code&gt; available to Anaconda and start using it!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2014-02-08:&lt;/strong&gt; If you prefer working with the anaconda source tree here's
how to do it:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git clone git://git.fedorahosted.org/git/anaconda.git
&lt;span class="nb"&gt;cd &lt;/span&gt;anaconda/
git checkout anaconda-20.25.16-1 -b my_feature-branch

... make changes ...

git commit -a -m &lt;span class="s2"&gt;&amp;quot;Fixed something&amp;quot;&lt;/span&gt;

./scripts/makeupdates -t anaconda-20.25.16-1
&lt;/pre&gt;&lt;/div&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>FOSDEM 2014 Report - Day #2 Testing and Automation</title><link href="http://atodorov.org/blog/2014/02/03/fosdem-2014-report-day-2-testing-and-automation/" rel="alternate"></link><updated>2014-02-03T22:54:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-03:blog/2014/02/03/fosdem-2014-report-day-2-testing-and-automation/</id><summary type="html">&lt;p&gt;&lt;img alt="Testing and Automation" src="/images/fosdem/2014/testing_automation.jpg" title="Testing and Automation" /&gt;&lt;/p&gt;
&lt;p&gt;FOSDEM was hosting the
&lt;a href="https://fosdem.org/2014/schedule/track/testing_and_automation/"&gt;Testing and automation devroom&lt;/a&gt;
for the second year and this was the very reason I attended the conference. I managed to get in
early and stayed until 15:00 when I had to leave to catch my flight (which was late :(). &lt;/p&gt;
&lt;p&gt;There were 3 talks given by Red Hat employees in the testing devroom which was a nice opportunity
to meet some of the folks I've been working on IRC with. Unfortunately I didn't meet anyone from
Fedora QA. Not sure if they were attending or not. &lt;/p&gt;
&lt;p&gt;All the talks were interesting so see the official schedule and video for more details. I will
highlight only the items I saw as particularly interesting or have not heard of before. &lt;/p&gt;
&lt;h2&gt;ANSTE&lt;/h2&gt;
&lt;p&gt;ANSTE - Advanced Network Service Testing Environment is a test infrastructure controller,
something like our own &lt;a href="http://beaker-project.org/"&gt;Beaker&lt;/a&gt; but designed to create complex
networking environments. I think it lacks many of the provisioning features built in Beaker
and integration with various hypervisors and bare-metal provisioning. What it seems to do better
(as far as I can tell from the talk) is to deploy virtual systems and create more complex network
configuration between them. Not something I will need in the near future but definitely worth
a look at. &lt;/p&gt;
&lt;h2&gt;cwrap&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;cwrap is...&lt;/p&gt;
&lt;p&gt;a set of tools to create a fully isolated network environment to test client/server components on a single host.
It provides synthetic account information, hostname resolution and support for privilege separation.
The heart of cwrap consists of three libraries you can preload to any executable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That one was the coolest technology I've seen so far although I may not need to use it at all,
hmmm maybe testing DHCP fits the case.&lt;/p&gt;
&lt;p&gt;It evolved from the Samba project and takes advantage of the order in which
libraries are searched when resolving functions. When you preload the project libraries
to any executable they will override standard libc functions for working with sockets,
user accounts and privilege escalation.&lt;/p&gt;
&lt;p&gt;The socket_wrapper library redirects networking sockets through local UNIX sockets and
gives you the ability to test applications which need privileged ports with a local developer
account. &lt;/p&gt;
&lt;p&gt;The nss_wrapper library provides artificial information for user and group accounts,
network name resolution using a hosts file and loading and testing of NSS modules.&lt;/p&gt;
&lt;p&gt;The uid_wrapper library allows uid switching as a normal user (e.g. fake root) and
supports user/group changing in the local thread using the syscalls (like glibc).&lt;/p&gt;
&lt;p&gt;All of these wrapper libraries are controlled via environment variables and definitely
makes testing of daemons and networking applications easier.&lt;/p&gt;
&lt;h2&gt;Testing Documentation&lt;/h2&gt;
&lt;p&gt;That one was just scratching the surface of an entire branch of testing which I've not
even considered before. The talk also explains why it is hard to test documentation and
what possible solutions there are. &lt;/p&gt;
&lt;p&gt;If you write user guides and technical articles which need to
stay current with the software this is definitely the place to start.&lt;/p&gt;
&lt;h2&gt;Automation in the Foreman Infrastructure&lt;/h2&gt;
&lt;p&gt;The last &lt;a href="http://ftp.osuosl.org/pub/fosdem//2014/previews/fosdem/fosdem_2014/dv/UD2218A/2014-02-02/12_51_36.ogv"&gt;talk&lt;/a&gt;
I've listened to. Definitely the best one from a general testing approach
point of view. Greg talked about starting with Foreman unit tests, then testing the merged PR,
then integration tests, then moving on to test the package build and then the resulting packages themselves. &lt;/p&gt;
&lt;p&gt;These guys try to even test their own infrastructure (infra as code) and the test suites
they use to test everything else. It's all about automation and the level of confidence
you have in the entire process.&lt;/p&gt;
&lt;p&gt;I like the fact that no single testing approach can make you confident enough before shipping
the code and that they've taken into account changes which get introduced at various places
(e.g. 3rd party package upgrades, distro specific issues, infrastructure changes and such) &lt;/p&gt;
&lt;p&gt;If I had to attend only one session it would have been this one. There are many things for me
to take back home and apply to my work on Fedora and RHEL.&lt;/p&gt;
&lt;p&gt;If you find any of these topics remotely interesting I advise you to wait until FOSDEM video
team uploads the recordings and watch the entire session stream. I'm definitely missing a lot
of stuff which can't be easily reproduced in text form.&lt;/p&gt;
&lt;p&gt;You can also find my report of the first FOSDEM'14 day on Saturday
&lt;a href="/blog/2014/02/03/fosdem-2014-report-day-1-python-stands-lightning-talks/"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="events"></category><category term="Fedora"></category><category term="QA"></category></entry><entry><title>FOSDEM 2014 Report - Day #1 Python, Stands and Lightning Talks</title><link href="http://atodorov.org/blog/2014/02/03/fosdem-2014-report-day-1-python-stands-lightning-talks/" rel="alternate"></link><updated>2014-02-03T21:37:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-03:blog/2014/02/03/fosdem-2014-report-day-1-python-stands-lightning-talks/</id><summary type="html">&lt;p&gt;As promised I'm starting catching up on blogging after being sick and traveling.
Here's my report of what I saw and found interesting at this year's
&lt;a href="https://fosdem.org/2014/"&gt;FOSDEM&lt;/a&gt; which was held the last weekend in Brussels.&lt;/p&gt;
&lt;p&gt;On Friday evening I've tried to attend the FOSDEM beer event at Delirium Cafe but
had a bad luck. At 21:30 the place was already packed with people. I managed to get
access to only one of the rooms but it looked like the wrong one :(. I think the space
is definitely small for all who are willing to attend.&lt;/p&gt;
&lt;p&gt;During Saturday morning I did a quick sight-seeing most notably 
&lt;a href="www.migsworldwines.be/"&gt;Mig's wine shop&lt;/a&gt; and the area around it since I've never
been to this part of the city before. Then I took off to FOSDEM arriving at noon
(IOW not too late).&lt;/p&gt;
&lt;p&gt;I've spent most of my day at building K where project stands were and I stayed quite
a long time around the Python and Perl stands meeting new people and talking to them
about their upgrade practices and how they manage package dependencies
(aka promoting &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fedora Octopus" src="/images/fosdem/2014/fedora_octopus.jpg" title="Fedora Octopus" /&gt;&lt;/p&gt;
&lt;p&gt;Fedora stand was busy with 3D printing this year. I've seen 3D printing
before but here I was amazed of the fine-grained quality of the pieces produced.
This is definitely something to have in mind if you are building physical products.&lt;/p&gt;
&lt;p&gt;Red Hat's presence was very strong this year. In addition to the numerous talks they
gave there were also oVirt and OpenShift Origin stands which were packed with people.
I couldn't even get close to say hi or take a picture. &lt;/p&gt;
&lt;p&gt;&lt;img src="/images/fosdem/2014/doudou_linux.png" alt="DoudouLinux" style="float:left;margin-right:10px;"/&gt;&lt;/p&gt;
&lt;p&gt;Near the end of the day I went to listen to some of the lightning talks. The ones that
I liked the most were MATE Desktop and DoudouLinux. &lt;/p&gt;
&lt;p&gt;The thing about MATE which I liked
is that they have a &lt;a href="https://github.com/mate-desktop/mate-university"&gt;MATE University&lt;/a&gt;
initiative which is targeting developers who want to learn how to develop MATE extensions.
This is pretty cool with respect to community and developers on-boarding. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.doudoulinux.org"&gt;DoudouLinux&lt;/a&gt; is a Debian based distribution targeted at
small children (2 or 3 years old) based on simple desktop and educational activities.
I've met project leader and founder Jean-Michel Philippe who gave the talk. We chatted for
a while when Alejandro Simon from &lt;a href="http://www.kano.me/"&gt;Kano&lt;/a&gt; came around and showed us a prototype
of their computer for children. I will definitely give DoudouLinux a try and maybe pre-order Kano as well.&lt;/p&gt;
&lt;p&gt;In the evening there was a Python beer event at Delirium and after that dinner at
Chez Leon where I had snails and rabbit with cherries in cherry beer sauce.
I've had a few beers with Marc-Andre from &lt;a href="http://egenix.com"&gt;eGenix&lt;/a&gt;
and Charlie from &lt;a href="http://www.clark-consulting.eu/"&gt;Clark Consulting&lt;/a&gt; and the talk
was mostly about non-technical stuff which was nice.&lt;/p&gt;
&lt;p&gt;After that we went back to Delirium and
re-united with &lt;a href="http://akurtakov.blogspot.com"&gt;Alexander Kurtakov&lt;/a&gt; and other folks from
Red Hat for more cherry beer!&lt;/p&gt;
&lt;p&gt;Report of the second day of FOSDEM'14 on Sunday is
&lt;a href="/blog/2014/02/03/fosdem-2014-report-day-2-testing-and-automation/"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="events"></category><category term="Fedora"></category><category term="Python"></category></entry><entry><title>Upstream Test Suite Status of Fedora 20</title><link href="http://atodorov.org/blog/2013/12/24/upstream-test-suite-status-of-fedora-20/" rel="alternate"></link><updated>2013-12-24T08:01:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-12-24:blog/2013/12/24/upstream-test-suite-status-of-fedora-20/</id><summary type="html">&lt;p&gt;Last week I've expressed my thoughts about the state of
&lt;a href="https://lists.fedoraproject.org/pipermail/test/2013-December/119637.html"&gt;upstream test suites in Fedora&lt;/a&gt;
along with some other ideas. Following the response on this thread I'm starting
to analyze all SRPM packages in Fedora 20 in order to establish a baseline. Here are my initial findings.&lt;/p&gt;
&lt;h2&gt;What's Inside&lt;/h2&gt;
&lt;p&gt;I've found two source distributions for Fedora 20:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;Fedora-20-source-DVD.iso&lt;/code&gt; file which to my knowledge contains the sources
of all packages that comprise the installation media;&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Everything/source/SRPMS/&lt;/code&gt; directory which appears to contain the sources
of everything else available in the Fedora 20 repositories.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are &lt;strong&gt;2574&lt;/strong&gt; SRPM packages in Fedora-20 source DVD and &lt;strong&gt;14364&lt;/strong&gt; SRPMs
in the Everything/ directory. 9,2G vs. 41G.&lt;/p&gt;
&lt;h2&gt;Test Suite Execution In %check&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://fedoraproject.org/wiki/Packaging:Guidelines#Test_Suites"&gt;Fedora Packaging Guidelines&lt;/a&gt;
state&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the source code of the package provides a test suite,
it should be executed in the %check section,
whenever it is practical to do so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In my research I found &lt;strong&gt;738&lt;/strong&gt; SRPMs on the DVD which have a %check
section and &lt;strong&gt;4838&lt;/strong&gt; such packages under &lt;code&gt;Everything/&lt;/code&gt;. This is &lt;strong&gt;28,6%&lt;/strong&gt; and &lt;strong&gt;33,6%&lt;/strong&gt;
respectively.&lt;/p&gt;
&lt;h2&gt;Test Suite Existence&lt;/h2&gt;
&lt;p&gt;A quick grep for either &lt;code&gt;test/&lt;/code&gt; or &lt;code&gt;tests/&lt;/code&gt; directories in the package sources revealed
&lt;strong&gt;870&lt;/strong&gt; SRPM packages in the source DVD which are very likely to have a test suite.
This is &lt;strong&gt;33,8%&lt;/strong&gt;. &lt;strike&gt;I wasn't able to inspect the &lt;code&gt;Everything/&lt;/code&gt; directory with this script
because it takes too long to execute and my system crashed out of memory.
I will update this post later with that info.&lt;/strike&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE 2014-01-02&lt;/em&gt;: 
In the &lt;code&gt;Everything/&lt;/code&gt; directory only &lt;strong&gt;4481&lt;/strong&gt; (&lt;strong&gt;31,2%&lt;/strong&gt;) SRPM packages appear to have
test suites.&lt;/p&gt;
&lt;p&gt;The scripts and raw output are available at &lt;a href="https://github.com/atodorov/fedora-scripts"&gt;https://github.com/atodorov/fedora-scripts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So it looks like on average &lt;strong&gt;30%&lt;/strong&gt; of the packages execute their test suites at build
time in the %check section and less than &lt;strong&gt;35%&lt;/strong&gt; have test suites at all!
There's definitely room for improvement and I plan to focus on this during 2014!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Can I Use Android Phone as Smart Card Reader</title><link href="http://atodorov.org/blog/2013/12/18/can-i-use-android-phone-as-smart-card-reader/" rel="alternate"></link><updated>2013-12-18T23:09:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-12-18:blog/2013/12/18/can-i-use-android-phone-as-smart-card-reader/</id><summary type="html">&lt;p&gt;Today I had troubles with my Omnikey CardMan 6121 smart card reader.
For some reason it will not detect the card inside and was unusable.
&lt;code&gt;/var/log/messages&lt;/code&gt; was filled with  &lt;em&gt;Card Not Powered&lt;/em&gt; messages:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Dec 18 11:17:55 localhost pcscd: eventhandler.c:292:EHStatusHandlerThread() Error powering up card: -2146435050 0x80100016
Dec 18 11:18:01 localhost pcscd: winscard.c:368:SCardConnect() Card Not Powered
Dec 18 11:18:02 localhost pcscd: winscard.c:368:SCardConnect() Card Not Powered
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="/images/omnikey_cardman_6121.gif" style="float:right;margin-left:20px;" /&gt;&lt;/p&gt;
&lt;p&gt;I've found the solution in 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=531998"&gt;RHBZ #531998&lt;/a&gt;. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I've found the problem, and it's purely mechanical.
Omnikey has simply screwed up when they designed this reader.
When the reader is inserted into the ExpressCard slot, it gets slightly
compressed. This is enough to trigger the mechanical switch that detects
insertions. If I jam something in there and force it apart, then pcscd
starts reporting that the slot is empty.&lt;/p&gt;
&lt;p&gt;Pierre Ossman, https://bugzilla.redhat.com/show_bug.cgi?id=531998#c12&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So I tried moving the smart card a millimeter back and forth inside the reader and
that fixed it for me.&lt;/p&gt;
&lt;p&gt;This smart card is standard SIM size and I wonder if it is possible to use
&lt;a href="http://amzn.to/1dnl2gN"&gt;dual SIM&lt;/a&gt; smart phones and &lt;a href="http://amzn.to/18XpWlp"&gt;tablets&lt;/a&gt;
as a reader? I will be happy to work on the software side if there is an open source
project already (e.g. OpenSC + drivers for Android). If not, why not? &lt;/p&gt;
&lt;p&gt;If you happen to have information on the subject please share it in the comments.
Thanks!&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Bug in Python URLGrabber/cURL on Fedora and Amazon Linux</title><link href="http://atodorov.org/blog/2013/11/29/bug-python-urlgrabber-curl-fedora-amazon-linux/" rel="alternate"></link><updated>2013-11-29T14:05:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-29:blog/2013/11/29/bug-python-urlgrabber-curl-fedora-amazon-linux/</id><summary type="html">&lt;p&gt;Accidentally I have discovered a bug for Python's
URLGrabber module which has to do with change in behavior in libcurl.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urlgrabber.grabber&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;URLGrabber&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;URLGrabber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlgrab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https://s3.amazonaws.com/production.s3.rubygems.org/gems/columnize-0.3.6.gem&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/tmp/columnize.gem&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;lt;console&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;976&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urlgrab&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_retry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;retryfunc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;880&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_retry&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;retryfunc&lt;/span&gt;
    &lt;span class="n"&gt;fo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PyCurlFileObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1056&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_do_open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1307&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_do_open&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_set_opts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1161&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_set_opts&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curl_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSL_VERIFYHOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssl_verify_host&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The code above works fine with curl-7.27 or older while it breaks with curl-7.29 and
newer. As explained by 
&lt;a href="http://lists.baseurl.org/pipermail/yum-devel/2013-November/010428.html"&gt;Zdenek Pavlas&lt;/a&gt;
the reason is an internal change in libcurl which doesn't accept a value of 1 anymore!&lt;/p&gt;
&lt;p&gt;The bug is reproducible with a newer libcurl version and a vanilla urlgrabber==3.9.1
from PyPI (e.g. inside a virtualenv). The latest python-urlgrabber RPM packages in both
Fedora and Amazon Linux already have the fix.&lt;/p&gt;
&lt;p&gt;I have tested the patch proposed by Zdenek and it works for me. I still have no idea why
there aren't any updates released on PyPI though!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category><category term="cloud"></category><category term="Python"></category></entry><entry><title>Open Source Quality Assurance Infrastructure for Fedora QA</title><link href="http://atodorov.org/blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/" rel="alternate"></link><updated>2013-11-19T14:12:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-19:blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Beaker test lab&amp;quot;" src="/images/fedora/beaker.png" title="Beaker test lab" /&gt;&lt;/p&gt;
&lt;p&gt;In the last few weeks I've been working together with 
&lt;a href="https://fedoraproject.org/wiki/User:Tflink"&gt;Tim Flink&lt;/a&gt; and
&lt;a href="https://fedoraproject.org/wiki/User:Kparal"&gt;Kamil Paral&lt;/a&gt; from the Fedora QA
team on bringing some installation testing expertise to Fedora and establishing
an &lt;a href="http://beaker.fedoraproject.org/bkr/"&gt;open source test lab&lt;/a&gt;
to perform automated testing in. The infrastructure is
already in relatively usable condition so I've decided to share this information
with the community. &lt;/p&gt;
&lt;h2&gt;Beaker is Running Our Test Lab&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://beaker-project.org/"&gt;Beaker&lt;/a&gt; is the software suite that powers the test
lab infrastructure. It is quite complex, with many components and sometimes not
very straight-forward to set up. Tim has been working on that with me giving it
a try and reporting issues as they have been discovered and fixed. &lt;/p&gt;
&lt;p&gt;In the process of working on this I've managed to create
&lt;a href="http://gerrit.beaker-project.org/#/q/owner:%22Alexander+Todorov%22,n,z"&gt;couple of patches&lt;/a&gt;
against Beaker and friends. They are still pending release in a future version
because of more urgent bug fixes which need to released first.&lt;/p&gt;
&lt;h2&gt;SNAKE is The Kickstart Template Server&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://fedorahosted.org/snake/"&gt;SNAKE&lt;/a&gt; is a client/server Python framework used
to support Anaconda installations. It supports plain text ks.cfg files, IIRC those
were static templates, no variable substitution.&lt;/p&gt;
&lt;p&gt;The other possibility is Python templates based on Pykickstart:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pykickstart.constants&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KS_SCRIPT_POST&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pykickstart.parser&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Script&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;installdefaults&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;InstallKs&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;Anaconda autopart&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;InstallKs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;@base&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clearpart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initAll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;autopart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;autopart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;cp /tmp/ks.cfg /mnt/sysimage/root/ks.cfg || &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s"&gt;cp /run/install/ks.cfg /mnt/sysimage/root/ks.cfg&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;KS_SCRIPT_POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inChroot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ks&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At the moment SNAKE is essentially abandoned but feature complete.
I'm thinking about adopting the project just in case we need to make some fixes.
Will let you know more about this when it happens. &lt;/p&gt;
&lt;h2&gt;Open Source Test Suite&lt;/h2&gt;
&lt;p&gt;I have been working on opening up several test cases for what we (QE) call
a tier #1 installation test suite. They can be found in
&lt;a href="http://taskbot.cloud.fedoraproject.org/cgit/fedora-beaker-tests/"&gt;git&lt;/a&gt;.
The tests are base on &lt;a href="https://fedorahosted.org/beakerlib/"&gt;beakerlib&lt;/a&gt; and
the legacy RHTS framework which is now part of Beaker.&lt;/p&gt;
&lt;p&gt;This effort has been coordinated with Kamil as part of a pilot
project he's responsible for. I've been executing the same test suite against
earlier Fedora 20 snapshots but using an internal environment. Now everything
is going out in the open.&lt;/p&gt;
&lt;h2&gt;Executing The Tests&lt;/h2&gt;
&lt;p&gt;Well you can't do that - YET! There are command line client tools for Fedora
but Beaker and SNAKE are not well suited for use outside a restricted network
like LAN or VPN. There are issues with authentication most notably for SNAKE.&lt;/p&gt;
&lt;p&gt;At the moment I have to ssh through two different systems to get proper access.
However this is been worked on. I've read about a rewrite which will allow Beaker
to utilize a custom authentication framework like FAS for example. Hopefully that
will be implemented soon enough.&lt;/p&gt;
&lt;p&gt;I will also like to see the test systems have direct access to the Internet for
various reasons but this is not without its risks either. This is still to be
decided.&lt;/p&gt;
&lt;p&gt;If you are interested anyway see the &lt;code&gt;kick-tests.sh&lt;/code&gt; file in the test suite for
examples and command line options.&lt;/p&gt;
&lt;h2&gt;Test Results&lt;/h2&gt;
&lt;p&gt;The first successfully completed
&lt;a href="http://beaker.fedoraproject.org/bkr/jobs/"&gt;test jobs&lt;/a&gt; are jobs 50 to 58.
There's a failure in one of the test cases, namely SELinux related 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1027148"&gt;RHBZ #1027148&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;From what I can tell the lab is now working as expected and we can start doing
some testing against Fedora development snapshots.&lt;/p&gt;
&lt;p&gt;Ping me or join #fedora-qa on irc.freenode.net if you'd like to join Fedora QA!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Tip: Cut Leading or Trailing Fields From Strings in Bash</title><link href="http://atodorov.org/blog/2013/11/19/tip-cut-leading-or-trailing-fields-from-strings-in-bash/" rel="alternate"></link><updated>2013-11-19T00:16:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-19:blog/2013/11/19/tip-cut-leading-or-trailing-fields-from-strings-in-bash/</id><summary type="html">&lt;p&gt;Today I was looking for a command sequence to cut a string in two by predefined
delimiter (e.g. like &lt;code&gt;cut&lt;/code&gt; does). I wanted to get the last field only and all
fields but the last as separate variables.&lt;/p&gt;
&lt;p&gt;The proposed solutions I've found suggested using &lt;code&gt;awk&lt;/code&gt; but I don't like it.
Here's a simple solution using &lt;code&gt;cut&lt;/code&gt; and &lt;code&gt;rev&lt;/code&gt; which can extract arbitrary
field counts from the end of the string. &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f1 -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f-2 -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
fedoraproject.org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f-3 -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
phx2.fedoraproject.org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f2- -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
buildvm-08.phx2.fedoraproject
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f3- -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
buildvm-08.phx2
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f4- -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
buildvm-08
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The magic here is done by &lt;code&gt;rev&lt;/code&gt; which reverses the order of characters in every
line. It comes with the &lt;em&gt;util-linux-ng&lt;/em&gt; package.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note to Self:&lt;/strong&gt; &lt;em&gt;util-linux-ng&lt;/em&gt; appears to contain more useful commands which
I wasn't aware of. Need to RTFM a little bit.&lt;/p&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>Keeping Backwards Compatibility for pykickstart</title><link href="http://atodorov.org/blog/2013/11/13/keeping-backwards-compatibility-for-pykickstart/" rel="alternate"></link><updated>2013-11-13T23:59:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-13:blog/2013/11/13/keeping-backwards-compatibility-for-pykickstart/</id><summary type="html">&lt;p&gt;Consider the following scenario:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I'm using &lt;a href="https://fedorahosted.org/snake/"&gt;SNAKE&lt;/a&gt; templates as part of my
installation testing work;&lt;/li&gt;
&lt;li&gt;SNAKE has a dependency on pykickstart;&lt;/li&gt;
&lt;li&gt;To test the latest and greatest kickstart features in Fedora we need the
latest version of pykickstart;&lt;/li&gt;
&lt;li&gt;Latest pykickstart needs Python 2.7&lt;/li&gt;
&lt;li&gt;Python 2.7 is not available on RHEL 6 which is used to host the test
infrastructure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just yesterday I hit an issue with the above setup and figured Fedora QA is
in a kind of strange situation - we always need the latest but need it
conservative enough to run on RHEL 6. See the original thread at
&lt;a href="https://www.redhat.com/archives/kickstart-list/2013-November/msg00001.html"&gt;kickstart-list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this particular case the solution will be to remove the offending code
and implement the same functionality in backward-compatible manner. Also add
more tests. I will be working on this tomorrow (there's an older patch already).&lt;/p&gt;
&lt;p&gt;The BIG question remains though - how do you manage software evolution and still
keep it compatible with older execution stacks? Please share your experience in
the comments section.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;PP: Spoiler - this is part of an ongoing effort to bring open source installation
testing expertise (my domain) into Fedora world, plus establish a community supported
test infrastructure. More info TBA soon.&lt;/p&gt;</summary><category term="QA"></category><category term="Fedora"></category></entry><entry><title>My First Article for OpenSource.com</title><link href="http://atodorov.org/blog/2013/11/01/my-first-article-for-opensource-dot-com/" rel="alternate"></link><updated>2013-11-01T12:47:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-01:blog/2013/11/01/my-first-article-for-opensource-dot-com/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Annoying bugs&amp;quot;" src="/images/annoyingbugs.png" title="Annoying bugs" /&gt;
&lt;em&gt;image by opensource.com&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Recently OpenSource.com published my first article
&lt;a href="http://opensource.com/business/13/10/user-guide-bugs-open-source-projects"&gt;User guide for open source project bug submissions&lt;/a&gt;
which was inspired by real events. &lt;/p&gt;
&lt;p&gt;The comments at the bottom are very interesting. It looks like Fedora needs to
make some changes in the bug reporting process and tools. &lt;/p&gt;
&lt;p&gt;I've started a
&lt;a href="https://lists.fedoraproject.org/pipermail/test/2013-November/118607.html"&gt;discussion&lt;/a&gt;
on Fedora QA mailing list about this. Follow the thread if you are interested in the
topic.&lt;/p&gt;</summary><category term="Fedora"></category></entry><entry><title>Tip: Extending Btrfs Filesystem for Fedora Virtual Machine</title><link href="http://atodorov.org/blog/2013/10/13/tip-extending-btrfs-filesystem-for-fedora-virtual-machine/" rel="alternate"></link><updated>2013-10-13T14:53:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-13:blog/2013/10/13/tip-extending-btrfs-filesystem-for-fedora-virtual-machine/</id><summary type="html">&lt;p&gt;I was testing Fedora 20 inside a KVM guest this week when the disk
space run out. The system was configured to use Btrfs filesystem and this is how
to extend it.&lt;/p&gt;
&lt;p&gt;First you have to extend the underlying guest storage. On the host I'm using LVM
so this is a no brainer:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# pvs
  PV                                                    VG              Fmt  Attr PSize   PFree  
  /dev/mapper/luks-f3f6cea1-baba-4aaf-bca8-33a0ec540369 vg_redbull_mini lvm2 a--  289,11g 134,11g

# lvs
  LV            VG              Attr      LSize   Pool Origin Data%  Move Log Cpy%Sync Convert
  vm_fedora     vg_redbull_mini -wi-ao---  15,00g

# lvextend -L +5G /dev/mapper/vg_redbull_mini-vm_fedora 
  Extending logical volume vm_fedora to 20,00 GiB
  Logical volume vm_fedora successfully resized

# lvs
  LV            VG              Attr      LSize   Pool Origin Data%  Move Log Cpy%Sync Convert
  vm_fedora     vg_redbull_mini -wi-ao---  20,00g

# pvs
  PV                                                    VG              Fmt  Attr PSize   PFree  
  /dev/mapper/luks-f3f6cea1-baba-4aaf-bca8-33a0ec540369 vg_redbull_mini lvm2 a--  289,11g 129,11g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the VM we have a default Btrfs layout:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# blkid
/dev/vda1: UUID=&amp;quot;410ee563-e701-42ff-9d5f-5805dd103e35&amp;quot; TYPE=&amp;quot;ext4&amp;quot; PARTUUID=&amp;quot;0000330f-01&amp;quot; 
/dev/vda2: UUID=&amp;quot;f4addad4-a0fc-482e-ad5a-240864b76f09&amp;quot; TYPE=&amp;quot;swap&amp;quot; PARTUUID=&amp;quot;0000330f-02&amp;quot; 
/dev/vda3: LABEL=&amp;quot;fedora&amp;quot; UUID=&amp;quot;f0b589ce-061c-4ac3-826e-7f3f8c8a6d30&amp;quot; UUID_SUB=&amp;quot;11aa8414-3ce1-4fe7-a506-9a4f91ba5c30&amp;quot; TYPE=&amp;quot;btrfs&amp;quot; PARTUUID=&amp;quot;0000330f-03&amp;quot;

# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/vda3        13G   11G  1.4G  89% /
devtmpfs        996M     0  996M   0% /dev
tmpfs          1002M   80K 1002M   1% /dev/shm
tmpfs          1002M  668K 1002M   1% /run
tmpfs          1002M     0 1002M   0% /sys/fs/cgroup
tmpfs          1002M   16K 1002M   1% /tmp
/dev/vda3        13G   11G  1.4G  89% /home
/dev/vda1       477M   72M  376M  17% /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now power-off (not reboot) and power-on the VM guest so that it sees the new size
of the underlying storage. See the fdisk header (line 9 below), vda is now 20GiB!&lt;/p&gt;
&lt;p&gt;Before extending the filesystem you have to extend the underlying disk partition! This is the
trickiest part. Using fdisk or parted you have to delete the partition and add it again.
Make sure to use the &lt;strong&gt;SAME&lt;/strong&gt; starting sector for the new partition (line 33)!&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# fdisk /dev/vda&lt;/span&gt;

Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux 2.24-rc1&lt;span class="o"&gt;)&lt;/span&gt;.
Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
Be careful before using the write command.


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/vda: &lt;span class="m"&gt;20&lt;/span&gt; GiB, &lt;span class="m"&gt;21474836480&lt;/span&gt; bytes, &lt;span class="m"&gt;41943040&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disk label &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x0000330f

Device    Boot     Start       End   Blocks  Id System
/dev/vda1 *         &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;1026047&lt;/span&gt;   &lt;span class="m"&gt;512000&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/vda2        &lt;span class="m"&gt;1026048&lt;/span&gt;   &lt;span class="m"&gt;5253119&lt;/span&gt;  &lt;span class="m"&gt;2113536&lt;/span&gt;  &lt;span class="m"&gt;82&lt;/span&gt; Linux swap / Solaris
/dev/vda3        &lt;span class="m"&gt;5253120&lt;/span&gt;  &lt;span class="m"&gt;31457279&lt;/span&gt; &lt;span class="m"&gt;13102080&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: d
Partition number &lt;span class="o"&gt;(&lt;/span&gt;1-3, default 3&lt;span class="o"&gt;)&lt;/span&gt;: 3

Partition &lt;span class="m"&gt;3&lt;/span&gt; is deleted

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n

Partition &lt;span class="nb"&gt;type&lt;/span&gt;:
   p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;2&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
   e   extended
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;3,4, default 3&lt;span class="o"&gt;)&lt;/span&gt;: 3
First sector &lt;span class="o"&gt;(&lt;/span&gt;5253120-41943039, default 5253120&lt;span class="o"&gt;)&lt;/span&gt;: 
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;5253120-41943039, default 41943039&lt;span class="o"&gt;)&lt;/span&gt;:

Created a new partition &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size 17,5 GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/vda: &lt;span class="m"&gt;20&lt;/span&gt; GiB, &lt;span class="m"&gt;21474836480&lt;/span&gt; bytes, &lt;span class="m"&gt;41943040&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disk label &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x0000330f

Device    Boot     Start       End   Blocks  Id System
/dev/vda1 *         &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;1026047&lt;/span&gt;   &lt;span class="m"&gt;512000&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/vda2        &lt;span class="m"&gt;1026048&lt;/span&gt;   &lt;span class="m"&gt;5253119&lt;/span&gt;  &lt;span class="m"&gt;2113536&lt;/span&gt;  &lt;span class="m"&gt;82&lt;/span&gt; Linux swap / Solaris
/dev/vda3        &lt;span class="m"&gt;5253120&lt;/span&gt;  &lt;span class="m"&gt;41943039&lt;/span&gt; &lt;span class="m"&gt;18344960&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: w

The partition table has been altered.
Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
Re-reading the partition table failed.: Device or resource busy

The kernel still uses the old table. The new table will be used at the next reboot or after you run partprobe&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt; or kpartx&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt;.

&lt;span class="c"&gt;# partprobe&lt;/span&gt;
Error: Partition&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; on /dev/vda have been written, but we have been unable to inform the kernel of the change, probably because it/they are in use.  As a result, the old partition&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; will remain in use.  You should reboot now before making further changes.

&lt;span class="c"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;See lines 36 and 49 above. The new partition has a greater size.
After reboot just resize the filesystem and verify the new space has been added&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# btrfs filesystem resize max /
Resize &amp;#39;/&amp;#39; of &amp;#39;max&amp;#39;

# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/vda3        18G   11G  6.4G  63% /
devtmpfs        996M     0  996M   0% /dev
tmpfs          1002M   80K 1002M   1% /dev/shm
tmpfs          1002M  660K 1002M   1% /run
tmpfs          1002M     0 1002M   0% /sys/fs/cgroup
tmpfs          1002M   16K 1002M   1% /tmp
/dev/vda3        18G   11G  6.4G  63% /home
/dev/vda1       477M   72M  376M  17% /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is it, more disk space available for the virtual machine. Let me know how it works
for you.&lt;/p&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>Tip: Installing Missing debuginfo Packages for ABRT</title><link href="http://atodorov.org/blog/2013/10/12/tip-installing-missing-debuginfo-packages-for-abrt/" rel="alternate"></link><updated>2013-10-12T14:38:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-12:blog/2013/10/12/tip-installing-missing-debuginfo-packages-for-abrt/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Reporting disabled&amp;quot;" src="/images/reporting_disabled.png" title="Reporting disabled" /&gt;&lt;/p&gt;
&lt;p&gt;Every once in a while ABRT will tell you that reporting is disabled because
backtrace is unusable. What it means is that it can't read some of the debugging
symbols and the most likely reason for that is debuginfo packages are missing.&lt;/p&gt;
&lt;p&gt;To install them first locate the directory containing the files for that particular
crash. Use the &lt;code&gt;executable&lt;/code&gt; file to find out if you are looking into the correct
directory. Then use this one liner to install the missing debuginfo packages.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# pwd
/var/tmp/abrt/ccpp-2013-10-10-15:55:18-15533
# cat backtrace | grep lib | tr -s &amp;#39; &amp;#39; | cut -f4 -d&amp;#39; &amp;#39; | sort | uniq | grep &amp;quot;/&amp;quot; | xargs rpm -qf --qf &amp;quot;%{name}\n&amp;quot; | xargs debuginfo-install -y
&lt;/pre&gt;&lt;/div&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>Fedora 20 GNOME 3.10 Test Day Post-mortem</title><link href="http://atodorov.org/blog/2013/10/11/fedora-20-gnome-3-dot-10-test-day-post-mortem/" rel="alternate"></link><updated>2013-10-11T12:25:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-11:blog/2013/10/11/fedora-20-gnome-3-dot-10-test-day-post-mortem/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Fedora sausage banner&amp;quot;" src="/images/fedora/sausage-banner.png" title="Fedora sausage banner" /&gt;&lt;/p&gt;
&lt;p&gt;Here is my summary of the second Fedora Test Day hosted at
&lt;a href="http://initlab.org"&gt;init Lab&lt;/a&gt; yesterday.&lt;/p&gt;
&lt;p&gt;Local attendance was a total disaster, in fact I was testing once again by my own.
This time
there were more people in the lab, all busy with their daily routines and tasks.
There were no people who came for the testing :(. I will have to try different
venues in the future and see if the situation improves.&lt;/p&gt;
&lt;p&gt;On the testing front I managed to score 5 bugs against
&lt;a href="https://bugzilla.gnome.org/buglist.cgi?bug_id=709797,709799,709806,709810"&gt;GNOME&lt;/a&gt;
and &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1017807"&gt;Fedora&lt;/a&gt;.
You can see the other test results and bugs on the
&lt;a href="https://fedoraproject.org/wiki/Test_Day:2013-10-10_Gnome_3.10"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are two things I didn't like in particular&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GNOME 3 as well as its classic mode - simply not the environment I'm used to;&lt;/li&gt;
&lt;li&gt;Having to record test results in the wiki! I'm
&lt;a href="https://lists.fedoraproject.org/pipermail/test/2013-October/118284.html"&gt;writing&lt;/a&gt;
to the Fedora QA mailing list about that as we speak.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At one time I was engaged in a discussion about which Bulgarian keyboard layout
should be the default in GNOME simply because of
&lt;a href="https://bugzilla.gnome.org/show_bug.cgi?id=709799"&gt;GNOME #709799&lt;/a&gt;. The default
keyboard layout will be Bulgarian (traditional phonetic) aka bg+phonetic.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;(16,13,26) rtcm: atodorov: are you bulgarian and/or live in bulgaria?
(16,14,20) rtcm: atodorov: if yes, I wanted to know which keyboard layout most people expect there to be the default
(16,16,34) atodorov: rtcm: I&amp;#39;m a Bulgarian, however I can&amp;#39;t tell which one. Both Phonetic and standard (BDS) are common
(16,16,54) atodorov: a safe bet is to go with phonetic I guess. 
(16,19,46) rtcm: atodorov: can you tell me which one is it in XKB terms? is it &amp;quot;bg&amp;quot;, &amp;quot;bg+bas_phonetic&amp;quot; or &amp;quot;bg+phonetic&amp;quot; ?
(16,20,51) rtcm: they&amp;#39;re labeled as &amp;quot;Bulgarian&amp;quot;, &amp;quot;Bulgarian (new phonetic)&amp;quot; and &amp;quot;Bulgarian (traditional phonetic)&amp;quot;
(16,21,30) atodorov: bg+phonetic is the traditional phonetic
(16,22,04) atodorov: bg labeled as &amp;quot;Bulgarian&amp;quot; is the standard one I guess. Here we call it BDS after the standardization institute
(16,22,34) atodorov: bg+bas_phonetic is created from the Bulgarian Academy of Science and is not very popular as far as I know. I&amp;#39;ve never seen it in use
(16,23,15) rtcm: atodorov: all I want to know is what most people would expect? like what does windows do by default? that&amp;#39;s a good bet
(16,27,46) atodorov: rtcm: I&amp;#39;m just being told that new Windows releases use yet another layout by default, which is like phonetic but with some characters in new places and people don&amp;#39;t like that
(16,27,53) atodorov: my safe bet goes to bg+phonetic
(16,29,05) rtcm: ok, thanks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is a rare occasion when you get to make a decision that affects a large group
of people and I hope you don't hate me for that! &lt;/p&gt;
&lt;p&gt;Do you want to see more Fedora Test Days happening in Sofia? Join me and I will
organize some more!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Fedora 20 Virtualization Test Day Post-mortem</title><link href="http://atodorov.org/blog/2013/10/08/fedora-20-virtualization-test-day-post-mortem/" rel="alternate"></link><updated>2013-10-08T22:01:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-08:blog/2013/10/08/fedora-20-virtualization-test-day-post-mortem/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Fedora 20 banner&amp;quot;" src="/images/fedora/fedora20-banner.png" title="Fedora 20 banner" /&gt;&lt;/p&gt;
&lt;p&gt;Here is a quick summary of the first Fedora Test Day in Sofia I hosted at
&lt;a href="http://initlab.org"&gt;init Lab&lt;/a&gt; today.&lt;/p&gt;
&lt;p&gt;Attendance was quite poor, actually nobody else except me participated but
almost nobody else visited the hackespace as well. I get that it is a
working day and Test Days conflict with regular business hours but this
is not going to change anyway. On the other hand where were all the freelancers
and non-office job workers who usually hang around in the Lab? I have no idea!&lt;/p&gt;
&lt;p&gt;On IRC there was much better activity, 5 or 6 people were testing across
Asia, Europe and USA time zones. You can see the test results
&lt;a href="http://209.132.184.192/testdays/show_event?event_id=7"&gt;here&lt;/a&gt;.
I've started filing quite a few bugs in the morning and continued well into the
afternoon. I've managed to file a total of
&lt;a href="https://bugzilla.redhat.com/buglist.cgi?bug_id=1016435,1016449,1016488,1016530,1016604,1016613,1016648,1016663,1016704,1016715"&gt;10 bugs&lt;/a&gt;.
Some of them were not related to virtualization and some of them turned out to be
duplicates or not a bug. I even managed to file 2 duplicate bugs which likely have the
same root cause myself :). &lt;/p&gt;
&lt;p&gt;I've also experienced two bugs filed by other people:
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=967371"&gt;RHBZ #967371&lt;/a&gt; for MATE desktop
and &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1015636"&gt;RHBZ #1015636&lt;/a&gt; for
virt-manager's Save/Restore functionality.&lt;/p&gt;
&lt;p&gt;I've tried ARM on x86_64 but that didn't get anywhere near a running system.
I will make another post about ARM and what I've discovered there.&lt;/p&gt;
&lt;p&gt;The one thing I liked is the 
&lt;a href="http://209.132.184.192/testdays/show_event?event_id=7"&gt;test results application&lt;/a&gt;.
It is not what I'm used to when dealing with RHEL, has far less features but is
very fast and easy to use and suits the Test Days participants just fine.
And is definitely much easier to use compared to filing results in the wiki.&lt;/p&gt;
&lt;p&gt;Overall Fedora 20 virtualization status according to me is pretty good.&lt;/p&gt;
&lt;p&gt;I hope to see more attendance &lt;a href="http://initlab.org/event/gnome-test-day"&gt;on Thursday&lt;/a&gt;
when we're going to test GNOME 3.10.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Fedora 20 Virtualization &amp; GNOME Test Days at init Lab this week</title><link href="http://atodorov.org/blog/2013/10/07/fedora-20-virtualization-and-gnome-test-days-at-init-lab-this-week/" rel="alternate"></link><updated>2013-10-07T10:28:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-07:blog/2013/10/07/fedora-20-virtualization-and-gnome-test-days-at-init-lab-this-week/</id><summary type="html">&lt;p&gt;Fedora 20 Virtualization and GNOME test days will be tomorrow (8th Oct) and on
Thursday (10th Oct)! Local community in Sofia will gather at
&lt;a href="http://initlab.org"&gt;init Lab&lt;/a&gt;! We start at 10:00 and everybody is welcome.&lt;/p&gt;
&lt;p&gt;If you have no idea what I'm talking about check my
&lt;a href="/blog/categories/fedora/"&gt;previous posts&lt;/a&gt; and the announcement at init Lab's website:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://initlab.org/event/testing-fedora-20-virtualization-test-day"&gt;http://initlab.org/event/testing-fedora-20-virtualization-test-day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://initlab.org/event/gnome-test-day"&gt;http://initlab.org/event/gnome-test-day&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See you there!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Fedora Test Days are Coming to Sofia</title><link href="http://atodorov.org/blog/2013/09/23/fedora-test-days-are-coming-to-sofia/" rel="alternate"></link><updated>2013-09-23T14:27:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-09-23:blog/2013/09/23/fedora-test-days-are-coming-to-sofia/</id><summary type="html">&lt;p&gt;As I &lt;a href="/blog/2013/09/14/upcoming-talk-fedora-test-days-in-sofia/"&gt;mentioned earlier&lt;/a&gt;
I will organize some Fedora testing in Sofia. Here's an outline of my talk this
Saturday and a general guide for anyone who wants to participate.&lt;/p&gt;
&lt;h2&gt;What are Fedora Test Days&lt;/h2&gt;
&lt;p&gt;Fedora Test Days are day long events focused on testing a particular feature
in the upcoming Fedora release. At the time of writing they are focused on
Fedora 20.&lt;/p&gt;
&lt;h2&gt;What You Need Before Joining Fedora&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href="https://bugzilla.redhat.com/createaccount.cgi"&gt;bugzilla.redhat.com&lt;/a&gt; account;&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://admin.fedoraproject.org/accounts/user/new"&gt;Fedora account&lt;/a&gt;. Please
complete the &lt;a href="https://fedoraproject.org/wiki/Join"&gt;onboarding process&lt;/a&gt; in advance
as it takes time;&lt;/li&gt;
&lt;li&gt;Create a wiki page for your profile. Mine is 
&lt;a href="https://fedoraproject.org/wiki/User:Atodorov"&gt;here&lt;/a&gt;. This will verify you can
edit the wiki;&lt;/li&gt;
&lt;li&gt;Know how to use IRC. There is a web chat client at &lt;a href="https://webchat.freenode.net/"&gt;https://webchat.freenode.net/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What You Need Before The Test Day&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Know how to properly
&lt;a href="https://fedoraproject.org/wiki/Bugs_and_feature_requests"&gt;report a bug&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Installation ISO (DVD) or Live CD depending on what you want to test;&lt;/li&gt;
&lt;li&gt;Nightly LiveCD ISOs can be found
&lt;a href="http://alt.fedoraproject.org/pub/alt/nightly-composes/"&gt;here&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Another alternative is official
&lt;a href="http://dl.fedoraproject.org/pub/alt/stage/"&gt;test compose&lt;/a&gt; (TC) images or
yum update to the latest release;&lt;/li&gt;
&lt;li&gt;Extra hardware or a virtual machine for testing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What You Need On The Test Day&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Join the #fedora-test-day IRC channel on freenode.net;&lt;/li&gt;
&lt;li&gt;Have the &lt;a href="https://fedoraproject.org/wiki/Test_Day:Current"&gt;current test day&lt;/a&gt;
wiki page handy;&lt;/li&gt;
&lt;li&gt;Execute some test cases and file bugs;&lt;/li&gt;
&lt;li&gt;Report your test results on the wiki;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Time and place for two test days will be announced at the end of the week
and earlier next week so stay tuned!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Upcoming Talk: Fedora Test Days in Sofia</title><link href="http://atodorov.org/blog/2013/09/14/upcoming-talk-fedora-test-days-in-sofia/" rel="alternate"></link><updated>2013-09-14T23:11:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-09-14:blog/2013/09/14/upcoming-talk-fedora-test-days-in-sofia/</id><summary type="html">&lt;p&gt;On September 28th I will be giving a short talk about
&lt;a href="https://fedoraproject.org/wiki/QA/Test_Days"&gt;Fedora Test Days&lt;/a&gt; at the regular
Linux for Bulgarians
&lt;a href="http://www.linux-bg.org/cgi-bin/y/index.pl?page=news&amp;amp;key=459487176"&gt;conference&lt;/a&gt;.
I will explain what these are and how one can participate. I will also announce
my plans and schedule to organize some
&lt;a href="https://fedoraproject.org/wiki/QA/Fedora_20_test_days"&gt;Fedora 20 test days&lt;/a&gt;
locally in Sofia. If you are a fan of Fedora and want to file bugs and kick 
some developers' ass this is the way to do it!&lt;/p&gt;
&lt;p&gt;Other talks include Alexander Shopov's „Oracle's take on NoSQL“ which I wanted
to hear since this summer and TBA talks about MicroTik routers.&lt;/p&gt;
&lt;p&gt;The conference will take place on September 28th at the French Institute at
Sofia University
(see &lt;a href="http://conf.linux-bg.org/wp-content/uploads/2009/12/su-2.png"&gt;map&lt;/a&gt;).
It starts at 13:00 and my talk should be at the beginning. See you there!&lt;/p&gt;
&lt;p&gt;PS: this post was initially written on my &lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt;
with Penzus Editor - another small step in 
&lt;a href="/blog/2013/08/01/laptop-vs-smartphone-part-one/"&gt;retiring my laptop&lt;/a&gt;.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category><category term="events"></category></entry></feed>