<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RHEL | atodorov.org - you can logoff, but you can never leave]]></title>
  <link href="http://atodorov.org/blog/categories/rhel/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2015-05-01T15:45:36+03:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Compiling Twinkle SIP Phone on RHEL 7]]></title>
    <link href="http://atodorov.org/blog/2015/05/01/compiling-twinkle-sip-phone-on-rhel-7/"/>
    <updated>2015-05-01T15:04:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/05/01/compiling-twinkle-sip-phone-on-rhel-7</id>
    <content type="html"><![CDATA[<p>One of the best SIP clients for Linux is <a href="http://twinklephone.com/">Twinkle</a>.
However upstream is not active (or even maybe dead) and the package is missing from
latest Fedora releases and fails to build on RHEL 7.</p>

<p>First you need to build and install a few dependencies in the following order:
<a href="http://koji.fedoraproject.org/koji/packageinfo?packageID=8437">ucommon</a>,
<a href="http://koji.fedoraproject.org/koji/packageinfo?packageID=1443">ccrtp</a>,
<a href="http://koji.fedoraproject.org/koji/packageinfo?packageID=6408">libzrtpcpp</a>.
You will also need <a href="https://fedoraproject.org/wiki/EPEL">EPEL 7</a> enabled
to satisfy build dependencies.</p>

<p>Then apply the following patch to the original
<a href="http://koji.fedoraproject.org/koji/buildinfo?buildID=397914">twinkle.spec</a></p>

<pre><code>--- twinkle.spec.orig   2015-05-01 14:07:01.870710147 +0300
+++ twinkle.spec    2015-05-01 15:07:28.734734573 +0300
@@ -47,6 +47,8 @@

 %build
 export LDFLAGS=-lkio 
+export CPPFLAGS="$CPPFLAGS -I/usr/include/libzrtpcpp/" 
+%__autoconf
 %configure
 make %{?_smp_mflags}
</code></pre>

<p>The package now builds, installs and runs successfully on RHEL 7.
The compiled packages and dependencies are available in my
<a href="/blog/2015/04/29/rhel-7-repository-for-macbook-air/">Macbook Air RHEL 7 repository</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing Tilde and Function Keys Mapping for MacBook Air on Linux]]></title>
    <link href="http://atodorov.org/blog/2015/04/30/fixing-tilde-and-function-keys-mapping-for-macbook-air-on-linux/"/>
    <updated>2015-04-30T11:33:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/04/30/fixing-tilde-and-function-keys-mapping-for-macbook-air-on-linux</id>
    <content type="html"><![CDATA[<p>Thera are two problems with the MacBook Air keyboard on Linux:</p>

<p>Function keys and media keys are switched and by default you have to
press Fn+F5 in order to refresh a browser page. The
<a href="https://chaidarun.com/fedora-mbp">solution</a> is</p>

<pre><code>echo 2 &gt; /sys/module/hid_apple/parameters/fnmode
</code></pre>

<p>The tilde key is mapped improperly, see
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=1025041#c2">RHBZ #1025041</a>.
To fix it</p>

<pre><code>echo 0 &gt; /sys/module/hid_apple/parameters/iso_layout
</code></pre>

<h2>Permanent fix</h2>

<p>Either you have to add the above commands in a boot script or you can
<code>yum install mba-kbd-fix</code> from my
<a href="/blog/2015/04/29/rhel-7-repository-for-macbook-air/">Macbook Air RHEL 7 repository</a>.
The RPM source can be found <a href="https://github.com/atodorov/mba-kbd-fix">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RHEL 7 Repository for MacBook Air]]></title>
    <link href="http://atodorov.org/blog/2015/04/29/rhel-7-repository-for-macbook-air/"/>
    <updated>2015-04-29T13:00:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/04/29/rhel-7-repository-for-macbook-air</id>
    <content type="html"><![CDATA[<p>I've made a repository with binary (x86_64 only) and source RPM packages which
are missing from Red Hat Enterprise Linux 7 and necessary when using a
MacBook Air. To install execute the commands below:</p>

<pre><code>cd /etc/yum.repos.d/
wget https://s3.amazonaws.com/atodorov/rpms/macbook/el7/rhel7-macbook.repo
</code></pre>

<h2>Wireless driver</h2>

<pre><code>yum install kmod-wl
</code></pre>

<h2>Display backlight driver</h2>

<pre><code>yum install kmod-mba6x_bl
</code></pre>

<p>And uncomment <code>/etc/X11/xorg.conf.d/98-mba_bl.conf</code>.</p>

<p><em>Note:</em> the .spec file is available from
<a href="https://github.com/patjak/mba6x_bl/pull/26">RP #26</a>.</p>

<h2>Fixing keyboard mapping</h2>

<pre><code>yum install mba-kbd-fix
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing Display Brightness on MacBook Air with RHEL 7]]></title>
    <link href="http://atodorov.org/blog/2015/04/29/fixing-display-brightness-on-macbook-air-with-rhel-7/"/>
    <updated>2015-04-29T12:14:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/04/29/fixing-display-brightness-on-macbook-air-with-rhel-7</id>
    <content type="html"><![CDATA[<p>One issue with RHEL/CentOS/Fedora on MacBook Air laptops is brightness control
and backlight behavior after suspend/resume. I've found the solution
<a href="http://mattoncloud.org/2014/02/05/fedora-20-on-a-macbook-air/">here</a>
and only tweaked it slightly for my use case.</p>

<h2>mba6x_bl doesn't load automatically</h2>

<p>The reason being the driver matches older hardware:</p>

<pre><code>$ modinfo mba6x_bl
filename:       /lib/modules/3.10.0-229.1.2.el7.x86_64/extra/mba6x_bl/mba6x_bl.ko
alias:          dmi:*:pnMacBookAir6*
license:        GPL
description:    MacBook Air 6,1 and 6,2 backlight driver
author:         Patrik Jakobsson &lt;patrik.r.jakobsson@gmail.com&gt;
rhelversion:    7.1
srcversion:     4D069C8EB0E470AF27E7F8D
depends:        video
vermagic:       3.10.0-229.1.2.el7.x86_64 SMP mod_unload modversions 
</code></pre>

<p>My system is <strong>MacBookAir7,2</strong> and doesn't match the module alias. So a
<a href="https://github.com/patjak/mba6x_bl/pull/25">quick fix</a> was needed.
For more info about <code>MODULE_ALIAS</code> see
<a href="https://wiki.archlinux.org/index.php/Modalias">ArchWiki</a>.
Alternatively on Red Hat based systems you can place a config file
under <code>/etc/sysconfig/modules</code>, see
<a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Deployment_Guide/sec-Persistent_Module_Loading.html">the docs</a>
for more details.</p>

<h2>intel_backlight driver is in the way</h2>

<p>On older systems mba6x_bl doesn't get used automatically. The problem is the offending
intel_backlight driver which gets used instead. To workaround it add this xorg.conf snippet:</p>

<pre><code>$ cat /etc/X11/xorg.conf.d/98-mba_bl.conf
Section "Device"
    Identifier      "Intel Graphics"
    Driver          "intel"
    Option          "Backlight"     "mba6x_backlight"
EndSection
</code></pre>

<p>For more info see <a href="https://bugzilla.redhat.com/show_bug.cgi?id=989555#c19">RHBZ 989555</a>.</p>

<h2>Everything in one go</h2>

<p>If you are using RHEL 7 or CentOS 7 (version 7.1 required) instead of Fedora you can take
a look at my <a href="/blog/2015/04/29/rhel-7-repository-for-macbook-air/">Macbook Air RHEL 7 repository</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disabling MacBook Startup Sound in Linux]]></title>
    <link href="http://atodorov.org/blog/2015/04/27/disabling-macbook-startup-sound-in-linux/"/>
    <updated>2015-04-27T23:23:00+03:00</updated>
    <id>http://atodorov.org/blog/2015/04/27/disabling-macbook-startup-sound-in-linux</id>
    <content type="html"><![CDATA[<p>There is an easy way to disable the MacBook startup sound
(boot chime) even after wiping out OS X and installing Linux.</p>

<p>This sound can be easily disabled if you mute the volume in OS X
and shutdown the computer. The value is stored in NVRAM.</p>

<ol>
<li>Reboot the computer and hold Cmd+Alt(Option)+R. This will start
OS X Internet recovery mode;</li>
<li><p>Open the terminal and issue the following command</p>

<pre><code> nvram SystemAudioVolume=%00
</code></pre></li>
<li><p>Reboot.</p></li>
</ol>


<p>Voila. In Linux try this:</p>

<pre><code># efivar -l | grep SystemAudioVolume
 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolume
 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolumeDB

# efivar -n 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolume -p
GUID: 7c436110-ab2a-4bbb-a880-fe41995c9f82
Name: "SystemAudioVolume"
Attributes:
    Non-Volatile
    Boot Service Access
    Runtime Service Access
Value:
00000000  00                                                |.               |

# efivar -n 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolumeDB -p
GUID: 7c436110-ab2a-4bbb-a880-fe41995c9f82
Name: "SystemAudioVolumeDB"
Attributes:
    Non-Volatile
    Boot Service Access
    Runtime Service Access
Value:
00000000  00 
#
</code></pre>

<p><strong>Note 1</strong>: Before disabling both variables had non zero values. Also <em>SystemAudioVolumeDB</em>
doesn't seem to have any effect.</p>

<p><strong>Note 2:</strong> RHEL or CentOS users need to rebuild <em>efivar</em> from the
<a href="https://kojipkgs.fedoraproject.org//packages/efivar/0.14/1.fc22/src/efivar-0.14-1.fc22.src.rpm">Fedora src.rpm</a>.</p>

<p><strong>Note 3:</strong> several Internet sources suggest that writing EFI variables from Linux
may sometimes corrupt your Apple firmware. I didn't research this any further. If you
happen to figure out how to successfully write to these variables under Linux please let
everyone know in the comments (in case OS X recovery mode goes missing, you know).</p>

<p>Thanks to my reader Alexander, who
<a href="/blog/2015/04/26/installing-red-hat-enterprise-linux-7-on-macbook-air-2015/#disqus_thread">gave me the hint</a>
in a previous blog post.</p>
]]></content>
  </entry>
  
</feed>
