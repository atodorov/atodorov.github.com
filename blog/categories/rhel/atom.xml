<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RHEL | atodorov.org - you can logoff, but you can never leave]]></title>
  <link href="http://atodorov.org/blog/categories/rhel/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2014-01-24T22:12:52+02:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Can I Use Android Phone as Smart Card Reader]]></title>
    <link href="http://atodorov.org/blog/2013/12/18/can-i-use-android-phone-as-smart-card-reader/"/>
    <updated>2013-12-18T23:09:00+02:00</updated>
    <id>http://atodorov.org/blog/2013/12/18/can-i-use-android-phone-as-smart-card-reader</id>
    <content type="html"><![CDATA[<p>Today I had troubles with my Omnikey CardMan 6121 smart card reader.
For some reason it will not detect the card inside and was unusable.
<code>/var/log/messages</code> was filled with  <em>Card Not Powered</em> messages:</p>

<pre><code>Dec 18 11:17:55 localhost pcscd: eventhandler.c:292:EHStatusHandlerThread() Error powering up card: -2146435050 0x80100016
Dec 18 11:18:01 localhost pcscd: winscard.c:368:SCardConnect() Card Not Powered
Dec 18 11:18:02 localhost pcscd: winscard.c:368:SCardConnect() Card Not Powered
</code></pre>

<p><img src="http://atodorov.org/images/omnikey_cardman_6121.gif" style="float:right;margin-left:20px;" /></p>

<p>I've found the solution in
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=531998">RHBZ #531998</a>.</p>

<p>{% blockquote Pierre Ossman https://bugzilla.redhat.com/show_bug.cgi?id=531998#c12 Comment #12 %}</p>

<p>I've found the problem, and it's purely mechanical.
Omnikey has simply screwed up when they designed this reader.
When the reader is inserted into the ExpressCard slot, it gets slightly
compressed. This is enough to trigger the mechanical switch that detects
insertions. If I jam something in there and force it apart, then pcscd
starts reporting that the slot is empty.
{% endblockquote %}</p>

<p>So I tried moving the smart card a millimeter back and forth inside the reader and
that fixed it for me.</p>

<p>This smart card is standard SIM size and I wonder if it is possible to use
<a href="http://amzn.to/1dnl2gN">dual SIM</a> smart phones and <a href="http://amzn.to/18XpWlp">tablets</a>
as a reader? I will be happy to work on the software side if there is an open source
project already (e.g. OpenSC + drivers for Android). If not, why not?</p>

<p>If you happen to have information on the subject please share it in the comments.
Thanks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Red Hat's Bugzilla Hits One Million Bugs]]></title>
    <link href="http://atodorov.org/blog/2013/08/23/red-hats-bugzilla-hits-one-million-bugs/"/>
    <updated>2013-08-23T12:21:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/08/23/red-hats-bugzilla-hits-one-million-bugs</id>
    <content type="html"><![CDATA[<p><img src="/images/redhat_1mil_bugs.jpg" title="RHBZ 1 million" alt="&quot;RHBZ 1 million&quot;" /></p>

<p>Red Hat's Bugzilla passed the 1 million bugs milestone yesterday!
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=1000000">RHBZ #1000000</a> has been
filed by Anton Arapov, a kernel engineer and a very nice guy (I know him btw).
I've filed several bugs yesterday but the last one was #999941. A bit too short!</p>

<p>To celebrate this event I dare you to pick some bugs from Bugzilla that you find
interesting or frustrating and I will try to analyze and explain them from a
QA engineer's point of view. Since I've reported over 1000 bugs and been involved in
another close to 5000 I think I will be able to answer almost any question.</p>

<p>Challenge accepted!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip: How to Find Your Red Hat Account Number]]></title>
    <link href="http://atodorov.org/blog/2013/08/23/how-to-find-your-red-hat-account-number/"/>
    <updated>2013-08-23T11:55:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/08/23/how-to-find-your-red-hat-account-number</id>
    <content type="html"><![CDATA[<p><img src="http://atodorov.org/images/redhat_account_number.png" style="float:left;display:inline-block;margin-right:10px;" /></p>

<p>One thing you need to know when ordering Red Hat subscriptions is your
account number. It is available in the drop down menu at the top right
corner after you login at <a href="https://access.redhat.com">https://access.redhat.com</a>.</p>

<p>New accounts don't have an account number. It will be generated after
the first subscription activation.</p>

<p>If you need to know more about Red Hat's ordering process just ask me!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH from Linux to BlackBerry Z10]]></title>
    <link href="http://atodorov.org/blog/2013/07/19/ssh-from-linux-to-blackberry-z10/"/>
    <updated>2013-07-19T23:31:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/07/19/ssh-from-linux-to-blackberry-z10</id>
    <content type="html"><![CDATA[<p>You can SSH into a <a href="http://amzn.to/12y4ewJ">BlackBerry Z10</a> device even on Linux.
I'm using Red Hat Enterprise Linux 6 and here is how to establish the connection.</p>

<p>1) <a href="/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/">Enable USB networking</a>
between your Linux desktop and the Z10;</p>

<p>2) Install the <a href="https://developer.blackberry.com/develop/platform_choice/ndk.html">Momentics IDE</a>.
You need it to create debug tokens and to start the SSH daemon on the device;</p>

<p>3) Obtain <a href="https://www.blackberry.com/SignedKeys/codesigning.html">signing keys</a>
and create a debug token by following the wizard in the IDE.
I just started a new project and followed the instructions;</p>

<p>4) Install debug token on device using the IDE. From <code>Window - Preferences</code> select
<code>Blackberry - Signing</code>. Just create and deploy the debug token on the device. Mine was
automatically discovered so I just had to follow the prompts;</p>

<p>5) Reboot and re-enable development mode (I'm not sure if this was necessary);</p>

<p>6) Generate a <strong>4096 bit</strong> key for SSH. Smaller keys won't work. You can use your
current key if it is 4096 bit;</p>

<p>{% codeblock lang:bash %}
$ ssh-keygen -t rsa -b 4096
Generating public/private rsa key pair.
Enter file in which to save the key (/home/atodorov/.ssh/id_rsa): /home/atodorov/.rim/testKey_4096_rsa
/home/atodorov/.rim/testKey_4096_rsa already exists.
Overwrite (y/n)? y
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/atodorov/.rim/testKey_4096_rsa.
Your public key has been saved in /home/atodorov/.rim/testKey_4096_rsa.pub.
The key fingerprint is:
77:73:55:03:e1:fc:5b:df:a6:e9:2c:b4:d4:1e:0c:b2 atodorov@redbull.mini
The key's randomart image is:
+--[ RSA 4096]----+
|             oo..|
|            o   o|
|             o  .|
|          . . .. |
|        S .oo+...|
|         .E.oo+ =|
|           o o o+|
|            o..+ |
|             o=  |
+-----------------+
{% endcodeblock %}</p>

<p>7) Update key permissions, since ssh complains:</p>

<pre><code>    $ chmod 600 ~/.rim/testKey_4096_rsa.pub
</code></pre>

<p>8) By default SSH is not listening on your BlackBerry. Use the <code>blackberry-connect</code>
command to start the SSH daemon on the device. It will upload your public SSH key
to the device and start the SSH daemon on the other side. <code>password</code> is your device
password;</p>

<p>{% codeblock lang:bash %}
$ pwd
/home/atodorov/bbndk/host_10_1_0_231/linux/x86/usr/bin</p>

<p>$ ./blackberry-connect 169.254.0.1 -password 123456 -sshPublicKey ~/.rim/testKey_4096_rsa.pub
Info: Connecting to target 169.254.0.1:4455
Info: Authenticating with target 169.254.0.1:4455
Info: Encryption parameters verified
Info: Authenticating with target credentials.
Info: Successfully authenticated with target credentials.
Info: Sending ssh key to target 169.254.0.1:4455
Info: ssh key successfully transferred.
Info: Successfully connected. This application must remain running in order to use debug tools. Exiting the application will terminate this connection.
{% endcodeblock %}</p>

<p>9) Check if SSH is running on the device</p>

<p>{% codeblock lang:bash %}
$ nmap 169.254.0.1</p>

<p>Starting Nmap 5.51 ( http://nmap.org ) at 2013-07-18 10:19 EEST
Stats: 0:00:01 elapsed; 0 hosts completed (1 up), 1 undergoing Connect Scan
Connect Scan Timing: About 14.30% done; ETC: 10:20 (0:00:06 remaining)
Nmap scan report for 169.254.0.1
Host is up (0.00097s latency).
Not shown: 991 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
139/tcp  open  netbios-ssn
443/tcp  open  https
445/tcp  open  microsoft-ds
1111/tcp open  lmsocialserver
5555/tcp open  freeciv
8000/tcp open  http-alt
8443/tcp open  https-alt</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 12.47 seconds
{% endcodeblock %}</p>

<p>10)  Use SSH with the specified key to connect to the Z10. Username is <code>devuser</code>.
Here's a simple session:</p>

<p>{% codeblock lang:bash %}
$ ssh -i ~/.rim/testKey_4096_rsa devuser@169.254.0.1
$
$ pwd
/accounts/devuser
$ uname -a
QNX atodorovZ10 8.0.0 2013/05/02-08:42:48EDT OMAP4470_ES1.0_HS_London_Rev:08 armle
$ date
Fri Jul 19 23:39:19 EEST 2013
$ ifconfig
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST> mtu 33192</p>

<pre><code>inet 127.0.0.1 netmask 0xff000000
inet6 ::1 prefixlen 128
inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1
</code></pre>

<p>tiw_drv0: flags=8c02&lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST> mtu 1500</p>

<pre><code>address: 1c:69:a5:d0:10:cd
</code></pre>

<p>tiw_sta0: flags=40008c43&lt;UP,BROADCAST,RUNNING,OACTIVE,SIMPLEX,MULTICAST,ACCEPTRTADV> mtu 1500</p>

<pre><code>address: 1c:69:a5:d0:10:cd
inet 192.168.0.100 netmask 0xffffff00 broadcast 192.168.0.255
inet6 fe80::1e69:a5ff:fed0:10cd%tiw_sta0 prefixlen 64 scopeid 0x12
</code></pre>

<p>tiw_p2pdev0: flags=8c02&lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST> mtu 1500</p>

<pre><code>address: 1c:69:a5:d0:10:cd
</code></pre>

<p>tiw_p2pgrp0: flags=8c02&lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST> mtu 1500</p>

<pre><code>address: 1c:69:a5:d0:10:cd
</code></pre>

<p>tiw_ibss0: flags=8c02&lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST> mtu 1500</p>

<pre><code>address: 1c:69:a5:d0:10:cd
</code></pre>

<p>pflog0: flags=0 mtu 33192
lo2: flags=8048&lt;LOOPBACK,RUNNING,MULTICAST> mtu 33192
cellular0: flags=8810&lt;POINTOPOINT,SIMPLEX,MULTICAST> mtu 1500
cellular1: flags=8810&lt;POINTOPOINT,SIMPLEX,MULTICAST> mtu 1500
cellular2: flags=8810&lt;POINTOPOINT,SIMPLEX,MULTICAST> mtu 1500
cellular3: flags=8810&lt;POINTOPOINT,SIMPLEX,MULTICAST> mtu 1500
cellular4: flags=8810&lt;POINTOPOINT,SIMPLEX,MULTICAST> mtu 1500
bptp0: flags=8043&lt;UP,BROADCAST,RUNNING,MULTICAST> mtu 1356</p>

<pre><code>inet6 fe80::1e69:a5ff:fed0:10cd%bptp0 prefixlen 64 scopeid 0x2d
inet6 fd02:42ac:77b2:d543:c158:fabb:6276:80e6 prefixlen 8
</code></pre>

<p>ecm0: flags=8a43&lt;UP,BROADCAST,RUNNING,ALLMULTI,SIMPLEX,MULTICAST> mtu 1500</p>

<pre><code>address: 1e:69:a5:d0:10:cd
inet 169.254.0.1 netmask 0xfffffffc broadcast 169.254.0.3
inet6 fe80::1c69:a5ff:fed0:10cd%ecm0 prefixlen 64 scopeid 0x2e
</code></pre>

<p>{% endcodeblock %}</p>

<p><strong>IMPORTANT:</strong> you can also use the WiFi address of the device to pass to
<code>backberry-connect</code> and ssh. It works for me.</p>

<p>I'm starting to explore the dark world of QNX in the next couple of days
and will keep you posted! Until then - happy hacking.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip: How To Enable USB Networking Between BlackBerry Z10 and Red Hat Enterprise Linux 6]]></title>
    <link href="http://atodorov.org/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/"/>
    <updated>2013-07-17T11:06:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6</id>
    <content type="html"><![CDATA[<p>On Linux there is a feature called USB networking which provides you with a
TCP/IP connection to another device connected via USB cable. Here is how to
connect your <a href="http://amzn.to/12y4ewJ">BlackBerry Z10</a>
to your Linux laptop over USB. I use Red Hat Enterprise Linux but should work
out of the box for other distros too.</p>

<p>Connect the Z10 to your laptop:</p>

<pre><code>    $ lsusb
    Bus 001 Device 005: ID 0fca:8020 Research In Motion, Ltd. Blackberry Playbook (CD-Rom mode)
</code></pre>

<p>By default many USB devices will present a virtual CD-ROM with drivers for Windows.
This is the case here too. To change it go to <code>Settings - Storage and Access</code> and
set <code>USB Connection</code> to <code>Connect to Mac</code>!</p>

<p>If necessary plug out and back in the Z10.</p>

<pre><code>    $ lsusb
    Bus 001 Device 007: ID 0fca:8013 Research In Motion, Ltd.

    $ ifconfig
    usb0      Link encap:Ethernet  HWaddr 1E:69:A5:D0:11:0A  
              inet addr:169.254.0.2  Bcast:169.254.0.3  Mask:255.255.255.252
              inet6 addr: fe80::1c69:a5ff:fed0:110a/64 Scope:Link
              UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
              RX packets:49 errors:0 dropped:0 overruns:0 frame:0
              TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
              collisions:0 txqueuelen:1000 
              RX bytes:16002 (15.6 KiB)  TX bytes:1152 (1.1 KiB)
</code></pre>

<p><strong>IMPORTANT:</strong> In the same <code>Storage and Access</code> screen scroll down to
<code>USB Mass Storage</code> and turn it <code>Off</code>. If you don't do this your Z10 will appear
as USB flash drive and no USB networking will be available. This is how it looks:</p>

<pre><code>    $ lsusb
    Bus 001 Device 008: ID 0fca:8014 Research In Motion, Ltd. 
</code></pre>

<p><strong>IMPORTANT:</strong> If you need your Z10 storage accessible together with USB networking
you can try accessing the device over Wi-Fi.
Configure it from the same <code>Storage and Access</code> screen. Then your device will be
available through Samba on its wireless IP address. I've tried it, works for me!</p>

<p>You don't need anything else to get this working. All set!</p>

<p>My intention is to use either USB networking or Wi-Fi to
<a href="http://supportforums.blackberry.com/t5/Testing-and-Deployment/How-to-use-blackberry-connect-to-Enable-SSH-Access/ta-p/1515447">connect to the Z10 shell</a>
and explore it in more details.</p>
]]></content>
  </entry>
  
</feed>
