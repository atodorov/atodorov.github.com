<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RHEL | atodorov.org]]></title>
  <link href="http://atodorov.org/blog/categories/rhel/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2013-06-19T00:10:32+03:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Configuring Anonymous FTP Uploads On Red Hat Enterprise Linux 6]]></title>
    <link href="http://atodorov.org/blog/2013/05/30/configuring-anonymous-ftp-uploads-on-red-hat-enterprise-linux-6/"/>
    <updated>2013-05-30T13:07:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/05/30/configuring-anonymous-ftp-uploads-on-red-hat-enterprise-linux-6</id>
    <content type="html"><![CDATA[<p>Install related packages and make configuration changes:</p>

<pre><code>yum -y install vsftp policycoreutils-python
sed -i "s/#anon_upload_enable=YES/anon_upload_enable=YES/" /etc/vsftpd/vsftpd.conf
</code></pre>

<p>Configure writable directory for uploads:</p>

<pre><code>mkdir /var/ftp/pub/upload
chgrp ftp /var/ftp/pub/upload
chmod 730 /var/ftp/pub/upload
</code></pre>

<p>Configure SELinux - this is <strong><a href="https://bugzilla.redhat.com/show_bug.cgi?id=968935">MISSING</a></strong>
from Red Hat's official docs:</p>

<pre><code>setsebool -P allow_ftpd_anon_write=1
semanage fcontext -a -t public_content_rw_t '/var/ftp/pub/upload(/.*)'
chcon -t public_content_rw_t /var/ftp/pub/upload
</code></pre>

<p>Start the service:</p>

<pre><code>chkconfig vsftpd on
service vsftpd start
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dual Password Encryption With EncFS On Red Hat Enterprise Linux 6]]></title>
    <link href="http://atodorov.org/blog/2013/05/14/dual-password-encryption-with-encfs-on-red-hat-enterprise-linux-6/"/>
    <updated>2013-05-14T21:26:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/05/14/dual-password-encryption-with-encfs-on-red-hat-enterprise-linux-6</id>
    <content type="html"><![CDATA[<p>This article is a step-by-step guide to using two passwords with <a href="http://www.arg0.net/encfs">EncFS</a>.
The primary password is required and may be used to secure all data;
the secondary password is optional and may be stored on USB stick or
other removable media and used to secure more sensitive data.</p>

<p><img src="http://atodorov.org/images/encfs_raleigh.jpg" alt="Article in Raleigh" style="clear:both;display:block;"/>
The original article in Red Hat's Raleigh HQ!</p>

<p>This article has been originally written for and published by
<a href="http://magazine.redhat.com/2007/06/13/dual-password-encryption-with-encfs/">Red Hat Magazine</a>.
Here is a shortened version with updated commands for Red Hat Enterprise Linux 6.</p>

<h2>Technical Information</h2>

<p>EncFS provides an encrypted filesystem in user-space. EncFS provides security
against offline attacks like a stolen notebook.
EncFS works on files and directories, not an entire block device.
It modifies file names and contents.
The data is stored on the underlying filesystem and meta-data is preserved.
File attributes such as ownership, modification date and permission bits are not encrypted
and are visible to anybody. EncFS is acting like a translator between the user and
the filesystem, encrypting and decrypting on the fly.</p>

<p>EncFS is easy to use and requires no special setup. A local user has to be in the ‘fuse’
group to use EncFS. It does not require ‘root’ privileges.
EncFS can be used with secondary passwords. This could be used to store a separate set of files on the same encrypted filesystem.
EncFS ignores files which do not decode properly, so files created with separate passwords will
only be visible when the filesystem is mounted with the associated password.
There is the option to read passwords from an external program or stdin (standard input).
This option combined with custom scripting makes EncFS very flexible.
By default, all FUSE based filesystems are visible only to the user who mounted them.
No other users (including root) can view the filesystem contents.</p>

<h2>Installing EncFS</h2>

<p>Install fuse-encfs from <a href="https://fedoraproject.org/wiki/EPEL">EPEL</a>:</p>

<pre><code># yum install fuse-encfs
</code></pre>

<p>Load the FUSE module:</p>

<pre><code># /sbin/modprobe fuse
</code></pre>

<p>And, finally, add any users that will use EncFS to group ‘fuse’:</p>

<pre><code># usermod -Gfuse jdoe
</code></pre>

<h2>Using EncFS</h2>

<p>Using EncFS does not differ from using any other filesystem.
The only thing you need to do is to mount it somewhere and start creating
files and directories under the mount point.</p>

<p><strong>Warning:</strong> Use only absolute path names with EncFS!</p>

<p>Create working directories:</p>

<pre><code>$ mkdir -p ~/encrypted ~/plain
</code></pre>

<ul>
<li><code>plain/</code> – looks like a normal directory. All files stored here look like normal
files for the user who mounted this directory with EncFS. This acts like a virtual
directory performing encryption and decryption.</li>
<li><code>encrypted/</code> – looks garbled. The actual data is stored here and is encrypted.</li>
</ul>


<p>Now you can mount the new EncFS volume for the first time. This assumes a default configuration:</p>

<pre><code>$ encfs /home/jdoe/encrypted /home/jdoe/plain
Creating new encrypted volume.
Please choose from one of the following options:
 enter "x" for expert configuration mode,
 enter "p" for pre-configured paranoia mode,
 anything else, or an empty line will select standard mode.
?&gt; 

Standard configuration selected.

Configuration finished.  The filesystem to be created has
the following properties:
Filesystem cipher: "ssl/aes", version 3:0:2
Filename encoding: "nameio/block", version 3:0:1
Key Size: 192 bits
Block Size: 1024 bytes
Each file contains 8 byte header with unique IV data.
Filenames encoded using IV chaining mode.
File holes passed through to ciphertext.

Now you will need to enter a password for your filesystem.
You will need to remember this password, as there is absolutely
no recovery mechanism.  However, the password can be changed
later using encfsctl.

New Encfs Password: **********
Verify Encfs Password: **********
</code></pre>

<p>Create a file:</p>

<pre><code>$ echo "some content" &gt; ~/plain/file.one
</code></pre>

<p>Check contents in <code>plain/</code>:</p>

<pre><code>$ ls -la ~/plain/
total 12
drwxrwxr-x. 2 jdoe jdoe 4096 May 14 21:31 .
drwx------. 6 jdoe jdoe 4096 May 14 21:29 ..
-rw-rw-r--. 1 jdoe jdoe   13 May 14 21:31 file.one

$ cat ~/plain/file.one 
some content
</code></pre>

<p>Check what’s in <code>encrypted/</code>:</p>

<pre><code>$ ls -la ~/encrypted/
total 16
drwxrwxr-x. 2 jdoe jdoe 4096 May 14 21:31 .
drwx------. 6 jdoe jdoe 4096 May 14 21:29 ..
-rw-rw-r--. 1 jdoe jdoe 1083 May 14 21:30 .encfs6.xml
-rw-rw-r--. 1 jdoe jdoe   21 May 14 21:31 Wq5NZ6q-yP-fYNWYsjzFhHf9
</code></pre>

<p><strong>Warning:</strong> <code>.encfs6.xml</code> is a special file. When performing backups or restoring data,
make sure to keep this file!</p>

<p>Inspect the contents of encrypted file:</p>

<pre><code>$ cat ~/encrypted/Wq5NZ6q-yP-fYNWYsjzFhHf9 
���r�N�M���"p��
</code></pre>

<p>Unmount the filesystem and mount it again with another password:</p>

<pre><code>$ fusermount -u ~/plain/
$ encfs --anykey /home/jdoe/encrypted /home/jdoe/plain
EncFS Password: *****
</code></pre>

<p><strong>Caution:</strong> We are using the --anykey option to allow secondary passwords.</p>

<p>Check <code>plain/</code> again. The directory is empty. Previous files were not decoded with the new password.</p>

<pre><code>$ ls -la ~/plain/
total 8
drwxrwxr-x. 2 jdoe jdoe 4096 May 14 21:31 .
drwx------. 6 jdoe jdoe 4096 May 14 21:29 ..
</code></pre>

<p>Now create another file that will be in “hidden” mode:</p>

<pre><code>$ echo "hidden contents" &gt; ~/plain/file.two
</code></pre>

<p>Check again what’s in <code>encrypted/</code>. Both files are stored in the same directory:</p>

<pre><code>$ ls -la ~/encrypted/
total 20
drwxrwxr-x. 2 jdoe jdoe 4096 May 14 21:35 .
drwx------. 6 jdoe jdoe 4096 May 14 21:29 ..
-rw-rw-r--. 1 jdoe jdoe 1083 May 14 21:30 .encfs6.xml
-rw-rw-r--. 1 jdoe jdoe   24 May 14 21:35 PfkZHs16YsKkznnTujaVsOuS
-rw-rw-r--. 1 jdoe jdoe   21 May 14 21:31 Wq5NZ6q-yP-fYNWYsjzFhHf9
</code></pre>

<p>Unmount and mount again using the first password:</p>

<pre><code>$ fusermount -u ~/plain/
$ encfs --anykey /home/jdoe/encrypted /home/jdoe/plain
EncFS Password: **********
</code></pre>

<p>Inspect the contents of <code>plain/</code> again. The second file was not decoded properly and is not shown:</p>

<pre><code>$ ls -la ~/plain/
total 12
drwxrwxr-x. 2 jdoe jdoe 4096 May 14 21:35 .
drwx------. 6 jdoe jdoe 4096 May 14 21:29 ..
-rw-rw-r--. 1 jdoe jdoe   13 May 14 21:31 file.one
</code></pre>

<h2>Summary</h2>

<p>You have learned how to use encryption to protect your data.
There is also a nice graphical application
for using EncFS with KDE called <a href="http://kde-apps.org/content/show.php?content=54078">K-EncFS</a>.
I'll be happy to answer any questions or comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Virtualization Platforms Supported by Red Hat Enterprise Linux]]></title>
    <link href="http://atodorov.org/blog/2013/03/20/virtualization-platforms-supported-by-red-hat-enterprise-linux/"/>
    <updated>2013-03-20T15:04:00+02:00</updated>
    <id>http://atodorov.org/blog/2013/03/20/virtualization-platforms-supported-by-red-hat-enterprise-linux</id>
    <content type="html"><![CDATA[<p>This is mostly for my own reference, to have a handy list
of supported virtualization platforms by Red Hat Enterprise Linux.</p>

<h2>Software virtualization solutions</h2>

<p>A guest RHEL operating system is supported if it runs on the following
platforms:</p>

<ul>
<li>Xen shipped with RHEL Server</li>
<li>KVM shipped with RHEL Server or RHEV for Servers</li>
<li><a href="https://hardware.redhat.com/VMware">VMware</a> ESX/vSphere</li>
<li><a href="https://hardware.redhat.com/Microsoft">Microsoft Hyper-V</a></li>
</ul>


<p>Red Hat does not support Citrix XenServer. However, customers can
<a href="http://otb.bg">buy RHEL Server</a> and use it with Citrix XenServer
with the understanding that Red Hat will only support technical
issues that can be reproduced on bare metal.</p>

<p>The
<a href="http://www.redhat.com/resourcelibrary/articles/enterprise-linux-virtualization-support">official virtualization support matrix</a>
shows which host/guest operating systems combinations are supported.</p>

<h2>Hardware partitioning</h2>

<p>Red Hat supports RHEL on hardware partitioning and virtualization solutions such as:</p>

<ul>
<li><a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;quicksearch=IBM+System+Z">IBM System Z</a></li>
<li><a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;quicksearch=IBM+POWER">IBM Power</a></li>
<li><a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;quicksearch=PRIMEQUEST">Fujitsu PRIMEQUEST</a></li>
<li><a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;quicksearch=Virtage">Hitachi Virtage</a></li>
</ul>


<p>Unfortunately the <a href="https://access.redhat.com/knowledge/articles/263573">recently updated</a>
hardware catalog
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=923802">doesn't allow to filter by hardware partitioning vs. virtualization platform</a>
so you need to know what you are looking for to find it :(.</p>

<h2>Red Hat Enterprise Linux as a guest on the Cloud</h2>

<p>Multiple public cloud providers are supported. Comprehensive list can be found here:
http://www.redhat.com/solutions/cloud-computing/public-cloud/find-partner/</p>

<p>You can also try <a href="http://redhat.force.com/finder/">Red Hat Partner Locator's</a>
advanced search. However at the time of this writing there are no partners
listed in the Cloud / Virtualization category.</p>

<p><strong>Warning:</strong> It is known that Amazon uses Xen with custom
modifications (not sure what version) and HP Cloud uses KVM but there
is not much public record about hypervisor technology used by most cloud providers.
Red Hat has partner agreements with these vendors and will commercially support
only their platforms. This means that if you decide to use upstream Xen or anything
else not listed above, you are on your own. <strong>You have been warned!</strong></p>

<h2>Unsupported but works</h2>

<p>I'm not a big fan of running on top of unsupported environments
and I don't have the need to do so.
I've heard about people running CentOS (RHEL compatible) on VirtualBox
but I have no idea how well it works.</p>

<p>If you are using a different virtualization platform
(like LXC, OpenVZ, UML,
<a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&camp=1789&creative=390957&field-brandtextbin=Parallels%20Software&linkCode=ur2&node=229534&tag=atodorovorg-20">Parallels</a><img src="https://www.assoc-amazon.com/e/ir?t=atodorovorg-20&l=ur2&o=1" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
or other) let me know if CentOS/Fedora works on it.
Alternatively I can give it a try if you can provide me with ssh/VNC access to the machine.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure VNC Installation of Red Hat Enterprise Linux 6]]></title>
    <link href="http://atodorov.org/blog/2013/02/13/secure-vnc-installation-red-hat-enterprise-linux/"/>
    <updated>2013-02-13T15:40:00+02:00</updated>
    <id>http://atodorov.org/blog/2013/02/13/secure-vnc-installation-red-hat-enterprise-linux</id>
    <content type="html"><![CDATA[<p><img src="http://atodorov.org/images/rhel6_welcome.png" alt="RHEL 6 welcome screen" />
Image CC-BY-SA,
<a href="https://access.redhat.com/knowledge/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Installation_Guide/sn-welcome-s390.html">Red Hat</a></p>

<p>From time to time I happen to remotely
<a href="http://otb.bg">install Red Hat Enterprise Linux</a>
servers via the Internet.
When the system configuration is not decided upfront you need
to use interactive mode. This means VNC in my case.</p>

<p>In this tutorial I will show you how to make VNC installations more secure
when using public networks to connect to the server.</p>

<h2>Meet your tools</h2>

<p>Starting with Red Hat Enterprise Linux 6 and all the latest Fedora releases, the
installer supports SSH connections during install.</p>

<p><blockquote><p>Note that by default, root has a blank password.</p></p><p><p>If you don't want any user to be able to ssh in and have full access to your hardware,<br/>you must specify sshpw for username root. Also note that if Anaconda fails to parse the<br/>kickstart file, it will allow anyone to login as root and have full access to your hardware.</p><footer><strong>Fedora</strong> <cite><a href='https://fedoraproject.org/wiki/Anaconda/Kickstart#sshpw'>Kickstart Manual</a></cite></footer></blockquote></p>

<h2>Preparation</h2>

<p>We are going to use SSH port forwarding and tunnel VNC traffic through it.
Create a kickstart file as shown below:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ks.cfg </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="err">install</span>
</span><span class='line'><span class="err">url</span> <span class="err">--url</span> <span class="err">http://example.com/path/to/rhel6</span>
</span><span class='line'><span class="err">lang</span> <span class="err">en_US.UTF-8</span>
</span><span class='line'><span class="err">keyboard</span> <span class="err">us</span>
</span><span class='line'><span class="err">network</span> <span class="err">--onboot</span> <span class="err">yes</span> <span class="err">--device</span> <span class="err">eth0</span> <span class="err">--bootproto</span> <span class="err">dhcp</span>
</span><span class='line'><span class="na">vnc --password</span><span class="o">=</span><span class="s">s3cr3t</span>
</span><span class='line'><span class="na">sshpw --user</span><span class="o">=</span><span class="s">root s3cr3t</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The first 5 lines configure the loader portion of the installer. They will setup
networking and fetch the installer image called stage2. This is completely automated.
<strong>NB:</strong> If you miss some of the lines or have a syntax error the installer will prompt for
values. You either need a remote console access or somebody present at the server console!</p>

<p>The last 2 lines configure passwords for VNC and SSH respectively.</p>

<p>Make this file
<a href="https://fedoraproject.org/wiki/Anaconda/Kickstart#Chapter_6._Making_the_Kickstart_File_Available">available</a>
over HTTP(S), FTP or NFS.</p>

<p><strong>NB:</strong> Make sure that the file is available on the same network where your server is,
or use HTTPS if on public networks.</p>

<h2>Installation</h2>

<p>Now, using your favorite installation media start the
installation process like this:</p>

<pre><code>boot: linux sshd=1 ks=http://example.com/ks.cfg
</code></pre>

<p>After a minute or more the installer will load stage2, with the
interactive VNC session. You need to know the IP address or hostname
of the server. Either look into DHCP logs, have somebody look at the
server console and tell you that (it's printed on tty1) or script it in
a <a href="https://fedoraproject.org/wiki/Anaconda/Kickstart#Chapter_4._Pre-installation_Script">%pre</a>
script which will send you an email for example.</p>

<p>When ready, redirect one of your local ports through SSH to the VNC port on the server:</p>

<pre><code>$ ssh -L 5902:localhost:5901 -N root@server.example.com
</code></pre>

<p>Now connect to DISPLAY :2 on your system to begin the installation:</p>

<pre><code>$ vncviewer localhost:2 &amp;
</code></pre>

<h2>Warning Bugs Present</h2>

<p>As it happens, I find bugs everywhere. This is no exception.
Depending on your network/DHCP configuration IP address during install may
change mid-air and cause VNC client connection to freeze.</p>

<p>The reason for this bug is evident from the code (rhel6-branch):</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>iw/timezone_gui.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="ow">not</span> <span class="n">anaconda</span><span class="o">.</span><span class="n">isKickstart</span><span class="p">:</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">utcCheckbox</span><span class="o">.</span><span class="n">set_active</span><span class="p">(</span><span class="ow">not</span> <span class="n">hasWindows</span><span class="p">(</span><span class="n">anaconda</span><span class="o">.</span><span class="n">id</span><span class="o">.</span><span class="n">bootloader</span><span class="p">))</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>textw/timezone_text.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="ow">not</span> <span class="n">anaconda</span><span class="o">.</span><span class="n">isKickstart</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">hasWindows</span><span class="p">(</span><span class="n">anaconda</span><span class="o">.</span><span class="n">id</span><span class="o">.</span><span class="n">bootloader</span><span class="p">):</span>
</span><span class='line'>    <span class="n">asUtc</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Because we are using a kickstart file Anaconda will assume the system clock <strong>DOES NOT</strong>
use UTC. If you forget to configure it manually you may see time on the server shifting
back or forward (depending on your timezone) while installing. If your DHCP is configured
for short lease time the address will expire before the installation completes. When new
address is requested from DHCP it may be different and this will cause your VNC connection
to freeze.</p>

<p>To workaround this issue select the appropriate value for the system clock settings during install
and possibly use static IP address during the installation.</p>

<h2>Feedback</h2>

<p>As always I'd love to hear your feedback in the comments section below. Let me know
your tips and tricks to perform secure remote installations using public networks.</p>
]]></content>
  </entry>
  
</feed>
