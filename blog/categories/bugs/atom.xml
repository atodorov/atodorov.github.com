<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: bugs | atodorov.org - you can logoff, but you can never leave]]></title>
  <link href="http://atodorov.org/blog/categories/bugs/atom.xml" rel="self"/>
  <link href="http://atodorov.org/"/>
  <updated>2014-01-24T22:12:52+02:00</updated>
  <id>http://atodorov.org/</id>
  <author>
    <name><![CDATA[Alexander Todorov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Can I Use Android Phone as Smart Card Reader]]></title>
    <link href="http://atodorov.org/blog/2013/12/18/can-i-use-android-phone-as-smart-card-reader/"/>
    <updated>2013-12-18T23:09:00+02:00</updated>
    <id>http://atodorov.org/blog/2013/12/18/can-i-use-android-phone-as-smart-card-reader</id>
    <content type="html"><![CDATA[<p>Today I had troubles with my Omnikey CardMan 6121 smart card reader.
For some reason it will not detect the card inside and was unusable.
<code>/var/log/messages</code> was filled with  <em>Card Not Powered</em> messages:</p>

<pre><code>Dec 18 11:17:55 localhost pcscd: eventhandler.c:292:EHStatusHandlerThread() Error powering up card: -2146435050 0x80100016
Dec 18 11:18:01 localhost pcscd: winscard.c:368:SCardConnect() Card Not Powered
Dec 18 11:18:02 localhost pcscd: winscard.c:368:SCardConnect() Card Not Powered
</code></pre>

<p><img src="http://atodorov.org/images/omnikey_cardman_6121.gif" style="float:right;margin-left:20px;" /></p>

<p>I've found the solution in
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=531998">RHBZ #531998</a>.</p>

<p>{% blockquote Pierre Ossman https://bugzilla.redhat.com/show_bug.cgi?id=531998#c12 Comment #12 %}</p>

<p>I've found the problem, and it's purely mechanical.
Omnikey has simply screwed up when they designed this reader.
When the reader is inserted into the ExpressCard slot, it gets slightly
compressed. This is enough to trigger the mechanical switch that detects
insertions. If I jam something in there and force it apart, then pcscd
starts reporting that the slot is empty.
{% endblockquote %}</p>

<p>So I tried moving the smart card a millimeter back and forth inside the reader and
that fixed it for me.</p>

<p>This smart card is standard SIM size and I wonder if it is possible to use
<a href="http://amzn.to/1dnl2gN">dual SIM</a> smart phones and <a href="http://amzn.to/18XpWlp">tablets</a>
as a reader? I will be happy to work on the software side if there is an open source
project already (e.g. OpenSC + drivers for Android). If not, why not?</p>

<p>If you happen to have information on the subject please share it in the comments.
Thanks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bug in Python URLGrabber/cURL on Fedora and Amazon Linux]]></title>
    <link href="http://atodorov.org/blog/2013/11/29/bug-python-urlgrabber-curl-fedora-amazon-linux/"/>
    <updated>2013-11-29T14:05:00+02:00</updated>
    <id>http://atodorov.org/blog/2013/11/29/bug-python-urlgrabber-curl-fedora-amazon-linux</id>
    <content type="html"><![CDATA[<p>Accidentally I have discovered a bug for Python's
URLGrabber module which has to do with change in behavior in libcurl.</p>

<p>{% codeblock lang:python %}</p>

<blockquote><blockquote><blockquote><p>from urlgrabber.grabber import URLGrabber
g = URLGrabber(reget=None)
g.urlgrab('https://s3.amazonaws.com/production.s3.rubygems.org/gems/columnize-0.3.6.gem', '/tmp/columnize.gem')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py", line 976, in urlgrab</p>

<pre><code>return self._retry(opts, retryfunc, url, filename)
</code></pre>

<p>  File "/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py", line 880, in _retry</p>

<pre><code>r = apply(func, (opts,) + args, {})
</code></pre>

<p>  File "/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py", line 962, in retryfunc</p>

<pre><code>fo = PyCurlFileObject(url, filename, opts)
</code></pre>

<p>  File "/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py", line 1056, in <strong>init</strong></p>

<pre><code>self._do_open()
</code></pre>

<p>  File "/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py", line 1307, in _do_open</p>

<pre><code>self._set_opts()
</code></pre>

<p>  File "/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py", line 1161, in _set_opts</p>

<pre><code>self.curl_obj.setopt(pycurl.SSL_VERIFYHOST, opts.ssl_verify_host)
</code></pre>

<p>error: (43, '')</p>

<p>{% endcodeblock %}</p></blockquote></blockquote></blockquote>

<p>The code above works fine with curl-7.27 or older while it breaks with curl-7.29 and
newer. As explained by
<a href="http://lists.baseurl.org/pipermail/yum-devel/2013-November/010428.html">Zdenek Pavlas</a>
the reason is an internal change in libcurl which doesn't accept a value of 1 anymore!</p>

<p>The bug is reproducible with a newer libcurl version and a vanilla urlgrabber==3.9.1
from PyPI (e.g. inside a virtualenv). The latest python-urlgrabber RPM packages in both
Fedora and Amazon Linux already have the fix.</p>

<p>I have tested the patch proposed by Zdenek and it works for me. I still have no idea why
there aren't any updates released on PyPI though!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook UI Bug Strikes Again at HackFMI]]></title>
    <link href="http://atodorov.org/blog/2013/09/23/facebook-ui-bug-strikes-again-at-hackfmi/"/>
    <updated>2013-09-23T23:33:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/09/23/facebook-ui-bug-strikes-again-at-hackfmi</id>
    <content type="html"><![CDATA[<p>Does this look familiar to you ?</p>

<p><img src="/images/hackfmi_facebook_bug.png" title="HackFMI UI bug" alt="&quot;HackFMI UI bug&quot;" /></p>

<p>No? See
<a href="/blog/2013/06/02/sofiavalley-ui-bug/">SofiaValley</a> and
<a href="/blog/2013/07/31/ui-bug-for-opensource-dot-com/">opensource.com</a>.</p>

<p>Either this is a very common front-end mistake (I would blame CSS) or
Facebook have screwed up their buttons.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lenovo Rants: Battery and Dock Flaws]]></title>
    <link href="http://atodorov.org/blog/2013/09/15/lenovo-rants-battery-and-dock-flaws/"/>
    <updated>2013-09-15T10:23:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/09/15/lenovo-rants-battery-and-dock-flaws</id>
    <content type="html"><![CDATA[<p>To all my readers - sorry for not being able to blog more frequently lately.
Here's an easy read about my favourite laptop brand Lenovo and some of their
design flaws I've found.</p>

<h2>X220 and T60 Batterries are ALMOST Identical</h2>

<p><img src="/images/lenovo_x220_t60_battery.jpg" title="X220 and T60 batteries" alt="&quot;X220 and T60 batteries&quot;" /></p>

<p>As you can see the <a href="http://amzn.to/12y5hwp">X220</a> and
<a href="http://amzn.to/183SgiR">T60</a> batteries are nearly identical with the notable
exception of the connector placement. The end result - I have to purchase yet another
battery as a backup for long travel/work on the go. Not what I want.</p>

<p>I wish all Lenovo models had the same batteries so people can swap them around
as they wish. Is this too much to ask for? Have you seen another brand which
got this right?</p>

<h2>ThinkPad Mini Dock Design Flaw</h2>

<p>I'm using a <a href="http://amzn.to/15tjUYi">ThinkPad Mini Dock Series 3</a> docking station
with my X220 laptop. Being a QA engineer for so long I immediately
noticed something that wasn't quite right. The buttons on the left and the mechanism
next to them are blocking the hot air exhaust from the CPU fan. This model of docking
station is made to fit several models of laptops and those which dock in position 2 are
less affected from those which dock in possition 1. Mine was not a lucky one.</p>

<p><img src="/images/dock/alone.jpg" title="docking station in position 2" alt="docking station in position 2" /></p>

<p>On the pictures below it is clearly visible that most of the hot air coming out of the CPU
fan is blocked.</p>

<p><img src="/images/dock/top.jpg" title="top view" alt="top view" />
<img src="/images/dock/back.jpg" title="back view" alt="back view" />
<img src="/images/dock/side.jpg" title="side view" alt="side view" /></p>

<p>In order to reduce laptop heating and provide better cooling I decided to remove the
1/2 position switch mechanism. To do that you have to unscrew all screws from the docking
station and carefully split the top and bottom halves. The offending piece of plastic is
screwed with two tiny screws at the bottom. Once they are removed everything comes off.</p>

<p><img src="/images/dock/removed.jpg" title="blocking part removed" alt="blocking part removed" /></p>

<p>Even with this piece removed my laptop still hets up too much! I guess 80 C is just
normal for the Core i7 processors :(.</p>

<p>Have you found something not quite right in your hardware design? Please share in the
comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bug Analysis Of RHBZ #1337]]></title>
    <link href="http://atodorov.org/blog/2013/09/02/bug-analysis-of-rhbz-1337/"/>
    <updated>2013-09-02T16:38:00+03:00</updated>
    <id>http://atodorov.org/blog/2013/09/02/bug-analysis-of-rhbz-1337</id>
    <content type="html"><![CDATA[<p>In my <a href="/blog/2013/08/23/red-hats-ebugzilla-hits-one-million-bugs/">previous post</a>
I asked the readers of this blog to pick a bug number from Red Hat's Bugzilla
so I can analyze it later.</p>

<p><a href="http://radorado.me">Radoslav Georgiev</a> decided to step up and
selected the <a href="https://en.wikipedia.org/wiki/Leet">Leet</a> bug
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=1337">https://bugzilla.redhat.com/show_bug.cgi?id=1337</a></p>

<p>This is a rather old bug against kernel, in particular
against the token ring driver. There isn't much info on the bug but it seems
the issue is hardware dependent and doesn't reproduce reliably.</p>

<p>Looking at the bug status and history it looks like it was closed without
fixing it. Most likely the reason for this was there was no hardware
to test, bug was not reproduced and no customers were seeing the issue or
were willing to test and work with devel!</p>

<p>If you'd like to see my comments on other interesting bugs just post a link
to them in the comments section.</p>
]]></content>
  </entry>
  
</feed>
