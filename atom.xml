<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>atodorov.org</title><link href="http://atodorov.org/" rel="alternate"></link><link href="http://atodorov.org/atom.xml" rel="self"></link><id>http://atodorov.org/</id><updated>2016-03-01T15:08:00+02:00</updated><entry><title>Puppet for Complete Beginners</title><link href="http://atodorov.org/blog/2016/03/01/puppet-for-complete-beginners/" rel="alternate"></link><updated>2016-03-01T15:08:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2016-03-01:blog/2016/03/01/puppet-for-complete-beginners/</id><summary type="html">&lt;p&gt;I guess everyone knows what &lt;a href="https://puppetlabs.com/"&gt;Puppet&lt;/a&gt; is but probably not
everyone knows how to write Puppet modules. This article outlines what I've
learned while adding a new module to an existing Puppet configuration without
having any previous knowledge beforehand and not reading the official
documentation (which I should have done).&lt;/p&gt;
&lt;h2&gt;Existing setup&lt;/h2&gt;
&lt;p&gt;The existing setup is a single git repository, which holds all of the Puppet
configuration for all hosts and environments. The main directory inside the
repo is &lt;code&gt;puppet/modules&lt;/code&gt;. I wanted to add a few Python scripts which automate
tasks inside &lt;a href="https://www.jetbrains.com/youtrack/"&gt;YouTrack&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;What to do next&lt;/h2&gt;
&lt;p&gt;First step in understanding Puppet was to figure out what do I need to do ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have my scripts inside the repository;&lt;/li&gt;
&lt;li&gt;Provide configuration file for credentials;&lt;/li&gt;
&lt;li&gt;Configure cron jobs;&lt;/li&gt;
&lt;li&gt;Install all of this on one of the existing systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My directory layout looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./puppet/modules/youtrack/
                        ./files/archive
                        ./manifests/init.pp
                        ./templates/youtrack.conf.erb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;files/&lt;/code&gt; is where all the scripts go. They can be accessed from here later on.
&lt;code&gt;manifests/init.pp&lt;/code&gt; is the definition of this module - what gets installed where
and so on. &lt;code&gt;templates/&lt;/code&gt; is where templates go. These are usually config files
which use a placeholder for their values.&lt;/p&gt;
&lt;p&gt;My &lt;code&gt;files/archive&lt;/code&gt; is a simple executable Python script, which queries YouTrack
for old issues and archives them. It looks for a &lt;code&gt;youtrack.conf&lt;/code&gt; file at a
pre-defined location (the location on the host system) or at environment variables
for testing purposes.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;templates/youtrack.conf.erb&lt;/code&gt; looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[main]&lt;/span&gt;
&lt;span class="na"&gt;url&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;%= scope.lookupvar(&amp;#39;common::vars::youtrack_url&amp;#39;) %&amp;gt;&lt;/span&gt;
&lt;span class="na"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;%= scope.lookupvar(&amp;#39;common::vars::youtrack_user&amp;#39;) %&amp;gt;&lt;/span&gt;
&lt;span class="na"&gt;pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;%= scope.lookupvar(&amp;#39;common::vars::youtrack_pass&amp;#39;) %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;manifests/init.pp&lt;/code&gt; looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;class youtrack {
  &lt;span class="nv"&gt;$youtrack_files&lt;/span&gt; =
    &amp;#39;/opt/devops/puppet/modules/youtrack/files&amp;#39;

  file { &amp;#39;/opt/youtrack.conf&amp;#39;:
    content =&amp;gt; template(&amp;#39;youtrack/youtrack.conf.erb&amp;#39;),
  }

  cron { &amp;#39;Archive issues older than 2 weeks&amp;#39;:
    ensure      =&amp;gt; present,
    command     =&amp;gt; &amp;quot;cd &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;youtrack_files&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;youtrack_files&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/archive&amp;quot;,
    environment =&amp;gt; [ &amp;#39;MAILTO=devops@example.com&amp;#39; ],
    user        =&amp;gt; &amp;#39;root&amp;#39;,
    minute      =&amp;gt; 0,
    hour        =&amp;gt; 8,
  }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once Puppet applies this configuration on the host system it will&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the configuration template under &lt;code&gt;/opt/youtrack.conf&lt;/code&gt;
replacing the placeholder variables with actual values. Notice the
argument to &lt;code&gt;template()&lt;/code&gt; - it's of the form module_name/file_name;&lt;/li&gt;
&lt;li&gt;Add a cron job entry for my Python script.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The host system is the Puppet master so I don't really need to
install my Python scripts into another location. I could if I wanted to but
this isn't necessary. Cron is executing the script from inside the git
checkout.&lt;/p&gt;
&lt;h2&gt;Bundle it all together&lt;/h2&gt;
&lt;p&gt;Our module is done. Now we need to instruct Puppet that we want to use it.
I have a &lt;code&gt;puppet/modules/role/manifests/pmaster.pp&lt;/code&gt; which defines what modules
get used on the Puppet master machine. &lt;code&gt;pmaster&lt;/code&gt; matches the hostname of the
system (that's how it's been configured to work). The module looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;role::pmaster&lt;/span&gt; {
  &lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;youtrack&lt;/span&gt;

  ...
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is also a &lt;code&gt;puppet/modules/common/manifests/vars-static.pp&lt;/code&gt; file which
defines all the variables used in the templates. Simply add the necessary ones
at the bottom:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;@@ -197,4 +197,9 @@&lt;/span&gt;
&lt;span class="x"&gt;+&lt;/span&gt;
&lt;span class="x"&gt;+  &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; YouTrack automation&lt;/span&gt;
&lt;span class="x"&gt;+  &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;youtrack_url&lt;/span&gt;&lt;span class="x"&gt;  = &amp;#39;http://example.com&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;+  &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;youtrack_user&lt;/span&gt;&lt;span class="x"&gt; = &amp;#39;changeMe&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;+  &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;youtrack_pass&lt;/span&gt;&lt;span class="x"&gt; = &amp;#39;changeMe&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; in reality this file is just a placeholder. The real values are not
stored in git but are configured manually on systems which need them. On the
Puppet master there are separate &lt;code&gt;XXX-vars.pp&lt;/code&gt; files for different environments
like devel, staging and production.&lt;/p&gt;</summary><category term="fedora.planet"></category></entry><entry><title>Ruby &amp; Time-based Testing</title><link href="http://atodorov.org/blog/2016/02/23/ruby-time-based-testing/" rel="alternate"></link><updated>2016-02-23T13:08:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2016-02-23:blog/2016/02/23/ruby-time-based-testing/</id><summary type="html">&lt;p&gt;Publishing this mostly for self reference.
Here are two blog posts on the topic of testing time
dependent code in Ruby applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://metaskills.net/2012/08/07/synchronized-times-in-ruby-and-javascript-acceptance-tests-using-capybara-timecop-and-sinon-js/"&gt;Synchronized Times In Ruby &amp;amp; JavaScript Acceptance Tests Using Capybara, Timecop &amp;amp; Sinon.JS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.pivotal.io/labs/labs/goodbye-timecop-hello-timehelpers"&gt;Move Over Timecop…Hello ActiveSupport::Testing::TimeHelpers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I haven't seen a module similar to timecop in Python, but frankly I've never needed one either.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="Ruby"></category><category term="QA"></category></entry><entry><title>Bulgaria Web Summit 2016 Report &amp; Videos</title><link href="http://atodorov.org/blog/2016/02/23/bulgaria-web-summit-2016-report-videos/" rel="alternate"></link><updated>2016-02-23T12:54:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2016-02-23:blog/2016/02/23/bulgaria-web-summit-2016-report-videos/</id><summary type="html">&lt;p&gt;&lt;img alt="Musala Room" src="/images/bws16_zoltan.jpg" title="Musala room" /&gt;&lt;/p&gt;
&lt;p&gt;Hello everyone, this year I've been moderator at
&lt;a href="http://bulgariawebsummit.com/"&gt;Bulgaria Web Summit&lt;/a&gt; again.
Here is a quick report of the even as seen from the room I was at.&lt;/p&gt;
&lt;p&gt;The morning sessions were dominated by database topics including
MariaDB, RocksDB and MammothDB. The MariaDB talk was particularly strong
while the rest were with average attendance.&lt;/p&gt;
&lt;p&gt;In the afternoon we switched to DevOps and Docker and the room exploded.
There were people sitting on the ground and standing around the walls. There
was not enough oxygen for everyone in the room.&lt;/p&gt;
&lt;p&gt;I have recorded all of the talks from this room. Most are in English.
You can watch them at
&lt;a href="https://www.youtube.com/watch?v=1f_4mRNVAX8&amp;amp;index=1&amp;amp;list=PLFjlI7p-h1hxBP3cIjEqePSeoBDHud5Db"&gt;my YouTube channel&lt;/a&gt;
and I hope to see you next year in Sofia.&lt;/p&gt;</summary><category term="events"></category><category term="fedora.planet"></category></entry><entry><title>FOSDEM 2016 Report</title><link href="http://atodorov.org/blog/2016/02/02/fosdem-2016-report/" rel="alternate"></link><updated>2016-02-02T22:54:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2016-02-02:blog/2016/02/02/fosdem-2016-report/</id><summary type="html">&lt;p&gt;Hello everyone, this year I've been to FOSDEM again. Here is a quick report
of what I did, saw and liked during the event.&lt;/p&gt;
&lt;h2&gt;Day 0 - Elixir &amp;amp; Erlang&lt;/h2&gt;
&lt;p&gt;Friday started with an unexpected shopping trip. The airline broke
my luggage and I had to buy a replacement. The irony is that just before taking off
I saw a guy with an
&lt;a rel="nofollow" href="http://www.amazon.com/gp/product/B006P65P1W/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B006P65P1W&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=4VNFFQEDPY5JXCLP"&gt;Osprey Meridian&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B006P65P1W" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /&gt;
and thought how cool that was. The next day I was running around Brussels to
find the exact same model! I also searched to buy the book
&lt;a rel="nofollow" href="http://www.amazon.com/gp/product/0140238301/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0140238301&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=3I6DMH5CC6ZGNX5A"&gt;Teach Your Child How to Think&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0140238301" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /&gt;
by Edward De Bono but all 4 bookstores I checked were out of stock.&lt;/p&gt;
&lt;p&gt;With the luggage problem solved I headed to
&lt;a href="http://betacowork.com"&gt;BetaCowork&lt;/a&gt; for
&lt;a href="http://www.erlang-factory.com/brussels2016/"&gt;Brussels Erlang Factory Lite&lt;/a&gt;
where I learned a bit about Erlang and Elixir. I also managed to squeeze a meeting
with &lt;a href="http://www.betacowork.com/profile/122/gilbert-west/"&gt;Gilbert West&lt;/a&gt; talking about
open source bugs.&lt;/p&gt;
&lt;p&gt;I found particularly interesting the Elixir workshop and the talk
&lt;a href="http://www.erlang-factory.com/brussels2016/pieterjan-montens"&gt;Erlang In The Wild: A Governmental Web Application&lt;/a&gt;
by Pieterjan Montens. Later I've managed to get a hold of him and talk some more
about his experiences working for the government. As I figured out later we
are likely to have mutual friends.&lt;/p&gt;
&lt;p&gt;BetaCowork was hosting FOSDEM related events during the entire week.
There was a GNOME event and the Libre Office Italian team was there as well.
Next time definitely worth a longer visit.&lt;/p&gt;
&lt;p&gt;Friday night was reserved for a dinner with the Red Hat Eclipse team and
a fair amount of beer at Delirium afterwards where I've met my friend
&lt;a href="https://fedoraproject.org/wiki/User:Giannisk"&gt;Giannis Konstantinidis&lt;/a&gt;
and the new Fedora Ambassador for Albania -
&lt;a href="https://fedoraproject.org/wiki/User:Jonatoni"&gt;Jona Azizai&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All-in-all pretty good Friday!&lt;/p&gt;
&lt;h2&gt;Day 1 - Testing and Automation&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Testing and Automation" src="/images/fosdem/2014/testing_automation.jpg" title="Testing and Automation" /&gt;&lt;/p&gt;
&lt;p&gt;FOSDEM was hosting the
&lt;a href="https://fosdem.org/2016/schedule/track/testing_and_automation/"&gt;Testing and automation devroom&lt;/a&gt;
again. I've spent the entire Saturday there.&lt;/p&gt;
&lt;p&gt;Definitely the most interesting talk was
&lt;a href="https://fosdem.org/2016/schedule/event/closed_source_interop/"&gt;Testing interoperability with closed-source software through scriptable diplomacy&lt;/a&gt;
which introduced &lt;a href="http://frida.re"&gt;Frida&lt;/a&gt;. Frida is a testing tool which injects
a JavaScript VM into your process and you can write scripts driving the
application automatically. It was designed as means to control closed source
software but can definitely be used for open source apps as well.&lt;/p&gt;
&lt;p&gt;I've talked to both Karl and Ole about Frida and my use-case for
&lt;a href="http://atodorov.org/blog/2016/01/14/controlling-interactive-terminal-programs/"&gt;testing interactive terminal programs&lt;/a&gt;.
That should be easy to do with Frida - just hook into the read and write
functions and write some JavaScript or Python to run the test.
Later we talked about how exactly Frida attaches to the running process
and what external dependencies are needed if I'm to inject Frida
into the Fedora installation environment.&lt;/p&gt;
&lt;p&gt;In &lt;em&gt;Testing embedded systems&lt;/em&gt; Itamar Hassin talked about testing medical devices
and made a point about regulation, security and compliance. Basically you are not
allowed to ship non-application code on production system. However that code
is necessary instrumentation to allow external integration testing. I suspect most
developers and QA engineers will never have to deal with so strict
regulations but that is something to have in mind if you test software
in a heavily regulated industry.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Testing complex software in CI&lt;/em&gt; was essentially a presentation about &lt;em&gt;cwrap&lt;/em&gt; which
I've seen at
&lt;a href="http://atodorov.org/blog/2014/02/03/fosdem-2014-report-day-2-testing-and-automation/"&gt;FOSDEM 2014&lt;/a&gt;.
It touched the topic from a slightly different angle though. Tests in any open source
project should have the following properties&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be able to execute without the need of a complex environment;&lt;/li&gt;
&lt;li&gt;Enable full CI during code review (dependent on previous property);&lt;/li&gt;
&lt;li&gt;Be able to create complete integration tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The demo showed how you can execute Samba's test suite locally without
preparing a domain controller for example. This helps both devel and external
contributors. Now contrast this with how Red Hat QE will do the testing - 
they will create a bunch of virtual and bare metal machines, configure all
related services and then execute the same test scripts to verify that indeed
Samba works as expected.&lt;/p&gt;
&lt;p&gt;Btw I've been thinking what if I patch &lt;em&gt;cwrap&lt;/em&gt; to overwrite read and write ?
That will also make it possible to test interactive console programs,
wouldn't it?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Jenkins as Code&lt;/em&gt; by Marcin and Lukasz was a blast. I think there were
people standing alongside the walls. The guys shared their experience
with &lt;a href="https://github.com/jenkinsci/job-dsl-plugin"&gt;Jenkins Job DSL&lt;/a&gt;
plugin. The plugin is very flexible and powerful,
using Groovy as its programming language. The only drawback is that it is
sometimes too complex to use and requires a steep learning curve. Maybe
&lt;a href="http://docs.openstack.org/infra/jenkins-job-builder/"&gt;Jenkins Job Builder&lt;/a&gt;
is better suited if you don't need all that flexibility
and complexity. I've met both of them afterwards and talked a bit more
about open source bugs.&lt;/p&gt;
&lt;p&gt;At Saturday evening I've visited a panel discussion about
&lt;a href="https://www.eventbrite.com/e/startupbusaccelerate-the-impact-of-open-source-software-on-the-tech-industry-tickets-20869395925"&gt;the impact of open source on the tech industry&lt;/a&gt;
at &lt;a href="http://co-station.com"&gt;Co.Station&lt;/a&gt; organized by &lt;a href="http://europe.startupbus.com"&gt;The Startup Bus&lt;/a&gt;.
There was beer, pizza, entrepreneur networking and talking about startups
and open source. Do I need to say more? I will post a separate blog post
about the interesting start-ups I've found so stay tuned.&lt;/p&gt;
&lt;h2&gt;Day 2 - Ping-pong with BBC Open Source&lt;/h2&gt;
&lt;p&gt;&lt;img alt="ping-pong" src="/images/bbc_ping_pong.jpg" title="ping-pong" /&gt;&lt;/p&gt;
&lt;p&gt;Sunday was my lazy day. I've attended a few talks but nothing too interesting.
I've managed to go around the project stands, 
&lt;a href="https://fedorahosted.org/fedora-infrastructure/ticket/5085"&gt;filed a bug against FAS&lt;/a&gt;
and scored the highest ping-pong score for the day at the BBC Open Source stand.&lt;/p&gt;
&lt;p&gt;BBC has a long history of being involved with education in the UK and the
&lt;a href="https://www.microbit.co.uk"&gt;micro:bit&lt;/a&gt; is their latest project. I will love to
see this (or similar) delivered by the thousands here in Bulgaria so if you
think about sponsoring let me know.&lt;/p&gt;
&lt;p&gt;Accidentally I met
&lt;a href="https://fedoraproject.org/wiki/User:Msivak"&gt;Martin Sivak&lt;/a&gt; - a former
Anaconda developer whom I've worked with in the past. He is now at the
Virtualization Development team at Red Hat and we briefly talked about
the need for more oVirt testing. I have something in mind about this
which will be announced in the next 2 months so stay tuned.&lt;/p&gt;</summary><category term="events"></category><category term="fedora.planet"></category><category term="QA"></category></entry><entry><title>How to Get Started on a New QA Project</title><link href="http://atodorov.org/blog/2016/01/21/how-to-get-started-on-a-new-qa-project/" rel="alternate"></link><updated>2016-01-21T14:00:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2016-01-21:blog/2016/01/21/how-to-get-started-on-a-new-qa-project/</id><summary type="html">&lt;p&gt;Every time I have to look at a new software project and use my QA powers
to help them I follow a standard process of getting involved. Usually my
job is to reveal which areas are lacking adequate test coverage and propose
and implement improvements. Here's what it looks like.&lt;/p&gt;
&lt;h2&gt;Obtain Domain Knowledge&lt;/h2&gt;
&lt;p&gt;Whatever the software does I don't start looking into the technical details
before I have domain knowledge about the subject. If the domain is purely
outside my expertise my first reading materials have
nothing to do with the product itself. My goal is to learn how the domain
works, what language it uses, any particular specifics that may exists, etc.&lt;/p&gt;
&lt;p&gt;Then I start asking general questions about the software, how it works and
what it does. At this stage I'm not trying to go into details but rather
cover as much angles as possible. I want to know the big picture of how
things are supposed to work and what the team is trying to do. This also
starts to reveal the architecture behind the project.&lt;/p&gt;
&lt;p&gt;Then I start using the software as if I'm the intended target audience while
taking notes about everything that seems odd or I simply don't understand.
Being with limited knowledge about the domain and the product helps a lot
because I haven't developed any bias yet. This initial hands-on introduction
is best done with a peer who is better familiar with the
product. It is not necessary for the peer to be a technical person, although
that helps when implementation related questions arise.&lt;/p&gt;
&lt;h2&gt;RTFM&lt;/h2&gt;
&lt;p&gt;I make a point to read any available documents, wikis, READMEs, etc. They can
fill the gaps with often used terms, explain processes and workflows or
reveal that such are missing and document existing infrastructure.
Quite often I'm able to see some areas for
improvements directly from reading the documentation.&lt;/p&gt;
&lt;p&gt;At this stage I'm just collecting notes and impressions which will be validated
later. I don't try to remember all of the docs because I can always go back
and read them again. Instead I try to remember the topics these documents
talk about and possibly collect links for future reference.&lt;/p&gt;
&lt;h2&gt;Get to Know the Devel Team&lt;/h2&gt;
&lt;p&gt;One thing I hate the most, except not knowing what a piece of code does is
not knowing who to ask. Quite often team structure follows the application
structure - front-end, back-end, mobile, etc. While getting to know who does
what I also use this as opportunity to gain deeper knowledge about the
product. I will talk to team leads and individual developers asking them to
explain the chosen architecture and also tell me what are the most annoying
problems according to them.&lt;/p&gt;
&lt;p&gt;Later this knowledge makes it easier to see trends and suggest changes that
will improve the overall product quality. Having good working relationship
with developers also makes it easy for these changes to get through.&lt;/p&gt;
&lt;h2&gt;Get to Know the QA Team&lt;/h2&gt;
&lt;p&gt;Similar to the previous step but with a deeper focus on details. This is my
personal domain so I'm trying to figure out who does what in terms of software
testing for the project in question. When I'm working with less experienced
QA teams I focus on what are the individual tasks at hand, how often are they
executed, what is the general workflow and how are we dealing with bugs.&lt;/p&gt;
&lt;p&gt;Behind the scenes what this accomplishes is that I'm able to find what the
bug reporting, testing and verification process is. How are new bugs discovered
and what are the general test strategies without confronting people
directly. I also find what tools are used and get familiar with them in the
process and discover the level of technical abilities of individual team members.&lt;/p&gt;
&lt;h2&gt;Get to Know the App&lt;/h2&gt;
&lt;p&gt;Armed with the previous knowledge I set off to explore the entire application.
Again this is best done with a peer. This time I look at every screen, widget
and button there is. I try using all the available features which also doubles
as an exploratory testing session.&lt;/p&gt;
&lt;p&gt;For backend services which are usually harder to test I opt for a more
detailed explanation session with the developers. Here's the time when I'm
asking the question "How do you test .... ?" multiple times.&lt;/p&gt;
&lt;h2&gt;Deploy to Production&lt;/h2&gt;
&lt;p&gt;If possible I like to keep an eye on how things are deployed to production.
It is not uncommon for software to experience problems due to problems with
the deployment procedure or the production environment itself.&lt;/p&gt;
&lt;p&gt;Also with agile teams it is common to deploy more often. This in turn may
generate additional work for QA. Knowing how software is deployed to
production and what the workflow in the team is helps later with planning
test activities and resources.&lt;/p&gt;
&lt;h2&gt;Read All Bugs&lt;/h2&gt;
&lt;p&gt;Unless there are millions of them I try to go through all the bugs reported
in the bug tracker. If the project has some age to it earlier reports may not
be relevant anymore. In this case my marker is an important event like big
refactoring, important or big new features, changes in teams and organization
or similar. The thinking behind this is that every big change introduces lots
of risks from software quality stand point. Also large changes invalidate
previous conditions and may render existing problems obsolete, replacing them
with newer set of problems instead!&lt;/p&gt;
&lt;p&gt;From reading bug reports I'm able to discover failure trends, which in turn
indicate areas for improvement. For example: lots of translation related bugs
indicate problems with the translation workflow, lots of broken existing
functionality means poor regression testing, probably also lack of unit tests,
lots of partially(poorly) implemented features shows chaotic planning and
unclear feature specifications, etc.&lt;/p&gt;
&lt;p&gt;At this stage I try to classify problems both by technical component and
by type of issue. Later this will be my starting reference for creating
test strategies and test plans!&lt;/p&gt;
&lt;p&gt;If possible and practical I talk to support and read all the support tickets
as well. This gives me an idea which problems are most visible to
customers which aren't necessary the biggest technical issues but may consume
man power dealing with them.&lt;/p&gt;
&lt;h2&gt;Summarize, Divide and Conquer&lt;/h2&gt;
&lt;p&gt;Depending on the project and team size these initial steps will take anywhere 
from a full week to a month or even more. After they are complete I'm
feeling comfortable talking about the software at hand and have a list of
possible problems and areas of improvements.&lt;/p&gt;
&lt;p&gt;After talking to people in charge (e.g. PMs, Project Leads, etc) my initial
list is transformed into tasks. I strive to keep the tasks as independent
as possible. Then these tasks are prioritized and it's time to start executing
them one by one.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Using Multiple Software Collections</title><link href="http://atodorov.org/blog/2016/01/18/using-multiple-software-collections/" rel="alternate"></link><updated>2016-01-18T14:00:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2016-01-18:blog/2016/01/18/using-multiple-software-collections/</id><summary type="html">&lt;p&gt;&lt;a href="https://www.softwarecollections.org"&gt;Software Collections&lt;/a&gt; are never versions
of system wide packages used typically on Red Hat Enterprise Linux. They are
installed together with the system-wide versions and can be used to develop
applications without affecting the system tools.&lt;/p&gt;
&lt;p&gt;If you need to use a software collection then enable it like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;scl enable rh-ruby22 /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can enable a second (and third, etc) software collection by executing &lt;code&gt;scl&lt;/code&gt;
again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;scl enable nodejs010 /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After executing the above two commands I have:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;which ruby
/opt/rh/rh-ruby22/root/usr/bin/ruby
&lt;span class="nv"&gt;$ &lt;/span&gt;which node
/opt/rh/nodejs010/root/usr/bin/node
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now I can develop an application using Ruby 2.2 and Node.js 0.10.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="RHEL"></category><category term="tips"></category></entry><entry><title>Tesla Needs More QA</title><link href="http://atodorov.org/blog/2016/01/15/tesla-needs-more-qa/" rel="alternate"></link><updated>2016-01-15T12:00:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2016-01-15:blog/2016/01/15/tesla-needs-more-qa/</id><summary type="html">&lt;p&gt;&lt;img alt="Tesla email" src="/images/tesla_qa_bug.png" title="Tesla email" /&gt;&lt;/p&gt;
&lt;p&gt;A nice way for Tesla Motors to tell me they won't consider my interest in their
QA positions - by sending me an email with a bug! It only goes to show that
everything coming out of an IT system needs to be tested.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Controlling Interactive Terminal Programs</title><link href="http://atodorov.org/blog/2016/01/14/controlling-interactive-terminal-programs/" rel="alternate"></link><updated>2016-01-14T16:03:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2016-01-14:blog/2016/01/14/controlling-interactive-terminal-programs/</id><summary type="html">&lt;p&gt;Building on my previous experience about
&lt;a href="http://atodorov.org/blog/2015/12/25/capture-terminal-output-from-other-processes/"&gt;capturing terminal output from other processes&lt;/a&gt;
I wanted to create an automated test case for the initial-setup-text service
which would control &lt;code&gt;stdin&lt;/code&gt;. Something like
&lt;a href="https://fedorahosted.org/dogtail/"&gt;Dogtail&lt;/a&gt; but for text mode applications.&lt;/p&gt;
&lt;p&gt;What you have to do is attach &lt;code&gt;gdb&lt;/code&gt; to the process. Then you can &lt;code&gt;write&lt;/code&gt; to
any file descriptor that is already opened. &lt;strong&gt;WARNING:&lt;/strong&gt; writing directly to
stdin didn't quite work! Because (I assume) stdin is a tty the text was shown on
the console but the return character wasn't interpreted and the application wasn't
accepting the input string. What I had to do is replace the tty with a pipe and
it worked. However the input is not duplicated on the console this way!&lt;/p&gt;
&lt;p&gt;Another drawback is that I couldn't use &lt;code&gt;strace&lt;/code&gt; to log the output in combination
with &lt;code&gt;gdb&lt;/code&gt;. Once a process is under trace you can't trace it a second time! For this
simple test I was able to live with this by not inspecting the actual text printed
by initial-setup. Instead I'm validating the state of the system after setup is
complete. I've tried to &lt;code&gt;read&lt;/code&gt; from &lt;code&gt;stdout&lt;/code&gt; in gdb but that didn't work either.
If there's a way to make this happen I can convert this script to a mini-framework.&lt;/p&gt;
&lt;p&gt;Another unknown is interacting with &lt;code&gt;passwd&lt;/code&gt;. Probably for security reasons
it doesn't allow to mess around with its stdin but I didn't investigate deeper.&lt;/p&gt;
&lt;p&gt;I've used the
&lt;a href="https://github.com/ticpu/tools/blob/master/fdmanage.py"&gt;fdmanage.py&lt;/a&gt;
script which does most of the work for me. I've removed the extra bits
that I didn't need, added the &lt;code&gt;write()&lt;/code&gt; method and removed the original call to
&lt;code&gt;fcntl&lt;/code&gt; which puts gdb.stdout into non-blocking mode (that didn't work for me).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;initial_setup_driver.py&lt;/span&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# fdmanage.py is a program to manage file descriptors of running programs&lt;/span&gt;
&lt;span class="c"&gt;# by using GDB to modify the running program.&lt;/span&gt;
&lt;span class="c"&gt;# https://github.com/ticpu/tools/blob/master/fdmanage.py&lt;/span&gt;
&lt;span class="c"&gt;# Copyright (C) 2015 Jérôme Poulin &amp;lt;jeromepoulin@gmail.com&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# This program is free software: you can redistribute it and/or modify&lt;/span&gt;
&lt;span class="c"&gt;# it under the terms of the GNU General Public License as published by&lt;/span&gt;
&lt;span class="c"&gt;# the Free Software Foundation, either version 3 of the License, or&lt;/span&gt;
&lt;span class="c"&gt;# (at your option) any later version.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# This program is distributed in the hope that it will be useful,&lt;/span&gt;
&lt;span class="c"&gt;# but WITHOUT ANY WARRANTY; without even the implied warranty of&lt;/span&gt;
&lt;span class="c"&gt;# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&lt;/span&gt;
&lt;span class="c"&gt;# GNU General Public License for more details.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# You should have received a copy of the GNU General Public License&lt;/span&gt;
&lt;span class="c"&gt;# along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Copyright (c) 2016 Alexander Todorov &amp;lt;atodorov@redhat.com&amp;gt;&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;select&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Gdb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gdb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-q&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-p&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STDOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;close_fds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__enter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__exit__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exc_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exc_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exc_tb&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;exc_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exc_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exc_tb&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;detach&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Program terminated.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send_command_expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; = &amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IOError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;close_fd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;call close(&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dup2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;old_fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_fd&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;call dup2(&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;old_fd&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_fd&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;open_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command_expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;call open(&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;, &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;)&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;call write(&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;, &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;, &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;)&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tempfile&lt;/span&gt;

    &lt;span class="c"&gt;# these are specific to initial-setup-text&lt;/span&gt;
    &lt;span class="n"&gt;steps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;# License information&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;2&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;# Accept license&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;c&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;# Continue back to the main hub&lt;/span&gt;

        &lt;span class="s"&gt;&amp;quot;3&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c"&gt;# Timezone settings&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;8&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c"&gt;# Europe&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;43&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;# Sofia&lt;/span&gt;

&lt;span class="c"&gt;# passwd doesn&amp;#39;t allow us to overwrite its file descriptors&lt;/span&gt;
&lt;span class="c"&gt;# either aborts or simply doesn&amp;#39;t work&lt;/span&gt;
&lt;span class="c"&gt;#        &amp;quot;4\\n&amp;quot;,      # Root password&lt;/span&gt;
&lt;span class="c"&gt;#        &amp;quot;redhat\\n&amp;quot;,&lt;/span&gt;
&lt;span class="c"&gt;#        &amp;quot;redhat\\n&amp;quot;,&lt;/span&gt;
&lt;span class="c"&gt;#        &amp;quot;no\\n&amp;quot;,     # password is weak&lt;/span&gt;
&lt;span class="c"&gt;#        &amp;quot;123\\n&amp;quot;,&lt;/span&gt;
&lt;span class="c"&gt;#        &amp;quot;123\\n&amp;quot;,&lt;/span&gt;
&lt;span class="c"&gt;#        &amp;quot;no\\n&amp;quot;,     # password is too short&lt;/span&gt;
&lt;span class="c"&gt;#        &amp;quot;Th1s-Is-a-Str0ng-Password!\\n&amp;quot;,&lt;/span&gt;
&lt;span class="c"&gt;#        &amp;quot;Th1s-Is-a-Str0ng-Password!\\n&amp;quot;,&lt;/span&gt;

        &lt;span class="s"&gt;&amp;quot;c&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;# Continue to exit&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;USAGE: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; &amp;lt;PID&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;__file__&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;tmp_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkdtemp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;pipe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pipe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkfifo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Gdb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# O_RDWR&lt;/span&gt;
        &lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dup2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# replace STDIN with a PIPE&lt;/span&gt;
        &lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close_fd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# set a breakpoint before continuing&lt;/span&gt;
        &lt;span class="n"&gt;break_point_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command_expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;break read&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# now execute the process step-by-step&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;len_steps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;len_steps&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;delete &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;break_point_num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;continue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# clean up&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rmdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="fedora.planet"></category><category term="QA"></category></entry><entry><title>Capture Terminal Output From Other Processes</title><link href="http://atodorov.org/blog/2015/12/25/capture-terminal-output-from-other-processes/" rel="alternate"></link><updated>2015-12-25T12:03:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-25:blog/2015/12/25/capture-terminal-output-from-other-processes/</id><summary type="html">&lt;p&gt;I've been working on a test case to verify that Anaconda will print its EULA
notice at the end of a text mode installation. The problem is how do you capture
all the text which is printed to the terminal from processes outside your control ?
The answer is surprisingly simple - using strace! &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;%post&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;nochroot&lt;/span&gt;
&lt;span class="n"&gt;PID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="n"&gt;aux&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/bin/python /sbin/anaconda&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;grep&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cut&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;span class="n"&gt;STRACE_LOG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/mnt/sysimage/root/anaconda.strace&amp;quot;&lt;/span&gt;

&lt;span class="cp"&gt;# see https:&lt;/span&gt;&lt;span class="c1"&gt;//fedoraproject.org/wiki/Features/SELinuxDenyPtrace&lt;/span&gt;
&lt;span class="n"&gt;setsebool&lt;/span&gt; &lt;span class="n"&gt;deny_ptrace&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="cp"&gt;# EULA notice is printed after post-scripts are run&lt;/span&gt;
&lt;span class="n"&gt;strace&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s16384&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;$STRACE_LOG&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;$PID&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;strace is tracing only read and write events (we really only need write) and
extending the maximum string size printed in the log file. For a simple grep
this is sufficient. If you need to pretty-print the strace output have a look
at the &lt;a href="http://search.cpan.org/~bbb/ttylog/ttylog"&gt;ttylog&lt;/a&gt; utility.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="QA"></category></entry><entry><title>Insert Key on MacBook Keyboard</title><link href="http://atodorov.org/blog/2015/12/23/insert-key-on-macbook-keyboard/" rel="alternate"></link><updated>2015-12-23T13:33:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-23:blog/2015/12/23/insert-key-on-macbook-keyboard/</id><summary type="html">&lt;p&gt;For some reason my terminal doesn't always accept Ctrl+V for paste. Instead
it needs the Shift+Ins key combo. On the &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; keyboard the Ins key
is simulated by pressing Fn+Return together. So the paste combo becomes
Shift+Fn+Return!&lt;/p&gt;</summary><category term="Mac"></category><category term="tips"></category></entry><entry><title>Interesting Ruby Resources</title><link href="http://atodorov.org/blog/2015/12/23/interesting-ruby-resources/" rel="alternate"></link><updated>2015-12-23T12:48:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-23:blog/2015/12/23/interesting-ruby-resources/</id><summary type="html">&lt;p&gt;During my quest for
&lt;a href="http://atodorov.org/blog/2015/12/23/speeding-up-rspec-and-postgresql-tests/"&gt;faster RSpec tests&lt;/a&gt;
I've come across several interesting posts about Ruby. Being new to the language
they've helped me understand a bit more about the internals. Posting them here
so they don't get lost.&lt;/p&gt;
&lt;h2&gt;Garbage Collection&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://signalvnoise.com/posts/2742-the-road-to-faster-tests"&gt;The road to faster tests&lt;/a&gt;
- a story about tests and garbage collection.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://labs.clio.com/tuning-ruby-garbage-collection-for-rspec/"&gt;Tuning Ruby garbage collection for RSpec&lt;/a&gt;
- practical explanation of Ruby's garbage collector and how to adjust its
performance for RSpec&lt;/p&gt;
&lt;p&gt;&lt;a href="http://samsaffron.com/archive/2013/11/22/demystifying-the-ruby-gc"&gt;Demystifying the Ruby GC&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Probably the very first posts I found referencing slow RSpec tests. It turned out
this was not the issue but I've nevertheless tried running GC manually. I can clearly
see (using &lt;code&gt;puts GC.count&lt;/code&gt; in after()) GC invoked less frequently, memory usage rising
but the overall execution time wasn't affected. The profiler said 2% speed increase
to be honest.&lt;/p&gt;
&lt;h2&gt;Profiling&lt;/h2&gt;
&lt;p&gt;Not being very clear about the different profiling tools available and how to
interpret their results I've found these articles:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.igvita.com/2009/06/13/profiling-ruby-with-googles-perftools/"&gt;Profiling Ruby With Google's Perftools&lt;/a&gt;
- practical example for using perftools.rb&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/32212970/how-to-read-ruby-profilers-output"&gt;How to read ruby profiler's output&lt;/a&gt; -
also see the &lt;a href="http://ruby-doc.org/stdlib-2.1.0/libdoc/profiler/rdoc/Profiler__.html"&gt;Profiler__ module&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/4856500/show-runtime-for-each-rspec-example"&gt;Show runtime for each rspec example&lt;/a&gt;
- using &lt;code&gt;rspec --profile&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Suggestions for Faster Tests&lt;/h2&gt;
&lt;p&gt;Several general best practices for faster tests:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netguru.co/blog/9-ways-to-speed-up-your-rspec-tests"&gt;9 ways to speed up your RSpec tests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://infinum.co/the-capsized-eight/articles/run-faster-ruby-on-rails-tests"&gt;Run faster Ruby on Rails tests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.plataformatec.com.br/2011/12/three-tips-to-improve-the-performance-of-your-test-suite/"&gt;Three tips to improve the performance of your test suite&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;RubyGems related&lt;/h2&gt;
&lt;p&gt;I've noticed Bundler loading tons of requirements (nearly 3000 unique modules)
and for some particular specs this wasn't necessary (for example running Rubocop).
I've found the following articles below which sound very reasonable to me:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://anti-pattern.com/use-bundler-setup-instead-of-bundler-require"&gt;Use Bundler.setup Instead of Bundler.require&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://myronmars.to/n/dev-blog/2012/12/5-reasons-to-avoid-bundler-require"&gt;5 Reasons to Avoid Bundler.require&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://2ndscale.com/rtomayko/2009/require-rubygems-antipattern"&gt;Why "require 'rubygems'" Is Wrong&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Weird&lt;/h2&gt;
&lt;p&gt;Finally (or more precisely first of all) I've seen this
&lt;a href="https://www.ruby-forum.com/topic/184516 suggests broken rubygems"&gt;Weird performance issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;During my initial profiling I've seen (and still see) a similar issue.
When calling require it goes through lots of hoops before finally loading
the module. My profiling results show this taking a lot of time but this time
is likely measured with profiling enabled and doesn't represent the real deal.&lt;/p&gt;
&lt;p&gt;On my
&lt;a href="http://atodorov.org/blog/2015/04/26/installing-red-hat-enterprise-linux-7-on-macbook-air-2015/"&gt;MacBook Air with Red Hat Enterprise Linux 7&lt;/a&gt;
this happens when using Ruby 2.2.2 from Software Collections. If using Ruby
installed from source with rbenv the profiling profile is completely different.&lt;/p&gt;
&lt;p&gt;I will be examining this one in more details. I'm interested to know what is
the difference and if that affects performance somehow so stay tuned!&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="Ruby"></category></entry><entry><title>Speeding up RSpec and PostgreSQL tests</title><link href="http://atodorov.org/blog/2015/12/23/speeding-up-rspec-and-postgresql-tests/" rel="alternate"></link><updated>2015-12-23T11:34:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-23:blog/2015/12/23/speeding-up-rspec-and-postgresql-tests/</id><summary type="html">&lt;p&gt;I've been working with &lt;a class="wikilink" href="http://tradeo.com"&gt;Tradeo&lt;/a&gt; on testing one of their applications. The app
is standard Ruby on Rails application with over 1200 tests written with RSpec.
And they were horribly slow. On my &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; the entire test suite
took 27 minutes to execute. On the Jenkins slaves it took over an hour.
After a few changes Jenkins now takes 15 minutes to execute the test suite.
Locally it takes around 11 minutes!&lt;/p&gt;
&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;I've measured the speed (with Time.now) at which individual examples execute
and it was quickly apparent they were taking a lot of time cleaning the DB. The
offending code in question was:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;before&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="no"&gt;DatabaseCleaner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clean_with&lt;/span&gt; &lt;span class="ss"&gt;:truncation&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is truncating the tables quite often but it turns out this is a very
expensive operation on tables with small number of records. I've measured it
locally around 2.5 seconds. Check out this
&lt;a href="http://stackoverflow.com/questions/11419536/postgresql-truncation-speed/"&gt;SO thread&lt;/a&gt;
which describes pretty much the same symptoms:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Right now, locally (on a Macbook Air) a full test suite takes 28 minutes....
Tailing the logs on our CI server (Ubuntu 10.04 LTS) .... a build takes 84 minutes.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This
&lt;a href="http://stackoverflow.com/questions/11419536/postgresql-truncation-speed/11423886#11423886"&gt;excellent answer&lt;/a&gt;
explains why this is happening:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(a) The bigger shared_buffers may be why TRUNCATE is slower on the CI server.
    Different fsync configuration or the use of rotational media instead of
    SSDs could also be at fault.

(b) TRUNCATE has a fixed cost, but not necessarily slower than DELETE,
    plus it does more work.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;The Fix&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;before&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:suite&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="no"&gt;DatabaseCleaner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clean_with&lt;/span&gt; &lt;span class="ss"&gt;:truncation&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;before&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="no"&gt;DatabaseCleaner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clean_with&lt;/span&gt; &lt;span class="ss"&gt;:deletion&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;before(:suite)&lt;/code&gt; will truncate tables every time we run rspec, which is when we
launch the entire test suite. This is to account for the possible side effects
of DELETE in the future (see the SO thread). Then &lt;code&gt;before(:all)&lt;/code&gt; aka
&lt;code&gt;before(:context)&lt;/code&gt; simply deletes the records which is significantly faster!&lt;/p&gt;
&lt;p&gt;Also updated the CI servers &lt;code&gt;postgresql.conf&lt;/code&gt; to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;fsync=off
full_page_writes=off
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The entire build/test process now takes only 15 minutes! Only one test broke
due to PostgreSQL returning records in a different order, but it's the test
case fault not handling this in the first place!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Using fsync=off with rotational media pretty much hides any improvements
introduced by updating the DatabaseCleaner strategy.&lt;/p&gt;
&lt;h2&gt;What's Next&lt;/h2&gt;
&lt;p&gt;There are several other things worth trying:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use UNIX domain sockets instead of TCP/IP (localhost) to connect to PostgreSQL;&lt;/li&gt;
&lt;li&gt;Load the entire
&lt;a href="http://magazine.redhat.com/2007/12/12/tip-from-an-rhce-memory-storage-on-postgresql/"&gt;PostgreSQL partition in memory&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Don't delete anything from the database, except once in &lt;code&gt;before(:suite)&lt;/code&gt;.
If any tests need a particular DB state they have to set this up on their own
instead of relying on a global cleanup process. I expect this to break quite
a few examples.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After the changes and with my crude measurements I have individual examples
taking 0.31 seconds to execute. Interestingly before and after take less than
a second while the example code takes around 0.15 seconds. I have no idea where
the rest 0.15 seconds are spent. My current speculation is probably RSpec.
This is 50% of the execution time and is also worth looking into!&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="Ruby"></category></entry><entry><title>Logging VM installation to stdout</title><link href="http://atodorov.org/blog/2015/12/17/logging-vm-installation-to-stdout/" rel="alternate"></link><updated>2015-12-17T14:34:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-17:blog/2015/12/17/logging-vm-installation-to-stdout/</id><summary type="html">&lt;p&gt;Recently I've been using virt-install to create virtual machines inside some
automated tests and then ssh'ing to the VM guest and inspecting the results.
What's been bothering me is that while the VM is installing I can't see what's
going on. The solution is to log everything to stdout which is then collected
by my test harness and archived on the file server. To do this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;setenforce 0
virt-install ... -x &amp;quot;console=ttyS0&amp;quot; --serial dev,path=/dev/pts/1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This puts SELinux into Permissive mode, instructs the VM guest to use a serial
console and then redirects the serial console to stdout on the host. If you have
SELinux in Enforcing mode then you get the following error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;unable to set security context &amp;#39;system_u:object_r:svirt_image_t:s0:c43,c440&amp;#39; on &amp;#39;/dev/pts/1&amp;#39;: Permission denied
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; if you execute this from a script and there is no controlly tty it will
fail. The next best thing you can do is log to a file with
&lt;code&gt;--serial file,path=guest.log&lt;/code&gt; and collect this file for later!&lt;/p&gt;</summary><category term="fedora.planet"></category></entry><entry><title>Facebook is Bugging me</title><link href="http://atodorov.org/blog/2015/12/17/facebook-is-bugging-me/" rel="alternate"></link><updated>2015-12-17T09:34:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-17:blog/2015/12/17/facebook-is-bugging-me/</id><summary type="html">&lt;p&gt;&lt;img alt="Facebook icon" src="/images/facebook_android_icon_small.png" title="Facebook icon" /&gt;&lt;/p&gt;
&lt;p&gt;Facebook for Android version 55.0.0.18.66 broke the home screen icon title.
It reads &lt;code&gt;false&lt;/code&gt; instead of &lt;code&gt;Facebook&lt;/code&gt;. This is now fixed in version 58.0.0.28.70.
I wonder how they managed to get this slip through. Also isn't Google
supposed to review the apps coming into the Play Store and not publish them
if there are such visible issues ? I guess this wasn't the case here.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>virtio vs. rtl8139</title><link href="http://atodorov.org/blog/2015/12/16/virtio-vs-rtl8139/" rel="alternate"></link><updated>2015-12-16T14:34:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-16:blog/2015/12/16/virtio-vs-rtl8139/</id><summary type="html">&lt;p&gt;I've been doing some tests with KVM virtual machines and been launching them
with virt-install. For some reason the VM wasn't activating its NIC.
Changing the interface model from virtio to rtl8139 made it work again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;         virt-install --name $VM_NAME --ram 1024 --os-type=linux --os-variant=rhel7 \
&lt;span class="gd"&gt;-                    --disk none --network bridge=virbr0,model=virtio,mac=$VM_MAC \&lt;/span&gt;
&lt;span class="gi"&gt;+                    --disk none --network bridge=virbr0,model=rtl8139,mac=$VM_MAC \&lt;/span&gt;
                     --noreboot --graphics vnc \
                     --cdrom /var/tmp/tmp*/images/boot.iso --boot cdrom &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;virt-install(1) says:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;model
    Network device model as seen by the guest. Value can be any nic model supported by the hypervisor, e.g.: &amp;#39;e1000&amp;#39;,
    &amp;#39;rtl8139&amp;#39;, &amp;#39;virtio&amp;#39;, ...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm not clear if this configures what drivers to be used for the NIC inside the
guest or what is the driver of the host NIC. At this moment I don't know why
changing the value causes networking in the guest to fail. If you do know please
comment below. Thanks!&lt;/p&gt;</summary><category term="fedora.planet"></category></entry><entry><title>Automatic Upstream Dependency Testing</title><link href="http://atodorov.org/blog/2015/12/02/automatic-upstream-dependency-testing/" rel="alternate"></link><updated>2015-12-02T10:34:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-02:blog/2015/12/02/automatic-upstream-dependency-testing/</id><summary type="html">&lt;p&gt;Ever since
&lt;a href="http://atodorov.org/blog/2015/11/24/python-libs-in-rhel-7.2-broke-ssl-verification-in-s3cmd/"&gt;RHEL 7.2 python-libs broke s3cmd&lt;/a&gt;
I've been pondering an age old problem: &lt;em&gt;How do I know if my software works with the
latest upstream dependencies ? How can I pro-actively monitor for new versions
and add them to my test matrix ?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mixing together my previous experience with
&lt;a href="http://atodorov.org/blog/2014/05/06/opensource-dot-com-article-10-steps-to-migrate-your-closed-software-to-open-source/"&gt;Difio&lt;/a&gt;
and monitoring upstream sources,
and &lt;a href="https://twitter.com/ForbesLindesay"&gt;Forbes Lindesay's&lt;/a&gt; &lt;em&gt;GitHub Automation&lt;/em&gt; talk
at &lt;a href="http://atodorov.org/blog/2015/05/22/devit-conf-2015-impressions/"&gt;DEVit Conf&lt;/a&gt; I came
together with a plan:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make an application which will execute when new upstream version is available;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://atodorov.org/blog/2015/12/01/commit-a-file-with-the-github-api-and-python/"&gt;Automatically update &lt;code&gt;.travis.yml&lt;/code&gt;&lt;/a&gt;
for the projects I'm interested in;&lt;/li&gt;
&lt;li&gt;Let Travis-CI execute my test suite for all available upstream versions;&lt;/li&gt;
&lt;li&gt;Profit!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How Does It Work&lt;/h2&gt;
&lt;p&gt;First we need to monitor upstream! RubyGems.org has nice
&lt;a href="http://guides.rubygems.org/rubygems-org-api/#webhook-methods"&gt;webhooks interface&lt;/a&gt;,
you can even trigger on individual packages. PyPI however doesn't have anything
like this :(. My solution is to run a cron job every hour and parse their RSS
stream for newly released packages. This has been working previously for Difio
so I re-used one function from the code.&lt;/p&gt;
&lt;p&gt;After finding anything we're interested in comes the hard part - automatically
updating &lt;code&gt;.travis.yml&lt;/code&gt; using the GitHub API. I've described this in more detail
&lt;a href="http://atodorov.org/blog/2015/12/01/commit-a-file-with-the-github-api-and-python/"&gt;here&lt;/a&gt;. This time
I've slightly modified the code to update only when needed and accept more
parameters so it can be reused.&lt;/p&gt;
&lt;p&gt;Travis-CI has a clean interface to specify environment variables and
&lt;a href="https://docs.travis-ci.com/user/environment-variables/#Defining-Multiple-Variables-per-Item"&gt;defining several&lt;/a&gt;
of them crates a test matrix. This is exactly what I'm doing.
&lt;code&gt;.travis.yml&lt;/code&gt; is updated with a new ENV setting, which determines the upstream
package version. After commit new build is triggered which includes the expanded
test matrix.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Travis-CI build log" src="http://atodorov.org/images/travisci_matrix.png" title="Travis-CI build log" /&gt;&lt;/p&gt;
&lt;p&gt;Imagine that our &lt;em&gt;Project 2501&lt;/em&gt; depends on FOO version &lt;em&gt;0.3.1&lt;/em&gt;. The
&lt;a href="https://travis-ci.org/atodorov/bztest/builds"&gt;build log&lt;/a&gt; illustrates what
happened:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build #9 is what we've tested with &lt;em&gt;FOO-0.3.1&lt;/em&gt; and released to production.
Test result is PASS!&lt;/li&gt;
&lt;li&gt;Build #10 - meanwhile upstream releases &lt;em&gt;FOO-0.3.2&lt;/em&gt; which causes our project
to break. We're not aware of this and continue developing new features
while all test results still PASS! When our customers upgrade their systems
&lt;em&gt;Project 2501&lt;/em&gt; will break ! Tests didn't catch it because test matrix wasn't
updated. Please
ignore the actual commit message in the example! I've used the same repository
for the dummy dependency package.&lt;/li&gt;
&lt;li&gt;Build #11 - the monitoring solution finds &lt;em&gt;FOO-0.3.2&lt;/em&gt; and updates the test
matrix automatically. The build immediately breaks! More precisely the
&lt;a href="https://travis-ci.org/atodorov/bztest/builds/94263181"&gt;test with version &lt;em&gt;0.3.2&lt;/em&gt; fails&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Build #12 - we've alerted FOO.org about their problem and they've released
&lt;em&gt;FOO-0.3.3&lt;/em&gt;. Our monitor has found that and updated the test matrix.
However &lt;a href="https://travis-ci.org/atodorov/bztest/builds/94270592"&gt;the 0.3.2 test job still fails&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Build #13 - we decide to workaround the 0.3.2 failure or simply handle the
error gracefully. In this example I've removed version 0.3.2 from the test
matrix to simulate that. In reality I wouldn't touch &lt;code&gt;.travis.yml&lt;/code&gt; but instead
update my application and tests to check for that particular version.
All test results are PASS again!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Btw Build #11 above was triggered manually (./monitor.py) while Build #12
came from OpenShit, my hosting environment.&lt;/p&gt;
&lt;p&gt;At present I have this monitoring enabled for my
&lt;a href="http://atodorov.org/blog/2015/11/26/3-new-python-markdown-extensions/"&gt;new Markdown extensions&lt;/a&gt;
and will also add it to &lt;a href="https://github.com/atodorov/django-s3-cache"&gt;django-s3-cache&lt;/a&gt;
once it migrates to Travis-CI (it uses drone.io now).&lt;/p&gt;
&lt;h2&gt;Enough Talk, Show me the Code&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;monitor.py&lt;/span&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;base64&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;httplib&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pprint&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;xml.dom.minidom&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;parseString&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c"&gt;# GitHub requires a valid UA string&lt;/span&gt;
    &lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;User-Agent&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Mozilla/5.0 (X11; Linux x86_64; rv:10.0.5) Gecko/20120601 Firefox/10.0.5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# shortcut for GitHub API calls&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;://&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://api.github.com&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;api.github.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;has_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;GITHUB_TOKEN&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Set the GITHUB_TOKEN variable&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;token &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;GITHUB_TOKEN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;//&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host_port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;host_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;httplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPSConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host_port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;httplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host_port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


    &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;post_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;post_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;post_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getresponse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;404 - &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; not found&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;replace&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# not a JSON response&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;monitor_rss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Scan the PyPI RSS feeds to look for new packages.&lt;/span&gt;
&lt;span class="sd"&gt;        If name is found in config then execute the specified callback.&lt;/span&gt;

&lt;span class="sd"&gt;        @config is a dict with keys matching package names and values&lt;/span&gt;
&lt;span class="sd"&gt;        are lists of dicts&lt;/span&gt;
&lt;span class="sd"&gt;            {&lt;/span&gt;
&lt;span class="sd"&gt;                &amp;#39;cb&amp;#39; : a_callback,&lt;/span&gt;
&lt;span class="sd"&gt;                &amp;#39;args&amp;#39; : dict&lt;/span&gt;
&lt;span class="sd"&gt;            }&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;rss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://pypi.python.org/pypi?:action=rss&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;dom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parseString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;pub_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pubDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;firstChild&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wholeText&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;released_on&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pub_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;firstChild&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wholeText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %b %Y %H:%M:%S GMT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;found in config&amp;quot;&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cfg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cfg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;args&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                        &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;#39;version&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;#39;released_on&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;released_on&lt;/span&gt;
                        &lt;span class="p"&gt;})&lt;/span&gt;

                        &lt;span class="c"&gt;# execute the call back&lt;/span&gt;
                        &lt;span class="n"&gt;cfg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;cb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
                        &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_travis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;travis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;new_ver_line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;  - VERSION=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;new_version&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;travis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_ver_line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;travis&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;new_ver_line&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;travis&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_github&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Update GitHub via API&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;GITHUB_REPO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;GITHUB_REPO&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;GITHUB_BRANCH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;GITHUB_BRANCH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;GITHUB_FILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;GITHUB_FILE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# step 1: Get a reference to HEAD&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/repos/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/git/refs/heads/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GITHUB_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GITHUB_BRANCH&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;HEAD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;object&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;object&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# step 2: Grab the commit that HEAD points to&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="c"&gt;# remove what we don&amp;#39;t need for clarity&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;commit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;

    &lt;span class="c"&gt;# step 4: Get a hold of the tree that the commit points to&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;commit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# intermediate step: get the latest content from GitHub and make an updated version&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;GITHUB_FILE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c"&gt;# get the blob from the tree&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b64decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;

    &lt;span class="n"&gt;old_travis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;new_travis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;update_travis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;old_travis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c"&gt;# bail out if nothing changed&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;new_travis&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;old_travis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;new == old, bailing out&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="c"&gt;####&lt;/span&gt;
    &lt;span class="c"&gt;#### WARNING WRITE OPERATIONS BELOW&lt;/span&gt;
    &lt;span class="c"&gt;####&lt;/span&gt;

    &lt;span class="c"&gt;# step 3: Post your new file to the server&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s"&gt;&amp;quot;/repos/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/git/blobs&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;GITHUB_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;new_travis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;encoding&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;UPDATE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# step 5: Create a tree containing your new file&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s"&gt;&amp;quot;/repos/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/git/trees&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;GITHUB_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;quot;base_tree&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;quot;tree&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
                        &lt;span class="s"&gt;&amp;quot;path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;GITHUB_FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;&amp;quot;mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;100644&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blob&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;&amp;quot;sha&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;UPDATE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;}]&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;UPDATE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# step 6: Create a new commit&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s"&gt;&amp;quot;/repos/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/git/commits&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;GITHUB_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;New upstream dependency found! Auto update .travis.yml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;quot;parents&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;commit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;quot;tree&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;UPDATE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;UPDATE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;commit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# step 7: Update HEAD, but don&amp;#39;t force it!&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s"&gt;&amp;quot;/repos/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/git/refs/heads/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GITHUB_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GITHUB_BRANCH&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;quot;sha&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;UPDATE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;commit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;has_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;object&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c"&gt;# PASS&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c"&gt;# FAIL&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;atodorov-test&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;cb&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;update_github&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;args&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_REPO&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;atodorov/bztest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_BRANCH&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_FILE&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.travis.yml&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;Markdown&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;cb&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;update_github&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;args&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_REPO&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;atodorov/Markdown-Bugzilla-Extension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_BRANCH&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_FILE&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.travis.yml&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;cb&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;update_github&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;args&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_REPO&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="s"&gt;&amp;#39;atodorov/Markdown-No-Lazy-Code-Extension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_BRANCH&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_FILE&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.travis.yml&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;cb&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;update_github&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;args&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_REPO&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="s"&gt;&amp;#39;atodorov/Markdown-No-Lazy-BlockQuote-Extension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_BRANCH&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;GITHUB_FILE&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.travis.yml&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# check the RSS to see if we have something new&lt;/span&gt;
    &lt;span class="n"&gt;monitor_rss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="fedora.planet"></category><category term="Python"></category><category term="OpenShift"></category><category term="Django"></category><category term="QA"></category></entry><entry><title>Hosting Multiple Python WSGI Scripts on OpenShift</title><link href="http://atodorov.org/blog/2015/12/01/hosting-multiple-python-wsgi-scripts-on-openshift/" rel="alternate"></link><updated>2015-12-01T13:34:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-01:blog/2015/12/01/hosting-multiple-python-wsgi-scripts-on-openshift/</id><summary type="html">&lt;p&gt;With &lt;a href="http://openshift.com"&gt;OpenShift&lt;/a&gt; you can host WSGI Python
applications. By default the Python cartridge comes with a simple WSGI app
and the following directory layout&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./
./.openshift/
./requirements.txt
./setup.py
./wsgi.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I wanted to add my
&lt;a href="http://atodorov.org/blog/2015/11/24/github-bugzilla-hook/"&gt;GitHub Bugzilla Hook&lt;/a&gt;
in a subdirectory (git submodule actually) and simply reserve a URL which will
be served by this app. My intention is also to add other small scripts to the
same cartridge in order to better utilize the available resources.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;WSGIScriptAlias&lt;/code&gt; inside &lt;code&gt;.htaccess&lt;/code&gt; &lt;strong&gt;DOESN'T WORK&lt;/strong&gt;! OpenShift errors
out when &lt;code&gt;WSGIScriptAlias&lt;/code&gt; is present. I suspect this to be a known limitation
and I have an open support case with Red Hat to confirm this.&lt;/p&gt;
&lt;p&gt;My workaround is to configure the URL paths from the &lt;code&gt;wsgi.py&lt;/code&gt; file in the root
directory. For example&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff --git a/wsgi.py b/wsgi.py&lt;/span&gt;
&lt;span class="gh"&gt;index c443581..20e2bf5 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/wsgi.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/wsgi.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -12,7 +12,12 @@ except IOError:&lt;/span&gt;
 # line, it&amp;#39;s possible required libraries won&amp;#39;t be in your searchable path
 #
 
&lt;span class="gi"&gt;+from github_bugzilla_hook import wsgi as ghbzh&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
 def application(environ, start_response):
&lt;span class="gi"&gt;+    # custom paths&lt;/span&gt;
&lt;span class="gi"&gt;+    if environ[&amp;#39;PATH_INFO&amp;#39;] == &amp;#39;/github-bugzilla-hook/&amp;#39;:&lt;/span&gt;
&lt;span class="gi"&gt;+        return ghbzh.application(environ, start_response)&lt;/span&gt;
 
     ctype = &amp;#39;text/plain&amp;#39;
     if environ[&amp;#39;PATH_INFO&amp;#39;] == &amp;#39;/health&amp;#39;:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This does the job and is almost the same as configuring the path in &lt;code&gt;.htaccess&lt;/code&gt;.
I hope it helps you!&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="Python"></category><category term="OpenShift"></category></entry><entry><title>Commit a file with the GitHub API and Python</title><link href="http://atodorov.org/blog/2015/12/01/commit-a-file-with-the-github-api-and-python/" rel="alternate"></link><updated>2015-12-01T12:44:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-12-01:blog/2015/12/01/commit-a-file-with-the-github-api-and-python/</id><summary type="html">&lt;p&gt;How do you commit changes to a file using the GitHub API ?
I've found
&lt;a href="http://www.levibotelho.com/development/commit-a-file-with-the-github-api/"&gt;this post&lt;/a&gt;
by Levi Botelho which explains the necessary steps but without any code.
So I've used it and created a
&lt;a href="https://github.com/atodorov/api-commit-test"&gt;Python example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've rearranged the steps so that all write operations follow after a certain
section in the code and also added an intermediate section which creates the
updated content based on what is available in the repository.&lt;/p&gt;
&lt;p&gt;I'm just appending
versions of Markdown to the &lt;code&gt;.travis.yml&lt;/code&gt; (I will explain why in my next post)
and this is hard-coded for the sake of example. All content related operations
are also based on the GitHub API because I want to be independent of the source
code being around when I push this script to a hosting provider.&lt;/p&gt;
&lt;p&gt;I've tested this script against itself. In the
&lt;a href="https://github.com/atodorov/api-commit-test/commits/master"&gt;commits log&lt;/a&gt;
you can find the &lt;em&gt;Automatic update to Markdown-X.Y&lt;/em&gt; messages. These are
from the script. Also notice the &lt;em&gt;Merge remote-tracking branch 'origin/master'&lt;/em&gt;
messages, these appeared when I pulled to my local copy. I believe the
reason for this is that I have some dangling trees and/or commits from
the time I was still experimenting with a broken script. I've tested on another
clean repository and &lt;a href="https://github.com/atodorov/bztest/commits/master"&gt;there are&lt;/a&gt;
no such merges.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For this to work you need to properly authenticate with GitHub. I've crated
a new token at &lt;a href="https://github.com/settings/tokens"&gt;https://github.com/settings/tokens&lt;/a&gt; with the &lt;em&gt;public_repo&lt;/em&gt;
permission and that works for me.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="Python"></category><category term="Django"></category></entry><entry><title>Inspecting Method Arguments in Python</title><link href="http://atodorov.org/blog/2015/11/29/inspecting-method-arguments-in-python/" rel="alternate"></link><updated>2015-11-29T16:04:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-29:blog/2015/11/29/inspecting-method-arguments-in-python/</id><summary type="html">&lt;p&gt;How do you execute methods from 3rd party classes in a backward compatible
manner when these methods change their arguments ?&lt;/p&gt;
&lt;p&gt;s3cmd's &lt;a href="https://github.com/s3tools/s3cmd/pull/668"&gt;PR #668&lt;/a&gt; is an example
of this behavior, where python-libs's &lt;code&gt;httplib.py&lt;/code&gt; added a new parameter
to disable hostname checks. As a result of this
&lt;a href="/blog/2015/11/24/python-libs-in-rhel-7.2-broke-ssl-verification-in-s3cmd/"&gt;s3cmd broke&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One solution is to use try-except and nest as much blocks as you need to cover
all of the argument variations. In s3cmd's case we needed two nested try-except
blocks.&lt;/p&gt;
&lt;p&gt;Another possibility is to use the
&lt;a href="https://docs.python.org/3/library/inspect.html"&gt;inspect&lt;/a&gt; module and create the argument
list passed to the method dynamically, based on what parameters are supported.
Depending on the number of parameters this may or may not be more elegant than
using try-except blocks although it looks to me a bit more human readable.&lt;/p&gt;
&lt;p&gt;The argument list is a member named &lt;em&gt;co_varnames&lt;/em&gt; of the code object. If you
want to get the members for a function then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;inspect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getmembers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;my_function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__code__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;if you want to get the members for a class method then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;inspect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getmembers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;my_method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__function__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__code__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Consider the following example&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;test.py&lt;/span&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;inspect&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;World&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;World&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;=== Example: call the class directly ===&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;v1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;v2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Good day&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;v2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;v3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Good evening&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;everyone&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;v3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c"&gt;# uncomment to see the error raised&lt;/span&gt;
    &lt;span class="c"&gt;#v4 = V1(greeting=&amp;quot;Good evening&amp;quot;, who=&amp;quot;everyone&amp;quot;)&lt;/span&gt;
    &lt;span class="c"&gt;#v4.do_print()&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;=== Example: use try-except ===&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Good evening&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;everyone&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;    error: nested-try-except-1&amp;quot;&lt;/span&gt;
                &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Good evening&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;    error: nested-try-except-2&amp;quot;&lt;/span&gt;
                &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;=== Example: using inspect ===&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inspect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getmembers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__func__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__code__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;var_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;co_varnames&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;greeting&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;var_names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;greeting&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Good morning&amp;#39;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;who&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;var_names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;who&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;children&amp;#39;&lt;/span&gt;

        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output of the example above is as follows&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;=== Example: call the class directly ===
Hello World
Good day World
Good evening everyone
=== Example: use try-except ===
    error: nested-try-except-1
    error: nested-try-except-2
Hello World
    error: nested-try-except-1
Good evening World
Good evening everyone
=== Example: using inspect ===
Hello World
Good morning World
Good morning children
&lt;/pre&gt;&lt;/div&gt;</summary><category term="fedora.planet"></category><category term="Python"></category></entry><entry><title>3 New Python Markdown extensions</title><link href="http://atodorov.org/blog/2015/11/26/3-new-python-markdown-extensions/" rel="alternate"></link><updated>2015-11-26T22:24:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-26:blog/2015/11/26/3-new-python-markdown-extensions/</id><summary type="html">&lt;p&gt;I've managed to resolve several of my issues with Python-Markdown behaving not
quite as I expect. I have the pleasure to announce three new extensions which
now power this blog.&lt;/p&gt;
&lt;h2&gt;No Lazy BlockQuote Extension&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/atodorov/Markdown-No-Lazy-BlockQuote-Extension"&gt;Markdown-No-Lazy-BlockQuote-Extension&lt;/a&gt;
makes it possible blockquotes separated by newline to be rendered separately.
If you want to include empty lines in your blockquotes make sure to prefix
each line with &lt;code&gt;&amp;gt;&lt;/code&gt;. The standard behavior can be seen in
&lt;a href="https://github.com/atodorov/atodorov.github.com/blob/source/content/_posts/2014-03-04-how-do-you-test-fonts.markdown"&gt;GitHub&lt;/a&gt;
while the changed behavior is visible
&lt;a href="/blog/2014/03/04/how-do-you-test-fonts/"&gt;in this article&lt;/a&gt;. Notice how on
GitHub both quotes are rendered as one big block, while here they are two separate
blocks.&lt;/p&gt;
&lt;h2&gt;No Lazy Code Extension&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/atodorov/Markdown-No-Lazy-Code-Extension"&gt;Markdown-No-Lazy-Code-Extension&lt;/a&gt;
allows code blocks separated by newline to be rendered separately. If you want to
include empty lines in your code blocks make sure to
&lt;a href="https://github.com/atodorov/atodorov.github.com/commit/9684875920c6c7926951ce99b6588a9a7007e6f0"&gt;indent them as well&lt;/a&gt;.
The standard behavior can be seen on
&lt;a href="https://github.com/atodorov/atodorov.github.com/blob/source/content/_posts/2013-02-13-secure-vnc-installation-red-hat-enterprise-linux.markdown"&gt;GitHub&lt;/a&gt;
while the improved one in this
&lt;a href="/blog/2013/02/13/secure-vnc-installation-red-hat-enterprise-linux/"&gt;post&lt;/a&gt;.
Notice how GitHub renders the code in the &lt;strong&gt;Warning Bugs Present&lt;/strong&gt; section
as one block while in reality these are two separate blocks from two different files.&lt;/p&gt;
&lt;h2&gt;Bugzilla Extension&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/atodorov/Markdown-Bugzilla-Extension"&gt;Markdown-Bugzilla-Extension&lt;/a&gt;
allows for easy references to bugs. Strings like &lt;code&gt;[bz#123]&lt;/code&gt; and &lt;code&gt;[rhbz#456]&lt;/code&gt; will
be converted into links.&lt;/p&gt;
&lt;p&gt;All three extensions are available on PyPI!&lt;/p&gt;
&lt;h2&gt;Bonus: Codehilite with filenames in Markdown&lt;/h2&gt;
&lt;p&gt;The standard Markdown codehilite extension doesn't allow to specify filename
on the &lt;code&gt;:::python&lt;/code&gt; shebang line while Octopress did and I've used the syntax
on this blog in a number of articles. The fix is simple, but requires changes in
both Markdown and Pygments. See
&lt;a href="https://github.com/waylan/Python-Markdown/pull/445"&gt;PR #445&lt;/a&gt; for the initial
version and ongoing discussion. Example of the new &lt;code&gt;:::python settings.py&lt;/code&gt; syntax
can be seen
&lt;a href="/blog/2013/03/07/python-twitter-django-social-auth-hello-new-user/"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="Python"></category></entry><entry><title>Blog Migration: from Octopress to Pelican</title><link href="http://atodorov.org/blog/2015/11/25/blog-migration-from-octopress-to-pelican/" rel="alternate"></link><updated>2015-11-25T17:24:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-25:blog/2015/11/25/blog-migration-from-octopress-to-pelican/</id><summary type="html">&lt;p&gt;Finally I have migrated this blog from &lt;a href="http://octopress.org"&gt;Octopress&lt;/a&gt; to
&lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt;. I am using the
&lt;a href="https://github.com/gilsondev/pelican-clean-blog/"&gt;clean-blog&lt;/a&gt; theme with
&lt;a href="https://github.com/gilsondev/pelican-clean-blog/pull/3"&gt;modifications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the
&lt;a href="https://github.com/atodorov/atodorov.github.com/commits/pelican_migration"&gt;pelican_migration&lt;/a&gt;
branch for technical details. Here's the summary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I removed pretty much everything that Octopress uses, only left the content files;&lt;/li&gt;
&lt;li&gt;I've added my own CSS overrides;&lt;/li&gt;
&lt;li&gt;I had several Octopress pages, these were merged and converted into blog posts;&lt;/li&gt;
&lt;li&gt;In Octopress all titles had quotes, which were removed using sed;&lt;/li&gt;
&lt;li&gt;Octopress categories were converted to Pelican tags and removed quotes around them,
again using sed;&lt;/li&gt;
&lt;li&gt;Manually updated Octopress's &lt;code&gt;{% codeblock %}&lt;/code&gt; and &lt;code&gt;{% blockquote %}&lt;/code&gt; tags to
match Pelican syntax. This is the biggest content change;&lt;/li&gt;
&lt;li&gt;I was trying to keep as much as the original URLs as possible. &lt;code&gt;ARTICLE_URL&lt;/code&gt;,
&lt;code&gt;ARTICLE_SAVE_AS&lt;/code&gt;, &lt;code&gt;TAG_URL&lt;/code&gt;, &lt;code&gt;TAG_SAVE_AS&lt;/code&gt;, &lt;code&gt;FEED_ALL_ATOM&lt;/code&gt; and &lt;code&gt;TAG_FEED_ATOM&lt;/code&gt;
are the relevant settings. For 50+ posts I had to manually specify the &lt;code&gt;Slug:&lt;/code&gt;
variable so that they match existing Octopress URLs. Verifying the resulting names
was as simple as diffing the file listings from both Octopress and Pelican.
&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;em&gt;fedora.planet&lt;/em&gt; tag changed its URL because there's no way
to assign slugs for tags in Pelican. The new URL is missing the dot! Luckily
I make use of this only in one place which was manually updated!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've also found a few bugs and missing functionality:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There's no &lt;code&gt;rake new_post&lt;/code&gt; counterpart in Pelican. See
&lt;a href="https://github.com/getpelican/pelican/issues/1410"&gt;Issue 1410&lt;/a&gt; and 
&lt;a href="https://github.com/Kdecherf/blog.kdecherf.com/commit/6552f6f02e6c501a6cc13816cd9bb2cd6c601f9c"&gt;commit 6552f6f&lt;/a&gt;.
Thanks Kevin Decherf;&lt;/li&gt;
&lt;li&gt;&lt;strike&gt;As far as I can tell the preview server doesn't regenerate files automatically.&lt;/strike&gt;
Do &lt;code&gt;make regenerate&lt;/code&gt; and &lt;code&gt;make serve&lt;/code&gt; in two separate shells. Thanks Kevin Decherf;&lt;/li&gt;
&lt;li&gt;&lt;strike&gt;Pelican will merge code blocks and quotes which follow one after another
but are separated with a newline in Markdown. This makes it visually impossible
to distinguish code from two files, or quotes from two people, which are published
without any other comments in between.&lt;/strike&gt; See
&lt;a href="https://github.com/atodorov/Markdown-No-Lazy-BlockQuote-Extension"&gt;Markdown-No-Lazy-BlockQuote-Extension&lt;/a&gt;
and &lt;a href="https://github.com/atodorov/Markdown-No-Lazy-Code-Extension"&gt;Markdown-No-Lazy-Code-Extension&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;strike&gt;The syntax doesn't allow to specify filename or a quote title when publishing
code blocks and quotes. Octopress did that easily. I will be happy with something
like &lt;code&gt;:::python settings.py&lt;/code&gt;.&lt;/strike&gt;
See &lt;a href="https://github.com/waylan/Python-Markdown/pull/445"&gt;PR #445&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;There's no way to specify slugs for tag URLs in order to keep compatibility
with existing URLs, see &lt;a href="https://github.com/getpelican/pelican/issues/1873"&gt;Issue 1873&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will be filling Issues and pull requests for both Pelican and the clear-blog theme
in the next few days so stay tuned!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATED 2015-11-26:&lt;/strong&gt; added links to issues, pull requests and custom extensions.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="Django"></category></entry><entry><title>python-libs in RHEL 7.2 broke SSL verification in s3cmd</title><link href="http://atodorov.org/blog/2015/11/24/python-libs-in-rhel-7.2-broke-ssl-verification-in-s3cmd/" rel="alternate"></link><updated>2015-11-24T21:44:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-24:blog/2015/11/24/python-libs-in-rhel-7.2-broke-ssl-verification-in-s3cmd/</id><summary type="html">&lt;p&gt;Today started with &lt;a href="http://planet.sofiavalley.com"&gt;Planet Sofia Valley&lt;/a&gt; being
broken again. Indeed it's been broken since last Friday when I've upgraded to
the latest RHEL 7.2. I quickly identified that I was hitting
&lt;a href="https://github.com/s3tools/s3cmd/issues/647"&gt;Issue #647&lt;/a&gt;. Then I tried the
git checkout without any luck. This is when I started to suspect that python-libs
has been updated in an incompatible way.&lt;/p&gt;
&lt;p&gt;After series of reported bugs,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1284916"&gt;rhbz#1284916&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1284930"&gt;rhbz#1284930&lt;/a&gt;,
&lt;a href="http://bugs.python.org/issue25722"&gt;Python#25722&lt;/a&gt;, it was clear that
&lt;code&gt;ssl.py&lt;/code&gt; was working according to RFC6125, that Amazon S3 was not playing
nicely with this same RFC and that my patch proposal was wrong.
This immediately had me looking upper in the stack at &lt;code&gt;httplib.py&lt;/code&gt; and &lt;code&gt;s3cmd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Indeed there was a change in &lt;code&gt;httplib.py&lt;/code&gt; which introduced two parameters,
&lt;em&gt;context&lt;/em&gt; and &lt;em&gt;check_hostname&lt;/em&gt;, to &lt;code&gt;HTTPSConnection.__init__&lt;/code&gt;. The change
also supplied the logic which performs SSL hostname validation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;if not self._context.check_hostname and self._check_hostname:
    try:
        ssl.match_hostname(self.sock.getpeercert(), server_hostname)
    except Exception:
        self.sock.shutdown(socket.SHUT_RDWR)
        self.sock.close()
        raise
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This looks a bit doggy as I don't quite understand the intention behind
&lt;em&gt;not PREDICATE and PREDICATE&lt;/em&gt;. Anyway to disable the validation you need
both parameters set to False, which is
&lt;a href="https://github.com/s3tools/s3cmd/pull/668"&gt;PR #668&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Notice the two try-except blocks. This is in case we're running with a
version that has a context but not the check_hostname parameter. I've found
the &lt;em&gt;inspect.getmembers&lt;/em&gt; function which can be used to figure out what
parameters are there for the init method but a solution based on it
doesn't appear to be more elegant. I will describe this in more details in
my next post.&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category><category term="RHEL"></category><category term="Python"></category></entry><entry><title>GitHub Bugzilla Hook</title><link href="http://atodorov.org/blog/2015/11/24/github-bugzilla-hook/" rel="alternate"></link><updated>2015-11-24T13:32:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-24:blog/2015/11/24/github-bugzilla-hook/</id><summary type="html">&lt;p&gt;Last month I've created a tool which adds comments to Bugzilla when a commit
message references a bug number. It was done as a proof of concept and didn't
receive much attention at the time. Today I'm happy to announce the existence
of &lt;a href="https://github.com/atodorov/github-bugzilla-hook"&gt;GitHub Bugzilla Hook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've used David Shea's
&lt;a href="https://github.com/rhinstaller/github-email-hook/"&gt;GitHub Email Hook&lt;/a&gt; as my
starting template and only modified it where needed. GitHub Bugzilla Hook will
examine push data and post comments for every unique bug+branch combination.
Once a comment for that particular bug+branch combination is made, new ones
will not be posted, even if later commits reference the same bug.
My main assumption is commits which are related to a bug will be pushed together
most of the times so there shouldn't be lots of noise in Bugzilla.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1274703"&gt;rhbz#1274703&lt;/a&gt; for
example of how the comments look. The parser behavior is taken from anaconda
and conforms to the style the Red Hat Installer Engineering Team uses.
Hopefully you find it useful as well.&lt;/p&gt;
&lt;p&gt;My next step is to find a hosting place for this script and hook it up
with the rhinstaller GitHub repos!&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>Bad Stub Design in DNF, Pt.2</title><link href="http://atodorov.org/blog/2015/11/23/bad-stub-design-in-dnf/" rel="alternate"></link><updated>2015-11-23T15:55:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-23:blog/2015/11/23/bad-stub-design-in-dnf/</id><summary type="html">&lt;p&gt;Do you remember my example of a
&lt;a href="/blog/2015/09/25/unit-testing-bad-stub-design-in-dnf/"&gt;bad stub design in DNF&lt;/a&gt; ?
At that time I didn't have a good example of why this is a bad design and what are the
consequences of it. Today I have!&lt;/p&gt;
&lt;p&gt;From my comment on
&lt;a href="https://github.com/rpm-software-management/dnf-plugins-core/pull/118"&gt;PR #118&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: the benefit of this patch are quite subtle.
I've played around with creating a few more tests and the benefit I see affect
only a few lines of code.&lt;/p&gt;
&lt;p&gt;For #114 there doesn't seem to be any need to test _get_query directly,
although we call&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;   q = self.base.sack.query()
   q = q.available()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which will benefit from this PR b/c we're stubbing out the entire Sack object.
I will work on a test later today/tomorrow to see how it looks.&lt;/p&gt;
&lt;p&gt;OTOH for #113 where we modify _get_query the test can look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;def test_get_query_with_local_rpm(self):
    try:
        (fs, rpm_path) = tempfile.mkstemp(&amp;#39;foobar-99.99-1.x86_64.rpm&amp;#39;)
        # b/c self.cmd.cli.base is a mock object add_remote_rpm
        # will not update the available packages while testing.
        # it is expected to hit an exception
        with self.assertRaises(dnf.exceptions.PackageNotFoundError):
            self.cmd._get_query(rpm_path)
        self.cmd.cli.base.add_remote_rpm.assert_called_with(rpm_path)
    finally:
        os.remove(rpm_path)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note the comment above the with block. If we leave out &lt;code&gt;_get_query&lt;/code&gt; as before
(a simple stub function) we're not going to be able to use &lt;code&gt;assert_called_with&lt;/code&gt;
later.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now a more practical example. See 
&lt;a href="https://github.com/rpm-software-management/dnf-plugins-core/commit/fe130669ffc4c1d6eba8f10cda35ab4d803d5a3d"&gt;commit fe13066&lt;/a&gt;
- in case the package is not found we log the error. In case configuration is
&lt;code&gt;strict=True&lt;/code&gt; then the plugin will raise another exception. With the initial version
of the stubs this change in behavior is silently ignored. If there was an error
in the newly introduced lines it would go straight into production because the
existing tests passed.&lt;/p&gt;
&lt;p&gt;What happens is that &lt;code&gt;test_get_packages()&lt;/code&gt; calls &lt;code&gt;_get_packages(['notfound'])&lt;/code&gt;,
which is not the real code but a test stub and returns an empty list in this case.
The empty list is expected from the test and it will not fail!&lt;/p&gt;
&lt;p&gt;With my new stub design the test will execute the actual &lt;code&gt;_get_packages()&lt;/code&gt;
method from &lt;code&gt;download.py&lt;/code&gt; and choke on the exception. The test itself needs
to be modified, which is done in
&lt;a href="https://github.com/atodorov/dnf-plugins-core/commit/2c2b34237c99cbf32e23bde43027d22873f4e8b7"&gt;commit 2c2b34&lt;/a&gt;
and no further errors were found.&lt;/p&gt;
&lt;p&gt;So let me summarize:
&lt;strong&gt;
When using mocks, stubs and fake objects we should be replacing external
dependencies of the software under test, not internal methods from the SUT!
&lt;/strong&gt;&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>Tip: Running DNF Plugins from git</title><link href="http://atodorov.org/blog/2015/11/23/tip-running-dnf-plugins-from-git/" rel="alternate"></link><updated>2015-11-23T15:50:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-23:blog/2015/11/23/tip-running-dnf-plugins-from-git/</id><summary type="html">&lt;p&gt;This is mostly for self reference because it is not currently documented
in the code. To use dnf plugins from a local git checkout modify your
&lt;code&gt;/etc/dnf/dnf.conf&lt;/code&gt; and add the following line under the &lt;code&gt;[main]&lt;/code&gt; section:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pluginpath=/path/to/dnf-plugins-core/plugins
&lt;/pre&gt;&lt;/div&gt;</summary><category term="QA"></category><category term="fedora.planet"></category><category term="tips"></category></entry><entry><title>Updated MacBook Air Drivers for RHEL 7.2</title><link href="http://atodorov.org/blog/2015/11/21/updated-macbook-air-drivers-for-rhel-7.2/" rel="alternate"></link><updated>2015-11-21T11:27:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-21:blog/2015/11/21/updated-macbook-air-drivers-for-rhel-7.2/</id><summary type="html">&lt;p&gt;Yesterday I've upgraded to
&lt;a href="https://access.redhat.com/announcements/2058583"&gt;Red Hat Enterprise Linux 7.2&lt;/a&gt;
on my &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; and I decided to rebuild the wifi and backlight drivers.
Wifi broke immediately but I was able to fix the build with a
&lt;a href="https://github.com/atodorov/wl-kmod-for-rhel7/commit/88d678a25eb702ce36f7c39471edefb65de57ad5"&gt;simple patch&lt;/a&gt;.
I'm now using the newly built &lt;em&gt;kmod-wl-3.10.0-327.el7.x86_64-6.30.223.248-7.el7.x86_64&lt;/em&gt;
and it appears to work as expected.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;mba6x_bl&lt;/em&gt; driver built without problems however I'm having problems when
closing the laptop lid. The screen stays on and (I think) the computer doesn't
suspend. My battery was drained as I left the computer as-is overnight. Suspending
from the Desktop menu however appears to work. See
&lt;a href="https://github.com/patjak/mba6x_bl/issues/41"&gt;Issue #41&lt;/a&gt;. I'd love to get some
help in debugging what's going wrong and trying to fix it. At this point I have
no idea where to look and if it's the driver to blame or something else on the system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2015-11-25:&lt;/strong&gt;
After the upgrade to RHEL 7.2 I also started seeing
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1284851"&gt;rhbz#1284851&lt;/a&gt;
- Mate power manager doesn't detect AC/DC changes on &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; with RHEL 7.2&lt;/p&gt;</summary><category term="Mac"></category><category term="RHEL"></category><category term="fedora.planet"></category></entry><entry><title>Revamping Anaconda's Dogtail Tests</title><link href="http://atodorov.org/blog/2015/11/20/revamping-anaconda-dogtail-tests/" rel="alternate"></link><updated>2015-11-20T15:34:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-20:blog/2015/11/20/revamping-anaconda-dogtail-tests/</id><summary type="html">&lt;p&gt;In my &lt;a href="/blog/2015/11/13/running-anaconda-from-git/"&gt;previous post&lt;/a&gt; I briefly talked
about running anaconda from a git checkout. My goal was to rewrite &lt;code&gt;tests/gui/&lt;/code&gt; so
that they don't use a LiveCD and virtual machines anymore. I'm pleased to announce
that this is already done (still not merged), see 
&lt;a href="https://github.com/rhinstaller/anaconda/pull/457"&gt;PR#457&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The majority of the changes are just shuffling bits around and deleting
unused code. The existing UI tests were mostly working and only needed minor
changes. There are two things which didn't work and are temporarily disabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clicking the Help button results in &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1282432"&gt;rhbz#1282432&lt;/a&gt;,
which in turn may be hiding another bug behind it;&lt;/li&gt;
&lt;li&gt;Looping over the available languages resulted in AT-SPI NonImplementedError
which I'm going to debug next.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To play around with this make sure you have accessibility enabled and:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# cd anaconda/
# export top_srcdir=`pwd`
# setenforce 0
# cd tests/gui/
# ./run_gui_tests.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you also need Dogtail for Python3 which isn't officially available
yet. I'm building from
&lt;a href="https://vhumpa.fedorapeople.org/dogtail/beta/dogtail3-0.9.1-0.3.beta3.src.rpm"&gt;https://vhumpa.fedorapeople.org/dogtail/beta/dogtail3-0.9.1-0.3.beta3.src.rpm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My future plans are to figure out how to re-enable what is temporarily
disabled, update &lt;code&gt;run_gui_tests.sh&lt;/code&gt; to properly start gnome-session and
enable accessibility, do a better job cleaning up after a failure,
enable coverage and hook everything into &lt;code&gt;make ci&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Happy testing!&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>Running Anaconda from git</title><link href="http://atodorov.org/blog/2015/11/13/running-anaconda-from-git/" rel="alternate"></link><updated>2015-11-13T10:48:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-13:blog/2015/11/13/running-anaconda-from-git/</id><summary type="html">&lt;p&gt;It is now possible to execute anaconda directly from a git checkout.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; this is only for testing purposes, you are not supposed to
execute anaconda from git and install a running system! My intention is
to use this feature and rewrite the Dogtail tests inside &lt;code&gt;tests/gui/&lt;/code&gt; which
rely on having a LiveCD.iso and running VMs to execute. For me this has proven
very slow and difficult to debug problems in the past hence the change.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; you will need to have an active DISPLAY in your environment and
also set SELinux to permissive, see &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1276376"&gt;rhbz#1276376&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please see &lt;a href="https://github.com/rhinstaller/anaconda/pull/438"&gt;PR 438&lt;/a&gt; for
more details.&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>How Krasi Tsonev Broke Planet.SofiaValley.com</title><link href="http://atodorov.org/blog/2015/11/13/how-krasi-tsonev-broke-planet.sofiavalley.com/" rel="alternate"></link><updated>2015-11-13T10:09:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-13:blog/2015/11/13/how-krasi-tsonev-broke-planet.sofiavalley.com/</id><summary type="html">&lt;p&gt;Yesterday I've added &lt;a href="http://krasimirtsonev.com/blog/"&gt;Krasimir Tsonev's blog&lt;/a&gt; to
&lt;a href="http://planet.sofiavalley.com"&gt;http://planet.sofiavalley.com&lt;/a&gt; and the planet broke. Suddenly it started showing
only Krasi's articles and all of them with the same date. The problem was the RSS
feed didn't have any timestamps. The fix is trivial:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gd"&gt;--- rss.xml.orig    2015-11-13 10:12:35.348625718 +0200&lt;/span&gt;
&lt;span class="gi"&gt;+++ rss.xml 2015-11-13 10:12:45.157932304 +0200&lt;/span&gt;
&lt;span class="gu"&gt;@@ -9,120 +9,160 @@&lt;/span&gt;
                             &amp;lt;title&amp;gt;&amp;lt;![CDATA[A modern React starter pack based on webpack]]&amp;gt;&amp;lt;/title&amp;gt;
                             &amp;lt;link&amp;gt;http://krasimirtsonev.com/blog/article/a-modern-react-starter-pack-based-on-webpack&amp;lt;/link&amp;gt;
                             &amp;lt;description&amp;gt;&amp;lt;![CDATA[&amp;lt;p&amp;gt;&amp;lt;i&amp;gt;Checkout React webpack starter in &amp;lt;a href=\&amp;quot;https://github.com/krasimir/react-web&amp;lt;br /&amp;gt;&amp;lt;p&amp;gt;You know how crazy is the JavaScript world nowadays. There are new frameworks, libraries and tools coming every day. Frequently I’m exploring some of these goodies. I got a week long holiday. I promised to myself that I’ll not code, read or watch about code. Well, it’s stronger than me. &amp;lt;a href=\&amp;quot;https://github.com/krasimir/react-webpack-starter\&amp;quot;&amp;gt;React werbpack starter&amp;lt;/a&amp;gt; is the result of my no-programming week.&amp;lt;/p&amp;gt;]]&amp;gt;&amp;lt;/description&amp;gt;
&lt;span class="gi"&gt;+                            &amp;lt;pubDate&amp;gt;Thu, 01 Oct 2015 00:00:00 +0300&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+                            &amp;lt;guid&amp;gt;http://krasimirtsonev.com/blog/article/a-modern-react-starter-pack-based-on-webpack&amp;lt;/guid&amp;gt;&lt;/span&gt;
                         &amp;lt;/item&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Thanks to Krasi for fixing this quickly and happy reading!&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>UI Usability Bug for QAChallengeAccepted.com</title><link href="http://atodorov.org/blog/2015/11/11/ui-usability-bug-qachallengeaccepted.com/" rel="alternate"></link><updated>2015-11-11T22:36:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-11:blog/2015/11/11/ui-usability-bug-qachallengeaccepted.com/</id><summary type="html">&lt;p&gt;&lt;img alt="Initial view" src="/images/qachallenge1.png" title="Initial view" /&gt;&lt;/p&gt;
&lt;p&gt;Today I wanted to submit a presentation proposal for
&lt;a href="http://qachallengeaccepted.com"&gt;QA Challenge Accepted 2016&lt;/a&gt; and found a usability
problem in their website. The first picture is how the UI looks on my screen.
As you can see the screen height is enough to show the first section of the
interface. There's something orange at the bottom which isn't clearly identifiable.
The next picture shows the UI as it looks after clicking on the PROGRAM menu link.&lt;/p&gt;
&lt;p&gt;&lt;img alt="View after clicking the menu" src="/images/qachallenge2.png" title="View after clicking the menu" /&gt;&lt;/p&gt;
&lt;p&gt;The problem is that I never saw the orange section, which turned out to be
the call for papers and a link to the submission form. To fix this the orange
section either needs to go at the top and be clearly visible or at least a new
item be added to the menu.&lt;/p&gt;
&lt;p&gt;Btw the next event will be in March 2016 in Sofia and I hope to see you there!&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>OpenFest 2015 Impressions</title><link href="http://atodorov.org/blog/2015/11/11/openfest-2015-impressions/" rel="alternate"></link><updated>2015-11-11T15:16:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-11-11:blog/2015/11/11/openfest-2015-impressions/</id><summary type="html">&lt;p&gt;This past weekend I've attended &lt;a href="http://openfest.org"&gt;OpenFest&lt;/a&gt; in Sofia. I have
mixed feelings about this year's event. Although I was so tired that I slept
through the entire Monday I find some of the presentations not so interesting.&lt;/p&gt;
&lt;h2&gt;Day One&lt;/h2&gt;
&lt;p&gt;On the first day I've tried to attend the talk about &lt;em&gt;The Yocto Project&lt;/em&gt; by
&lt;a href="http://anavi.org"&gt;Leon Anavi&lt;/a&gt; and &lt;a href="http://kolev.info"&gt;Radoslav Kolev&lt;/a&gt;.
The room was full and I couldn't get in so I watched some of it outside
using the live streaming. Next was &lt;em&gt;Building Universal Applications with Angular 2&lt;/em&gt; by
&lt;a href="http://blog.mgechev.com"&gt;Minko Gechev&lt;/a&gt; followed by
&lt;em&gt;Free And Open Source Software In European Public Administrations&lt;/em&gt; by
&lt;a href="http://hillenius.com/"&gt;Gijs Hillenius&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Overall impression from these talks was good. They were interesting to me
and I liked the way they were presented.&lt;/p&gt;
&lt;p&gt;Afterwards I've spend a good hour and more talking to Gijs, catching up on
a long overdue email thread about FOSS usage in Bulgarian public administrations.
It's always nice to put a face on the email address :). The outcome of this
is that I'll have to forward him quite a lot of local contacts. Also my
previous article
&lt;a href="https://joinup.ec.europa.eu/community/osor/news/10-steps-migrate-your-closed-software-open-source"&gt;10 steps to migrate your closed software to open source&lt;/a&gt;
is now available at OSOR's website.&lt;/p&gt;
&lt;h2&gt;Day Two&lt;/h2&gt;
&lt;p&gt;On day two I had quite a few people to talk to but managed to attend couple of
presentations. In the main room &lt;em&gt;First Lessons in Control Theory&lt;/em&gt; by
&lt;a href="https://twitter.com/hiro_asari"&gt;Hiro Asari&lt;/a&gt; and at the end
&lt;em&gt;Collaboration In Open Source - How Does It Really Work?&lt;/em&gt; by
&lt;a href="https://twitter.com/ottokekalainen"&gt;Otto Kekäläinen&lt;/a&gt;. I am quite disappointed
by both, the challenge level wasn't the one I've expected.&lt;/p&gt;
&lt;p&gt;Hiro's subject is interesting but IMO he merely scratched the surface.
The first half of the presentation was an introduction in the field
and as far as I could tell most of the people left in the room
didn't need it. The most interesting part was probably the last 5-10 minutes.&lt;/p&gt;
&lt;p&gt;For Otto's presentation I had the expectation it would be interesting stories
and failures from working with the community. Instead it was an introduction
why and how open source communities work.&lt;/p&gt;
&lt;p&gt;That said both presentations are suitable for inexperienced public, folks
who are new to open source or IT in general. For folks like me, who have
been working for 10 years in the open they weren't so interesting.
I'm not against entry-level presentations but at least they have to
be properly annotated as such.&lt;/p&gt;
&lt;p&gt;The other presentation I've attended on day two was &lt;em&gt;Education 3.0&lt;/em&gt; by
Ivan Gospodinov. This was a non-technical talk which conflicted with
the lightning talks and I've missed 
&lt;a href="/blog/2015/05/20/free-software-testing-books/"&gt;mine&lt;/a&gt;. I liked this one
though.&lt;/p&gt;
&lt;h2&gt;General&lt;/h2&gt;
&lt;p&gt;This year the event was held at a new venue which was a pleasant change.
I've heard there were more people attending since previous years yet
it seemed there is less seating capacity at the venue.&lt;/p&gt;
&lt;p&gt;The after-party however was very good and just before leaving something
amazing happened to me. A guy comes to me and asks if I'm atodorov.
Obviously I am. Then he says he's my co-worker Vladimir Ralev from Red Hat.
Mind you we've talked many times on IRC but not once seen in person.&lt;/p&gt;</summary><category term="events"></category></entry><entry><title>Building Docker Images with Anaconda</title><link href="http://atodorov.org/blog/2015/10/28/building-docker-images-with-anaconda/" rel="alternate"></link><updated>2015-10-28T16:10:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-10-28:blog/2015/10/28/building-docker-images-with-anaconda/</id><summary type="html">&lt;p&gt;Anaconda, the Fedora and Red Hat Enterprise Linux installer, has gained some
features to facilitate building Docker images. These are only available
in kickstart. To build a Docker image for HTTPD, using packages provided in the
distro use the following ks.cfg file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;install&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="n"&gt;en_US&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;keyboard&lt;/span&gt; &lt;span class="n"&gt;us&lt;/span&gt;
&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;onboot&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;eth0&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;bootproto&lt;/span&gt; &lt;span class="n"&gt;dhcp&lt;/span&gt;

&lt;span class="n"&gt;rootpw&lt;/span&gt;  &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;lock&lt;/span&gt;
&lt;span class="n"&gt;firewall&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;disabled&lt;/span&gt;
&lt;span class="n"&gt;timezone&lt;/span&gt; &lt;span class="n"&gt;Europe&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Sofia&lt;/span&gt;

&lt;span class="n"&gt;clearpart&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;initlabel&lt;/span&gt;
&lt;span class="n"&gt;part&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;fstype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ext4&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;grow&lt;/span&gt;

&lt;span class="n"&gt;bootloader&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;disabled&lt;/span&gt;

&lt;span class="nf"&gt;%packages&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;nocore&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;instLangs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;en_US&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;excludedocs&lt;/span&gt;
&lt;span class="n"&gt;httpd&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;
&lt;span class="n"&gt;yum&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;langpacks&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;workaround&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;rhbz&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1271766&lt;/span&gt;
&lt;span class="nf"&gt;%end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above kickstart file will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install HTTPD and its dependencies&lt;/li&gt;
&lt;li&gt;disable kernel installation by excluding it from the package list&lt;/li&gt;
&lt;li&gt;disable installation of the boot loader using &lt;code&gt;--disabled&lt;/code&gt;. The resulting image
will not be bootable&lt;/li&gt;
&lt;li&gt;disable firewall&lt;/li&gt;
&lt;li&gt;locks the root account so it can't login from the console&lt;/li&gt;
&lt;li&gt;prevent installing @core using &lt;code&gt;--nocore&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;limit the installation of localization files using &lt;code&gt;--instLangs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;limit the installation of documentation using &lt;code&gt;--excludedocs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the previous &lt;code&gt;--nobase&lt;/code&gt; option is deprected and doesn't have any effect.&lt;/p&gt;
&lt;p&gt;After the VM installation is complete grab the contents of the root directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# virt-tar-out -a /var/lib/libvirt/images/disk.qcow2 / myimage.tar
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Import the tarball into Docker and inspect the result:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# docker import myimage.tar local_images:ver1.0&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;a2324e6d0e940a998b990262335894a17d261450c33f57dc153d3d1987e4fc1&lt;/span&gt;

&lt;span class="c"&gt;# docker images&lt;/span&gt;
&lt;span class="n"&gt;REPOSITORY&lt;/span&gt;                                             &lt;span class="n"&gt;TAG&lt;/span&gt;                 &lt;span class="n"&gt;IMAGE&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt;            &lt;span class="n"&gt;CREATED&lt;/span&gt;             &lt;span class="n"&gt;VIRTUAL&lt;/span&gt; &lt;span class="n"&gt;SIZE&lt;/span&gt;
&lt;span class="n"&gt;local_images&lt;/span&gt;                                           &lt;span class="n"&gt;ver1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;              &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;a2324e6d0e9&lt;/span&gt;        &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;      &lt;span class="mf"&gt;320.6&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;
&lt;span class="n"&gt;registry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;redhat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rhel&lt;/span&gt;                        &lt;span class="n"&gt;latest&lt;/span&gt;              &lt;span class="mi"&gt;82&lt;/span&gt;&lt;span class="n"&gt;ad5fa11820&lt;/span&gt;        &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;weeks&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;         &lt;span class="mf"&gt;158.3&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;
&lt;span class="n"&gt;registry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;redhat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rhscl_beta&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;httpd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rhel7&lt;/span&gt;   &lt;span class="n"&gt;latest&lt;/span&gt;              &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="n"&gt;a8a150cf2d&lt;/span&gt;        &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="n"&gt;weeks&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;         &lt;span class="mf"&gt;201.1&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run commands into a new container: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# docker run --name=bash_myimage -it 8a2324e6d0e9 /bin/bash
bash-4.2# cat /etc/redhat-release 
Red Hat Enterprise Linux Server release 7.2 Beta (Maipo)
bash-4.2# rpm -q httpd
httpd-2.4.6-40.el7.x86_64
bash-4.2# exit

# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
64f7ca6d5844        8a2324e6d0e9        &amp;quot;/bin/bash&amp;quot;         24 seconds ago      Exited (0) 19 seconds ago                       bash_myimage
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see the resulting image is bigger than stock images provided by Red Hat.
At this moment I don't know if this is the minimum package set which satisfies
dependencies or anaconda adds a bit more on its own. The full package list is
given below. There are some packages like  device-mapper, dracut, e2fsprogs,
iptables, kexec-tools, SELinux related, systemd and tzdata which look out
of place. My guess is some of them are pulled in from the various kickstart
commands and not really necessary. I will follow up with devel and see if
the content can be stripped down even more.&lt;/p&gt;
&lt;p&gt;For more information check out these docs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://access.redhat.com/articles/881893"&gt;Get Started with Docker Formatted Container Images on Red Hat Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en/red-hat-enterprise-linux-atomic-host/version-7/red-hat-enterprise-linux-atomic-host-7-getting-started-with-containers/chapter-7-get-started-with-docker-formatted-container-images"&gt;Chapter 7. Get Started with Docker Formatted Container Images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full package list:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;acl-2.2.51-12.el7.x86_64
apr-1.4.8-3.el7.x86_64
apr-util-1.5.2-6.el7.x86_64
audit-libs-2.4.1-5.el7.x86_64
basesystem-10.0-7.el7.noarch
bash-4.2.46-19.el7.x86_64
bind-libs-lite-9.9.4-29.el7.x86_64
bind-license-9.9.4-29.el7.noarch
binutils-2.23.52.0.1-54.el7.x86_64
bzip2-libs-1.0.6-13.el7.x86_64
ca-certificates-2015.2.4-71.el7.noarch
chkconfig-1.3.61-5.el7.x86_64
chrony-2.1.1-1.el7.x86_64
coreutils-8.22-15.el7.x86_64
cpio-2.11-24.el7.x86_64
cracklib-2.9.0-11.el7.x86_64
cracklib-dicts-2.9.0-11.el7.x86_64
cryptsetup-libs-1.6.7-1.el7.x86_64
curl-7.29.0-25.el7.x86_64
cyrus-sasl-lib-2.1.26-19.2.el7.x86_64
dbus-1.6.12-13.el7.x86_64
dbus-glib-0.100-7.el7.x86_64
dbus-libs-1.6.12-13.el7.x86_64
dbus-python-1.1.1-9.el7.x86_64
device-mapper-1.02.107-5.el7.x86_64
device-mapper-libs-1.02.107-5.el7.x86_64
dhclient-4.2.5-42.el7.x86_64
dhcp-common-4.2.5-42.el7.x86_64
dhcp-libs-4.2.5-42.el7.x86_64
diffutils-3.3-4.el7.x86_64
dracut-033-358.el7.x86_64
dracut-network-033-358.el7.x86_64
e2fsprogs-1.42.9-7.el7.x86_64
e2fsprogs-libs-1.42.9-7.el7.x86_64
ebtables-2.0.10-13.el7.x86_64
elfutils-libelf-0.163-3.el7.x86_64
elfutils-libs-0.163-3.el7.x86_64
ethtool-3.15-2.el7.x86_64
expat-2.1.0-8.el7.x86_64
file-libs-5.11-31.el7.x86_64
filesystem-3.2-20.el7.x86_64
findutils-4.5.11-5.el7.x86_64
firewalld-0.3.9-14.el7.noarch
gawk-4.0.2-4.el7.x86_64
gdbm-1.10-8.el7.x86_64
glib2-2.42.2-5.el7.x86_64
glibc-2.17-105.el7.x86_64
glibc-common-2.17-105.el7.x86_64
gmp-6.0.0-11.el7.x86_64
gnupg2-2.0.22-3.el7.x86_64
gobject-introspection-1.42.0-1.el7.x86_64
gpgme-1.3.2-5.el7.x86_64
grep-2.20-2.el7.x86_64
gzip-1.5-8.el7.x86_64
hardlink-1.0-19.el7.x86_64
hostname-3.13-3.el7.x86_64
httpd-2.4.6-40.el7.x86_64
httpd-tools-2.4.6-40.el7.x86_64
info-5.1-4.el7.x86_64
initscripts-9.49.30-1.el7.x86_64
iproute-3.10.0-54.el7.x86_64
iptables-1.4.21-16.el7.x86_64
iputils-20121221-7.el7.x86_64
kexec-tools-2.0.7-37.el7.x86_64
keyutils-libs-1.5.8-3.el7.x86_64
kmod-20-5.el7.x86_64
kmod-libs-20-5.el7.x86_64
kpartx-0.4.9-85.el7.x86_64
krb5-libs-1.13.2-10.el7.x86_64
langtable-0.0.31-3.el7.noarch
langtable-data-0.0.31-3.el7.noarch
langtable-python-0.0.31-3.el7.noarch
libacl-2.2.51-12.el7.x86_64
libassuan-2.1.0-3.el7.x86_64
libattr-2.4.46-12.el7.x86_64
libblkid-2.23.2-26.el7.x86_64
libcap-2.22-8.el7.x86_64
libcap-ng-0.7.5-4.el7.x86_64
libcom_err-1.42.9-7.el7.x86_64
libcurl-7.29.0-25.el7.x86_64
libdb-5.3.21-19.el7.x86_64
libdb-utils-5.3.21-19.el7.x86_64
libedit-3.0-12.20121213cvs.el7.x86_64
libffi-3.0.13-16.el7.x86_64
libgcc-4.8.5-4.el7.x86_64
libgcrypt-1.5.3-12.el7_1.1.x86_64
libgpg-error-1.12-3.el7.x86_64
libidn-1.28-4.el7.x86_64
libmnl-1.0.3-7.el7.x86_64
libmount-2.23.2-26.el7.x86_64
libnetfilter_conntrack-1.0.4-2.el7.x86_64
libnfnetlink-1.0.1-4.el7.x86_64
libpwquality-1.2.3-4.el7.x86_64
libselinux-2.2.2-6.el7.x86_64
libselinux-python-2.2.2-6.el7.x86_64
libsemanage-2.1.10-18.el7.x86_64
libsepol-2.1.9-3.el7.x86_64
libss-1.42.9-7.el7.x86_64
libssh2-1.4.3-10.el7.x86_64
libstdc++-4.8.5-4.el7.x86_64
libtasn1-3.8-2.el7.x86_64
libuser-0.60-7.el7_1.x86_64
libutempter-1.1.6-4.el7.x86_64
libuuid-2.23.2-26.el7.x86_64
libverto-0.2.5-4.el7.x86_64
libxml2-2.9.1-5.el7_1.2.x86_64
lua-5.1.4-14.el7.x86_64
lzo-2.06-8.el7.x86_64
mailcap-2.1.41-2.el7.noarch
ncurses-5.9-13.20130511.el7.x86_64
ncurses-base-5.9-13.20130511.el7.noarch
ncurses-libs-5.9-13.20130511.el7.x86_64
nspr-4.10.8-1.el7_1.x86_64
nss-3.19.1-17.el7.x86_64
nss-softokn-3.16.2.3-13.el7_1.x86_64
nss-softokn-freebl-3.16.2.3-13.el7_1.x86_64
nss-sysinit-3.19.1-17.el7.x86_64
nss-tools-3.19.1-17.el7.x86_64
nss-util-3.19.1-3.el7_1.x86_64
openldap-2.4.40-8.el7.x86_64
openssl-libs-1.0.1e-42.el7_1.9.x86_64
p11-kit-0.20.7-3.el7.x86_64
p11-kit-trust-0.20.7-3.el7.x86_64
pam-1.1.8-12.el7_1.1.x86_64
pcre-8.32-15.el7.x86_64
pinentry-0.8.1-14.el7.x86_64
pkgconfig-0.27.1-4.el7.x86_64
popt-1.13-16.el7.x86_64
procps-ng-3.3.10-3.el7.x86_64
pth-2.0.7-23.el7.x86_64
pygobject3-base-3.14.0-3.el7.x86_64
pygpgme-0.3-9.el7.x86_64
pyliblzma-0.5.3-11.el7.x86_64
python-2.7.5-34.el7.x86_64
python-decorator-3.4.0-3.el7.noarch
python-iniparse-0.4-9.el7.noarch
python-libs-2.7.5-34.el7.x86_64
python-pycurl-7.19.0-17.el7.x86_64
python-slip-0.4.0-2.el7.noarch
python-slip-dbus-0.4.0-2.el7.noarch
python-urlgrabber-3.10-7.el7.noarch
pyxattr-0.5.1-5.el7.x86_64
qrencode-libs-3.4.1-3.el7.x86_64
readline-6.2-9.el7.x86_64
redhat-logos-70.0.3-4.el7.noarch
redhat-release-server-7.2-7.el7.x86_64
rpm-4.11.3-17.el7.x86_64
rpm-build-libs-4.11.3-17.el7.x86_64
rpm-libs-4.11.3-17.el7.x86_64
rpm-python-4.11.3-17.el7.x86_64
sed-4.2.2-5.el7.x86_64
setup-2.8.71-6.el7.noarch
shadow-utils-4.1.5.1-18.el7.x86_64
shared-mime-info-1.1-9.el7.x86_64
snappy-1.1.0-3.el7.x86_64
sqlite-3.7.17-8.el7.x86_64
systemd-219-19.el7.x86_64
systemd-libs-219-19.el7.x86_64
sysvinit-tools-2.88-14.dsf.el7.x86_64
tzdata-2015g-1.el7.noarch
ustr-1.0.4-16.el7.x86_64
util-linux-2.23.2-26.el7.x86_64
xz-5.1.2-12alpha.el7.x86_64
xz-libs-5.1.2-12alpha.el7.x86_64
yum-3.4.3-132.el7.noarch
yum-langpacks-0.4.2-4.el7.noarch
yum-metadata-parser-1.1.4-10.el7.x86_64
zlib-1.2.7-15.el7.x86_64
&lt;/pre&gt;&lt;/div&gt;</summary><category term="fedora.planet"></category></entry><entry><title>Anaconda &amp; coverage.py - Pt.3 - coverage-diff</title><link href="http://atodorov.org/blog/2015/10/27/anaconda-coverage.py-coverage-diff/" rel="alternate"></link><updated>2015-10-27T11:12:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-10-27:blog/2015/10/27/anaconda-coverage.py-coverage-diff/</id><summary type="html">&lt;p&gt;In my &lt;a href="/blog/2015/10/15/anaconda-coverage.py-details/"&gt;previous post&lt;/a&gt;
I've talked about testing anaconda and friends and raised some questions.
Today I'm going to give an example of how to answer one of them:
"How different is the code execution path between different tests?"&lt;/p&gt;
&lt;h2&gt;coverate-tools&lt;/h2&gt;
&lt;p&gt;I'm going to use &lt;a href="https://github.com/atodorov/coverage-tools"&gt;coverage-tools&lt;/a&gt;
in my explanations below so a little introduction is required. All the tools
are executable Python scripts which build on top of existing coverage.py API.
The difference is mainly in flexibility of parameters and output formatting.
I've tried to keep as close as possible to the existing behavior of coverage.py.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;coverage-annotate&lt;/em&gt; - when given a .coverage data file prints the source code
annotated with line numbers and execution markers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;!!!&lt;/span&gt; &lt;span class="n"&gt;missing&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib64&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pyanaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda_argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;covered&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib64&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pyanaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda_argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;skip&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="mi"&gt;37&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
    &lt;span class="mi"&gt;38&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLogger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;anaconda&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;39&lt;/span&gt;   
    &lt;span class="mi"&gt;40&lt;/span&gt;   &lt;span class="c"&gt;# Help text formatting constants&lt;/span&gt;
    &lt;span class="mi"&gt;41&lt;/span&gt;   
    &lt;span class="mi"&gt;42&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;LEFT_PADDING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="c"&gt;# the help text will start after 8 spaces&lt;/span&gt;
    &lt;span class="mi"&gt;43&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;RIGHT_PADDING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="c"&gt;# there will be 8 spaces left on the right&lt;/span&gt;
    &lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;DEFAULT_HELP_WIDTH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;
    &lt;span class="mi"&gt;45&lt;/span&gt;   
    &lt;span class="mi"&gt;46&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_help_width&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="mi"&gt;47&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;    48 &amp;gt;     Try to detect the terminal window width size and use it to&lt;/span&gt;
&lt;span class="s"&gt;    49 &amp;gt;     compute optimal help text width. If it can&amp;#39;t be detected&lt;/span&gt;
&lt;span class="s"&gt;    50 &amp;gt;     a default values is returned.&lt;/span&gt;
&lt;span class="s"&gt;    51   &lt;/span&gt;
&lt;span class="s"&gt;    52 &amp;gt;     :returns: optimal help text width in number of characters&lt;/span&gt;
&lt;span class="s"&gt;    53 &amp;gt;     :rtype: int&lt;/span&gt;
&lt;span class="s"&gt;    54 &amp;gt;     &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="mi"&gt;55&lt;/span&gt;       &lt;span class="c"&gt;# don&amp;#39;t do terminal size detection on s390, it is not supported&lt;/span&gt;
    &lt;span class="mi"&gt;56&lt;/span&gt;       &lt;span class="c"&gt;# by its arcane TTY system and only results in cryptic error messages&lt;/span&gt;
    &lt;span class="mi"&gt;57&lt;/span&gt;       &lt;span class="c"&gt;# ending on the standard output&lt;/span&gt;
    &lt;span class="mi"&gt;58&lt;/span&gt;       &lt;span class="c"&gt;# (we do the s390 detection here directly to avoid&lt;/span&gt;
    &lt;span class="mi"&gt;59&lt;/span&gt;       &lt;span class="c"&gt;#  the delay caused by importing the Blivet module&lt;/span&gt;
    &lt;span class="mi"&gt;60&lt;/span&gt;       &lt;span class="c"&gt;#  just for this single call)&lt;/span&gt;
    &lt;span class="mi"&gt;61&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="n"&gt;is_s390&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uname&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;s390&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;62&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_s390&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="mi"&gt;63&lt;/span&gt; &lt;span class="err"&gt;!&lt;/span&gt;         &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DEFAULT_HELP_WIDTH&lt;/span&gt;
    &lt;span class="mi"&gt;64&lt;/span&gt;   
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;skip&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the example above all lines starting with &lt;strong&gt;&amp;gt;&lt;/strong&gt; were executed by the interpreter.
All top-level import statements were executed as you would expect. Then the method
&lt;em&gt;get_help_width()&lt;/em&gt; was executed (called from somewhere). Because this was on x86_64
machine line 63 was not executed. It is marked with &lt;strong&gt;!&lt;/strong&gt;. The comments and empty
lines are of no interest.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;coverage-diff&lt;/em&gt; - produces git like diff reports on the text output of annotate.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gd"&gt;--- a/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/source.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/source.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -634,7 +634,7 @@&lt;/span&gt;
    634           # Wait to make sure the other threads are done before sending ready, otherwise
    635           # the spoke may not get be sensitive by _handleCompleteness in the hub.
    636 &amp;gt;         while not self.ready:
&lt;span class="gd"&gt;-   637 !             time.sleep(1)&lt;/span&gt;
&lt;span class="gi"&gt;+   637 &amp;gt;             time.sleep(1)&lt;/span&gt;
    638 &amp;gt;         hubQ.send_ready(self.__class__.__name__, False)
    639   
    640 &amp;gt;     def refresh(self):\
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this example line 637 was not executed in the first test run, while it was executed
in the second test run. Reading the comments above it is clear the difference between
the two test runs is just timing and synchronization.&lt;/p&gt;
&lt;h2&gt;Kickstart vs. Kickstart&lt;/h2&gt;
&lt;p&gt;How different is the code execution path between different tests? Looking at
&lt;a href="https://fedoraproject.org/wiki/Test_Results:Fedora_23_Final_RC3_Installation"&gt;Fedora 23 test results&lt;/a&gt;
we see several tests which differ only slightly in their setup - installation
via HTTP, FTP or NFS; installation to SATA, SCSI, SAS drives; installation using
RAID for the root file system; These are good candidates for further analysis.&lt;/p&gt;
&lt;p&gt;Note: my results below are not from Fedora 23 but the conclusions still apply!
The tests were executed on bare metal and virtual machines, trying to use the
same hardware or same systems configurations where possible!&lt;/p&gt;
&lt;p&gt;Example: HTTP vs. FTP&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gd"&gt;--- a/usr/lib64/python2.7/site-packages/pyanaconda/packaging/__init__.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/usr/lib64/python2.7/site-packages/pyanaconda/packaging/__init__.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -891,7 +891,7 @@&lt;/span&gt;
    891   
    892               # Run any listeners for the new state
    893 &amp;gt;             for func in self._event_listeners[event_id]:
&lt;span class="gd"&gt;-   894 !                 func()&lt;/span&gt;
&lt;span class="gi"&gt;+   894 &amp;gt;                 func()&lt;/span&gt;
    895   
    896 &amp;gt;     def _runThread(self, storage, ksdata, payload, fallback, checkmount):
    897           # This is the thread entry
&lt;span class="gd"&gt;--- a/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/lib/resize.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/lib/resize.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -102,10 +102,10 @@&lt;/span&gt;
    102           # Otherwise, fall back on increasingly vague information.
    103 &amp;gt;         if not part.isleaf:
    104 &amp;gt;             return self.storage.devicetree.getChildren(part)[0].name
&lt;span class="gd"&gt;-   105 &amp;gt;         if getattr(part.format, &amp;quot;label&amp;quot;, None):&lt;/span&gt;
&lt;span class="gi"&gt;+   105 !         if getattr(part.format, &amp;quot;label&amp;quot;, None):&lt;/span&gt;
    106 !             return part.format.label
&lt;span class="gd"&gt;-   107 &amp;gt;         elif getattr(part.format, &amp;quot;name&amp;quot;, None):&lt;/span&gt;
&lt;span class="gd"&gt;-   108 &amp;gt;             return part.format.name&lt;/span&gt;
&lt;span class="gi"&gt;+   107 !         elif getattr(part.format, &amp;quot;name&amp;quot;, None):&lt;/span&gt;
&lt;span class="gi"&gt;+   108 !             return part.format.name&lt;/span&gt;
    109 !         else:
    110 !             return &amp;quot;&amp;quot;
    111   
&lt;span class="gu"&gt;@@ -315,10 +315,10 @@&lt;/span&gt;
    315 &amp;gt;     def on_key_pressed(self, window, event, *args):
    316           # Handle any keyboard events.  Right now this is just delete for
    317           # removing a partition, but it could include more later.
&lt;span class="gd"&gt;-   318 &amp;gt;         if not event or event and event.type != Gdk.EventType.KEY_RELEASE:&lt;/span&gt;
&lt;span class="gi"&gt;+   318 !         if not event or event and event.type != Gdk.EventType.KEY_RELEASE:&lt;/span&gt;
    319 !             return
    320   
&lt;span class="gd"&gt;-   321 &amp;gt;         if event.keyval == Gdk.KEY_Delete and self._deleteButton.get_sensitive():&lt;/span&gt;
&lt;span class="gi"&gt;+   321 !         if event.keyval == Gdk.KEY_Delete and self._deleteButton.get_sensitive():&lt;/span&gt;
    322 !             self._deleteButton.emit(&amp;quot;clicked&amp;quot;)
    323   
    324 &amp;gt;     def _sumReclaimableSpace(self, model, path, itr, *args):
&lt;span class="gd"&gt;--- a/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/source.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/source.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -634,7 +634,7 @@&lt;/span&gt;
    634           # Wait to make sure the other threads are done before sending ready, otherwise
    635           # the spoke may not get be sensitive by _handleCompleteness in the hub.
    636 &amp;gt;         while not self.ready:
&lt;span class="gd"&gt;-   637 !             time.sleep(1)&lt;/span&gt;
&lt;span class="gi"&gt;+   637 &amp;gt;             time.sleep(1)&lt;/span&gt;
    638 &amp;gt;         hubQ.send_ready(self.__class__.__name__, False)
    639   
    640 &amp;gt;     def refresh(self):
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The difference in &lt;code&gt;source.py&lt;/code&gt; is from timing/synchronization and can safely be ignored.
I'm not exactly sure about &lt;code&gt;__init__.py&lt;/code&gt; but doesn't look much of a big deal.
We're left with &lt;code&gt;resize.py&lt;/code&gt;. The differences in &lt;em&gt;on_key_pressed()&lt;/em&gt; are because
I've probably used the keyboard instead the mouse (these are indeed manual installs).
The other difference is in how the partition labels are displayed. One of the installs
was probably using fresh disks while the other not.&lt;/p&gt;
&lt;p&gt;Example: SATA vs. SCSI - no difference&lt;/p&gt;
&lt;p&gt;Example: SATA vs. SAS (mpt2sas driver)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gd"&gt;--- a/usr/lib64/python2.7/site-packages/pyanaconda/bootloader.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/usr/lib64/python2.7/site-packages/pyanaconda/bootloader.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -109,10 +109,10 @@&lt;/span&gt;
    109 &amp;gt;     try:
    110 &amp;gt;         opts.parity = arg[idx+0]
    111 &amp;gt;         opts.word   = arg[idx+1]
&lt;span class="gd"&gt;-   112 !         opts.flow   = arg[idx+2]&lt;/span&gt;
&lt;span class="gd"&gt;-   113 !     except IndexError:&lt;/span&gt;
&lt;span class="gd"&gt;-   114 &amp;gt;         pass&lt;/span&gt;
&lt;span class="gd"&gt;-   115 &amp;gt;     return opts&lt;/span&gt;
&lt;span class="gi"&gt;+   112 &amp;gt;         opts.flow   = arg[idx+2]&lt;/span&gt;
&lt;span class="gi"&gt;+   113 &amp;gt;     except IndexError:&lt;/span&gt;
&lt;span class="gi"&gt;+   114 !         pass&lt;/span&gt;
&lt;span class="gi"&gt;+   115 !     return opts&lt;/span&gt;
    116   
    117 ! def _is_on_iscsi(device):
    118 !     &amp;quot;&amp;quot;&amp;quot;Tells whether a given device is on an iSCSI disk or not.&amp;quot;&amp;quot;&amp;quot;
&lt;span class="gu"&gt;@@ -1075,13 +1075,13 @@&lt;/span&gt;
   1075 &amp;gt;             command = [&amp;quot;serial&amp;quot;]
   1076 &amp;gt;             s = parse_serial_opt(self.console_options)
   1077 &amp;gt;             if unit and unit != &amp;#39;0&amp;#39;:
&lt;span class="gd"&gt;-  1078 !                 command.append(&amp;quot;--unit=%s&amp;quot; % unit)&lt;/span&gt;
&lt;span class="gi"&gt;+  1078 &amp;gt;                 command.append(&amp;quot;--unit=%s&amp;quot; % unit)&lt;/span&gt;
   1079 &amp;gt;             if s.speed and s.speed != &amp;#39;9600&amp;#39;:
   1080 &amp;gt;                 command.append(&amp;quot;--speed=%s&amp;quot; % s.speed)
   1081 &amp;gt;             if s.parity:
&lt;span class="gd"&gt;-  1082 !                 if s.parity == &amp;#39;o&amp;#39;:&lt;/span&gt;
&lt;span class="gi"&gt;+  1082 &amp;gt;                 if s.parity == &amp;#39;o&amp;#39;:&lt;/span&gt;
   1083 !                     command.append(&amp;quot;--parity=odd&amp;quot;)
&lt;span class="gd"&gt;-  1084 !                 elif s.parity == &amp;#39;e&amp;#39;:&lt;/span&gt;
&lt;span class="gi"&gt;+  1084 &amp;gt;                 elif s.parity == &amp;#39;e&amp;#39;:&lt;/span&gt;
   1085 !                     command.append(&amp;quot;--parity=even&amp;quot;)
   1086 &amp;gt;             if s.word and s.word != &amp;#39;8&amp;#39;:
   1087 !                 command.append(&amp;quot;--word=%s&amp;quot; % s.word)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see the difference is minimal, mostly related to the underlying
hardware. As far as I can tell this has to do with how the bootloader is
installed on disk but I'm no expert on this particular piece of code.
I've seen the same difference in other comparisons so it probably has to do
more with hardware than with what kind of disk/driver is used.&lt;/p&gt;
&lt;p&gt;Example: RAID 0 vs. RAID 1 - manual install&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gd"&gt;--- a/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/datetime_spoke.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/usr/lib64/python2.7/site-packages/pyanaconda/ui/gui/spokes/datetime_spoke.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -490,9 +490,9 @@&lt;/span&gt;
    490   
    491 &amp;gt;         time_init_thread = threadMgr.get(constants.THREAD_TIME_INIT)
    492 &amp;gt;         if time_init_thread is not None:
&lt;span class="gd"&gt;-   493 &amp;gt;             hubQ.send_message(self.__class__.__name__,&lt;/span&gt;
&lt;span class="gd"&gt;-   494 &amp;gt;                              _(&amp;quot;Restoring hardware time...&amp;quot;))&lt;/span&gt;
&lt;span class="gd"&gt;-   495 &amp;gt;             threadMgr.wait(constants.THREAD_TIME_INIT)&lt;/span&gt;
&lt;span class="gi"&gt;+   493 !             hubQ.send_message(self.__class__.__name__,&lt;/span&gt;
&lt;span class="gi"&gt;+   494 !                              _(&amp;quot;Restoring hardware time...&amp;quot;))&lt;/span&gt;
&lt;span class="gi"&gt;+   495 !             threadMgr.wait(constants.THREAD_TIME_INIT)&lt;/span&gt;
    496   
    497 &amp;gt;         hubQ.send_ready(self.__class__.__name__, False)
    498
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As far as I can tell the difference is related to hardware clock settings,
probably due to different defaults in BIOS on the various hardware.
Additional tests with RAID 5 and RAID 6 reveals the same exact difference.
RAID 0 vs. RAID 10 shows no difference at all. Indeed as far as I know anaconda
delegates the creation of RAID arrays to mdadm once the desired configuration
is known so these results are to be expected.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As you can see sometimes there are tests which appear to be very important
but in reality they cover a corner case of the base test. For example if any
of the RAID levels works we can be pretty confident 
&lt;strike&gt;all of them work&lt;/strike&gt; &lt;em&gt;they won't break in anaconda&lt;/em&gt;
(thanks Adam Williamson)!&lt;/p&gt;
&lt;p&gt;What you do with this information is up to you. Sometimes QA is able to
execute all the tests and life is good. Sometimes we have to compromise,
skip some testing and accept the risks of doing so. Sometimes you can
execute all tests for every build, sometimes only once per milestone.
Whatever the case having the information to back up your decision is vital!&lt;/p&gt;
&lt;p&gt;In my next post on this topic I'm going to talk more about functional tests
vs. unit tests. Both anaconda and blivet have both kinds of tests and I'm
interested to know if tests from the two categories focus on the same
functionality how are they different. If we have a unit test for feature X,
does it warrant to spend the resources doing functional testing for X as well?&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>Anaconda &amp; coverage.py - Pt.2 - Details</title><link href="http://atodorov.org/blog/2015/10/15/anaconda-coverage.py-details/" rel="alternate"></link><updated>2015-10-15T14:15:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-10-15:blog/2015/10/15/anaconda-coverage.py-details/</id><summary type="html">&lt;p&gt;My &lt;a href="/blog/2015/10/14/anaconda-coverage.py-introduction/"&gt;previous post&lt;/a&gt;
was an introduction to testing installation related components. Now I'm going to
talk more about anaconda and how it is tested.&lt;/p&gt;
&lt;p&gt;There are two primary ways to test anaconda. You can execute &lt;code&gt;make check&lt;/code&gt; in the
source directory which will trigger the package test suite. The other possibility
is to perform an actual installation, on bare meta or virtual machine, using the
&lt;a href="https://kojipkgs.fedoraproject.org/mash/"&gt;latest Rawhide snapshots&lt;/a&gt; which also
include the latest anaconda. For both of these methods we can collect code
coverage information. In live installation mode coverage is enabled via the
&lt;code&gt;inst.debug&lt;/code&gt; boot argument. Fedora 23 and earlier use &lt;code&gt;debug=1&lt;/code&gt; but that
can lead to &lt;a href="https://github.com/rhinstaller/anaconda/pull/291"&gt;problems&lt;/a&gt;
sometimes.&lt;/p&gt;
&lt;h2&gt;Kickstart Testing&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rhinstaller/pykickstart/blob/master/docs/kickstart-docs.rst"&gt;Kickstart&lt;/a&gt;
is a method of automating the installation of Fedora by supplying the necessary
configuration into a text file and pointing the installer at this file. There is
the directory &lt;code&gt;tests/kickstart_tests&lt;/code&gt;, inside the anaconda source, where each
test is a kickstart file and a shell script. The test runner provisions a virtual
machine using boot.iso and the kickstart file. A shell script then verifies
installation was as expected and copies files of interest to the host system.
Kickstart files are also the basis for testing Fedora installations in
&lt;a href="https://beaker.fedoraproject.org/bkr/jobs/"&gt;Beaker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Naturally some of these in-package kickstart tests are the same as
&lt;a href="https://bitbucket.org/fedoraqa/fedora-beaker-tests/"&gt;out-of-band kickstart tests&lt;/a&gt;.
Hint: there are more available but not yet public.&lt;/p&gt;
&lt;p&gt;The question which I don't have an answer for right now is
"Can we remove some of the duplicates and how this affects devel and QE teams" ?
The pros of in-package testing are that it is faster compared to Beaker. The cons
are that you're not testing the real distro (every snapshot is a possible final
release to the users).&lt;/p&gt;
&lt;h2&gt;Dogtail&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://fedorahosted.org/dogtail/"&gt;Dogtail&lt;/a&gt; uses accessibility technologies to
communicate with desktop applications. It is written in Python and can be used
as GUI test automation framework. Long time ago I've proposed support for Dogtail
in anaconda which was rejected, then couple of years later it was accepted and
later removed from the code again.&lt;/p&gt;
&lt;p&gt;Anaconda has in-package Dogtail tests (&lt;code&gt;tests/gui/&lt;/code&gt;). They work by attaching
a second disk image with the test suite to a VM running a LiveCD. Anaconda is
started on the LiveCD and an attempt to install Fedora on disk 1 is made.
Everything is driven by the Dogtail scripts. There are only a few of these
tests available and they are currently disabled.
Red Hat QE has also created another method for running Dogtail tests in anaconda
using an updates.img with the previous functionality.&lt;/p&gt;
&lt;p&gt;Even if there are some duplicate tests I'm not convinced we have to drop the
&lt;code&gt;tests/gui/&lt;/code&gt; directory from the code because
the framework used to drive the graphical interface of anaconda appears to be very
well written. The code is clean and easy to follow.
Also I don't have metrics of how much these two methods differ or how much they cover
in their testing. IMO they are pretty close and before we can find a way to
reliably execute them on a regular basis there isn't much to be done here.
One idea is to use the &lt;code&gt;--dirinstall&lt;/code&gt; or &lt;code&gt;--image&lt;/code&gt; options and skip the
LiveCD part entirely.&lt;/p&gt;
&lt;h2&gt;How Much is Tested&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;make ci&lt;/code&gt; covers 10% of the entire code base for anaconda. Mind you that
&lt;code&gt;tests/storage&lt;/code&gt; and &lt;code&gt;tests/gui&lt;/code&gt; are currently disabled.
See &lt;a href="https://github.com/rhinstaller/anaconda/pull/346"&gt;PR #346&lt;/a&gt;,
&lt;a href="https://github.com/rhinstaller/anaconda/pull/327"&gt;PR #327&lt;/a&gt; and
&lt;a href="https://github.com/rhinstaller/anaconda/pull/319"&gt;PR #319&lt;/a&gt;!
There is definitely room for improvement.&lt;/p&gt;
&lt;p&gt;On the other hand live installation testing is much
better. Text mode covers around 25% while graphical installations around 40%.
Text and graphical combined cover 50% though. These numbers will drop quite a bit
once anaconda learns to
&lt;a href="https://github.com/rhinstaller/anaconda/pull/397"&gt;include all possible files&lt;/a&gt;
in its report but it is a good estimate.&lt;/p&gt;
&lt;p&gt;The important questions to ask here are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How much can PyUnit tests cover in anaconda?&lt;/li&gt;
&lt;li&gt;How much can kickstart tests cover ?&lt;/li&gt;
&lt;li&gt;Have we reached a threshold in any of the two primary methods for testing ?&lt;/li&gt;
&lt;li&gt;Does UI automation (with Dogtail) improve anything ?&lt;/li&gt;
&lt;li&gt;When testing a particular feature (say user creation) how different is the
code execution path between manual (GUI) testing, kickstart and unit testing ?
If not so different can we invest in unit tests instead of higher level tests then ?&lt;/li&gt;
&lt;li&gt;How different is the code execution path between different tests (manual or kickstart) ?
In other words how much value are we getting from testing for the resources we're putting in ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my next post I will talk more about these questions and some rudimentary
analysis against coverage data from the various test methods and test cases!&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>Anaconda &amp; coverage.py - Pt.1 - Introduction</title><link href="http://atodorov.org/blog/2015/10/14/anaconda-coverage.py-introduction/" rel="alternate"></link><updated>2015-10-14T13:44:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-10-14:blog/2015/10/14/anaconda-coverage.py-introduction/</id><summary type="html">&lt;p&gt;Since early 2015 I've been working on testing installation related
components in Rawhide. I'm interested in the code produced by the
&lt;a href="https://github.com/rhinstaller/"&gt;Red Hat Installer Engineering Team&lt;/a&gt; and in
particular in &lt;em&gt;anaconda&lt;/em&gt;, &lt;em&gt;blivet&lt;/em&gt;, &lt;em&gt;pyparted&lt;/em&gt; and &lt;em&gt;pykickstart&lt;/em&gt;. The goal of
this effort is to improve the overall testing of these components and also
have Red Hat QE contribute some of our knowledge back to the community. The benefit
of course will be better software for everyone. In the next
several posts I'll summarize what has been done so far and what's to be expected
in the future.&lt;/p&gt;
&lt;h2&gt;Test Documentation Matters&lt;/h2&gt;
&lt;p&gt;Do you want others to contribute tests? I certainly do! When I started looking
at the code it was obviously clear there was no documentation related to testing.
Everyone needs to know how to write and execute these tests! Currently we have
basic README files describing how to install necessary dependencies for development
and test execution, how to execute the tests (and what can be tested) and most
importantly what is the test architecture. There is description of how the file
structure is organized and which are the base classes to inherit from when adding
new tests. Most of the times each component goes through a &lt;em&gt;pylint&lt;/em&gt; check and
a standard PyUnit test suite.&lt;/p&gt;
&lt;p&gt;Test documentation is usually in a &lt;code&gt;tests/README&lt;/code&gt; file. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rhinstaller/anaconda/blob/master/tests/README.rst"&gt;anaconda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rhinstaller/blivet/blob/master/tests/README.rst"&gt;blivet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rhinstaller/pykickstart/blob/master/tests/README.rst"&gt;pykickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rhinstaller/pyparted/blob/master/tests/README.rst"&gt;pyparted&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've tried to explain as much as possible without bloating the files and going into
unnecessary details. If you spot something missing please send a pull request.&lt;/p&gt;
&lt;h2&gt;Continuous Integration&lt;/h2&gt;
&lt;p&gt;This has been largely an effort driven by Chris Lumens from the devel team.
All the components I'm interested in are tested regularly in a CI environment.
There is a &lt;code&gt;make ci&lt;/code&gt; Makefile target for those of you interested in what exactly
gets executed.&lt;/p&gt;
&lt;h2&gt;Test Coverage&lt;/h2&gt;
&lt;p&gt;In order to &lt;strong&gt;improve&lt;/strong&gt; something you need to know where you stand. We'll I didn't.
That's why the first step was to integrate the
&lt;a href="https://bitbucket.org/ned/coveragepy"&gt;coverage.py&lt;/a&gt; tool with all of these components.&lt;/p&gt;
&lt;p&gt;With the exception of blivet (written in C) all of the other
components integrate well with coverage.py and produce good statistics. pykickstart is
the champ here with 90% coverage, while anaconda is somewhere between 10% and 50%.
Full test coverage measurement for anaconda isn't straight forward and will be the
subject of my next post. For the C based code we have to hook up with
&lt;a href="https://gcc.gnu.org/onlinedocs/gcc/Gcov.html"&gt;Gcov&lt;/a&gt; which shouldn't be too difficult.&lt;/p&gt;
&lt;p&gt;At the moment there are several open pull requests to integrate the coverage test
targets with &lt;code&gt;make ci&lt;/code&gt; and also report the results in human readable form. I will be
collecting these for historical references.&lt;/p&gt;
&lt;h2&gt;Tools&lt;/h2&gt;
&lt;p&gt;I've created some basic text-mode
&lt;a href="https://github.com/atodorov/coverage-tools"&gt;coverage-tools&lt;/a&gt; to help me combine and
compare data from different executions. These are only the start of it and I'm expanding
them as my needs for reporting and analytics evolve. I'm also looking into
&lt;a href="/blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports/"&gt;more detailed coverage reports&lt;/a&gt;
but I don't have enough data and use cases to work on this front at the moment.&lt;/p&gt;
&lt;p&gt;Some ideas currently in mind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;map code changes (git commits) to existing test coverage to get a feeling where to
invest in more testing;&lt;/li&gt;
&lt;li&gt;map bugs to code areas and to existing test coverage to see if we aren't
missing tests in areas where the bugs are happening;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bugs&lt;/h2&gt;
&lt;p&gt;coverage.py is a very nice tool indeed but I guess most people use it in a very
limited way. Shortly after I started working with it I've found several places which
need improvements. These have to do with combining and reporting on multiple files.&lt;/p&gt;
&lt;p&gt;Some of the interesting issues I've found and still open are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/ned/coveragepy/pull-requests/63/"&gt;PR #63 - New option --dont-remove when combining coverage data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/ned/coveragepy/issues/425"&gt;#425 - source parameter not including files which are explicitly specified&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/ned/coveragepy/issues/426"&gt;#426 - Difference between coverage results with source specifies full dir instead of module name&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my next post I will talk about anaconda code coverage and what I want to do with it.
In the mean time please use the comments to share your feedback.&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>Thunderbolt to VGA adapter on Linux</title><link href="http://atodorov.org/blog/2015/09/30/thunderbolt-to-vga-adapter-on-linux/" rel="alternate"></link><updated>2015-09-30T11:59:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-09-30:blog/2015/09/30/thunderbolt-to-vga-adapter-on-linux/</id><summary type="html">&lt;p&gt;I've previously written about my
&lt;a href="http://amzn.to/1Iqhl9e"&gt;Thunderbolt to Ethernet&lt;/a&gt;
adapter &lt;a href="/blog/2015/05/04/thunderbolt-to-ethernet-adapter-on-linux/"&gt;working on Linux&lt;/a&gt;
despite claims that it should not. Recently I've used my &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; to do a presentation
and the &lt;a href="http://amzn.to/1Iqh0nd"&gt;Thunderbolt to VGA adapter&lt;/a&gt; worked well enough.&lt;/p&gt;
&lt;p&gt;It was an Acer adapter but I have no more details b/c it wasn't mine.&lt;/p&gt;
&lt;p&gt;Before the event I've tested it and it worked so on the day of the event I've
freshly rebooted my laptop to be sure no crashed processes or anything like that
was running and gave it a go.&lt;/p&gt;
&lt;p&gt;First time I plugged in the &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook&lt;/a&gt; everything worked like a charm. Then my computer was
unplugged and the lid closed, causing it to suspend. The second time I've plugged it in
I was told there was nothing showing on the projector so I quickly plugged the adapter out
and then back in. It worked more or less.&lt;/p&gt;
&lt;p&gt;At the time I had LibreOffice Impress in presentation
mode but I did see ABRT detecting a kernel problem. When my slides popped up the text
on the first one was mostly missing but the rest were ok!&lt;/p&gt;
&lt;p&gt;Mind you I'm still running &lt;a href="/blog/categories/mac/"&gt;RHEL 7 on my MacBook Air&lt;/a&gt;. The above is
with kernel-3.10.0-229.14.1.el7.x86_64.&lt;/p&gt;</summary><category term="Mac"></category><category term="RHEL"></category><category term="fedora.planet"></category></entry><entry><title>Unit Testing Example - Bad Stub Design in DNF</title><link href="http://atodorov.org/blog/2015/09/25/unit-testing-bad-stub-design-in-dnf/" rel="alternate"></link><updated>2015-09-25T11:20:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-09-25:blog/2015/09/25/unit-testing-bad-stub-design-in-dnf/</id><summary type="html">&lt;p&gt;In software testing, usually unit testing, test stubs are programs that simulate
the behaviors of external dependencies that a module undergoing the test depends
on. Test stubs provide canned answers to calls made during the test.&lt;/p&gt;
&lt;p&gt;I've discovered an improperly written stub method in one of
&lt;a href="http://dnf.baseurl.org/"&gt;DNF&lt;/a&gt;'s tests:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;tests/test_download.py&lt;/span&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DownloadCommandTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;stub_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pkg_spec&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.src.rpm&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pkg_spec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourcerpm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pkg_spec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pkg_spec&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="n"&gt;cli&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MagicMock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;download&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DownloadCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cli&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cli&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dnf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repodict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RepoDict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stub_fn&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_query_source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stub_fn&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The replaced methods look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;plugins/download.py&lt;/span&gt;&lt;pre&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_get_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pkg_spec&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return a query to match a pkg_spec.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;subj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dnf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Subject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pkg_spec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_best_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;No package &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pkg_spec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; available.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;dnf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PackageNotFoundError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_get_query_source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pkg_spec&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;Return a query to match a source rpm file name.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;pkg_spec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pkg_spec&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c"&gt;# skip the .rpm&lt;/span&gt;
        &lt;span class="n"&gt;nevra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hawkey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split_nevra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pkg_spec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nevra&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nevra&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nevra&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nevra&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;No package &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pkg_spec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; available.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;dnf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PackageNotFoundError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As seen here &lt;em&gt;stub_fn&lt;/em&gt; replaces the &lt;em&gt;_get_query&lt;/em&gt; methods from the class under
test. At the time of writing this has probably seemed like a good idea to
speed up writing the tests.&lt;/p&gt;
&lt;p&gt;The trouble is we should be replacing the external dependencies of &lt;em&gt;_get_query&lt;/em&gt;
(other parts of DNF essentially) and not methods from &lt;em&gt;DownloadCommand&lt;/em&gt;. To
understand why this is a bad idea check
&lt;a href="https://github.com/rpm-software-management/dnf-plugins-core/pull/113"&gt;PR #113&lt;/a&gt;,
which directly modifies &lt;em&gt;_get_query&lt;/em&gt;. There's no way to test this patch
with the current state of the test.&lt;/p&gt;
&lt;p&gt;So I took a few days to experiment and update the current test stubs. The
result is 
&lt;a href="https://github.com/rpm-software-management/dnf-plugins-core/pull/118"&gt;PR #118&lt;/a&gt;.
The important bits are the &lt;em&gt;SackStub&lt;/em&gt; and &lt;em&gt;SubjectStub&lt;/em&gt; classes which hold
information about the available RPM packages on the system. The rest are cosmetics
to fit around the way the query objects are used (q.available(), q.latest(), q.filter()).
The proposed design correctly overrides the external dependencies on
&lt;em&gt;dnf.subject.Subject&lt;/em&gt; and &lt;em&gt;self.base.sack&lt;/em&gt; which are initialized before our
plugin is loaded by DNF.&lt;/p&gt;
&lt;p&gt;I must say this is the first error of this kind I've seen in my QA practice so far.
I have no idea if this was a minor oversight or something which happens more frequently
in open source projects but it's a great example nevertheless.&lt;/p&gt;
&lt;p&gt;For those of you who'd like to get started on unit testing I can recommend the book
&lt;a href="http://www.amazon.com/gp/product/1933988274/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1933988274&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The Art of Unit Testing: With Examples in .Net&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1933988274" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Roy Osherove!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Part 2 with more practical examples can be found
&lt;a href="/blog/2015/11/23/bad-stub-design-in-dnf/"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>4000+ bugs in Fedora - checksec failures</title><link href="http://atodorov.org/blog/2015/09/16/4000-bugs-in-fedora-checksec-failures/" rel="alternate"></link><updated>2015-09-16T17:03:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-09-16:blog/2015/09/16/4000-bugs-in-fedora-checksec-failures/</id><summary type="html">&lt;p&gt;In the last week I've been trying to figure out how many packages
conform to the new
&lt;a href="https://fedoraproject.org/wiki/Changes/Harden_All_Packages"&gt;Harden All Packages&lt;/a&gt;
policy in Fedora!&lt;/p&gt;
&lt;p&gt;From 46884 RPMs, 17385 are 'x86_64' meaning they may contain ELF objects.
From them 4489 are reported as failed &lt;code&gt;checksec&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;What you should see as the output from &lt;code&gt;checksec is&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH
Full RELRO      Canary found      NX enabled    DSO             No RPATH   No RUNPATH
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first line is for binaries, the second one for libraries b/c
DSOs on x86_64 are always position-independent. Some RPATHs are acceptable,
e.g. &lt;code&gt;%{_libdir}/foo/&lt;/code&gt; and I've tried to exclude them unless
other offenses are found. The script which does this is
&lt;a href="https://github.com/atodorov/fedora-scripts/blob/master/checksec-collect"&gt;checksec-collect&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most often I'm seeing &lt;em&gt;Partial RELRO&lt;/em&gt;, &lt;em&gt;No canary found&lt;/em&gt; and &lt;em&gt;No PIE&lt;/em&gt; errors.
Since all packages potentially process untrusted input, it makes sense for all of them
to be hardened and enhance the security of Fedora. That's why all of these errors
should be considered valid bugs.&lt;/p&gt;
&lt;h2&gt;Attn package maintainers&lt;/h2&gt;
&lt;p&gt;Please see if your package is in the list and try to fix it or let me know
why it should be excluded, for example it's a boot loader and doesn't function
properly with hardening enabled. The full list is available at
&lt;a href="https://github.com/atodorov/fedora-scripts/blob/master/checksec.log"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more information about the different protection mechanisms see the following
links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tk-blog.blogspot.bg/2009/02/relro-not-so-well-known-memory.html"&gt;Partial vs Full RELRO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Buffer_overflow_protection#Canaries"&gt;Stack canaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/NX_bit#Linux"&gt;NX memory protection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://securityblog.redhat.com/2012/11/28/position-independent-executables-pie/"&gt;Position Independent Executables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fedoraproject.org/wiki/Packaging:Guidelines#Beware_of_Rpath"&gt;RPATH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.tremily.us/posts/rpath/"&gt;RUNPATH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2015-09-17&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I've posted my findings on 
&lt;a href="https://lists.fedoraproject.org/pipermail/devel/2015-September/thread.html"&gt;fedora-devel&lt;/a&gt;
and the comments are more than interesting even revealing an old bug in libtool.&lt;/p&gt;</summary><category term="QA"></category><category term="fedora.planet"></category></entry><entry><title>Minor Typo Bug in Messenger for bg_BG.UTF-8</title><link href="http://atodorov.org/blog/2015/08/20/minor-typo-bug-in-messenger/" rel="alternate"></link><updated>2015-08-20T16:34:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-08-20:blog/2015/08/20/minor-typo-bug-in-messenger/</id><summary type="html">&lt;p&gt;&lt;img alt="Messenger typo" src="/images/messenger_typo.png" title="Messenger typo" /&gt;&lt;/p&gt;
&lt;p&gt;There's a typo in the Bulgarian translation of Messenger.com.
It is highlighted by the red dot on the picture.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;hunspell&lt;/em&gt; easily catches it so either Facebook doesn't run their
translations through a spell checker or their spell checker is
borked.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Pedometer Bug in Samsung S Health</title><link href="http://atodorov.org/blog/2015/08/17/pedometer-bug-in-samsung-s-health/" rel="alternate"></link><updated>2015-08-17T16:43:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-08-17:blog/2015/08/17/pedometer-bug-in-samsung-s-health/</id><summary type="html">&lt;p&gt;Do you remember the 
&lt;a href="/blog/2015/01/09/pedometer-bug-in-samsung-gear-fit-smartwatch/"&gt;pedometer bug in Samsung Gear Fit&lt;/a&gt;
I've discovered earlier ? It turns out that Samsung is a fan of this one
and has the exact same bug in their &lt;em&gt;S Health&lt;/em&gt; application.&lt;/p&gt;
&lt;p&gt;The application doesn't block pedometer(e.g. steps counting) while
performing other activities such as cycling for example. So in reallity it
reports incorrect value for burned callories. At this time I call it
bad software development practice/architecture on Samsung's part which leads
to this bug being present.&lt;/p&gt;
&lt;p&gt;Btw for more interesting bugs see
&lt;a href="http://gearfitbugs.tumblr.com/"&gt;Samsung Gear Fit Bug-of-the-Day&lt;/a&gt;.&lt;/p&gt;</summary><category term="QA"></category><category term="Samsung"></category></entry><entry><title>Tip: Try F10 When Editing grub2 Menu in EFI Mode</title><link href="http://atodorov.org/blog/2015/08/14/tip-try-f10-when-editing-grub2-menu-in-efi-mode/" rel="alternate"></link><updated>2015-08-14T14:06:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-08-14:blog/2015/08/14/tip-try-f10-when-editing-grub2-menu-in-efi-mode/</id><summary type="html">&lt;p&gt;When editing the grub2 menu (especially in EFI mode) it tells you to
press Ctrl-x to save your changes and continue the boot process.
However this doesn't work on my &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt;, see &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1253637"&gt;rhbz#1253637&lt;/a&gt;,
and maybe some other platforms. If this is the case try pressing &lt;strong&gt;F10&lt;/strong&gt; 
instead. It works for me!&lt;/p&gt;</summary><category term="Fedora"></category><category term="RHEL"></category><category term="Mac"></category><category term="fedora.planet"></category><category term="tips"></category></entry><entry><title>Call for Ideas: Graphical Test Coverage Reports</title><link href="http://atodorov.org/blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports/" rel="alternate"></link><updated>2015-07-27T13:04:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-07-27:blog/2015/07/27/call-for-ideas-graphical-test-coverage-reports/</id><summary type="html">&lt;p&gt;If you are working with Python and writing unit tests chances are you are
familiar with the &lt;a href="http://nedbatchelder.com/code/coverage/"&gt;coverage&lt;/a&gt; reporting
tool. However there are testing scenarios in which we either don't use unit tests
or maybe execute different code paths(test cases) independent of each other.&lt;/p&gt;
&lt;p&gt;For example, this is the case with installation testing in Fedora. Because anaconda
- the installer is very complex the easiest way is to test it live, not with unit tests.
Even though we can get a coverage report (anaconda is written in Python) it reflects
only the test case it was collected from.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;coverage combine&lt;/code&gt; can be used to combine several data files and produce an aggregate
report. This can tell you how much test coverage you have across all your tests.&lt;/p&gt;
&lt;p&gt;As far as I can tell Python's coverage doesn't tell you how many times a particular
line of code has been executed. It also doesn't tell you which test cases executed
a particular line
(see &lt;a href="https://bitbucket.org/ned/coveragepy/pull-request/59"&gt;PR #59&lt;/a&gt;).
In the Fedora example, I have the feeling many of our tests are touching the same
code base and not contributing that much to the overall test coverage.
So I started working on these items.&lt;/p&gt;
&lt;p&gt;I imagine a script which will read coverage data from several test executions
(preferably in JSON format, 
&lt;a href="https://bitbucket.org/ned/coveragepy/pull-request/60"&gt;PR #60&lt;/a&gt;) and produce a 
graphical report similar to what GitHub does for your commit activity.&lt;/p&gt;
&lt;p&gt;See an example &lt;a href="https://s3.amazonaws.com/atodorov/blog/pykickstart_report.html"&gt;here&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;The example uses darker colors to indicate more line executions, lighter for less
executions. Check the HTML for the actual numbers b/c there are no hints yet.
The input JSON files are
&lt;a href="https://s3.amazonaws.com/atodorov/blog/coverage_json_reports.tar.gz"&gt;here&lt;/a&gt; and
the script to generate the above HTML is at 
&lt;a href="https://github.com/atodorov/fedora-scripts/blob/master/coverage-tool"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now I need your ideas and comments!&lt;/p&gt;
&lt;p&gt;What kinds of coverage reports are you using in your job ? How do you generate them ?
How do they look like ?&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category><category term="Django"></category><category term="fedora.planet"></category></entry><entry><title>Open Data Event Coming to Sofia</title><link href="http://atodorov.org/blog/2015/07/01/open-data-event-coming-to-sofia/" rel="alternate"></link><updated>2015-07-01T11:58:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-07-01:blog/2015/07/01/open-data-event-coming-to-sofia/</id><summary type="html">&lt;p&gt;&lt;a href="https://www.eventbrite.co.uk/e/17565601186"&gt;Open Data and Intelligent Government&lt;/a&gt;
is the name of upcoming event organized by &lt;a href="http://sofiatech.bg/en/"&gt;Sofia Tech Park&lt;/a&gt;
on July 14th.&lt;/p&gt;
&lt;p&gt;The (preliminary) topics for this event are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Government vision for opening data;&lt;/li&gt;
&lt;li&gt;Presentation of national platform for open data;&lt;/li&gt;
&lt;li&gt;Legal aspects of open data;&lt;/li&gt;
&lt;li&gt;Presentation of &lt;a href="http://opendata.government.bg/"&gt;Bulgarian open data portal&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Europe and open data;&lt;/li&gt;
&lt;li&gt;Open, coordinated e-government for citizens and business;&lt;/li&gt;
&lt;li&gt;What has already been done by municipalities in Bulgaria;&lt;/li&gt;
&lt;li&gt;Strategy of Sofia municipality for open data;&lt;/li&gt;
&lt;li&gt;Upcoming open data programming contest organized by Sofia municipality.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will also be participating in this event by covering two topics I'm close to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Entrepreneurship and open data - sharing my limited experience with Difio
and processing open data; &lt;/li&gt;
&lt;li&gt;Technical tips for successful open data hackathon - sharing my observations as
a mentor at &lt;a href="http://hackfmi.com"&gt;HackFMI&lt;/a&gt; and giving some recommendations which will
help the alleged open data contest make a difference not being just another dull event
organized by governmental agencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So far other confirmed speakers are Rado from &lt;a href="http://hackbulgaria.com"&gt;HackBulgaria&lt;/a&gt;/
&lt;a href="http://hackfmi.com"&gt;HackFMI&lt;/a&gt; and &lt;a href="https://www.obshtestvo.bg/"&gt;Obshtestvo.bg&lt;/a&gt; which are
working in the field of open government and open data.&lt;/p&gt;
&lt;p&gt;I'm also in touch with the event organizers and helping a little bit with the program.
If you're interested in speaking please get in touch with me ASAP.&lt;/p&gt;</summary><category term="events"></category></entry><entry><title>DEVit Conf 2015 Impressions</title><link href="http://atodorov.org/blog/2015/05/22/devit-conf-2015-impressions/" rel="alternate"></link><updated>2015-05-22T12:01:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-05-22:blog/2015/05/22/devit-conf-2015-impressions/</id><summary type="html">&lt;p&gt;It's been a busy week after &lt;a href="http://devitconf.org/"&gt;DEVit conf&lt;/a&gt; took place in
Thessaloniki. Here are my impressions.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Crack, Train, Fix, Release" src="/images/devit2015.jpg" title="Crack, Train, Fix, Release" /&gt;&lt;/p&gt;
&lt;h2&gt;Sessions&lt;/h2&gt;
&lt;p&gt;I've started the day with the session called "Crack, Train, Fix, Release" by 
Chris Heilmann. While it was very interesting for some unknown reason I
was expecting a talk more closely related to software testing. Unfortunately at the
same time in the other room was a talk called "Integration Testing from the Trenches"
by Nicolas Frankel which I missed.&lt;/p&gt;
&lt;p&gt;At the end Chris answered the question "What to do about old versions of IE ?".
And the answer pretty much was "Don't try to support everything, leave them with
basic functionality so that users can achieve what they came for on your website.
Don't put nice buttons b/c IE 6 users are not used to nice things and they get confused."&lt;/p&gt;
&lt;p&gt;If you remember I had a similar question to Jeremy Keith at 
&lt;a href="/blog/2015/04/20/videos-from-bulgaria-web-summit-2015/"&gt;Bulgaria Web Summit&lt;/a&gt; last month
and the answer was similar:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Q: Which one is Jeremy's favorite device/browser to develop for.&lt;/p&gt;
&lt;p&gt;A: Your approach is wrong and instead we should be thinking in terms of what features are 
essential or non-essential for our websites and develop around features
(if supported, if not supported) not around browsers!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Btw I did ask Chris if he knows Jeremy and he does.&lt;/p&gt;
&lt;p&gt;After the coffee break there was "JavaScript ♥ Unicode" by Mathias Bynens which
I saw last year at &lt;a href="http://how.camp/"&gt;How Camp&lt;/a&gt; in Veliko Tarnovo so I just stopped by
to say hi and went to listen to 
"The future of responsive web design: web component queries" by Nikos Zinas.
As far as I understood Nikos is a local rock-star developer. I'm not much into web
development but the opportunity to create your own HTML components (tags) looks
very promising. I guess there will be more business coming for
&lt;a href="http://telerik.com"&gt;Telerik&lt;/a&gt; :).&lt;/p&gt;
&lt;p&gt;I wanted to listen to "Live Productive Coder" by Heinz Kabutz but that one started
in Greek so I switched the room for 
"iOS real time content modifications using websockets" by  Benny Weingarten-Gabbay.&lt;/p&gt;
&lt;p&gt;After lunch I went straight for
"Introduction to Docker: What is it and why should I care?" by Ian Miell
which IMO was the most interesting talk of the day. It wasn't very technical but
managed to clear some of the mysticism around Docker and what it actually is.
I tried to grab a few minutes of Ian's time and we found topics of common interest
to talk about (&lt;a href="http://www.projectatomic.io/"&gt;Project Atomic&lt;/a&gt; anyone?) but later
failed to find him and continue the talk. I guess I'll have to follow online.&lt;/p&gt;
&lt;p&gt;Tim Perry with "Your Web Stack Would Betray You In An Instant" made a great show.
The room was packed, I myself was actually standing the whole time. He described a series
of failures across the entire web development stack which gave developers hard times
patching and upgrading their services. The lesson: everything fails, be prepared!&lt;/p&gt;
&lt;p&gt;The last talk I visited was "GitHub Automation" by Forbes Lindesay. It was more of an
inspirational talk, rather than technical one. GitHub provides cool API so why not use it?&lt;/p&gt;
&lt;h2&gt;Organization&lt;/h2&gt;
&lt;p&gt;&lt;img alt="DEVit team" src="/images/devit2015team.jpg" title="DEVit team" /&gt;&lt;/p&gt;
&lt;p&gt;From what I know this is the first year of DEVit. For a first timer the team did great!
I particularly liked the two coffee breaks before lunch and in the early afternoon and the
sponsors pitches in between the main talks.&lt;/p&gt;
&lt;p&gt;All talks were recorded but I have no idea what's happening with the videos!&lt;/p&gt;
&lt;p&gt;I will definitely make a point of visiting Thessaloniki more often and follow the local
IT and start-up scenes there. And tonight is Silicon Drinkabout which will be the official
after party of &lt;a href="http://digitalk.bg/"&gt;DigitalK&lt;/a&gt; in Sofia.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="Django"></category><category term="events"></category></entry><entry><title>Bug in VMware Open House Website</title><link href="http://atodorov.org/blog/2015/05/21/bug-in-vmware-open-house-website/" rel="alternate"></link><updated>2015-05-21T14:55:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-05-21:blog/2015/05/21/bug-in-vmware-open-house-website/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Open House website bug&amp;quot;" src="/images/vmware_bug.png" title="Bug in VMware Open House website" /&gt;&lt;/p&gt;
&lt;p&gt;This is a slightly annoying UI bug in
&lt;a href="http://www.openhouse.vmware-bulgaria.com/"&gt;VMware's Open House&lt;/a&gt; website. I've reported
it and hopefully they will fix it.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Free Software Testing Books</title><link href="http://atodorov.org/blog/2015/05/20/free-software-testing-books/" rel="alternate"></link><updated>2015-05-20T11:35:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-05-20:blog/2015/05/20/free-software-testing-books/</id><summary type="html">&lt;p&gt;There's a huge list of 
&lt;a href="https://github.com/ligurio/free-software-testing-books/blob/master/free-software-testing-books.md"&gt;free books&lt;/a&gt;
on the topic of software testing. This will definitely be my summer reading list.
I hope you find it helpful.&lt;/p&gt;
&lt;h2&gt;200 Graduation Theses About Software Testing&lt;/h2&gt;
&lt;p&gt;The guys from &lt;a href="http://qahelp.net"&gt;QAHelp&lt;/a&gt; have compiled a list of 200
graduation theses from various universities which are freely accessible
online. The list can be found
&lt;a href="http://qahelp.net/200-dissertatsij-po-testirovaniyu-v-svobodnoj-dostupe/"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="QA"></category><category term="Django"></category><category term="books"></category></entry><entry><title>Why does sysctl not write under /sys</title><link href="http://atodorov.org/blog/2015/05/13/why-does-sysctl-not-write-under-slash-sys/" rel="alternate"></link><updated>2015-05-13T12:34:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-05-13:blog/2015/05/13/why-does-sysctl-not-write-under-slash-sys/</id><summary type="html">&lt;p&gt;Recently I've been looking into 
&lt;a href="/blog/2015/04/30/fixing-tilde-and-function-keys-mapping-for-macbook-air-on-linux/"&gt;fixing tilde and Fn keys mapping for MacBook Air&lt;/a&gt;
and thought I could use &lt;code&gt;sysctl&lt;/code&gt; to permanently set the desired values. Unfortunately this is not
possible. &lt;code&gt;sysctl&lt;/code&gt; can only write under &lt;code&gt;/proc/sys&lt;/code&gt; and this is 
&lt;a href="https://gitlab.com/procps-ng/procps/blob/master/sysctl.c#L54"&gt;hard-coded in the source&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;static const char PROC_PATH[] = &amp;quot;/proc/sys/&amp;quot;;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;IMO this is relatively easy to patch and allow sysctl to read/write values under /sys.
The only open question I see is backward compatibility - maybe adding new parameter (e.g. --sysfs)
or adding extended sytax e.g. if variable name starts with / then treat it as absolute path.&lt;/p&gt;
&lt;p&gt;I've asked sysctl maintainers on the 
&lt;a href="http://www.freelists.org/post/procps/Can-we-make-sysctl-readwrite-sys-values-along-with-procsys"&gt;procps mailing list&lt;/a&gt;
but so far got no answer. &lt;/p&gt;
&lt;p&gt;Is anyone else interested in this? How do you set parameter values under /sys then ?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; for my particular purposes I could have used config files under
&lt;em&gt;/etc/modprobe.d/&lt;/em&gt; or a startup script (I used that) instead.&lt;/p&gt;</summary><category term="fedora.planet"></category></entry><entry><title>Using USB to VGA Adapter on MacBook Air with Linux</title><link href="http://atodorov.org/blog/2015/05/05/using-usb-to-vga-adapter-on-macbook-air-with-linux/" rel="alternate"></link><updated>2015-05-05T14:02:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-05-05:blog/2015/05/05/using-usb-to-vga-adapter-on-macbook-air-with-linux/</id><summary type="html">&lt;p&gt;A quick solution for &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; users running Linux who want to
use external projector is to use a USB to VGA adapter. Mine is
&lt;a href="http://www.amazon.com/gp/product/B004AIJE9G/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B004AIJE9G&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=74W7KWXBGC7SZ5QH"&gt;Plugable UGA-165&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B004AIJE9G" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
and it works great with Red Hat Enterprise Linux 7.1.&lt;/p&gt;
&lt;p&gt;After the device is plugged in the &lt;em&gt;udl&lt;/em&gt; kernel module is loaded
and a new framebuffer device is created (/dev/fb1 in my case). Using
&lt;em&gt;mate-display-properties&lt;/em&gt; I'm able to configure the 2nd monitor attached
to the USB video card. I was able to succeffully display an OpenOffice
presentation on the 2nd monitor and play YouTube video.&lt;/p&gt;
&lt;p&gt;All USB 2.0 devices from Plugable should be well supported on Linux.
For USB 3.0 David Airlie from Red Hat is doing some reverse engineering
but I have no idea what the status is. For more info see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://plugable.com/2012/06/21/displaylink-usb-devices-on-linux-kernel-3-4-0"&gt;http://plugable.com/2012/06/21/displaylink-usb-devices-on-linux-kernel-3-4-0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://airlied.livejournal.com/80307.html"&gt;http://airlied.livejournal.com/80307.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://airlied.livejournal.com/80516.html"&gt;http://airlied.livejournal.com/80516.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://airlied.livejournal.com/80797.html"&gt;http://airlied.livejournal.com/80797.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="RHEL"></category><category term="Mac"></category><category term="fedora.planet"></category></entry><entry><title>Thunderbolt to Ethernet Adapter on Linux</title><link href="http://atodorov.org/blog/2015/05/04/thunderbolt-to-ethernet-adapter-on-linux/" rel="alternate"></link><updated>2015-05-04T22:27:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-05-04:blog/2015/05/04/thunderbolt-to-ethernet-adapter-on-linux/</id><summary type="html">&lt;p&gt;As it seems my
&lt;a href="http://www.amazon.com/gp/product/B008ALA6DW/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B008ALA6DW&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=T2J6D7GIDMKNWLYV"&gt;Thunderbolt to gigabit Ethernet adapter&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B008ALA6DW" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
works with 
&lt;a href="/blog/2015/04/26/installing-red-hat-enterprise-linux-7-on-macbook-air-2015/"&gt;RHEL 7.1&lt;/a&gt;
on a &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; despite some reports it may not.&lt;/p&gt;
&lt;p&gt;After plugging the device is automatically recognized and the &lt;em&gt;tg3&lt;/em&gt; driver is loaded.
Detailed &lt;em&gt;lspci&lt;/em&gt; below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;00.0&lt;/span&gt; &lt;span class="n"&gt;Ethernet&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Broadcom&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt; &lt;span class="n"&gt;NetXtreme&lt;/span&gt; &lt;span class="n"&gt;BCM57762&lt;/span&gt; &lt;span class="n"&gt;Gigabit&lt;/span&gt; &lt;span class="n"&gt;Ethernet&lt;/span&gt; &lt;span class="n"&gt;PCIe&lt;/span&gt;
    &lt;span class="n"&gt;Subsystem&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Device&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="n"&gt;f6&lt;/span&gt;
    &lt;span class="n"&gt;Physical&lt;/span&gt; &lt;span class="n"&gt;Slot&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
    &lt;span class="n"&gt;Flags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="n"&gt;devsel&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IRQ&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;
    &lt;span class="n"&gt;Memory&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;cd800000&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prefetchable&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;Memory&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;cd810000&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prefetchable&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;virtual&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Expansion&lt;/span&gt; &lt;span class="n"&gt;ROM&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;cd820000&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;disabled&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Power&lt;/span&gt; &lt;span class="n"&gt;Management&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Vital&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt; &lt;span class="n"&gt;Data&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;MSI&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="n"&gt;Maskable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;MSI&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Enable&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;Masked&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ac&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Express&lt;/span&gt; &lt;span class="n"&gt;Endpoint&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MSI&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Advanced&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="n"&gt;Reporting&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Device&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ac&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;87&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Power&lt;/span&gt; &lt;span class="n"&gt;Budgeting&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;?&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;160&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Virtual&lt;/span&gt; &lt;span class="n"&gt;Channel&lt;/span&gt;
    &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;b0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Latency&lt;/span&gt; &lt;span class="n"&gt;Tolerance&lt;/span&gt; &lt;span class="n"&gt;Reporting&lt;/span&gt;
    &lt;span class="n"&gt;Kernel&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tg3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unplugging and pluggin back in the network cable works as expected.
I did see my computer freeze 2 out of 10 times when I've unplugged the
&lt;a href="http://amzn.to/1Iqi22v"&gt;Thunderbolt adapter&lt;/a&gt; but couldn't reproduce it repliably
or grab more info. &lt;/p&gt;
&lt;p&gt;For the record this is with kernel 3.10.0-229.1.2.el7.x86_64 which is missing
this
&lt;a href="https://git.kernel.org/cgit/linux/kernel/git/gregkh/char-misc.git/commit/?h=char-misc-next&amp;amp;id=16603153666d22df544ae9f9b3764fd18da28eeb"&gt;upstream commit&lt;/a&gt;.
I'm not sure why it works though.&lt;/p&gt;
&lt;p&gt;If I remember correctly &lt;em&gt;tg3&lt;/em&gt; is available during installation so you should
be able to use the &lt;a href="http://amzn.to/1Iqi22v"&gt;Thunderbolt adapter&lt;/a&gt; instead of WiFi as well.&lt;/p&gt;</summary><category term="RHEL"></category><category term="Mac"></category><category term="fedora.planet"></category></entry><entry><title>Compiling Twinkle SIP Phone on RHEL 7</title><link href="http://atodorov.org/blog/2015/05/01/compiling-twinkle-sip-phone-on-rhel-7/" rel="alternate"></link><updated>2015-05-01T15:04:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-05-01:blog/2015/05/01/compiling-twinkle-sip-phone-on-rhel-7/</id><summary type="html">&lt;p&gt;One of the best SIP clients for Linux is &lt;a href="http://twinklephone.com/"&gt;Twinkle&lt;/a&gt;.
However upstream is not active (or even maybe dead) and the package is missing from
latest Fedora releases and fails to build on RHEL 7.&lt;/p&gt;
&lt;p&gt;First you need to build and install a few dependencies in the following order:
&lt;a href="http://koji.fedoraproject.org/koji/packageinfo?packageID=8437"&gt;ucommon&lt;/a&gt;,
&lt;a href="http://koji.fedoraproject.org/koji/packageinfo?packageID=1443"&gt;ccrtp&lt;/a&gt;,
&lt;a href="http://koji.fedoraproject.org/koji/packageinfo?packageID=6408"&gt;libzrtpcpp&lt;/a&gt;.
You will also need &lt;a href="https://fedoraproject.org/wiki/EPEL"&gt;EPEL 7&lt;/a&gt; enabled
to satisfy build dependencies.&lt;/p&gt;
&lt;p&gt;Then apply the following patch to the original 
&lt;a href="http://koji.fedoraproject.org/koji/buildinfo?buildID=397914"&gt;twinkle.spec&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="n"&gt;twinkle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;orig&lt;/span&gt;   &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;01.870710147&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mo"&gt;0300&lt;/span&gt;
&lt;span class="o"&gt;+++&lt;/span&gt; &lt;span class="n"&gt;twinkle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spec&lt;/span&gt;    &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;28.734734573&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mo"&gt;0300&lt;/span&gt;
&lt;span class="err"&gt;@@&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="err"&gt;@@&lt;/span&gt;
 
 &lt;span class="nf"&gt;%build&lt;/span&gt;
 &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;LDFLAGS&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="n"&gt;lkio&lt;/span&gt; 
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;CPPFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$CPPFLAGS -I/usr/include/libzrtpcpp/&amp;quot;&lt;/span&gt; 
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nf"&gt;%__autoconf&lt;/span&gt;
 &lt;span class="nf"&gt;%configure&lt;/span&gt;
 &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;_smp_mflags&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The package now builds, installs and runs successfully on RHEL 7.
The compiled packages and dependencies are available in my
&lt;a href="/blog/2015/04/29/rhel-7-repository-for-macbook-air/"&gt;Macbook Air RHEL 7 repository&lt;/a&gt;.&lt;/p&gt;</summary><category term="RHEL"></category><category term="fedora.planet"></category></entry><entry><title>Fixing Tilde and Function Keys Mapping for MacBook Air on Linux</title><link href="http://atodorov.org/blog/2015/04/30/fixing-tilde-and-function-keys-mapping-for-macbook-air-on-linux/" rel="alternate"></link><updated>2015-04-30T11:33:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-30:blog/2015/04/30/fixing-tilde-and-function-keys-mapping-for-macbook-air-on-linux/</id><summary type="html">&lt;p&gt;Thera are two problems with the &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; keyboard on Linux:&lt;/p&gt;
&lt;p&gt;Function keys and media keys are switched and by default you have to
press Fn+F5 in order to refresh a browser page. The 
&lt;a href="https://chaidarun.com/fedora-mbp"&gt;solution&lt;/a&gt; is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;echo 2 &amp;gt; /sys/module/hid_apple/parameters/fnmode
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The tilde key is mapped improperly, see 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1025041#c2"&gt;RHBZ #1025041&lt;/a&gt;.
To fix it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;echo 0 &amp;gt; /sys/module/hid_apple/parameters/iso_layout
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Permanent fix&lt;/h2&gt;
&lt;p&gt;Either you have to add the above commands in a boot script or you can
&lt;code&gt;yum install mba-kbd-fix&lt;/code&gt; from my
&lt;a href="/blog/2015/04/29/rhel-7-repository-for-macbook-air/"&gt;Macbook Air RHEL 7 repository&lt;/a&gt;.
The RPM source can be found &lt;a href="https://github.com/atodorov/mba-kbd-fix"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="RHEL"></category><category term="Mac"></category><category term="fedora.planet"></category></entry><entry><title>Red Hat Enterprise Linux 7 Repository for MacBook Air</title><link href="http://atodorov.org/blog/2015/04/29/rhel-7-repository-for-macbook-air/" rel="alternate"></link><updated>2015-04-29T13:00:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-29:blog/2015/04/29/rhel-7-repository-for-macbook-air/</id><summary type="html">&lt;p&gt;I've made a repository with binary (x86_64 only) and source RPM packages which
are missing from Red Hat Enterprise Linux 7 and necessary when using a 
&lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt;. To install execute the commands below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /etc/yum.repos.d/
wget https://s3.amazonaws.com/atodorov/rpms/macbook/el7/rhel7-macbook.repo
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Wireless driver&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install kmod-wl
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Display backlight driver&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install kmod-mba6x_bl
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And uncomment &lt;code&gt;/etc/X11/xorg.conf.d/98-mba_bl.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; the .spec file is available from 
&lt;a href="https://github.com/patjak/mba6x_bl/pull/26"&gt;RP #26&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Fixing keyboard mapping&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install mba-kbd-fix
&lt;/pre&gt;&lt;/div&gt;</summary><category term="RHEL"></category><category term="Mac"></category><category term="fedora.planet"></category></entry><entry><title>Fixing Display Brightness on MacBook Air with RHEL 7</title><link href="http://atodorov.org/blog/2015/04/29/fixing-display-brightness-on-macbook-air-with-rhel-7/" rel="alternate"></link><updated>2015-04-29T12:14:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-29:blog/2015/04/29/fixing-display-brightness-on-macbook-air-with-rhel-7/</id><summary type="html">&lt;p&gt;One issue with RHEL/CentOS/Fedora on &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; laptops is brightness control
and backlight behavior after suspend/resume. I've found the solution 
&lt;a href="http://mattoncloud.org/2014/02/05/fedora-20-on-a-macbook-air/"&gt;here&lt;/a&gt;
and only tweaked it slightly for my use case.&lt;/p&gt;
&lt;h2&gt;mba6x_bl doesn't load automatically&lt;/h2&gt;
&lt;p&gt;The reason being the driver matches older hardware:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;modinfo mba6x_bl
filename:       /lib/modules/3.10.0-229.1.2.el7.x86_64/extra/mba6x_bl/mba6x_bl.ko
&lt;span class="nb"&gt;alias&lt;/span&gt;:          dmi:*:pnMacBookAir6*
license:        GPL
description:    MacBook Air 6,1 and 6,2 backlight driver
author:         Patrik Jakobsson &amp;lt;patrik.r.jakobsson@gmail.com&amp;gt;
rhelversion:    7.1
srcversion:     4D069C8EB0E470AF27E7F8D
depends:        video
vermagic:       3.10.0-229.1.2.el7.x86_64 SMP mod_unload modversions
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;My system is &lt;strong&gt;MacBookAir7,2&lt;/strong&gt; and doesn't match the module alias. So a 
&lt;a href="https://github.com/patjak/mba6x_bl/pull/25"&gt;quick fix&lt;/a&gt; was needed.
For more info about &lt;code&gt;MODULE_ALIAS&lt;/code&gt; see
&lt;a href="https://wiki.archlinux.org/index.php/Modalias"&gt;ArchWiki&lt;/a&gt;.
Alternatively on Red Hat based systems you can place a config file
under &lt;code&gt;/etc/sysconfig/modules&lt;/code&gt;, see 
&lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Deployment_Guide/sec-Persistent_Module_Loading.html"&gt;the docs&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;h2&gt;intel_backlight driver is in the way&lt;/h2&gt;
&lt;p&gt;On older systems mba6x_bl doesn't get used automatically. The problem is the offending
intel_backlight driver which gets used instead. To workaround it add this xorg.conf snippet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/X11/xorg.conf.d/98-mba_bl.conf
Section &lt;span class="s2"&gt;&amp;quot;Device&amp;quot;&lt;/span&gt;
    Identifier      &lt;span class="s2"&gt;&amp;quot;Intel Graphics&amp;quot;&lt;/span&gt;
    Driver          &lt;span class="s2"&gt;&amp;quot;intel&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;Backlight&amp;quot;&lt;/span&gt;     &lt;span class="s2"&gt;&amp;quot;mba6x_backlight&amp;quot;&lt;/span&gt;
EndSection
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more info see &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=989555#c19"&gt;RHBZ 989555&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Everything in one go&lt;/h2&gt;
&lt;p&gt;If you are using RHEL 7 or CentOS 7 (version 7.1 required) instead of Fedora you can take
a look at my &lt;a href="/blog/2015/04/29/rhel-7-repository-for-macbook-air/"&gt;Macbook Air RHEL 7 repository&lt;/a&gt;.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="Mac"></category><category term="RHEL"></category></entry><entry><title>How to Enable backspace Key to Navigate Back in Firefox</title><link href="http://atodorov.org/blog/2015/04/27/how-to-enable-backspace-key-to-navigate-back-in-firefox/" rel="alternate"></link><updated>2015-04-27T23:53:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-27:blog/2015/04/27/how-to-enable-backspace-key-to-navigate-back-in-firefox/</id><summary type="html">&lt;p&gt;Open &lt;code&gt;about:config&lt;/code&gt; and set &lt;code&gt;browser.backspace_action&lt;/code&gt; to 0.
For more information see &lt;a href="http://kb.mozillazine.org/Browser.backspace_action"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="tips"></category></entry><entry><title>Disabling MacBook Startup Sound in Linux</title><link href="http://atodorov.org/blog/2015/04/27/disabling-macbook-startup-sound-in-linux/" rel="alternate"></link><updated>2015-04-27T23:23:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-27:blog/2015/04/27/disabling-macbook-startup-sound-in-linux/</id><summary type="html">&lt;p&gt;There is an easy way to disable the &lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook&lt;/a&gt; startup sound
(boot chime) even after wiping out OS X and installing Linux.&lt;/p&gt;
&lt;p&gt;This sound can be easily disabled if you mute the volume in OS X
and shutdown the computer. The value is stored in NVRAM.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reboot the computer and hold Cmd+Alt(Option)+R. This will start
OS X Internet recovery mode;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the terminal and issue the following command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nvram SystemAudioVolume=%00
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reboot.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Voila. In Linux try this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# efivar -l | grep SystemAudioVolume
 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolume
 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolumeDB

# efivar -n 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolume -p
GUID: 7c436110-ab2a-4bbb-a880-fe41995c9f82
Name: &amp;quot;SystemAudioVolume&amp;quot;
Attributes:
    Non-Volatile
    Boot Service Access
    Runtime Service Access
Value:
00000000  00                                                |.               |

# efivar -n 7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolumeDB -p
GUID: 7c436110-ab2a-4bbb-a880-fe41995c9f82
Name: &amp;quot;SystemAudioVolumeDB&amp;quot;
Attributes:
    Non-Volatile
    Boot Service Access
    Runtime Service Access
Value:
00000000  00 
#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: Before disabling both variables had non zero values. Also &lt;em&gt;SystemAudioVolumeDB&lt;/em&gt;
doesn't seem to have any effect.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note 2:&lt;/strong&gt; RHEL or CentOS users need to rebuild &lt;em&gt;efivar&lt;/em&gt; from the 
&lt;a href="https://kojipkgs.fedoraproject.org//packages/efivar/0.14/1.fc22/src/efivar-0.14-1.fc22.src.rpm"&gt;Fedora src.rpm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note 3:&lt;/strong&gt; several Internet sources suggest that writing EFI variables from Linux
may sometimes corrupt your Apple firmware. I didn't research this any further. If you
happen to figure out how to successfully write to these variables under Linux please let
everyone know in the comments (in case OS X recovery mode goes missing, you know).&lt;/p&gt;
&lt;p&gt;Thanks to my reader Alexander, who
&lt;a href="/blog/2015/04/26/installing-red-hat-enterprise-linux-7-on-macbook-air-2015/#disqus_thread"&gt;gave me the hint&lt;/a&gt;
in a previous blog post.&lt;/p&gt;</summary><category term="Mac"></category><category term="fedora.planet"></category><category term="RHEL"></category></entry><entry><title>Compiling Broadcom wl-kmod WiFi Driver for RHEL 7</title><link href="http://atodorov.org/blog/2015/04/27/compiling-broadcom-wl-kmod-wifi-driver-for-rhel-7/" rel="alternate"></link><updated>2015-04-27T12:17:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-27:blog/2015/04/27/compiling-broadcom-wl-kmod-wifi-driver-for-rhel-7/</id><summary type="html">&lt;p&gt;After I got my 
&lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; &lt;a href="/blog/2015/04/26/installing-red-hat-enterprise-linux-7-on-macbook-air-2015/"&gt;installed with RHEL 7.1&lt;/a&gt;
the first priority was getting wireless working. 
First check if your device isn't already supported
&lt;a href="http://linuxwireless.org/en/users/Drivers/b43/#Supported_devices"&gt;upstream&lt;/a&gt;. Mine isn't&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="n"&gt;e4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Broadcom&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt; &lt;span class="n"&gt;BCM4360&lt;/span&gt; &lt;span class="mf"&gt;802.11&lt;/span&gt;&lt;span class="n"&gt;ac&lt;/span&gt; &lt;span class="n"&gt;Wireless&lt;/span&gt; &lt;span class="n"&gt;Network&lt;/span&gt; &lt;span class="n"&gt;Adapter&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rev&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next grab the src.rpm files necessary to build the &lt;em&gt;wl&lt;/em&gt; driver from RPM Fusion.
For &lt;code&gt;akmods-0.5.2-1.fc21.src.rpm&lt;/code&gt;, &lt;code&gt;broadcom-wl-6.30.223.248-2.fc21.src.rpm&lt;/code&gt;,
&lt;code&gt;kmodtool-1-23.fc20.src.rpm&lt;/code&gt; just execute &lt;em&gt;rpmbuild --rebuild&lt;/em&gt; against each file
and install &lt;code&gt;kmodtool&lt;/code&gt; and &lt;code&gt;akmods&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then you need two more files &lt;code&gt;buildsys-build-rpmfusion&lt;/code&gt; and &lt;code&gt;wl-kmod&lt;/code&gt;.
The first one is a helper tool containing list of recent kernels to build against,
the later one is the driver source itself. Both needed minor modifications before
building on RHEL 7.&lt;/p&gt;
&lt;p&gt;I've created my own 
&lt;a href="https://github.com/atodorov/buildsys-build-rpmfusion-for-rhel7"&gt;buildsys-build-rpmfusion&lt;/a&gt; package listing the current kernels
for RHEL 7.1. For &lt;a href="https://github.com/atodorov/wl-kmod-for-rhel7"&gt;wl-kmod&lt;/a&gt; I've introduced a 
&lt;a href="https://github.com/atodorov/wl-kmod-for-rhel7/blob/master/wl-kmod-100_redhat.patch"&gt;patch&lt;/a&gt;
which modifies the other patches in the package so it builds correctly on 7.1.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I don't know if there's a define which can be used to detect if we're building
on RHEL (maybe I can define my own) but direct kernel version number comparison doesn't
work here because Red Hat backports chosen functionality from more recent kernels without
changing the version number. This approach may not be the best one but I've tried to keep it clean
for easier maintenance in the future and it got me started very quickly.&lt;/p&gt;
&lt;p&gt;Build the modified buildsys-build-rpmfusion and:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install buildsys-build-rpmfusion-7-1.x86_64.rpm buildsys-build-rpmfusion-kerneldevpkgs-current-7-1.x86_64.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Build the wl-kmod package and:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install akmod-wl-6.30.223.248-5.el7.x86_64.rpm broadcom-wl-6.30.223.248-2.el7.noarch.rpm kmod-wl-3.10.0-229.el7.x86_64-6.30.223.248-5.el7.x86_64.rpm kmod-wl-6.30.223.248-5.el7.x86_64.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If necessary re-create your initramfs image to include &lt;em&gt;wl.ko&lt;/em&gt;.&lt;/p&gt;</summary><category term="fedora.planet"></category><category term="RHEL"></category><category term="Mac"></category></entry><entry><title>Installing Red Hat Enterprise Linux 7 on MacBook Air 2015</title><link href="http://atodorov.org/blog/2015/04/26/installing-red-hat-enterprise-linux-7-on-macbook-air-2015/" rel="alternate"></link><updated>2015-04-26T20:33:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-26:blog/2015/04/26/installing-red-hat-enterprise-linux-7-on-macbook-air-2015/</id><summary type="html">&lt;p&gt;Recently I've upgraded to a new 
&lt;a href="http://www.amazon.com/gp/product/B00UGECEUY/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00UGECEUY&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=3YENGI5TIYKEC5GM"&gt;MacBook Air&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B00UGECEUY" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
(13 inch, early 2015) laptop and luckily enough I'm running
Red Hat Enterprise Linux 7.1 on it. Here is how to install it.&lt;/p&gt;
&lt;h2&gt;Prepare boot media&lt;/h2&gt;
&lt;p&gt;The easiest method is to boot from a USB stick which holds
either the entire DVD or just boot.iso. Since I happened to find a 1GB only USB stick I
went for the boot.iso. &lt;code&gt;dd if=boot.iso of=/dev/sdb&lt;/code&gt; is the only thing you need to prepare
the boot media.&lt;/p&gt;
&lt;h2&gt;Initial boot&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Mac boot menu" src="/images/mac/boot_menu.jpg" title="Mac boot menu" /&gt;&lt;/p&gt;
&lt;p&gt;While computer is booting hold the (left) Alt (Option) key to enter &lt;em&gt;Startup Manager&lt;/em&gt;.
Wait a second or two before it displays your local hard drive and the USB boot media.
Select the option &lt;em&gt;EFI boot&lt;/em&gt; to boot the anaconda installer.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Booting from a boot.iso means I need to use the network to grab the rest of the installation.
Because the wireless card needs proprietary drivers
I've tried both USB to Ethernet adapter and USB tethering with my phone.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; initially I have forgotten to plug in my USB networking card which resulted in 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1191286"&gt;bug #1191286&lt;/a&gt;. After cold-plugging and
rebooting the system everything was fine. Subsequently I don't see any problems with the
USB networking card. The bug should be fixed in RHEL 7.2 btw.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I've been using a
&lt;a href="http://www.amazon.com/gp/product/B002PONXAI/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B002PONXAI&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=N4KGQKYSBSDWMMM6"&gt;USB docking station from Plugable&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B002PONXAI" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
for years because their products are Linux friendly. In particular the networking chip is ASIX and
there is no problems with drivers for Linux.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2015-05-04:&lt;/strong&gt;
You should also be able to use a Thunderbolt to Ethernet adapter which is more
common for Apple users. &lt;a href="/blog/2015/05/04/thunderbolt-to-ethernet-adapter-on-linux/"&gt;See here for more info&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;In my case I've wiped out the entire SSD disk b/c I don't care about dual boot.
Previously I've heard about anaconda crashing while it tries to detect the Mac OS file system.
I've played around with Rawhide before going for RHEL 7.1 and didn't see any problems related to
foreign filesystems.&lt;/p&gt;
&lt;p&gt;I've gone with the default partitioning scheme while slightly modifing the partition sizes, etc.&lt;/p&gt;
&lt;h2&gt;Post install&lt;/h2&gt;
&lt;p&gt;There are several issues which still need attention. I didn't have enough time in the last few
days to check these out:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Things which work&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GNOME 3 sucks big time. Fortunately I was able to install MATE Desktop from EPEL;&lt;/li&gt;
&lt;li&gt;Wireless card needs drivers; I've managed to compile them myself, 
&lt;a href="/blog/2015/04/27/compiling-broadcom-wl-kmod-wifi-driver-for-rhel-7/"&gt;see here&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Display brightness doesn't seem to work at all. On top of that the display goes full black
after suspend-resume. I could barely see anything on it. 
&lt;a href="http://localhost:4000/blog/2015/04/29/fixing-display-brightness-on-macbook-air-with-rhel-7/"&gt;Fixed here&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;There is a very annoying boot chime &lt;strike&gt;which I have no idea how to disable&lt;/strike&gt;
&lt;a href="/blog/2015/04/27/disabling-macbook-startup-sound-in-linux/"&gt;Fixed here&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;The onboard keyboard is quite annoying for previous ThinkPad user like myself. Most
importantly I need to press Fn to activate the F1, F2, etc keys which I use a lot in mcedit.
&lt;a href="/blog/2015/04/30/fixing-tilde-and-function-keys-mapping-for-macbook-air-on-linux/"&gt;Fixed here&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Output sound works - both speakers and headphones;&lt;/li&gt;
&lt;li&gt;Microphone works (tested with a hands free device);&lt;/li&gt;
&lt;li&gt;Power manager was reporting my battery life totally wrong but after a full discharge/recharge
it seems to have calibrated itself;&lt;/li&gt;
&lt;li&gt;ATrpms and EPEL are still missing some codecs for RHEL 7 which means no movies;
 codecs seem to work now with the &lt;a href="http://li.nux.ro/repos.html"&gt;NUX Desktop&lt;/a&gt;
repos. Not sure what I was missing when testing it initially;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;UPDATE 2015-05-04:&lt;/em&gt; I do have a Thunderbolt to Ethernet adapter and hot-plug seems to work
despite claims that this is not supported in Linux.
&lt;a href="/blog/2015/05/04/thunderbolt-to-ethernet-adapter-on-linux/"&gt;See here for more info&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;UPDATE 2015-05-05:&lt;/em&gt; Presenting via external projector works with a USB to VGA adapter.
&lt;a href="/blog/2015/05/05/using-usb-to-vga-adapter-on-macbook-air-with-linux/"&gt;See here&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Things that don't work yet&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;UPDATE 2015-04-30:&lt;/em&gt; I'd like to remap the Cmd key to the Menu key found in PC keyboards;&lt;/li&gt;
&lt;li&gt;Camera doesn't work, reverse engineering a &lt;a href="https://github.com/patjak/bcwc_pcie"&gt;driver&lt;/a&gt;
 is in progress;&lt;/li&gt;
&lt;li&gt;I'm missing the &lt;a href="http://www.thinkwiki.org/wiki/ThinkLight"&gt;ThinkLight&lt;/a&gt; from my X220,
however the integrated Broadcom FaceTime HD camera doesn't seem to have a LED flash
which can be repurposed for this task;&lt;/li&gt;
&lt;li&gt;I need a CPU temperature monitor and maybe CPU fan speed needs adjustments;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2015-04-28:&lt;/strong&gt;
Check the list above for links to wifi and backlight drivers and how to disable the boot chime.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2015-04-29:&lt;/strong&gt;
You can find precompiled RPMS in my
&lt;a href="/blog/2015/04/29/rhel-7-repository-for-macbook-air/"&gt;Macbook Air RHEL 7 repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2015-04-30:&lt;/strong&gt;
Added more links and split the list into stuff which already works and stuff that doesn't.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2015-05-04:&lt;/strong&gt;
Added info about Thunderbolt to Ethernet adapter.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2015-05-05:&lt;/strong&gt;
Added info about USB to VGA adapter.&lt;/p&gt;
&lt;h2&gt;Fedora 22 on MacBook Air&lt;/h2&gt;
&lt;p&gt;I did try Fedora 22 Beta and experienced 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1215458"&gt;bug #1215458&lt;/a&gt;.
Also for some reason the installation hit an error downloading a package and didn't let me retry
but forced me to exit the process.&lt;/p&gt;
&lt;p&gt;I'll continue posting my updates until the system runs smoothly like it is supposed to.&lt;/p&gt;
&lt;h2&gt;Hardware info&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ADDED ON 2015-05-02&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# dmidecode 
# dmidecode 2.12
# SMBIOS entry point at 0x8afae000
SMBIOS 2.7 present.
32 structures occupying 1663 bytes.
Table at 0x8AFAD000.

Handle 0x0000, DMI type 7, 19 bytes
Cache Information
    Socket Designation: L1 Cache
    Configuration: Enabled, Not Socketed, Level 1
    Operational Mode: Write Back
    Location: Internal
    Installed Size: 32 kB
    Maximum Size: 32 kB
    Supported SRAM Types:
            Synchronous
    Installed SRAM Type: Synchronous
    Speed: Unknown
    Error Correction Type: Parity
    System Type: Data
    Associativity: 8-way Set-associative

Handle 0x0001, DMI type 7, 19 bytes
Cache Information
    Socket Designation: L1 Cache
    Configuration: Enabled, Not Socketed, Level 1
    Operational Mode: Write Back
    Location: Internal
    Installed Size: 32 kB
    Maximum Size: 32 kB
    Supported SRAM Types:
            Synchronous
    Installed SRAM Type: Synchronous
    Speed: Unknown
    Error Correction Type: Parity
    System Type: Instruction
    Associativity: 8-way Set-associative

Handle 0x0002, DMI type 7, 19 bytes
Cache Information
    Socket Designation: L2 Cache
    Configuration: Enabled, Not Socketed, Level 2
    Operational Mode: Write Back
    Location: Internal
    Installed Size: 256 kB
    Maximum Size: 256 kB
    Supported SRAM Types:
        Synchronous
    Installed SRAM Type: Synchronous
    Speed: Unknown
    Error Correction Type: Single-bit ECC
    System Type: Unified
    Associativity: 8-way Set-associative

Handle 0x0003, DMI type 7, 19 bytes
Cache Information
    Socket Designation: L3 Cache
    Configuration: Enabled, Not Socketed, Level 3
    Operational Mode: Write Back
    Location: Internal
    Installed Size: 4096 kB
    Maximum Size: 4096 kB
    Supported SRAM Types:
        Synchronous
    Installed SRAM Type: Synchronous
    Speed: Unknown
    Error Correction Type: Multi-bit ECC
    System Type: Unified
    Associativity: 16-way Set-associative

Handle 0x0004, DMI type 4, 42 bytes
Processor Information
    Socket Designation: U3E1
    Type: Central Processor
    Family: Core i7
    Manufacturer: Intel(R) Corporation
    ID: D4 06 03 00 FF FB EB BF
    Signature: Type 0, Family 6, Model 61, Stepping 4
    Flags:
        FPU (Floating-point unit on-chip)
        VME (Virtual mode extension)
        DE (Debugging extension)
        PSE (Page size extension)
        TSC (Time stamp counter)
        MSR (Model specific registers)
        PAE (Physical address extension)
        MCE (Machine check exception)
        CX8 (CMPXCHG8 instruction supported)
        APIC (On-chip APIC hardware supported)
        SEP (Fast system call)
        MTRR (Memory type range registers)
        PGE (Page global enable)
        MCA (Machine check architecture)
        CMOV (Conditional move instruction supported)
        PAT (Page attribute table)
        PSE-36 (36-bit page size extension)
        CLFSH (CLFLUSH instruction supported)
        DS (Debug store)
        ACPI (ACPI supported)
        MMX (MMX technology supported)
        FXSR (FXSAVE and FXSTOR instructions supported)
        SSE (Streaming SIMD extensions)
        SSE2 (Streaming SIMD extensions 2)
        SS (Self-snoop)
        HTT (Multi-threading)
        TM (Thermal monitor supported)
        PBE (Pending break enabled)
    Version: Intel(R) Core(TM) i7-5650U CPU @ 2.20GHz
    Voltage: 1.0 V
    External Clock: 25 MHz
    Max Speed: 2200 MHz
    Current Speed: 3100 MHz
    Status: Populated, Enabled
    Upgrade: &amp;lt;OUT OF SPEC&amp;gt;
    L1 Cache Handle: 0x0001
    L2 Cache Handle: 0x0002
    L3 Cache Handle: 0x0003
    Serial Number:  
    Asset Tag:  
    Part Number:  
    Core Count: 2
    Core Enabled: 2
    Thread Count: 4
    Characteristics:
        64-bit capable
        Multi-Core
        Hardware Thread
        Execute Protection
        Enhanced Virtualization
        Power/Performance Control

Handle 0x0005, DMI type 0, 24 bytes
BIOS Information
    Vendor: Apple Inc.
    Version: MBA71.88Z.0166.B00.1502131457
    Release Date: 02/13/2015
    ROM Size: 8192 kB
    Characteristics:
        PCI is supported
        BIOS is upgradeable
        BIOS shadowing is allowed
        Boot from CD is supported
        Selectable boot is supported
        ACPI is supported
        Smart battery is supported
        Function key-initiated network boot is supported
        UEFI is supported
    BIOS Revision: 0.1

Handle 0x0006, DMI type 1, 27 bytes
System Information
    Manufacturer: Apple Inc.
    Product Name: MacBookAir7,2
    Version: 1.0
    Serial Number: C1MPF52YG944
    UUID: 25EF0280-EC82-42B0-8FB6-10ADCCC67C02
    Wake-up Type: Power Switch
    SKU Number: System SKU#
    Family: Mac

Handle 0x0007, DMI type 2, 17 bytes
Base Board Information
    Manufacturer: Apple Inc.
    Product Name: Mac-937CB26E2E02BB01
    Version: MacBookAir7,2
    Serial Number: C07511704VSG92GA1
    Asset Tag: Base Board Asset Tag#
    Features:
        Board is a hosting board
    Location In Chassis: Part Component
    Chassis Handle: 0x0008
    Type: Motherboard
    Contained Object Handles: 0

Handle 0x0008, DMI type 3, 24 bytes
Chassis Information
    Manufacturer: Apple Inc.
    Type: Laptop
    Lock: Not Present
    Version: Mac-937CB26E2E02BB01
    Serial Number: C1MPF52YG944
    Asset Tag: Chassis Board Asset Tag#
    Boot-up State: Safe
    Power Supply State: Safe
    Thermal State: Safe
    Security Status: None
    OEM Information: 0x00000000
    Height: Unspecified
    Number Of Power Cords: Unspecified
    Contained Elements: 0
    SKU Number: Not Specified

Handle 0x0009, DMI type 8, 9 bytes
Port Connector Information
    Internal Reference Designator: Not Specified
    Internal Connector Type: None
    External Reference Designator: USB0
    External Connector Type: Access Bus (USB)
    Port Type: USB

Handle 0x000A, DMI type 8, 9 bytes
Port Connector Information
    Internal Reference Designator: Not Specified
    Internal Connector Type: None
    External Reference Designator: USB1
    External Connector Type: Access Bus (USB)
    Port Type: USB

Handle 0x000B, DMI type 8, 9 bytes
Port Connector Information
    Internal Reference Designator: Not Specified
    Internal Connector Type: None
    External Reference Designator: Audio Line In
    External Connector Type: Mini Jack (headphones)
    Port Type: Audio Port

Handle 0x000C, DMI type 8, 9 bytes
Port Connector Information
    Internal Reference Designator: Not Specified
    Internal Connector Type: None
    External Reference Designator: Thunderbolt
    External Connector Type: None
    Port Type: Other

Handle 0x000D, DMI type 8, 9 bytes
Port Connector Information
    Internal Reference Designator: Microphone
    Internal Connector Type: Other
    External Reference Designator: Not Specified
    External Connector Type: None
    Port Type: None

Handle 0x000E, DMI type 8, 9 bytes
Port Connector Information
    Internal Reference Designator: Speaker
    Internal Connector Type: Other
    External Reference Designator: Not Specified
    External Connector Type: None
    Port Type: None

Handle 0x000F, DMI type 41, 11 bytes
Onboard Device
    Reference Designation: Integrated Video Controller
    Type: Video
    Status: Enabled
    Type Instance: 1
    Bus Address: 0000:00:00.0

Handle 0x0010, DMI type 41, 11 bytes
Onboard Device
    Reference Designation: Azalia Audio Codec
    Type: Sound
    Status: Enabled
    Type Instance: 1
    Bus Address: 0000:00:00.0

Handle 0x0011, DMI type 41, 11 bytes
Onboard Device
    Reference Designation: SATA
    Type: SATA Controller
    Status: Enabled
    Type Instance: 1
    Bus Address: 0000:00:00.0

Handle 0x0012, DMI type 13, 22 bytes
BIOS Language Information
    Language Description Format: Abbreviated
    Installable Languages: 1
        en
    Currently Installed Language: en

Handle 0x0013, DMI type 22, 26 bytes
Portable Battery
    Location: Not Specified
    Manufacturer: Not Specified
    Name: Not Specified
    Design Capacity: Unknown
    Design Voltage: Unknown
    SBDS Version: Not Specified
    Maximum Error: 0%
    SBDS Serial Number: 0000
    SBDS Manufacture Date: 1980-00-00
    SBDS Chemistry: Not Specified
    OEM-specific Information: 0x00000000

Handle 0x0014, DMI type 32, 11 bytes
System Boot Information
    Status: No errors detected

Handle 0x0015, DMI type 131, 6 bytes
OEM-specific Type
    Header and Data:
        83 06 15 00 06 07

Handle 0x0016, DMI type 133, 12 bytes
OEM-specific Type
    Header and Data:
        85 0C 16 00 02 00 00 00 00 00 00 00

Handle 0x0017, DMI type 128, 88 bytes
OEM-specific Type
    Header and Data:
        80 58 17 00 03 00 00 00 36 F5 03 FC 3F FF 03 FC
        02 00 03 00 00 00 00 00 00 00 99 FF FF FF AF FF
        00 00 B0 FF FF FF D4 FF 00 00 D7 FF FF FF D9 FF
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00

Handle 0x0018, DMI type 134, 20 bytes
OEM-specific Type
    Header and Data:
        86 14 18 00 32 2E 32 37 46 30 31 00 00 00 00 00
        00 00 00 00

Handle 0x0019, DMI type 16, 23 bytes
Physical Memory Array
    Location: System Board Or Motherboard
    Use: System Memory
    Error Correction Type: None
    Maximum Capacity: 8 GB
    Error Information Handle: Not Provided
    Number Of Devices: 2

Handle 0x001A, DMI type 17, 34 bytes
Memory Device
    Array Handle: 0x0019
    Error Information Handle: Not Provided
    Total Width: 64 bits
    Data Width: 64 bits
    Size: 4096 MB
    Form Factor: SODIMM
    Set: None
    Locator: DIMM0
    Bank Locator: BANK 0
    Type: DDR3
    Type Detail: Synchronous
    Speed: 1600 MHz
    Manufacturer: 0x80AD
    Serial Number: 0x00000000
    Asset Tag: Not Specified
    Part Number: 0x483943434E4E4E384A544D4C41522D4E544D
    Rank: Unknown
    Configured Clock Speed: 1600 MHz

Handle 0x001B, DMI type 130, 186 bytes
OEM-specific Type
    Header and Data:
        82 BA 1B 00 1A 00 00 00 B0 00 91 20 F1 03 04 12
        05 0A 03 11 01 08 0A 00 00 01 78 78 90 50 90 11
        50 E0 10 04 3C 3C 01 90 00 00 00 00 00 00 00 00
        00 A8 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80
        AD 01 00 00 00 00 00 00 57 FB 48 39 43 43 4E 4E
        4E 38 4A 54 4D 4C 41 52 2D 4E 54 4D 00 00 80 AD
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00

Handle 0x001C, DMI type 17, 34 bytes
Memory Device
    Array Handle: 0x0019
    Error Information Handle: Not Provided
    Total Width: 64 bits
    Data Width: 64 bits
    Size: 4096 MB
    Form Factor: SODIMM
    Set: None
    Locator: DIMM0
    Bank Locator: BANK 1
    Type: DDR3
    Type Detail: Synchronous
    Speed: 1600 MHz
    Manufacturer: 0x80AD
    Serial Number: 0x00000000
    Asset Tag: Not Specified
    Part Number: 0x483943434E4E4E384A544D4C41522D4E544D
    Rank: Unknown
    Configured Clock Speed: 1600 MHz

Handle 0x001D, DMI type 130, 186 bytes
OEM-specific Type
    Header and Data:
        82 BA 1D 00 1C 00 00 00 B0 00 91 20 F1 03 04 12
        05 0A 03 11 01 08 0A 00 00 01 78 78 90 50 90 11
        50 E0 10 04 3C 3C 01 90 00 00 00 00 00 00 00 00
        00 A8 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80
        AD 01 00 00 00 00 00 00 57 FB 48 39 43 43 4E 4E
        4E 38 4A 54 4D 4C 41 52 2D 4E 54 4D 00 00 80 AD
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00

Handle 0x001E, DMI type 19, 31 bytes
Memory Array Mapped Address
    Starting Address: 0x0000000000000000k
    Ending Address: 0x00000001FFFFFFFFk
    Range Size: 8 GB
    Physical Array Handle: 0x0019
    Partition Width: 0

Handle 0xFEFF, DMI type 127, 4 bytes
End Of Table

# uname -a
Linux aero 3.10.0-229.1.2.el7.x86_64 #1 SMP Fri Mar 6 17:12:08 EST 2015 x86_64 x86_64 x86_64 GNU/Linux

# lsusb
Bus 001 Device 002: ID 0a5c:4500 Broadcom Corp. BCM2046B1 USB 2.0 Hub (part of BCM2046 Bluetooth)
Bus 001 Device 003: ID 05ac:0291 Apple, Inc. 
Bus 002 Device 002: ID 05ac:8406 Apple, Inc. 
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
Bus 001 Device 006: ID 05ac:828f Apple, Inc. 

# lspci
00:00.0 Host bridge: Intel Corporation Broadwell-U Host Bridge -OPI (rev 09)
00:02.0 VGA compatible controller: Intel Corporation Broadwell-U Integrated Graphics (rev 09)
00:03.0 Audio device: Intel Corporation Broadwell-U Audio Controller (rev 09)
00:14.0 USB controller: Intel Corporation Wildcat Point-LP USB xHCI Controller (rev 03)
00:16.0 Communication controller: Intel Corporation Wildcat Point-LP MEI Controller #1 (rev 03)
00:1b.0 Audio device: Intel Corporation Wildcat Point-LP High Definition Audio Controller (rev 03)
00:1c.0 PCI bridge: Intel Corporation Wildcat Point-LP PCI Express Root Port #1 (rev e3)
00:1c.1 PCI bridge: Intel Corporation Wildcat Point-LP PCI Express Root Port #2 (rev e3)
00:1c.2 PCI bridge: Intel Corporation Wildcat Point-LP PCI Express Root Port #3 (rev e3)
00:1c.4 PCI bridge: Intel Corporation Wildcat Point-LP PCI Express Root Port #5 (rev e3)
00:1c.5 PCI bridge: Intel Corporation Wildcat Point-LP PCI Express Root Port #6 (rev e3)
00:1f.0 ISA bridge: Intel Corporation Wildcat Point-LP LPC Controller (rev 03)
00:1f.3 SMBus: Intel Corporation Wildcat Point-LP SMBus Controller (rev 03)
00:1f.6 Signal processing controller: Intel Corporation Wildcat Point-LP Thermal Management Controller (rev 03)
02:00.0 Multimedia controller: Broadcom Corporation 720p FaceTime HD Camera
03:00.0 Network controller: Broadcom Corporation BCM4360 802.11ac Wireless Network Adapter (rev 03)
04:00.0 SATA controller: Samsung Electronics Co Ltd Device a801 (rev 01)

# efivar --list
605dab50-e046-4300-abb6-3dd810dd8b23-MokListRT
8be4df61-93ca-11d2-aa0d-00e098032b8c-BootCurrent
8be4df61-93ca-11d2-aa0d-00e098032b8c-ErrOutDev
8be4df61-93ca-11d2-aa0d-00e098032b8c-ConOutDev
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-gfx-saved-config-restore-status
8be4df61-93ca-11d2-aa0d-00e098032b8c-LangCodes
7c436110-ab2a-4bbb-a880-fe41995c9f82-BootCampProcessorPstates
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-SSN
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-GR_CAUSE
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-FirmwareFeatures
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-FirmwareFeaturesMask
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-HW_ICT
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-HW_MLB
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-MLB
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-HW_ROM
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-ROM
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-HW_BID
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-HardwareBootMode
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-BBIF
8be4df61-93ca-11d2-aa0d-00e098032b8c-ConOut
eb704011-1402-11d3-8e77-00a0c969723b-MTC
7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolume
36c28ab5-6566-4c50-9ebd-cbb920f83843-current-network
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-current-network
7c436110-ab2a-4bbb-a880-fe41995c9f82-SystemAudioVolumeDB
7c436110-ab2a-4bbb-a880-fe41995c9f82-boot-gamma
7c436110-ab2a-4bbb-a880-fe41995c9f82-backlight-level
8be4df61-93ca-11d2-aa0d-00e098032b8c-BootOrder
8be4df61-93ca-11d2-aa0d-00e098032b8c-Boot0001
8be4df61-93ca-11d2-aa0d-00e098032b8c-Boot0000
4d1ede05-38c7-4a6a-9cc6-4bcca8b38c14-AAPL,PathProperties0000
8d63d4fe-bd3c-4aad-881d-86fd974bc1df-last-oslogin-ident
36c28ab5-6566-4c50-9ebd-cbb920f83843-preferred-count
36c28ab5-6566-4c50-9ebd-cbb920f83843-preferred-networks
7c436110-ab2a-4bbb-a880-fe41995c9f82-fmm-computer-name
7c436110-ab2a-4bbb-a880-fe41995c9f82-LocationServicesEnabled
7c436110-ab2a-4bbb-a880-fe41995c9f82-efi-boot-device
7c436110-ab2a-4bbb-a880-fe41995c9f82-efi-boot-device-data
8be4df61-93ca-11d2-aa0d-00e098032b8c-Boot0080
af9ffd67-ec10-488a-9dfc-6cbf5ee22c2e-AcpiGlobalVariable
7c436110-ab2a-4bbb-a880-fe41995c9f82-bluetoothActiveControllerInfo
7c436110-ab2a-4bbb-a880-fe41995c9f82-bluetoothInternalControllerInfo
8be4df61-93ca-11d2-aa0d-00e098032b8c-fpf_provisioned
8be4df61-93ca-11d2-aa0d-00e098032b8c-epid_provisioned
8be4df61-93ca-11d2-aa0d-00e098032b8c-BootFFFF
8be4df61-93ca-11d2-aa0d-00e098032b8c-Lang
7c436110-ab2a-4bbb-a880-fe41995c9f82-ALS_Data
8be4df61-93ca-11d2-aa0d-00e098032b8c-MemoryConfih
8be4df61-93ca-11d2-aa0d-00e098032b8c-MemoryConfig
8be4df61-93ca-11d2-aa0d-00e098032b8c-Timeout
05299c28-3953-4a5f-b7d8-f6c6a7150b2a-SetupDefaults
4dfbbaab-1392-4fde-abb8-c41cc5ad7d5d-Setup
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;lshw added on 2015-12-01&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# lshw&lt;/span&gt;

&lt;span class="n"&gt;aero&lt;/span&gt;
    &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Laptop&lt;/span&gt;
    &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MacBookAir7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt; &lt;span class="n"&gt;SKU&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;
    &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;C1MPF52YG944&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
    &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;smbios&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.7&lt;/span&gt; &lt;span class="n"&gt;dmi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.7&lt;/span&gt; &lt;span class="n"&gt;vsyscall32&lt;/span&gt;
    &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;normal&lt;/span&gt; &lt;span class="n"&gt;chassis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;laptop&lt;/span&gt; &lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Mac&lt;/span&gt; &lt;span class="n"&gt;sku&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt; &lt;span class="n"&gt;SKU&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8002&lt;/span&gt;&lt;span class="n"&gt;EF25&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;82&lt;/span&gt;&lt;span class="n"&gt;EC&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;B042&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;8F&lt;/span&gt;&lt;span class="n"&gt;B6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;ADCCC67C02&lt;/span&gt;
  &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;
       &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Motherboard&lt;/span&gt;
       &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Mac&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;937&lt;/span&gt;&lt;span class="n"&gt;CB26E2E02BB01&lt;/span&gt;
       &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
       &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MacBookAir7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
       &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;C07511704VSG92GA1&lt;/span&gt;
       &lt;span class="nl"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Part&lt;/span&gt; &lt;span class="n"&gt;Component&lt;/span&gt;
     &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;L1&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;
          &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="nl"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;L1&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt;
          &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;KiB&lt;/span&gt;
          &lt;span class="nl"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;KiB&lt;/span&gt;
          &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;synchronous&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;
     &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
          &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;L1&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;
          &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
          &lt;span class="nl"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;L1&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt;
          &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;KiB&lt;/span&gt;
          &lt;span class="nl"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;KiB&lt;/span&gt;
          &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;synchronous&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;instruction&lt;/span&gt;
     &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
          &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;L2&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;
          &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
          &lt;span class="nl"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;L2&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt;
          &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;KiB&lt;/span&gt;
          &lt;span class="nl"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="n"&gt;KiB&lt;/span&gt;
          &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;synchronous&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;unified&lt;/span&gt;
     &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
          &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;L3&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;
          &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
          &lt;span class="nl"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;L3&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt;
          &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;MiB&lt;/span&gt;
          &lt;span class="nl"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;MiB&lt;/span&gt;
          &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;synchronous&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;unified&lt;/span&gt;
     &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;cpu&lt;/span&gt;
          &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CPU&lt;/span&gt;
          &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Core&lt;/span&gt; &lt;span class="n"&gt;i7&lt;/span&gt;
          &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
          &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
          &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cpu&lt;/span&gt;&lt;span class="mi"&gt;@0&lt;/span&gt;
          &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;i7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5650U&lt;/span&gt; &lt;span class="n"&gt;CPU&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt; &lt;span class="mf"&gt;2.20&lt;/span&gt;&lt;span class="n"&gt;GHz&lt;/span&gt;
          &lt;span class="nl"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;U3E1&lt;/span&gt;
          &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3100&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
          &lt;span class="nl"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3200&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
          &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
          &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
          &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x86&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;fpu&lt;/span&gt; &lt;span class="n"&gt;fpu_exception&lt;/span&gt; &lt;span class="n"&gt;wp&lt;/span&gt; &lt;span class="n"&gt;vme&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;pse&lt;/span&gt; &lt;span class="n"&gt;tsc&lt;/span&gt; &lt;span class="n"&gt;msr&lt;/span&gt; &lt;span class="n"&gt;pae&lt;/span&gt; &lt;span class="n"&gt;mce&lt;/span&gt; &lt;span class="n"&gt;cx8&lt;/span&gt; &lt;span class="n"&gt;apic&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="n"&gt;mtrr&lt;/span&gt; &lt;span class="n"&gt;pge&lt;/span&gt; &lt;span class="n"&gt;mca&lt;/span&gt; &lt;span class="n"&gt;cmov&lt;/span&gt; &lt;span class="n"&gt;pat&lt;/span&gt; &lt;span class="n"&gt;pse36&lt;/span&gt; &lt;span class="n"&gt;clflush&lt;/span&gt; &lt;span class="n"&gt;dts&lt;/span&gt; &lt;span class="n"&gt;acpi&lt;/span&gt; &lt;span class="n"&gt;mmx&lt;/span&gt; &lt;span class="n"&gt;fxsr&lt;/span&gt; &lt;span class="n"&gt;sse&lt;/span&gt; &lt;span class="n"&gt;sse2&lt;/span&gt; &lt;span class="n"&gt;ss&lt;/span&gt; &lt;span class="n"&gt;ht&lt;/span&gt; &lt;span class="n"&gt;tm&lt;/span&gt; &lt;span class="n"&gt;pbe&lt;/span&gt; &lt;span class="n"&gt;syscall&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt; &lt;span class="n"&gt;pdpe1gb&lt;/span&gt; &lt;span class="n"&gt;rdtscp&lt;/span&gt; &lt;span class="n"&gt;constant_tsc&lt;/span&gt; &lt;span class="n"&gt;arch_perfmon&lt;/span&gt; &lt;span class="n"&gt;pebs&lt;/span&gt; &lt;span class="n"&gt;bts&lt;/span&gt; &lt;span class="n"&gt;rep_good&lt;/span&gt; &lt;span class="n"&gt;nopl&lt;/span&gt; &lt;span class="n"&gt;xtopology&lt;/span&gt; &lt;span class="n"&gt;nonstop_tsc&lt;/span&gt; &lt;span class="n"&gt;aperfmperf&lt;/span&gt; &lt;span class="n"&gt;eagerfpu&lt;/span&gt; &lt;span class="n"&gt;pni&lt;/span&gt; &lt;span class="n"&gt;pclmulqdq&lt;/span&gt; &lt;span class="n"&gt;dtes64&lt;/span&gt; &lt;span class="n"&gt;monitor&lt;/span&gt; &lt;span class="n"&gt;ds_cpl&lt;/span&gt; &lt;span class="n"&gt;vmx&lt;/span&gt; &lt;span class="n"&gt;smx&lt;/span&gt; &lt;span class="n"&gt;est&lt;/span&gt; &lt;span class="n"&gt;tm2&lt;/span&gt; &lt;span class="n"&gt;ssse3&lt;/span&gt; &lt;span class="n"&gt;fma&lt;/span&gt; &lt;span class="n"&gt;cx16&lt;/span&gt; &lt;span class="n"&gt;xtpr&lt;/span&gt; &lt;span class="n"&gt;pdcm&lt;/span&gt; &lt;span class="n"&gt;pcid&lt;/span&gt; &lt;span class="n"&gt;sse4_1&lt;/span&gt; &lt;span class="n"&gt;sse4_2&lt;/span&gt; &lt;span class="n"&gt;x2apic&lt;/span&gt; &lt;span class="n"&gt;movbe&lt;/span&gt; &lt;span class="n"&gt;popcnt&lt;/span&gt; &lt;span class="n"&gt;tsc_deadline_timer&lt;/span&gt; &lt;span class="n"&gt;aes&lt;/span&gt; &lt;span class="n"&gt;xsave&lt;/span&gt; &lt;span class="n"&gt;avx&lt;/span&gt; &lt;span class="n"&gt;f16c&lt;/span&gt; &lt;span class="n"&gt;rdrand&lt;/span&gt; &lt;span class="n"&gt;lahf_lm&lt;/span&gt; &lt;span class="n"&gt;abm&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;dnowprefetch&lt;/span&gt; &lt;span class="n"&gt;ida&lt;/span&gt; &lt;span class="n"&gt;arat&lt;/span&gt; &lt;span class="n"&gt;epb&lt;/span&gt; &lt;span class="n"&gt;pln&lt;/span&gt; &lt;span class="n"&gt;pts&lt;/span&gt; &lt;span class="n"&gt;dtherm&lt;/span&gt; &lt;span class="n"&gt;tpr_shadow&lt;/span&gt; &lt;span class="n"&gt;vnmi&lt;/span&gt; &lt;span class="n"&gt;flexpriority&lt;/span&gt; &lt;span class="n"&gt;ept&lt;/span&gt; &lt;span class="n"&gt;vpid&lt;/span&gt; &lt;span class="n"&gt;fsgsbase&lt;/span&gt; &lt;span class="n"&gt;tsc_adjust&lt;/span&gt; &lt;span class="n"&gt;bmi1&lt;/span&gt; &lt;span class="n"&gt;hle&lt;/span&gt; &lt;span class="n"&gt;avx2&lt;/span&gt; &lt;span class="n"&gt;smep&lt;/span&gt; &lt;span class="n"&gt;bmi2&lt;/span&gt; &lt;span class="n"&gt;erms&lt;/span&gt; &lt;span class="n"&gt;invpcid&lt;/span&gt; &lt;span class="n"&gt;rtm&lt;/span&gt; &lt;span class="n"&gt;rdseed&lt;/span&gt; &lt;span class="n"&gt;adx&lt;/span&gt; &lt;span class="n"&gt;smap&lt;/span&gt; &lt;span class="n"&gt;xsaveopt&lt;/span&gt; &lt;span class="n"&gt;cpufreq&lt;/span&gt;
          &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cores&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;enabledcores&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;threads&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
     &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;firmware&lt;/span&gt;
          &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BIOS&lt;/span&gt;
          &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
          &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
          &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MBA71&lt;/span&gt;&lt;span class="mf"&gt;.88&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="mf"&gt;.0166&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B00&lt;/span&gt;&lt;span class="mf"&gt;.1502131457&lt;/span&gt;
          &lt;span class="nl"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2015&lt;/span&gt;
          &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;MiB&lt;/span&gt;
          &lt;span class="nl"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8128&lt;/span&gt;&lt;span class="n"&gt;KiB&lt;/span&gt;
          &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;shadowing&lt;/span&gt; &lt;span class="n"&gt;cdboot&lt;/span&gt; &lt;span class="n"&gt;bootselect&lt;/span&gt; &lt;span class="n"&gt;acpi&lt;/span&gt; &lt;span class="n"&gt;smartbattery&lt;/span&gt; &lt;span class="n"&gt;netboot&lt;/span&gt; &lt;span class="n"&gt;uefi&lt;/span&gt;
     &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;memory&lt;/span&gt;
          &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt; &lt;span class="n"&gt;Memory&lt;/span&gt;
          &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;
          &lt;span class="nl"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt; &lt;span class="n"&gt;board&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;motherboard&lt;/span&gt;
          &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;bank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SODIMM&lt;/span&gt; &lt;span class="n"&gt;DDR3&lt;/span&gt; &lt;span class="n"&gt;Synchronous&lt;/span&gt; &lt;span class="mi"&gt;1600&lt;/span&gt; &lt;span class="n"&gt;MHz&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;H9CCNNN8JTMLAR&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;NTM&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Hynix&lt;/span&gt; &lt;span class="n"&gt;Semiconductor&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Hyundai&lt;/span&gt; &lt;span class="n"&gt;Electronics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x00000000&lt;/span&gt;
             &lt;span class="nl"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DIMM0&lt;/span&gt;
             &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1600&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;bank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SODIMM&lt;/span&gt; &lt;span class="n"&gt;DDR3&lt;/span&gt; &lt;span class="n"&gt;Synchronous&lt;/span&gt; &lt;span class="mi"&gt;1600&lt;/span&gt; &lt;span class="n"&gt;MHz&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;H9CCNNN8JTMLAR&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;NTM&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Hynix&lt;/span&gt; &lt;span class="n"&gt;Semiconductor&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Hyundai&lt;/span&gt; &lt;span class="n"&gt;Electronics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
             &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x00000000&lt;/span&gt;
             &lt;span class="nl"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DIMM0&lt;/span&gt;
             &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1600&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;pci&lt;/span&gt;
          &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Host&lt;/span&gt; &lt;span class="n"&gt;bridge&lt;/span&gt;
          &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Broadwell&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="n"&gt;Host&lt;/span&gt; &lt;span class="n"&gt;Bridge&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;OPI&lt;/span&gt;
          &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
          &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
          &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;00.0&lt;/span&gt;
          &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;
          &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
          &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
          &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bdw_uncore&lt;/span&gt;
          &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;VGA&lt;/span&gt; &lt;span class="n"&gt;compatible&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Broadwell&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="n"&gt;Integrated&lt;/span&gt; &lt;span class="n"&gt;Graphics&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;02.0&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;vga_controller&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt; &lt;span class="n"&gt;rom&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i915&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c0000000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c0ffffff&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;b0000000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bfffffff&lt;/span&gt; &lt;span class="nl"&gt;ioport&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;multimedia&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Audio&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Broadwell&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="n"&gt;Audio&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;03.0&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pciexpress&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;snd_hda_intel&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1610000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c1613fff&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;usb&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;xHCI&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;14.0&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;03&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;xhci&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xhci_hcd&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1600000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c160ffff&lt;/span&gt;
           &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;usbhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
                &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;xHCI&lt;/span&gt; &lt;span class="n"&gt;Host&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
                &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt; &lt;span class="mf"&gt;3.10.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;327.&lt;/span&gt;&lt;span class="n"&gt;el7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt; &lt;span class="n"&gt;xhci&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hcd&lt;/span&gt;
                &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
                &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;
                &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb2&lt;/span&gt;
                &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.10&lt;/span&gt;
                &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.00&lt;/span&gt;
                &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;hub&lt;/span&gt; &lt;span class="n"&gt;slots&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
              &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;usb&lt;/span&gt;
                   &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Mass&lt;/span&gt; &lt;span class="n"&gt;storage&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;
                   &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Card&lt;/span&gt; &lt;span class="n"&gt;Reader&lt;/span&gt;
                   &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apple&lt;/span&gt;
                   &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
                   &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
                   &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scsi0&lt;/span&gt;
                   &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;8.20&lt;/span&gt;
                   &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;000000000&lt;/span&gt;&lt;span class="mi"&gt;820&lt;/span&gt;
                   &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.00&lt;/span&gt; &lt;span class="n"&gt;scsi&lt;/span&gt; &lt;span class="n"&gt;emulated&lt;/span&gt; &lt;span class="n"&gt;scsi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;
                   &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storage&lt;/span&gt; &lt;span class="n"&gt;maxpower&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;896&lt;/span&gt;&lt;span class="n"&gt;mA&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
                 &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;disk&lt;/span&gt;
                      &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SCSI&lt;/span&gt; &lt;span class="n"&gt;Disk&lt;/span&gt;
                      &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SD&lt;/span&gt; &lt;span class="n"&gt;Card&lt;/span&gt; &lt;span class="n"&gt;Reader&lt;/span&gt;
                      &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;APPLE&lt;/span&gt;
                      &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0.0&lt;/span&gt;
                      &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scsi&lt;/span&gt;&lt;span class="mi"&gt;@0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.0&lt;/span&gt;
                      &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sdb&lt;/span&gt;
                      &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.00&lt;/span&gt;
                      &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;000000000&lt;/span&gt;&lt;span class="mi"&gt;820&lt;/span&gt;
                      &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;removable&lt;/span&gt;
                      &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ansiversion&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;logicalsectorsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;512&lt;/span&gt; &lt;span class="n"&gt;sectorsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;512&lt;/span&gt;
                    &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;medium&lt;/span&gt;
                         &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
                         &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sdb&lt;/span&gt;
           &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;usbhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;xHCI&lt;/span&gt; &lt;span class="n"&gt;Host&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
                &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt; &lt;span class="mf"&gt;3.10.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;327.&lt;/span&gt;&lt;span class="n"&gt;el7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt; &lt;span class="n"&gt;xhci&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hcd&lt;/span&gt;
                &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;
                &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb1&lt;/span&gt;
                &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.10&lt;/span&gt;
                &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.00&lt;/span&gt;
                &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;hub&lt;/span&gt; &lt;span class="n"&gt;slots&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;480&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
              &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;usb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
                   &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;hub&lt;/span&gt;
                   &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;USB2&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt; &lt;span class="n"&gt;Hub&lt;/span&gt;
                   &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Genesys&lt;/span&gt; &lt;span class="n"&gt;Logic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                   &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
                   &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
                   &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;9.01&lt;/span&gt;
                   &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.00&lt;/span&gt;
                   &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;hub&lt;/span&gt; &lt;span class="n"&gt;maxpower&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="n"&gt;mA&lt;/span&gt; &lt;span class="n"&gt;slots&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;480&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
                 &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;usb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
                      &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Mouse&lt;/span&gt;
                      &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;Optical&lt;/span&gt; &lt;span class="n"&gt;Mouse&lt;/span&gt;
                      &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Logitech&lt;/span&gt;
                      &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
                      &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;2.2&lt;/span&gt;
                      &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;63.00&lt;/span&gt;
                      &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.00&lt;/span&gt;
                      &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;usbhid&lt;/span&gt; &lt;span class="n"&gt;maxpower&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="n"&gt;mA&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
                 &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;usb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
                      &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Keyboard&lt;/span&gt;
                      &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;Keyboard&lt;/span&gt;
                      &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Logitech&lt;/span&gt;
                      &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
                      &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;2.3&lt;/span&gt;
                      &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;66.00&lt;/span&gt;
                      &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.10&lt;/span&gt;
                      &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;usbhid&lt;/span&gt; &lt;span class="n"&gt;maxpower&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="n"&gt;mA&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
              &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;usb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
                   &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;hub&lt;/span&gt;
                   &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BRCM20702&lt;/span&gt; &lt;span class="n"&gt;Hub&lt;/span&gt;
                   &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                   &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
                   &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
                   &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.00&lt;/span&gt;
                   &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.00&lt;/span&gt;
                   &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;hub&lt;/span&gt; &lt;span class="n"&gt;maxpower&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;94&lt;/span&gt;&lt;span class="n"&gt;mA&lt;/span&gt; &lt;span class="n"&gt;slots&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
                 &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;usb&lt;/span&gt;
                      &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bluetooth&lt;/span&gt; &lt;span class="n"&gt;wireless&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt;
                      &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bluetooth&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;Host&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
                      &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                      &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
                      &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;3.3&lt;/span&gt;
                      &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.01&lt;/span&gt;
                      &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.00&lt;/span&gt; &lt;span class="n"&gt;bluetooth&lt;/span&gt;
                      &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;btusb&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
              &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;usb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
                   &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Human&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;
                   &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Internal&lt;/span&gt; &lt;span class="n"&gt;Keyboard&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;Trackpad&lt;/span&gt;
                   &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                   &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
                   &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
                   &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.71&lt;/span&gt;
                   &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;D3H5074FL6ZF94RAQ3D&lt;/span&gt;
                   &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.00&lt;/span&gt;
                   &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bcm5974&lt;/span&gt; &lt;span class="n"&gt;maxpower&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="n"&gt;mA&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;communication&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Communication&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;MEI&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;16.0&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;03&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mei_me&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c161b100&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c161b11f&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;multimedia&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Audio&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;High&lt;/span&gt; &lt;span class="n"&gt;Definition&lt;/span&gt; &lt;span class="n"&gt;Audio&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;03&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;snd_hda_intel&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1614000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c1617fff&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;pci&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;bridge&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;Express&lt;/span&gt; &lt;span class="n"&gt;Root&lt;/span&gt; &lt;span class="n"&gt;Port&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e3&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt; &lt;span class="n"&gt;pciexpress&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;normal_decode&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pcieport&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;pci&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;bridge&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;Express&lt;/span&gt; &lt;span class="n"&gt;Root&lt;/span&gt; &lt;span class="n"&gt;Port&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e3&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt; &lt;span class="n"&gt;pciexpress&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;normal_decode&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pcieport&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1400000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c15fffff&lt;/span&gt; &lt;span class="nl"&gt;ioport&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;a0000000&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;268435456&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;multimedia&lt;/span&gt; &lt;span class="n"&gt;UNCLAIMED&lt;/span&gt;
                &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Multimedia&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;
                &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;720&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;FaceTime&lt;/span&gt; &lt;span class="n"&gt;HD&lt;/span&gt; &lt;span class="n"&gt;Camera&lt;/span&gt;
                &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Broadcom&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
                &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
                &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;00.0&lt;/span&gt;
                &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;
                &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
                &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
                &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pciexpress&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
                &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
                &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1500000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c150ffff&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;a0000000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;afffffff&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1400000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c14fffff&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;pci&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;bridge&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;Express&lt;/span&gt; &lt;span class="n"&gt;Root&lt;/span&gt; &lt;span class="n"&gt;Port&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e3&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt; &lt;span class="n"&gt;pciexpress&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;normal_decode&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pcieport&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1000000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c12fffff&lt;/span&gt;
           &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt;
                &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wireless&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt;
                &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BCM4360&lt;/span&gt; &lt;span class="mf"&gt;802.11&lt;/span&gt;&lt;span class="n"&gt;ac&lt;/span&gt; &lt;span class="n"&gt;Wireless&lt;/span&gt; &lt;span class="n"&gt;Network&lt;/span&gt; &lt;span class="n"&gt;Adapter&lt;/span&gt;
                &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Broadcom&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
                &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
                &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;00.0&lt;/span&gt;
                &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wlp3s0&lt;/span&gt;
                &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;03&lt;/span&gt;
                &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="nl"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;86&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;e2&lt;/span&gt;
                &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
                &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
                &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pciexpress&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt; &lt;span class="n"&gt;ethernet&lt;/span&gt; &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="n"&gt;wireless&lt;/span&gt;
                &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;broadcast&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wl0&lt;/span&gt; &lt;span class="n"&gt;driverversion&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;6.30.223.248&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r487574&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;192.168.0.106&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;multicast&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt; &lt;span class="n"&gt;wireless&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;IEEE&lt;/span&gt; &lt;span class="mf"&gt;802.11&lt;/span&gt;&lt;span class="n"&gt;abg&lt;/span&gt;
                &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1200000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c1207fff&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1000000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c11fffff&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;pci&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;bridge&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;Express&lt;/span&gt; &lt;span class="n"&gt;Root&lt;/span&gt; &lt;span class="n"&gt;Port&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="mf"&gt;.4&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="mf"&gt;.4&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e3&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt; &lt;span class="n"&gt;pciexpress&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;normal_decode&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pcieport&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="nl"&gt;ioport&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12288&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1700000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cd7fffff&lt;/span&gt; &lt;span class="nl"&gt;ioport&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;cd800000&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;201326592&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;pci&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;bridge&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;PCI&lt;/span&gt; &lt;span class="n"&gt;Express&lt;/span&gt; &lt;span class="n"&gt;Root&lt;/span&gt; &lt;span class="n"&gt;Port&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="mf"&gt;.5&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="mf"&gt;.5&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e3&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt; &lt;span class="n"&gt;pciexpress&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;normal_decode&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pcieport&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;46&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1300000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c13fffff&lt;/span&gt;
           &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;storage&lt;/span&gt;
                &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SATA&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;
                &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Samsung&lt;/span&gt; &lt;span class="n"&gt;Electronics&lt;/span&gt; &lt;span class="n"&gt;Co&lt;/span&gt; &lt;span class="n"&gt;Ltd&lt;/span&gt;
                &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Samsung&lt;/span&gt; &lt;span class="n"&gt;Electronics&lt;/span&gt; &lt;span class="n"&gt;Co&lt;/span&gt; &lt;span class="n"&gt;Ltd&lt;/span&gt;
                &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
                &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;00.0&lt;/span&gt;
                &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;
                &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
                &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
                &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;storage&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;pciexpress&lt;/span&gt; &lt;span class="n"&gt;ahci_1&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
                &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ahci&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
                &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1300000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c1301fff&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;isa&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ISA&lt;/span&gt; &lt;span class="n"&gt;bridge&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;LPC&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1f&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1f.0&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;03&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;isa&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lpc_ich&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;irq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;serial&lt;/span&gt; &lt;span class="n"&gt;UNCLAIMED&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SMBus&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;SMBus&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1f.3&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1f.3&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;03&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c161b000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c161b0ff&lt;/span&gt; &lt;span class="nl"&gt;ioport&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;efa0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;generic&lt;/span&gt; &lt;span class="n"&gt;UNCLAIMED&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Signal&lt;/span&gt; &lt;span class="n"&gt;processing&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Wildcat&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;LP&lt;/span&gt; &lt;span class="n"&gt;Thermal&lt;/span&gt; &lt;span class="n"&gt;Management&lt;/span&gt; &lt;span class="n"&gt;Controller&lt;/span&gt;
             &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1f.6&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pci&lt;/span&gt;&lt;span class="mo"&gt;@0000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1f.6&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;03&lt;/span&gt;
             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
             &lt;span class="nl"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt; &lt;span class="n"&gt;bus_master&lt;/span&gt; &lt;span class="n"&gt;cap_list&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;latency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
             &lt;span class="nl"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1618000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c1618fff&lt;/span&gt;
     &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;scsi&lt;/span&gt;
          &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
          &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scsi1&lt;/span&gt;
          &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;emulated&lt;/span&gt;
        &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;disk&lt;/span&gt;
             &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ATA&lt;/span&gt; &lt;span class="n"&gt;Disk&lt;/span&gt;
             &lt;span class="nl"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;APPLE&lt;/span&gt; &lt;span class="n"&gt;SSD&lt;/span&gt; &lt;span class="n"&gt;SM0256&lt;/span&gt;
             &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0.0&lt;/span&gt;
             &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scsi&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.0&lt;/span&gt;
             &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda&lt;/span&gt;
             &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;JA0Q&lt;/span&gt;
             &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;S1W2NYAG331512&lt;/span&gt;
             &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;233&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;251&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gpt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.00&lt;/span&gt; &lt;span class="n"&gt;partitioned&lt;/span&gt; &lt;span class="nl"&gt;partitioned&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;gpt&lt;/span&gt;
             &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ansiversion&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;guid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;4025f&lt;/span&gt;&lt;span class="n"&gt;dbc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c2d&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;45f&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;864&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f87804b249da&lt;/span&gt; &lt;span class="n"&gt;logicalsectorsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;512&lt;/span&gt; &lt;span class="n"&gt;sectorsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;
           &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
                &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Windows&lt;/span&gt; &lt;span class="n"&gt;FAT&lt;/span&gt; &lt;span class="n"&gt;volume&lt;/span&gt;
                &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mkfs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fat&lt;/span&gt;
                &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scsi&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda1&lt;/span&gt;
                &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;efi&lt;/span&gt;
                &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;FAT16&lt;/span&gt;
                &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;eac&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bc8f&lt;/span&gt;
                &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;199&lt;/span&gt;&lt;span class="n"&gt;MiB&lt;/span&gt;
                &lt;span class="nl"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;199&lt;/span&gt;&lt;span class="n"&gt;MiB&lt;/span&gt;
                &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;boot&lt;/span&gt; &lt;span class="n"&gt;fat&lt;/span&gt; &lt;span class="n"&gt;initialized&lt;/span&gt;
                &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;FATs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fat&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fstype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vfat&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;relatime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fmask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mo"&gt;0077&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dmask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mo"&gt;0077&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;codepage&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;437&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;iocharset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ascii&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;shortname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;winnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;remount&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ro&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;EFI&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt; &lt;span class="n"&gt;Partition&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mounted&lt;/span&gt;
           &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;partition&lt;/span&gt;
                &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Windows&lt;/span&gt;
                &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
                &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scsi&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
                &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda2&lt;/span&gt;
                &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;boot&lt;/span&gt;
                &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9477&lt;/span&gt;&lt;span class="n"&gt;ed42&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e463&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="n"&gt;a1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="n"&gt;bbe&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;991&lt;/span&gt;&lt;span class="n"&gt;cc1bff83e&lt;/span&gt;
                &lt;span class="nl"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;499&lt;/span&gt;&lt;span class="n"&gt;MiB&lt;/span&gt;
                &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fstype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xfs&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;seclabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;relatime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;attr2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inode64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;noquota&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mounted&lt;/span&gt;
           &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="nl"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
                &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;partition&lt;/span&gt;
                &lt;span class="nl"&gt;vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Windows&lt;/span&gt;
                &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
                &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scsi&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
                &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda3&lt;/span&gt;
                &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="n"&gt;b082aa&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fb17&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;4f&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;bc9&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;bce650c819&lt;/span&gt;
                &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt;
                &lt;span class="nl"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt;
                &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;
                &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;encrypted&lt;/span&gt; &lt;span class="n"&gt;luks&lt;/span&gt; &lt;span class="n"&gt;initialized&lt;/span&gt;
                &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;512&lt;/span&gt; &lt;span class="n"&gt;cipher&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt; &lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;luks&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sha1&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xts&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plain64&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;battery&lt;/span&gt;
       &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;DISABLED&lt;/span&gt;
       &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ethernet&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt;
       &lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
       &lt;span class="n"&gt;logical&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;virbr0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nic&lt;/span&gt;
       &lt;span class="nl"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;e6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;
       &lt;span class="nl"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
       &lt;span class="nl"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ethernet&lt;/span&gt; &lt;span class="n"&gt;physical&lt;/span&gt;
       &lt;span class="nl"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;autonegotiation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;off&lt;/span&gt; &lt;span class="n"&gt;broadcast&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tun&lt;/span&gt; &lt;span class="n"&gt;driverversion&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.6&lt;/span&gt; &lt;span class="n"&gt;duplex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;full&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;multicast&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;twisted&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;Mbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="fedora.planet"></category><category term="RHEL"></category><category term="Mac"></category></entry><entry><title>Videos from Bulgaria Web Summit 2015</title><link href="http://atodorov.org/blog/2015/04/20/videos-from-bulgaria-web-summit-2015/" rel="alternate"></link><updated>2015-04-20T10:45:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-20:blog/2015/04/20/videos-from-bulgaria-web-summit-2015/</id><summary type="html">&lt;p&gt;&lt;img alt="We're full" src="/images/bgws2015.jpg" title="We're full" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bulgariawebsummit.com"&gt;Bulgaria Web Summit&lt;/a&gt; 2015 is over. The event was
incredible and I had a lot of fun moderating the main room. We had many people
coming from other countries and I've made lots of new friends.
Thank you to everyone who attended!&lt;/p&gt;
&lt;p&gt;You can find video recordings of all talks in the main room (in order of appearance) below:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/3THnzZCI4sw?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/LtgPnYkEj3E?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/4IFyMSvoy-c?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ZGLKZSnCIUU?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/GBv4QWFDETY?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DhnsmsvSG7w?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Hope to see you next time in Sofia! &lt;/p&gt;
&lt;p&gt;Mean while I learned about &lt;a href="http://devitconf.org/"&gt;DEVit&lt;/a&gt; in Thessaloniki in May and another one in Zagreb in October.
See you there :)&lt;/p&gt;</summary><category term="Django"></category><category term="Fedora"></category></entry><entry><title>How to Find if LVM Volume is Thinly Provisioned</title><link href="http://atodorov.org/blog/2015/04/14/how-to-find-if-lvm-volume-is-thinly-provisioned/" rel="alternate"></link><updated>2015-04-14T15:40:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-14:blog/2015/04/14/how-to-find-if-lvm-volume-is-thinly-provisioned/</id><summary type="html">&lt;p&gt;The latest versions of Red Hat Enterprise Linux, CentOS and Fedora all
support LVM thin provisioning. Here's how to tell if a logical volume
has been thinly provisioned or not.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;lvs&lt;/code&gt; to display volume information look under the &lt;em&gt;Attr&lt;/em&gt; column.
Attribute values have the following meaning:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The lv_attr bits are:&lt;/p&gt;
&lt;p&gt;1  Volume type: (C)ache, (m)irrored, (M)irrored without initial sync, (o)rigin,
(O)rigin  with  merging  snapshot, (r)aid,  (R)aid  without  initial  sync,
(s)napshot,  merging  (S)napshot, (p)vmove, (v)irtual, mirror or raid (i)mage,
mirror or raid (I)mage out-of-sync, mirror (l)og device, under  (c)onversion,
thin  (V)olume,  (t)hin pool, (T)hin pool data, raid or pool m(e)tadata or
pool metadata spare.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is how &lt;code&gt;lvs&lt;/code&gt; looks like when you have a regular LVM setup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# lvs
  LV   VG              Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root rhel_dhcp70-183 -wi-ao---- 17,47g                                                    
  swap rhel_dhcp70-183 -wi-ao----  2,00g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When using LVM thin provisioning you're looking for the left-most attribute bit
to be V, t or T. Here's an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# lvs
  LV     VG              Attr       LSize  Pool   Origin Data%  Meta%  Move Log Cpy%Sync Convert
  pool00 rhel_dhcp71-101 twi-aotz-- 14,55g               7,52   3,86                            
  root   rhel_dhcp71-101 Vwi-aotz-- 14,54g pool00        7,53                                   
  swap   rhel_dhcp71-101 -wi-ao----  2,00g
&lt;/pre&gt;&lt;/div&gt;</summary><category term="RHEL"></category><category term="Fedora"></category></entry><entry><title>Tip: Linux-IO default LUN is 0 instead of 1</title><link href="http://atodorov.org/blog/2015/04/08/tip-linux-io-default-lun-is-0-instead-of-1/" rel="alternate"></link><updated>2015-04-08T15:09:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-08:blog/2015/04/08/tip-linux-io-default-lun-is-0-instead-of-1/</id><summary type="html">&lt;p&gt;I've been testing iBFT in KVM which worked quite well with a RHEL 6 iSCSI target
and failed miserably when I switched to RHEL 7 iSCSI target.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;iPXE&amp;gt; dhcp net0
DHCP (net0 52:54:00:12:34:56)... ok
iPXE&amp;gt; set keep-san 1
iPXE&amp;gt; sanboot iscsi:10.0.0.1:::1:iqn.2015-05.com.example:target1
Could not open SAN device: Input/output error (http://ipxe.org/1d704539)
iPXE&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;a href="http://ipxe.org/err/1d7045"&gt;error page&lt;/a&gt; says&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the default configuration when Linux is the target is for the disk to be LUN 1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well this is not true for Linux-IO (targetcli). &lt;strong&gt;The default LUN is 0!&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;iPXE&amp;gt; sanboot iscsi:10.0.0.1:::0:iqn.2015-05.com.example:target1
Registered SAN device 0x80
Booting from SAN device 0x80
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kudos to Bruno Goncalves from Red Hat in helping me debug this issue!&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category><category term="tips"></category></entry><entry><title>How to Configure targetcli to Listen on IPv4 and IPv6</title><link href="http://atodorov.org/blog/2015/04/08/how-to-configure-targetcli-to-listen-on-ipv4-and-ipv6/" rel="alternate"></link><updated>2015-04-08T11:46:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-08:blog/2015/04/08/how-to-configure-targetcli-to-listen-on-ipv4-and-ipv6/</id><summary type="html">&lt;p&gt;In order to configure &lt;em&gt;targetcli&lt;/em&gt; to listen on both IPv4 and IPv6 one has to
delete the default IPv4 portal configuration and replace it with IPv6 instead.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# targetcli 
/&amp;gt;
/&amp;gt; cd iscsi/iqn.2015-04.com.example:target1/tpg1/portals
/iscsi/iqn.20.../tpg1/portals&amp;gt; ls
o- portals ............................................................................................................ [Portals: 1]
  o- 0.0.0.0:3260 ............................................................................................................. [OK]
/iscsi/iqn.20.../tpg1/portals&amp;gt; delete 0.0.0.0 3260
Deleted network portal 0.0.0.0:3260
/iscsi/iqn.20.../tpg1/portals&amp;gt; create ::0
Using default IP port 3260
Created network portal ::0:3260.
/iscsi/iqn.20.../tpg1/portals&amp;gt; ls
o- portals ............................................................................................................ [Portals: 1]
  o- [::0]:3260 ............................................................................................................... [OK]
/iscsi/iqn.20.../tpg1/portals&amp;gt; exit

# netstat -antp | grep 3260
tcp6       0      0 :::3260                 :::*                    LISTEN
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It appears the target is listening only on IPv6 but in fact it will
also accept connections over IPv4. I've tried it. &lt;/p&gt;
&lt;p&gt;This is a bit counter intuitive, however if you try adding the IPv6 address
without removing the default IPv4 one &lt;em&gt;targetcli&lt;/em&gt; will throw an error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/iscsi/iqn.20.../tpg1/portals&amp;gt; create ::0
Using default IP port 3260
Could not create NetworkPortal in configFS.
/&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more information about &lt;em&gt;targetcli&lt;/em&gt; usage see my previous post
&lt;a href="/blog/2015/04/07/how-to-configure-iscsi-target-on-red-hat-enterprise-linux-7/"&gt;How to Configure iSCSI Target on Red Hat Enterprise Linux 7&lt;/a&gt;.&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category><category term="fedora.planet"></category></entry><entry><title>How to Configure iSCSI Target on Red Hat Enterprise Linux 7</title><link href="http://atodorov.org/blog/2015/04/07/how-to-configure-iscsi-target-on-red-hat-enterprise-linux-7/" rel="alternate"></link><updated>2015-04-07T15:52:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-04-07:blog/2015/04/07/how-to-configure-iscsi-target-on-red-hat-enterprise-linux-7/</id><summary type="html">&lt;p&gt;Linux-IO (LIO) Target is an open-source implementation of the SCSI target that
has become the standard one included in the Linux kernel and the one present in
Red Hat Enterprise Linux 7. The popular &lt;em&gt;scsi-target-utils&lt;/em&gt; package is replaced
by the newer &lt;em&gt;targetcli&lt;/em&gt; which makes configuring a software iSCSI target quite
different.&lt;/p&gt;
&lt;p&gt;In earlier versions one had to edit the &lt;code&gt;/etc/tgtd/targets.conf&lt;/code&gt; file and
&lt;code&gt;service tgtd restart&lt;/code&gt;. Here is an example configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;target&lt;/span&gt; &lt;span class="err"&gt;iqn.2008-09.com.example:server.target1&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    backing-store /dev/vg_iscsi/lv_lun1
    backing-store /dev/vg_iscsi/lv_lun2

    incominguser user2 secretpass23
    outgoinguser userA secretpassA
&lt;span class="nt"&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;targetcli&lt;/em&gt; can be used either as an interactive shell or as stand alone commands.
Here is an example shell session which creates a file-based disk image. Comments are
provided inline:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# yum install -y targetcli&lt;/span&gt;
&lt;span class="cp"&gt;# systemctl enable target&lt;/span&gt;

&lt;span class="cp"&gt;# targetcli &lt;/span&gt;

&lt;span class="cp"&gt;# first create a disk image with the name of disk1. All files are sparsely created.&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;backstores&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="n"&gt;fileio&lt;/span&gt; &lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;10737418240&lt;/span&gt;

&lt;span class="cp"&gt;# create an iSCSI target. NB: this only defines the target&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="n"&gt;TPG&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;
&lt;span class="n"&gt;Global&lt;/span&gt; &lt;span class="n"&gt;pref&lt;/span&gt; &lt;span class="n"&gt;auto_add_default_portal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;portal&lt;/span&gt; &lt;span class="n"&gt;listening&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;IPs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="mf"&gt;3260.&lt;/span&gt;

&lt;span class="cp"&gt;# TPGs (Target Portal Groups) allow the iSCSI to support multiple complete&lt;/span&gt;
&lt;span class="cp"&gt;# configurations within one target. This is useful for complex quality-of-service&lt;/span&gt;
&lt;span class="cp"&gt;# configurations. targetcli will automatically create one TPG when the target&lt;/span&gt;
&lt;span class="cp"&gt;# is created, and almost all setups only need one.&lt;/span&gt;

&lt;span class="cp"&gt;# switch to TPG definition for our target&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;

&lt;span class="cp"&gt;# list the contents&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; 
&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tpg1&lt;/span&gt; &lt;span class="p"&gt;.....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;acls&lt;/span&gt; &lt;span class="p"&gt;................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;ACLs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt; &lt;span class="p"&gt;................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;LUNs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Portals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3260&lt;/span&gt; &lt;span class="p"&gt;...........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="cp"&gt;# create a portal aka IP:port pairs which expose the target on the network&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;
&lt;span class="n"&gt;Using&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="mi"&gt;3260&lt;/span&gt;
&lt;span class="n"&gt;Binding&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;INADDR_ANY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;NetworkPortal&lt;/span&gt; &lt;span class="n"&gt;already&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;configFS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="cp"&gt;# create logical units (LUNs) aka disks inside our target&lt;/span&gt;
&lt;span class="cp"&gt;# in other words bind the target to its on-disk storage&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backstores&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;
&lt;span class="n"&gt;Created&lt;/span&gt; &lt;span class="n"&gt;LUN&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;

&lt;span class="cp"&gt;# disable authentication&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Parameter&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="cp"&gt;# enable read/write mode&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;demo_mode_write_protect&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Parameter&lt;/span&gt; &lt;span class="n"&gt;demo_mode_write_protect&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="cp"&gt;# Enable generate_node_acls mode. This can be thought of as &lt;/span&gt;
&lt;span class="cp"&gt;# &amp;quot;ignore ACLs mode&amp;quot; -- both  authentication and LUN mapping&lt;/span&gt;
&lt;span class="cp"&gt;# will then use the TPG settings.&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;generate_node_acls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;Parameter&lt;/span&gt; &lt;span class="n"&gt;generate_node_acls&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tpg1&lt;/span&gt; &lt;span class="p"&gt;........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;acls&lt;/span&gt; &lt;span class="p"&gt;................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;ACLs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt; &lt;span class="p"&gt;................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;LUNs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lun0&lt;/span&gt; &lt;span class="p"&gt;.....................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Portals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3260&lt;/span&gt; &lt;span class="p"&gt;...........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="cp"&gt;# exit or Ctrl+D will save the configuration under /etc/target/saveconfig.json&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt;
&lt;span class="n"&gt;Global&lt;/span&gt; &lt;span class="n"&gt;pref&lt;/span&gt; &lt;span class="n"&gt;auto_save_on_exit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;Last&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;configs&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Configuration&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;saveconfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;

&lt;span class="cp"&gt;# after creating a second target the layout looks like this&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;.........................................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[...]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;backstores&lt;/span&gt; &lt;span class="p"&gt;..............................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[...]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="p"&gt;..................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Storage&lt;/span&gt; &lt;span class="nl"&gt;Objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;fileio&lt;/span&gt; &lt;span class="p"&gt;.................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Storage&lt;/span&gt; &lt;span class="nl"&gt;Objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="p"&gt;..................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;activated&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;disk2&lt;/span&gt; &lt;span class="p"&gt;..................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="n"&gt;GiB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;activated&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pscsi&lt;/span&gt; &lt;span class="p"&gt;..................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Storage&lt;/span&gt; &lt;span class="nl"&gt;Objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ramdisk&lt;/span&gt; &lt;span class="p"&gt;................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Storage&lt;/span&gt; &lt;span class="nl"&gt;Objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;iscsi&lt;/span&gt; &lt;span class="p"&gt;............................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt; &lt;span class="p"&gt;...................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;TPGs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tpg1&lt;/span&gt; &lt;span class="p"&gt;..................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;acls&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;ACLs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;LUNs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lun0&lt;/span&gt; &lt;span class="p"&gt;...............................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt; &lt;span class="p"&gt;....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Portals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3260&lt;/span&gt; &lt;span class="p"&gt;.....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target2&lt;/span&gt; &lt;span class="p"&gt;...................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;TPGs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tpg1&lt;/span&gt; &lt;span class="p"&gt;..................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;acls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;acls&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;ACLs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;luns&lt;/span&gt; &lt;span class="p"&gt;..........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;LUNs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lun0&lt;/span&gt; &lt;span class="p"&gt;...............................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fileio&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disk2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;portals&lt;/span&gt; &lt;span class="p"&gt;....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Portals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3260&lt;/span&gt; &lt;span class="p"&gt;.....................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loopback&lt;/span&gt; &lt;span class="p"&gt;.........................................................................................................&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nl"&gt;Targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="cp"&gt;# enable CHAP and Reverse CHAP (mutual) for both discovery and login authentication&lt;/span&gt;

&lt;span class="cp"&gt;# discovery authentication is enabled under the global iscsi node&lt;/span&gt;

&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;userid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;IncomingUser&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SomePassword1&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;mutual_userid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;OutgoingUser&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;discovery_auth&lt;/span&gt; &lt;span class="n"&gt;mutual_password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AnotherPassword2&lt;/span&gt;

&lt;span class="cp"&gt;# login authentication is enabled either under the TPG node or under ACLs&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;04.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;userid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;IncomingUser2&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SomePassword3&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;mutual_userid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;OutgoingUser2&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;mutual_password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AnotherPassword4&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iqn&lt;/span&gt;&lt;span class="mf"&gt;.20&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;target1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tpg1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;activating targetcli service at boot is mandatory, otherwise your configuration won’t be read after a reboot&lt;/li&gt;
&lt;li&gt;if you type &lt;code&gt;cd&lt;/code&gt; &lt;em&gt;targetcli&lt;/em&gt; will display an interactive node tree&lt;/li&gt;
&lt;li&gt;after configuration is saved you don't need to restart anything&lt;/li&gt;
&lt;li&gt;the old &lt;em&gt;scsi-target-utils&lt;/em&gt; doesn't support discovery authentication&lt;/li&gt;
&lt;li&gt;&lt;em&gt;targetcli&lt;/em&gt; allows kernel memory to be shared as a block SCSI device via the
ramdisk backstore. It also supports "nullio" mode, which discards all writes, and returns all-zeroes for reads.&lt;/li&gt;
&lt;li&gt;I'm having troubles configuring portals to listen both on any IPv4 addresses and any IPv6 addresses
the system has. I've still not figured that out entirely.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information please read Chapter 25 from Red Hat's
&lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Storage_Administration_Guide/ch25.html"&gt;Storage Administration Guide&lt;/a&gt;
or checkout
&lt;a target="_blank" href="http://www.amazon.com/s/ref=as_li_ss_tl?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=red%20hat%20enterprise%20linux%207&amp;linkCode=ur2&amp;rh=n%3A283155%2Ck%3Ared%20hat%20enterprise%20linux%207&amp;sprefix=red%20hat%20enterprise%20linux%207%2Cstripbooks%2C253&amp;tag=atodorovorg-20&amp;url=search-alias%3Dstripbooks&amp;linkId=SI7U3LCMCMA4EZOM"&gt;Red Hat Enterprise Linux 7 books on Amazon&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;.&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category></entry><entry><title>Mining E-mail Identities with Gravatar</title><link href="http://atodorov.org/blog/2015/03/16/mining-e-mail-identities-with-gravatar/" rel="alternate"></link><updated>2015-03-16T23:16:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-03-16:blog/2015/03/16/mining-e-mail-identities-with-gravatar/</id><summary type="html">&lt;p&gt;Recently I've laid my hands on a list of little over 7000 email addresses.
This begs the question how much of them are still in use and what for ?&lt;/p&gt;
&lt;p&gt;My data is not fresh so I've uploaded the list to Facebook and created a custom
audience. 2400 of 7129 addresses were recognized - 30% of these addresses are
on Facebook and easy to target! Need to figure out which ones. &lt;/p&gt;
&lt;p&gt;I could have tried some sort of batch search combined with the custom audience
functionality but I didn't find an API for that and decided not to bother.
Instead I've opted for Gravatar.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;gravatars.sh&lt;/span&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read &lt;/span&gt;LINE&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nv"&gt;HASH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="nv"&gt;$LINE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; md5sum &lt;span class="p"&gt;|&lt;/span&gt; cut -f1 -d&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
    wget &lt;span class="s2"&gt;&amp;quot;http://gravatar.com/avatar/&lt;/span&gt;&lt;span class="nv"&gt;$HASH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -O &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$LINE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt; &amp;lt; /dev/stdin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Feed &lt;code&gt;gravatars.sh&lt;/code&gt; with the email list and it will download all images to the
current working directory and use the address as the file name. After 
&lt;code&gt;md5sum *@* | cut -f1 -d' ' | sort | uniq -c&lt;/code&gt; I quickly noticed the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4563 addresses have the &lt;code&gt;a1719586837f0fdac8835f74cf4ef04a&lt;/code&gt; check-sum; These are
not found on Gravatar.&lt;/li&gt;
&lt;li&gt;2400 addresses have the &lt;code&gt;d5fe5cbcc31cff5f8ac010db72eb000c&lt;/code&gt; check-sum. These are
addresses which are registered with Gravatar but didn't bother to change the default
image.&lt;/li&gt;
&lt;li&gt;166 remaining addresses, each with a different check-sum. These have their custom
pictures uploaded to Gravatar and probably much more actively used.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A second check with Facebook reveals 900 out of these 2566 addresses were recognized.
This begs the question is Facebook showing incorrect stats or are there 1500 addresses
using Gravatar (or have used at some point) which are not on Facebook ?&lt;/p&gt;
&lt;p&gt;At least some of the remaining 4000 addresses are still active and used to send emails.
Next I will be looking for ways to identify them. Any suggestions and comments are more
than welcome!&lt;/p&gt;</summary></entry><entry><title>Pedometer Bug in Samsung Gear Fit Smartwatch</title><link href="http://atodorov.org/blog/2015/01/09/pedometer-bug-in-samsung-gear-fit-smartwatch/" rel="alternate"></link><updated>2015-01-09T10:53:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-01-09:blog/2015/01/09/pedometer-bug-in-samsung-gear-fit-smartwatch/</id><summary type="html">&lt;p&gt;&lt;a style="float:left;display:inline-block;margin-right:10px;" href="http://www.amazon.com/gp/product/B00J4DY8RU/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00J4DY8RU&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=RNJGVYUTOOJFGWOU"&gt;
&lt;img src="/images/samsung/gear_fit.jpg" /&gt;
&lt;/a&gt;
&lt;sub&gt;
Image source &lt;a href="http://pocketnow.com/2014/05/02/samsung-gear-fit-review-pre-buttal-video"&gt;Pocketnow&lt;/a&gt;
&lt;sub&gt;&lt;/p&gt;
&lt;p&gt;Recently I've been playing around with a
&lt;a href="http://www.amazon.com/gp/product/B00J4DY8RU/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00J4DY8RU&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=RNJGVYUTOOJFGWOU"&gt;Samsung Gear Fit&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B00J4DY8RU" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
and while the hardware seems good I'm a bit disapointed on the software side.
There is at least one bug which is clearly visible - &lt;strong&gt;pedometer counts calories twice
when it's on and exercise mode is started&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;How to test:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start the &lt;em&gt;Pedometer&lt;/em&gt; app and record any initial readings;&lt;/li&gt;
&lt;li&gt;Walk a fixed distance and at the end record all readings;&lt;/li&gt;
&lt;li&gt;Now go back to the &lt;em&gt;Exercise&lt;/em&gt; app and select a &lt;em&gt;Walking&lt;/em&gt;
exercise from the menu. Tap &lt;em&gt;Start&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Walk back the same distance/road as before. At the end of the journey
stop the walking exercise and record all readings.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Expected results:&lt;/p&gt;
&lt;p&gt;At the end of the trip I expect to see roughly the same calories burned
for both directions.&lt;/p&gt;
&lt;p&gt;Actual results:&lt;/p&gt;
&lt;p&gt;The return trip counted twice as many calories compared to the forward trip.
Here's some actual data to prove it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;+--------------------------+----------+----------------+---------+-------------+---------+
|                          | Initial  | Forward trip   |         | Return trip |         |
|                          | Readings | Pedometer only |  Delta  | Pedometer &amp;amp; |  Delta  |
|                          |          |                |         | Exercise    |         |
+--------------------------+----------+----------------+---------+-------------+---------+
|              Total Steps | 14409 st | 14798 st       | 389 st  | 15246 st    | 448 st  |
+--------------------------+----------+----------------+---------+-------------+---------+
|           Total Distance | 12,19 km | 12,52 km       | 0,33 km | 12,90 km    | 0,38 km |
+--------------------------+----------+----------------+---------+-------------+---------+
| Cal burned via Pedometer |  731 Cal |  751 Cal       | 20 Cal  |  772 Cal    | 21 Cal  |
+--------------------------+----------+----------------+=========+-------------+=========+
| Cal burned via Exercise  |  439 Cal |  439 Cal       | 0       |  460 Cal    | 21 Cal  |
+--------------------------+----------+----------------+---------+-------------+=========+
|    Total calories burned | 1170 Cal | 1190 Cal       | 20 cal  | 1232 Cal    | 42 Cal  |
+--------------------------+----------+----------------+=========+-------------+=========+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Data values above were taken from Samsung's &lt;em&gt;S Health&lt;/em&gt; app which is easier to work with
instead of the Gear Fit itself.&lt;/p&gt;
&lt;p&gt;The problem is that both apps are accessing the sensor simultaneously and not aware of each other.
In theory it should be relatively easy to block access of one app while the other is running but
that may not be so easy to implement on the limited platform the Gear Fit is.&lt;/p&gt;</summary><category term="QA"></category><category term="Samsung"></category></entry><entry><title>2 Barcode Related Bugs in MyFitnessPal</title><link href="http://atodorov.org/blog/2015/01/07/2-barcode-related-bugs-in-myfitnesspal/" rel="alternate"></link><updated>2015-01-07T14:44:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-01-07:blog/2015/01/07/2-barcode-related-bugs-in-myfitnesspal/</id><summary type="html">&lt;p&gt;&lt;img alt="Barcode that fails to scan" src="/images/barcode/fail.jpg" title="Barcode that fails to scan" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Did you know that the popular &lt;em&gt;MyFitnessPal&lt;/em&gt; application can't scan barcodes
printed on curved surfaces?&lt;/strong&gt; The above barcode fails to scan because it is
printed on a metal can full of roasted almonds :). In contrast the
&lt;em&gt;Barcode Scanner&lt;/em&gt; from &lt;em&gt;ZXing Team&lt;/em&gt; understands it just fine. My bet is
&lt;em&gt;MyFitnessPal&lt;/em&gt; uses less advanced barcode scanning library. Judging from
the visual clues in the app the issue is between 6 and 0 where white space is wider.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Barcode that scans fine" src="/images/barcode/pass.jpg" title="Barcode that scans fine" /&gt;&lt;/p&gt;
&lt;p&gt;Despite being a bit blurry this second barcode is printed on a flat surface and
is understood by both &lt;em&gt;MyFitnessPal&lt;/em&gt; and "ZXing Barcode Scanner".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; I get the same results regardless if I try to scan the actual barcode
printed on packaging, a picture from a mobile device screen or these two images
from the laptop screen.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MyFitnessPal also has problems with duplicate barcodes!&lt;/strong&gt; Barcodes are not unique
and many producers use the same code for multiple products. I've seen this in the
case of two different varieties of salami from the same manufacturer on the good end
and two different products produced across the world (eggs and popcorn) on the
extreme end.&lt;/p&gt;
&lt;p&gt;Once the user scans their barcodes and establish that the existing information is
not correct they can &lt;em&gt;Create a Food&lt;/em&gt; and update the calories database. This is then
synced back to MyFitnesPal servers and overrides any existing information. When the same
barcode is scanned for the second time only the new DB entry is visible.&lt;/p&gt;
&lt;p&gt;How to reproduce:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scan an existing barcode and enter it to MFP database if not already there;&lt;/li&gt;
&lt;li&gt;Scan the same barcode one more time and pretend the information is not correct;&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;Create a Food&lt;/em&gt; button and fill-in the fields. For example use a
different food name to distinguish between the two database entries. Save!&lt;/li&gt;
&lt;li&gt;From another device with different account (to verify information in DB)
scan the same barcode again. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Actual results:
The last entered information is shown.&lt;/p&gt;
&lt;p&gt;Expected results:
User is shown both DB records and can select between them.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Endless Loop Bug in Candy Crush Saga Level 80</title><link href="http://atodorov.org/blog/2015/01/05/endless-loop-bug-candy-crush-saga-level-80/" rel="alternate"></link><updated>2015-01-05T15:44:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2015-01-05:blog/2015/01/05/endless-loop-bug-candy-crush-saga-level-80/</id><summary type="html">&lt;p&gt;Happy new year everyone. During the holidays I've discovered several interesting
bugs which will be revealed in this blog. Starting today with a bug in the popular
game &lt;em&gt;Candy Crush Saga&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In level 80 one teleport is still open but the chocolates are blocking the rest.
The game has ended but candies keep flowing through the teleport and the level doesn't exit.
My guess is that the game logic is missing a check whether or not it will go into an endless loop.&lt;/p&gt;
&lt;iframe width="560" height="315" src="//www.youtube.com/embed/haBepFwyaxY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;This bug seems to be generic for the entire game. It pops up also on
level 137 in the Owl part of the game (recorded by somebody else):&lt;/p&gt;
&lt;iframe width="420" height="315" src="//www.youtube.com/embed/6q1_LIdamqw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="QA"></category></entry><entry><title>BlackBerry Z10 is Killing My WiFi Router</title><link href="http://atodorov.org/blog/2014/12/22/blackberry-z10-is-killing-my-wifi-router/" rel="alternate"></link><updated>2014-12-22T15:46:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-12-22:blog/2014/12/22/blackberry-z10-is-killing-my-wifi-router/</id><summary type="html">&lt;p&gt;Few days ago I've resurrected my BlackBerry Z10 only to find out that it kills
my WiFi router shortly after connecting to the network.
It looks like many people are having the same problem with BlackBerry but most forum
threads don't offer a meaningful solution so I did some tests. &lt;/p&gt;
&lt;p&gt;Everything works fine when WiFi mode is set to either 11bgn mixed or 11n only and
WiFi security is disabled.&lt;/p&gt;
&lt;p&gt;When using WPA2/Personal security mode and AES encryption the problem occurs
regardless of which WiFi mode is used. There is another type of encryption called TKIP
but the device itself warns that this is not supported by the 802.11n specification
(all my devices use it anyway).&lt;/p&gt;
&lt;p&gt;So to recap:
&lt;strong&gt;BlackBerry Z10 causes my TP-Link router to die if using WPA2/Personal security with
AES Encryption. Switching to open network with MAC address filtering works fine!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I haven't had the time to upgrade the firmware of this router and see if the problem persists.
Most likely I'll just go ahead and flash it with OpenWRT.&lt;/p&gt;</summary><category term="BlackBerry"></category><category term="QA"></category></entry><entry><title>Speed Comparison of Web Proxies Written in Python Twisted and Go</title><link href="http://atodorov.org/blog/2014/11/19/speed-comparison-of-web-proxies-written-in-python-twisted-and-go/" rel="alternate"></link><updated>2014-11-19T16:57:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-11-19:blog/2014/11/19/speed-comparison-of-web-proxies-written-in-python-twisted-and-go/</id><summary type="html">&lt;p&gt;After I figured out that
&lt;a href="/blog/2014/11/11/speeding-up-celery-backends-part-3/"&gt;Celery is rather slow&lt;/a&gt;
I moved on to test another part of my environment - a web proxy server.
The test here compares two proxy 
&lt;a href="https://gist.github.com/atodorov/666035d270d97d982cd5"&gt;implementations&lt;/a&gt;
- one with Python Twisted,
the other in Go. The backend is a simple web server written in Go, which is
probably the fastest thing when it comes to serving HTML.&lt;/p&gt;
&lt;p&gt;The test content is a snapshot of the front page of this blog taken few days ago.
The system is a standard Lenovo X220 laptop, with Intel Core i7 CPU, with 4 cores.
The measurement instrument is the popular wrk tool with a
&lt;a href="/blog/2014/11/18/proxy-support-for-wrk-http-benchmarking-tool/"&gt;custom Lua script to redirect the requests through the proxy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All tests were repeated several times, only the best results are shown here.
I've taken time between the tests in order for all open TCP ports to close.
I've also observed the number of open ports (e.g. sockets) using &lt;code&gt;netstat&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Baseline&lt;/h2&gt;
&lt;p&gt;Using wrk against the web server in Go yields around 30000 requests per second
with an average of 2000 TCP ports in use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./wrk -c1000 -t20 -d30s http://127.0.0.1:8000/atodorov.html
Running 30s &lt;span class="nb"&gt;test&lt;/span&gt; @ http://127.0.0.1:8000/atodorov.html
  &lt;span class="m"&gt;20&lt;/span&gt; threads and &lt;span class="m"&gt;1000&lt;/span&gt; connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   304.43ms  518.27ms   1.47s    82.69%
    Req/Sec     1.72k     2.45k   17.63k    88.70%
  &lt;span class="m"&gt;1016810&lt;/span&gt; requests in 29.97s, 34.73GB &lt;span class="nb"&gt;read&lt;/span&gt;
&lt;span class="nb"&gt;  &lt;/span&gt;Non-2xx or 3xx responses: 685544
Requests/sec:  33928.41
Transfer/sec:      1.16GB
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Python Twisted&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://gist.github.com/atodorov/666035d270d97d982cd5"&gt;Twisted implementation&lt;/a&gt;
performs at little over 1000 reqs/sec with an average TCP port use between 20000 and 30000:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./wrk -c1000 -t20 -d30s http://127.0.0.1:8080 -s scripts/proxy.lua -- http://127.0.0.1:8000/atodorov.html
Running 30s test @ http://127.0.0.1:8080
  20 threads and 1000 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   335.53ms  117.26ms 707.57ms   64.77%
    Req/Sec   104.14     72.19   335.00     55.94%
  40449 requests in 30.02s, 3.67GB read
  Socket errors: connect 0, read 0, write 0, timeout 8542
  Non-2xx or 3xx responses: 5382
Requests/sec:   1347.55
Transfer/sec:    125.12MB
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Go proxy&lt;/h2&gt;
&lt;p&gt;First I've run several 30 seconds tests and performance was around 8000 req/sec
with around 20000 ports used (most of them remain in TIME_WAIT state for a while).
Then I've modified &lt;code&gt;proxy.go&lt;/code&gt; to make use of all available CPUs on the system and let
the test run for 5 minutes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./wrk -c1000 -t20 -d300s http://127.0.0.1:9090 -s scripts/proxy.lua -- http://127.0.0.1:8000/atodorov.html
Running 5m &lt;span class="nb"&gt;test&lt;/span&gt; @ http://127.0.0.1:9090
  &lt;span class="m"&gt;20&lt;/span&gt; threads and &lt;span class="m"&gt;1000&lt;/span&gt; connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   137.22ms  437.95ms   4.45s    97.55%
    Req/Sec   669.54    198.52     1.71k    76.40%
  &lt;span class="m"&gt;3423108&lt;/span&gt; requests in 5.00m, 58.27GB &lt;span class="nb"&gt;read&lt;/span&gt;
&lt;span class="nb"&gt;  &lt;/span&gt;Socket errors: connect 0, &lt;span class="nb"&gt;read &lt;/span&gt;26, write 181, timeout 24268
  Non-2xx or 3xx responses: 2870522
Requests/sec:  11404.19
Transfer/sec:    198.78MB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Performance peaked at 10000 req/sec. TCP port usage initially rose to around 30000
but rapidly dropped and stayed around 3000. Both &lt;code&gt;webserver.go&lt;/code&gt; and &lt;code&gt;proxy.go&lt;/code&gt; were
printing the following messages on the console:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;11&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;18&lt;/span&gt; &lt;span class="nt"&gt;21&lt;/span&gt;&lt;span class="nd"&gt;:53:06&lt;/span&gt; &lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Accept&lt;/span&gt; &lt;span class="nt"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;accept&lt;/span&gt; &lt;span class="nt"&gt;tcp&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;:9090&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;too&lt;/span&gt; &lt;span class="nt"&gt;many&lt;/span&gt; &lt;span class="nt"&gt;open&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;retrying&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;1s&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;There's no doubt that Go is blazingly fast compared to Python and I'm most likely to use it
further in my experiments. Still I didn't expect a 3x difference in performance from webserver vs. proxy.&lt;/p&gt;
&lt;p&gt;Another thing that worries me is the huge number of open TCP ports which then drops and stays
consistent over time and the error messages from both webserver and proxy (maybe per process sockets limit).&lt;/p&gt;
&lt;p&gt;At the moment I'm not aware of the internal workings of neither wrk, nor
Go itself, nor the goproxy library to make conclusion if this is a bad thing or expected.
I'm eager to hear what others think in the comments. Thanks!&lt;/p&gt;
&lt;h2&gt;Update 2015-01-27&lt;/h2&gt;
&lt;p&gt;I have retested with PyPy but on a different system so I'm giving all the test results
on it as well. &lt;code&gt;/proc/cpuinfo&lt;/code&gt; says we have 16 x Intel(R) Xeon(R) CPU E5-2450L 0 @ 1.80GHz
CPUs. &lt;/p&gt;
&lt;p&gt;Baseline - Go server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./wrk -c1000 -t20 -d30s http://127.0.0.1:8000/atodorov.html
Running 30s &lt;span class="nb"&gt;test&lt;/span&gt; @ http://127.0.0.1:8000/atodorov.html
  &lt;span class="m"&gt;20&lt;/span&gt; threads and &lt;span class="m"&gt;1000&lt;/span&gt; connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    15.57ms   20.38ms 238.93ms   98.11%
    Req/Sec     3.55k     1.32k   15.91k    82.49%
  &lt;span class="m"&gt;1980738&lt;/span&gt; requests in 30.00s, 174.53GB &lt;span class="nb"&gt;read&lt;/span&gt;
&lt;span class="nb"&gt;  &lt;/span&gt;Socket errors: connect 0, &lt;span class="nb"&gt;read &lt;/span&gt;0, write 0, timeout 602
  Non-2xx or 3xx responses: 60331
Requests/sec:  66022.87
Transfer/sec:      5.82GB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Go proxy (30 sec):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./wrk -c1000 -t20 -d30s http://127.0.0.1:9090 -s scripts/proxy.lua -- http://127.0.0.1:8000/atodorov.html
Running 30s &lt;span class="nb"&gt;test&lt;/span&gt; @ http://127.0.0.1:9090
  &lt;span class="m"&gt;20&lt;/span&gt; threads and &lt;span class="m"&gt;1000&lt;/span&gt; connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    68.93ms  718.98ms  12.60s    99.58%
    Req/Sec     1.61k   784.01     4.83k    62.50%
  &lt;span class="m"&gt;942757&lt;/span&gt; requests in 30.00s, 32.16GB &lt;span class="nb"&gt;read&lt;/span&gt;
&lt;span class="nb"&gt;  &lt;/span&gt;Socket errors: connect 0, &lt;span class="nb"&gt;read &lt;/span&gt;26, write 0, timeout 3050
  Non-2xx or 3xx responses: 589940
Requests/sec:  31425.47
Transfer/sec:      1.07GB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Python proxy with &lt;code&gt;Twisted==14.0.2&lt;/code&gt; and &lt;code&gt;pypy-2.2.1-2.el7.x86_64&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./wrk -c1000 -t20 -d30s http://127.0.0.1:8080 -s scripts/proxy.lua -- http://127.0.0.1:8000/atodorov.html
Running 30s &lt;span class="nb"&gt;test&lt;/span&gt; @ http://127.0.0.1:8080
  &lt;span class="m"&gt;20&lt;/span&gt; threads and &lt;span class="m"&gt;1000&lt;/span&gt; connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   858.75ms    1.47s    6.00s    88.09%
    Req/Sec   146.39    104.83   341.00     54.18%
  &lt;span class="m"&gt;85645&lt;/span&gt; requests in 30.00s, 853.54MB &lt;span class="nb"&gt;read&lt;/span&gt;
&lt;span class="nb"&gt;  &lt;/span&gt;Socket errors: connect 0, &lt;span class="nb"&gt;read &lt;/span&gt;289, write 0, timeout 3297
  Non-2xx or 3xx responses: 76567
Requests/sec:   2854.45
Transfer/sec:     28.45MB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Update 2015-01-27-2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python proxy with &lt;code&gt;Twisted==14.0.2&lt;/code&gt; and &lt;code&gt;python-2.7.5-16.el7.x86_64&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./wrk -c1000 -t20 -d30s http://127.0.0.1:8080 -s scripts/proxy.lua -- http://127.0.0.1:8000/atodorov.html
Running 30s &lt;span class="nb"&gt;test&lt;/span&gt; @ http://127.0.0.1:8080
  &lt;span class="m"&gt;20&lt;/span&gt; threads and &lt;span class="m"&gt;1000&lt;/span&gt; connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   739.64ms    1.58s   14.22s    96.18%
    Req/Sec    84.43     36.61   157.00     67.79%
  &lt;span class="m"&gt;49173&lt;/span&gt; requests in 30.01s, 701.77MB &lt;span class="nb"&gt;read&lt;/span&gt;
&lt;span class="nb"&gt;  &lt;/span&gt;Socket errors: connect 0, &lt;span class="nb"&gt;read &lt;/span&gt;240, write 0, timeout 2463
  Non-2xx or 3xx responses: 41683
Requests/sec:   1638.38
Transfer/sec:     23.38MB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As seen Go proxy is slower than the Go server by factor of 2.
Python proxy is slower by than the Go server by factor of 20.
These results are similar to previous ones so I don't think PyPy
makes any significant difference.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Proxy Support for wrk HTTP Benchmarking Tool</title><link href="http://atodorov.org/blog/2014/11/18/proxy-support-for-wrk-http-benchmarking-tool/" rel="alternate"></link><updated>2014-11-18T10:04:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-11-18:blog/2014/11/18/proxy-support-for-wrk-http-benchmarking-tool/</id><summary type="html">&lt;p&gt;Few times recently I've seen people using an HTTP benchmarking tool called
&lt;a href="https://github.com/wg/wrk"&gt;wrk&lt;/a&gt; and decided to give it a try. It is a very cool
instrument but didn't fit my use case perfectly. What I needed is to be able to
redirect the connection through a web proxy and measure how much the proxy
slows down things compared to hitting the web server directly with wrk.
In other words - how fast is the proxy server.&lt;/p&gt;
&lt;h2&gt;How does a proxy work&lt;/h2&gt;
&lt;p&gt;I've examined the source code of two proxies (one in Python and another one in Go)
and what happens is this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The proxy server starts listening to a TCP port&lt;/li&gt;
&lt;li&gt;A client (e.g. the browser) sends the request using an absolute URL (GET http://example.com/about.html)&lt;/li&gt;
&lt;li&gt;Instead of connecting directly to the web server behind example.com the client connects to the proxy&lt;/li&gt;
&lt;li&gt;The proxy server does connect to example.com directly, reads the response and delivers it back to 
the client.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Proxy in wrk&lt;/h2&gt;
&lt;p&gt;Luckily wrk supports the execution of Lua scripts so we can make a 
&lt;a href="https://github.com/wg/wrk/pull/107"&gt;simple script&lt;/a&gt; like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;target_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="nx"&gt;proxy&lt;/span&gt; &lt;span class="nx"&gt;needs&lt;/span&gt; &lt;span class="nx"&gt;absolute&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;
&lt;span class="nx"&gt;end&lt;/span&gt;

&lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;wrk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;target_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then update your command line to something like this:
    ./wrk [options] http://proxy:port -s proxy.lua -- http://example.com/about.html&lt;/p&gt;
&lt;p&gt;This causes wrk to connect to our proxy server but instead issue GET requests for another URL.
Depending on how your proxy works you may need to add the &lt;code&gt;Host: example.com&lt;/code&gt; header as well.
Now let's do some testing.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>HackFMI SMS Delivery Powered by Twilio</title><link href="http://atodorov.org/blog/2014/11/17/hackfmi-sms-delivery-powered-by-twilio/" rel="alternate"></link><updated>2014-11-17T15:00:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-11-17:blog/2014/11/17/hackfmi-sms-delivery-powered-by-twilio/</id><summary type="html">&lt;p&gt;Ten days ago the regular &lt;a href="http://hackfmi.com/"&gt;HackFMI&lt;/a&gt; competition was held.
This year they tried sending SMS notifications to all participants which was powered
by &lt;a href="http://twilio.com"&gt;Twilio&lt;/a&gt; both in terms of infrastructure and cost.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Twilio&lt;/strong&gt; provided a &lt;strong&gt;20$ upgrade code&lt;/strong&gt; valid in the next 6 months for all new accounts.
This was officially announced at the opening ceremony (although at the last possible time) of the
competition, however no teams decided to incorporate SMS/Voice into their games.
I'm a little disappointed by this fact.&lt;/p&gt;
&lt;p&gt;In terms of software a simple &lt;a href="https://github.com/atodorov/django-twilio-sms"&gt;Django app&lt;/a&gt;
was used. It is by no means production ready but does the job and was quick to write.&lt;/p&gt;
&lt;p&gt;A little over 300 messages were sent with number distribution as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mtel - 166&lt;/li&gt;
&lt;li&gt;Globul - 86&lt;/li&gt;
&lt;li&gt;Vivacom - 50&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The total price for Mtel and Globul messages is roughly the same because sending
SMS to Globul via Twilio is as twice expensive. The total sums up to about 25 $.
HackFMI team used two accounts to send the messages - one using the provided
20$ upgrade code from Twilio and the second one was mine.&lt;/p&gt;</summary><category term="Twilio"></category></entry><entry><title>Speeding Up Celery Backends, Part 3</title><link href="http://atodorov.org/blog/2014/11/11/speeding-up-celery-backends-part-3/" rel="alternate"></link><updated>2014-11-11T15:59:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-11-11:blog/2014/11/11/speeding-up-celery-backends-part-3/</id><summary type="html">&lt;p&gt;In the second part of this article we've seen 
&lt;a href="/blog/2014/11/07/speeding-up-celery-backends-part-2/"&gt;how slow Celery actually is&lt;/a&gt;.
Now let's explore what happens inside and see if we can't speed things up.&lt;/p&gt;
&lt;p&gt;I've used &lt;a href="http://pycallgraph.slowchop.com/en/latest/"&gt;pycallgraph&lt;/a&gt; to create
call graph visualizations of my application. It has the nice feature to also show
execution time and use different colors for fast and slow operations.&lt;/p&gt;
&lt;p&gt;Full command line is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pycallgraph -v --stdlib --include ... graphviz -o calls.png -- ./manage.py celery_load_test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where the &lt;code&gt;--include&lt;/code&gt; is used to limit the graph to a particular Python module(s).&lt;/p&gt;
&lt;h2&gt;General findings&lt;/h2&gt;
&lt;p&gt;&lt;img alt="call graph" src="/images/celery/general.png" title="call graph" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first four calls is where most of the time is spent as seen on the picture. &lt;/li&gt;
&lt;li&gt;As it seems most of the slow down comes from Celery itself, not the underlying messaging
transport Kombu (not shown on picture)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;celery.app.amqp.TaskProducer.publish_task&lt;/code&gt; takes half of the execution time of
&lt;code&gt;celery.app.base.Celery.send_task&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;celery.app.task.Task.delay&lt;/code&gt; directly executes &lt;code&gt;.apply_async&lt;/code&gt; and can be skipped if one
rewrites the code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;More findings&lt;/h2&gt;
&lt;p&gt;In &lt;code&gt;celery.app.base.Celery.send_task&lt;/code&gt; there is this block of code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;349         with self.producer_or_acquire(producer) as P:
350             self.backend.on_task_call(P, task_id)
351             task_id = P.publish_task(
352                 name, args, kwargs, countdown=countdown, eta=eta,
353                 task_id=task_id, expires=expires,
354                 callbacks=maybe_list(link), errbacks=maybe_list(link_error),
355                 reply_to=reply_to or self.oid, **options
356             )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;producer&lt;/code&gt; is always None because delay() doesn't pass it as argument.
I've tried passing it explicitly to apply_async() as so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;djapp.celery&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="c"&gt;# app = debug_task._get_app() # if not defined in djapp.celery&lt;/span&gt;
&lt;span class="n"&gt;producer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amqp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;producer_pool&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;acquire&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;debug_task&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply_async&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;producer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;producer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However this doesn't speedup anything. If we replace the above code block like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;349         with producer as P:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;it blows up on the second iteration because producer and its channel is already None !?!&lt;/p&gt;
&lt;p&gt;If you are unfamiliar with the with statement in Python please read
&lt;a href="http://effbot.org/zone/python-with-statement.htm"&gt;this article&lt;/a&gt;. In short the with statement is
a compact way of writing try/finally. The underlying &lt;code&gt;kombu.messaging.Producer&lt;/code&gt; class does a
&lt;code&gt;self.release()&lt;/code&gt; on exit of the with statement.&lt;/p&gt;
&lt;p&gt;I also tried killing the with statement and using producer directly but with limited success. While
it was not released(was non None) on subsequent iterations the memory usage grew much more and there
wasn't any performance boost.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The with statement is used throughout both Celery and Kombu and I'm not at all sure if
there's a mechanism for keep-alive connections. My time constraints are limited and I'll probably
not spend anymore time on this problem soon.&lt;/p&gt;
&lt;p&gt;Since my use case involves task producer and consumers on localhost I'll try to workaround the
current limitations by using Kombu directly 
(see &lt;a href="https://gist.github.com/atodorov/2bc1fcd34531ad260ed7"&gt;this gist&lt;/a&gt;) with a transport that
uses either a UNIX domain socket or a name pipe (FIFO) file.&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category><category term="QA"></category></entry><entry><title>Speeding up Celery Backends, Part 2</title><link href="http://atodorov.org/blog/2014/11/07/speeding-up-celery-backends-part-2/" rel="alternate"></link><updated>2014-11-07T15:48:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-11-07:blog/2014/11/07/speeding-up-celery-backends-part-2/</id><summary type="html">&lt;p&gt;In the &lt;a href="/blog/2014/11/05/speeding-up-celery-backends/"&gt;first part&lt;/a&gt; of this
post I looked at a few celery backends and discovered they didn't meet my needs.
Why is the Celery stack slow? How slow is it actually?&lt;/p&gt;
&lt;h2&gt;How slow is Celery in practice&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Queue: 500`000 msg/sec&lt;/li&gt;
&lt;li&gt;Kombu:  14`000 msg/sec&lt;/li&gt;
&lt;li&gt;Celery:  2`000 msg/sec&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Detailed test description&lt;/h2&gt;
&lt;p&gt;There are three main components of the Celery stack: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Celery itself&lt;/li&gt;
&lt;li&gt;Kombu which handles the transport layer&lt;/li&gt;
&lt;li&gt;Python Queue()'s underlying everything&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using the &lt;a href="https://gist.github.com/atodorov/2bc1fcd34531ad260ed7"&gt;Queue and Kombu tests&lt;/a&gt;
run for 1 000 000 messages I got the following results:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Raw Python Queue: Msgs per sec: 500`000&lt;/li&gt;
&lt;li&gt;Raw Kombu without Celery where &lt;code&gt;kombu/utils/__init__.py:uuid()&lt;/code&gt; is set to return 0&lt;ul&gt;
&lt;li&gt;with json serializer: Msgs per sec: 5`988&lt;/li&gt;
&lt;li&gt;with pickle serializer: Msgs per sec: 12`820&lt;/li&gt;
&lt;li&gt;with the custom mem_serializer from &lt;a href="/blog/2014/11/05/speeding-up-celery-backends/"&gt;part 1&lt;/a&gt;:
Msgs per sec: 14`492&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; when the test is executed with 100K messages mem_serializer yielded
25`000 msg/sec then the performance is saturated. I've observed similar behavior 
with raw Python Queue()'s. I saw some cache buffers being managed internally to avoid OOM
exceptions. This is probably the main reason performance becomes saturated over a longer
execution.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using &lt;a href="https://gist.github.com/atodorov/0156cc41491a5e1ff953"&gt;celery_load_test.py&lt;/a&gt; modified to
loop 1 000 000 times I got 1908.0 tasks created per sec.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another interesting this worth outlining - in the kombu test there are these lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;with producers[connection].acquire(block=True) as producer:
    for j in range(1000000):
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If we swap them the performance drops down to 3875 msg/sec which is comparable with the
Celery results. Indeed inside Celery there's the same &lt;code&gt;with producer.acquire(block=True)&lt;/code&gt;
construct which is executed every time a new task is published. Next I will be looking 
into this to figure out exactly where the slowliness comes from.&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category><category term="QA"></category></entry><entry><title>Speeding up Celery Backends, Part 1</title><link href="http://atodorov.org/blog/2014/11/05/speeding-up-celery-backends/" rel="alternate"></link><updated>2014-11-05T15:20:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-11-05:blog/2014/11/05/speeding-up-celery-backends/</id><summary type="html">&lt;p&gt;I'm working on an application which fires a lot of Celery tasks - the more
the better! Unfortunately Celery backends seem to be rather slow :(.
Using the &lt;a href="https://gist.github.com/atodorov/0156cc41491a5e1ff953"&gt;celery_load_test.py&lt;/a&gt;
command for Django I was able to capture some metrics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Amazon SQS backend: 2 or 3 tasks/sec&lt;/li&gt;
&lt;li&gt;Filesystem backend: 2000 - 2500 tasks/sec&lt;/li&gt;
&lt;li&gt;Memory backend: around 3000 tasks/sec&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not bad but I need in the order of 10000 tasks created per sec!
The other noticeable thing is that memory backend isn't much faster compared to
the filesystem one! NB: all of these backends actually come from the kombu package.&lt;/p&gt;
&lt;h2&gt;Why is Celery slow ?&lt;/h2&gt;
&lt;p&gt;Using &lt;code&gt;celery_load_test.py&lt;/code&gt; together with 
&lt;a href="/blog/2014/11/05/performance-profiling-in-python-with-cprofile/"&gt;cProfile&lt;/a&gt; I
was able to pin-point some problematic areas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;kombu/transports/virtual/__init__.py&lt;/code&gt;: class Channel.basic_publish() - does
self.encode_body() into base64 encoded string. Fixed with custom transport backend
I called fastmemory which redefines the body_encoding property:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@cached_property&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;body_encoding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Celery uses json or pickle (or other) serializers to serialize the data.
While json yields between 2000-3000 tasks/sec, pickle does around 3500 tasks/sec.
Replacing with a custom serializer which just returns
the objects (since we read/write from/to memory) yields about 4000 tasks/sec tops:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kombu.serialization&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;register&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;

&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mem_serializer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;application/x-memory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;content_encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;binary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;kombu/utils/__init__.py&lt;/code&gt;: def uuid() - generates random unique identifiers
which is a slow operation. Replacing it with &lt;code&gt;return "00000000"&lt;/code&gt; boosts performance
to 7000 tasks/sec.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's clear that a constant UUID is not of any practical use but serves well to illustrate
how much does this function affect performance. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;
Subsequent executions of &lt;code&gt;celery_load_test&lt;/code&gt; seem to report degraded performance even with
the most optimized transport backend. I'm not sure why is this. One possibility is the random
UUID usage in other parts of the Celery/Kombu stack which drains entropy on the system and
generating more random numbers becomes slower. If you know better please tell me!&lt;/p&gt;
&lt;p&gt;I will be looking for a better understanding
of these IDs in Celery and hope to be able to produce a faster uuid() function. Then I'll be
exploring the transport stack even more in order to reach the goal of 10000 tasks/sec.
If you have any suggestions or pointers please share them in the comments.&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category><category term="QA"></category></entry><entry><title>Performance Profiling in Python with cProfile</title><link href="http://atodorov.org/blog/2014/11/05/performance-profiling-in-python-with-cprofile/" rel="alternate"></link><updated>2014-11-05T14:40:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-11-05:blog/2014/11/05/performance-profiling-in-python-with-cprofile/</id><summary type="html">&lt;p&gt;This is a quick reference on profiling Python applications with
&lt;a href="https://docs.python.org/2/library/profile.html#module-cProfile"&gt;cProfile&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python -m cProfile -s &lt;span class="nb"&gt;time &lt;/span&gt;application.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output is sorted by execution time &lt;code&gt;-s time&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;     &lt;span class="mi"&gt;9072842&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calls&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8882140&lt;/span&gt; &lt;span class="nx"&gt;primitive&lt;/span&gt; &lt;span class="nx"&gt;calls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;9.830&lt;/span&gt; &lt;span class="nx"&gt;CPU&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;

   &lt;span class="nx"&gt;Ordered&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;internal&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;

   &lt;span class="nx"&gt;ncalls&lt;/span&gt;  &lt;span class="nx"&gt;tottime&lt;/span&gt;  &lt;span class="nx"&gt;percall&lt;/span&gt;  &lt;span class="nx"&gt;cumtime&lt;/span&gt;  &lt;span class="nx"&gt;percall&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;lineno&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;61868&lt;/span&gt;    &lt;span class="mf"&gt;0.575&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.861&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="kr"&gt;abstract&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;41250&lt;/span&gt;    &lt;span class="mf"&gt;0.527&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.660&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nx"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;61863&lt;/span&gt;    &lt;span class="mf"&gt;0.405&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;1.054&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="kr"&gt;abstract&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;as_dict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;41243&lt;/span&gt;    &lt;span class="mf"&gt;0.343&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;1.131&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nx"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uuid4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="mi"&gt;577388&lt;/span&gt;    &lt;span class="mf"&gt;0.338&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.649&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="kr"&gt;abstract&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;46&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;genexpr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;20622&lt;/span&gt;    &lt;span class="mf"&gt;0.289&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;8.824&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;331&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send_task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;61907&lt;/span&gt;    &lt;span class="mf"&gt;0.232&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.477&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nx"&gt;datastructures&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;467&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__getitem__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;20622&lt;/span&gt;    &lt;span class="mf"&gt;0.225&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;9.298&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;455&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;apply_async&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;61863&lt;/span&gt;    &lt;span class="mf"&gt;0.218&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;2.502&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="kr"&gt;abstract&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__copy__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;20621&lt;/span&gt;    &lt;span class="mf"&gt;0.208&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;4.766&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nx"&gt;amqp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;208&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;publish_task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="mi"&gt;462640&lt;/span&gt;    &lt;span class="mf"&gt;0.193&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.247&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="mi"&gt;515525&lt;/span&gt;    &lt;span class="mf"&gt;0.162&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.193&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="kr"&gt;abstract&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;41246&lt;/span&gt;    &lt;span class="mf"&gt;0.153&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.633&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nx"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the example above (actual application) first line is kombu's
&lt;code&gt;abstract.py: class Object(object).__init__()&lt;/code&gt;
and the second one is Python's
&lt;code&gt;uuid.py: class UUID().__init__()&lt;/code&gt;.&lt;/p&gt;</summary><category term="Python"></category><category term="QA"></category></entry><entry><title>How Mtel, the Biggest Mobile Operator in Bulgaria, Fucked-Up Their Online Invoice System</title><link href="http://atodorov.org/blog/2014/10/14/mtel-fuck-up-online-invoices/" rel="alternate"></link><updated>2014-10-14T09:08:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-10-14:blog/2014/10/14/mtel-fuck-up-online-invoices/</id><summary type="html">&lt;p&gt;Prompted by &lt;a href="http://radorado.me/"&gt;Rado's&lt;/a&gt; post about
&lt;a href="https://www.facebook.com/radorado.radoslav.georgiev/posts/10204276374941470"&gt;Mtel not fixing a business customer Internet connection&lt;/a&gt;
I want to tell you a story about how the big company totally fucked up their
online invoice system and give you a few more hints about how stupidity
reigns supreme even in big companies, especially in Bulgaria.&lt;/p&gt;
&lt;p&gt;I've never received a paper invoice for my phone bill and used the website to access any information
about my bills and calls duration, etc. The problem is that I ported my number to another operator.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Porting a number away from Mtel automatically cuts access to your previous invoices online&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;The problem in technical terms&lt;/h2&gt;
&lt;p&gt;This is a tech blog so let's be technical. Users can register at Mtel's website via
username and password. If they are customers then they can add their numbers to their
profile. Once the number is verified (via SMS code), the user has access to additional services
one of which is online invoices and monthly usage reports.&lt;/p&gt;
&lt;p&gt;Migrating away to another operator "erases" your number from the system but
this is not true actually. All the information is still there because they can give me
print outs if I pay all the extra fees and simply because no business will voluntarily
erase their database records.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The genius who designed the &lt;em&gt;if-number-migrated-then-delete-from-user-profile-and-cut-off-access&lt;/em&gt;
business process/software implementation is the biggest idiot in the world.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;How Mtel handled my complaint&lt;/h2&gt;
&lt;p&gt;My request for
explanation (see below) was answered with a nice letter, basically telling me to piss off. None of my
questions were answered. To make things worse they want to charge extra fees for detailed print outs. &lt;/p&gt;
&lt;p&gt;What I've asked for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To be granted access back to all of my invoices online. Not only I paid for them but this
is something of a personal information;&lt;/li&gt;
&lt;li&gt;To be given copies of my last 5 invoices, preferably via email;&lt;/li&gt;
&lt;li&gt;To be given explanation why my online access to previous invoices was cut off;&lt;/li&gt;
&lt;li&gt;Mtel to stop doing this and allow access to online invoices for everyone of their past
or current customers;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've also told them I'm available to help them fix their system if they don't have
the resources to do so (hint, hint: it's an if-then condition or something very close I bet).&lt;/p&gt;
&lt;p&gt;A copy of my complaint and the response to it (in Bulgarian only):&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;Complaint&amp;quot;" src="/images/mtel/complaint_01.jpg" title="Complaint" /&gt;
&lt;img alt="&amp;quot;Complaint&amp;quot;" src="/images/mtel/complaint_01.jpg" title="Complaint" /&gt;
&lt;img alt="&amp;quot;Response&amp;quot;" src="/images/mtel/response.jpg" title="Response" /&gt;&lt;/p&gt;</summary></entry><entry><title>Shutdown Your Startup in 7 Steps</title><link href="http://atodorov.org/blog/2014/10/13/shutdown-your-startup-in-7-steps/" rel="alternate"></link><updated>2014-10-13T14:17:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-10-13:blog/2014/10/13/shutdown-your-startup-in-7-steps/</id><summary type="html">&lt;p&gt;A month ago one of my startups Difio stopped working forever.
This is the story of how to go about shutting down a working
web service and not about why it came around to this.&lt;/p&gt;
&lt;h2&gt;Step #1: Disable new registrations&lt;/h2&gt;
&lt;p&gt;You obviously need to make sure new customers
arriving at your web site will not sing up to only find the service is
shutting down later.&lt;/p&gt;
&lt;p&gt;Disable whatever sign-on/registration system you have in place
but leave currently registered users to login as they wish.&lt;/p&gt;
&lt;h2&gt;Step #2: Disable payments&lt;/h2&gt;
&lt;p&gt;Difio had paying customers, just not enough of them and it was based on
a subscription model which was automatically renewed without any interaction
from the customer.&lt;/p&gt;
&lt;p&gt;The first thing I did was to disable all payments for the service which
was quite easy (just a few comments) because Difio used an external payment
processor.&lt;/p&gt;
&lt;p&gt;Next thing was to go through all subscriptions that were still active and
cancel them. This prevented the payment processor to automatically charge
the customers next time their subscription renewal was due.&lt;/p&gt;
&lt;p&gt;Because all subscriptions were charged in advance and when canceled were
still considered active (due to expire at some later date) Difio had to
keep operating at least one month after all subscriptions have been canceled.&lt;/p&gt;
&lt;h2&gt;Step #3: Notify all customers that you are shutting down&lt;/h2&gt;
&lt;p&gt;I scheduled this to happen right after the last subscription was canceled.
An email to everyone who registered to the website and a blog post should work
for most startups. See ours &lt;a href="http://www.dif.io/blog/2014/08/10/difio-is-shutting-down/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Make sure to provide a gratis period if necessary. Difio had a gratis period
of one month after the shutdown announcement.&lt;/p&gt;
&lt;h2&gt;Step #4: Disable all external triggers&lt;/h2&gt;
&lt;p&gt;Difio was a complex piece of software which relied on external triggers like
web hooks and repetitive tasks executed by cron.&lt;/p&gt;
&lt;p&gt;Disabling these will prevent external services or hosting providers 
getting errors about your URLs not being accessible. It is just polite
to do so. &lt;/p&gt;
&lt;p&gt;You may want to keep these still operational during the gratis period
before the physical shutdown or disable them straight away. In Difio's
case they were left operational because there were customers who have paid
in advance and relied on this functionality.&lt;/p&gt;
&lt;h2&gt;Step #5: Prepare your 'Service Disabled' banner&lt;/h2&gt;
&lt;p&gt;You will probably want to let people know why something isn't working
as it used (or is expected) to be. A simple page explaining that
you're going to shut down should be enough. &lt;/p&gt;
&lt;p&gt;Difio required the user to be logged in to see most of the website.
This made it very easy to redirect everything to the same page.
A few more places were linking to public URLs which were manually rewritten
to point to the same 'Service Disabled' page.&lt;/p&gt;
&lt;p&gt;It is the same page used previously to redirect new registrations to.&lt;/p&gt;
&lt;h2&gt;Step #6: Terminate all processing resources&lt;/h2&gt;
&lt;p&gt;Difio used both AWS EC2 instances and an OpenShift PaaS instance to do its
processing. Simply terminating all of them was enough. The only thing left
is a couple of static HTML pages behind the domain.&lt;/p&gt;
&lt;h2&gt;Step #7: Database archival&lt;/h2&gt;
&lt;p&gt;The last thing you need to do is archive your database. Although the
startup is out of business already you have gathered additional information
which may come handy at a later time.&lt;/p&gt;
&lt;p&gt;Difio didn't collect any personal information about its users, except email
and didn't store financial information either. This made it safe to just make
a backup of the database and leave it lurking around on disk. &lt;/p&gt;
&lt;p&gt;However beware 
if you have collected personal and/or financial information from your customers.
You may want to erase/anonymize some of it before doing your backups and
probably safeguard them from unauthorized access.&lt;/p&gt;
&lt;p&gt;That's it, your startup is officially dead now! Let me know if I've missed 
something in the comments below.&lt;/p&gt;</summary><category term="start-up"></category></entry><entry><title>Traction: A Startup Guide to Getting Customers</title><link href="http://atodorov.org/blog/2014/09/30/traction-a-startup-guide-to-getting-customers/" rel="alternate"></link><updated>2014-09-30T10:43:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-09-30:blog/2014/09/30/traction-a-startup-guide-to-getting-customers/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Many entrepreneurs who build great products simply don't have a good distribution strategy.&lt;/p&gt;
&lt;p&gt;Mark Andreessen, venture capitalist&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/B00N06Y2DW/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00N06Y2DW&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=4GDHEYN66CPL7L72"&gt;Traction: A Startup Guide to Getting Customers&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B00N06Y2DW" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
introduces startup founders and employees to the "Bullseye Framework," 
a five-step process successful companies use to get traction. 
This framework helps founders find the marketing channel that will be key to unlocking the next stage of growth. &lt;/p&gt;
&lt;p&gt;Too often, startups building a product struggle with traction once they launch. 
This struggle has startups trying random tactics - some ads, a blog post or two - in an unstructured way that leads to failure. 
Traction shows readers how to systematically approach marketing, and covers how successful businesses have grown through each of
the following 19 channels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Viral Marketing&lt;/li&gt;
&lt;li&gt;Public Relations (PR)&lt;/li&gt;
&lt;li&gt;Unconventional PR&lt;/li&gt;
&lt;li&gt;Search Engine Marketing (SEM)&lt;/li&gt;
&lt;li&gt;Social and Display Ads&lt;/li&gt;
&lt;li&gt;Offline Ads&lt;/li&gt;
&lt;li&gt;Search Engine Optimization (SEO)&lt;/li&gt;
&lt;li&gt;Content Marketing&lt;/li&gt;
&lt;li&gt;Email Marketing&lt;/li&gt;
&lt;li&gt;Engineering as Marketing&lt;/li&gt;
&lt;li&gt;Target Market Blogs&lt;/li&gt;
&lt;li&gt;Business Development (BD)&lt;/li&gt;
&lt;li&gt;Sales&lt;/li&gt;
&lt;li&gt;Affiliate Programs&lt;/li&gt;
&lt;li&gt;Existing Platforms&lt;/li&gt;
&lt;li&gt;Trade Shows&lt;/li&gt;
&lt;li&gt;Offline Events&lt;/li&gt;
&lt;li&gt;Speaking Engagements&lt;/li&gt;
&lt;li&gt;Community Building &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The book is very easy to read and full of practical advice which should serve as a starting point and give you
more ideas how to approach a particular distribution channel. It took me two days to read and 
I already had some ideas to test even before reading the whole of it. My next steps are to apply the principles
to my current startup &lt;a href="http://obuvki41plus.com"&gt;Obuvki 41 Plus&lt;/a&gt; and a future one I have in mind.&lt;/p&gt;
&lt;p&gt;To anyone building a startup of any kind I would recommend the following selection of books:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/gp/product/1591847788/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1591847788&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=IR465SOS3KA4BJLF"&gt;Hooked: How to Build Habit-Forming Products&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1591847788" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; - 
to learn how to make products (especially mobile apps) that customers keep using on their own without
additional external marketing (&lt;a href="/blog/2014/01/28/book-review-january-2014/"&gt;review here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/gp/product/1449334911/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449334911&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=MHLGJPMJDO4FJDQB"&gt;UX for Lean Startups&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1449334911" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; -
lean product development (&lt;a href="/blog/2013/12/09/book-review-ux-for-lean-startups/"&gt;review here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/gp/product/B00N06Y2DW/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00N06Y2DW&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=AYMPCBH4MP5PC6G5"&gt;Traction: A Startup Guide to Getting Customers&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B00N06Y2DW" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; -
customer growth development&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Start reading right now (and also support this blog) by following the links below: &lt;/p&gt;
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ss&amp;ref=ss_til&amp;ad_type=product_link&amp;tracking_id=atodorovorg-20&amp;marketplace=amazon&amp;region=US&amp;placement=1591847788&amp;asins=1591847788&amp;linkId=SXJNPAOV2J4SKU4G&amp;show_border=true&amp;link_opens_in_new_window=true"&gt;
&lt;/iframe&gt;

&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ss&amp;ref=ss_til&amp;ad_type=product_link&amp;tracking_id=atodorovorg-20&amp;marketplace=amazon&amp;region=US&amp;placement=1449334911&amp;asins=1449334911&amp;linkId=7UM2YUNUK5UNVPSI&amp;show_border=true&amp;link_opens_in_new_window=true"&gt;
&lt;/iframe&gt;

&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ss&amp;ref=ss_til&amp;ad_type=product_link&amp;tracking_id=atodorovorg-20&amp;marketplace=amazon&amp;region=US&amp;placement=B00N06Y2DW&amp;asins=B00N06Y2DW&amp;linkId=WS2AWWLBNFAFA5PO&amp;show_border=true&amp;link_opens_in_new_window=true"&gt;
&lt;/iframe&gt;</summary><category term="books"></category><category term="start-up"></category></entry><entry><title>Book Review: The 4-Hour Workweek</title><link href="http://atodorov.org/blog/2014/08/03/book-review-4-hour-workweek/" rel="alternate"></link><updated>2014-08-03T11:47:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-08-03:blog/2014/08/03/book-review-4-hour-workweek/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/0307465357/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0307465357&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=MNAE55VHLT2NVN2Z"&gt;The 4-Hour Workweek: Escape 9-5, Live Anywhere, and Join the New Rich&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0307465357" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Timothy Ferriss is one of my all time favorite books.
The basic idea is to ditch the traditional working environment
and work less utilizing more automation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Whenever you find yourself on the side of the majority, it is time to pause and reflect.&lt;/p&gt;
&lt;p&gt;MARK TWAIN&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The book starts with a story about the Tango World Championship semifinals in
Argentina and poses the question 
&lt;em&gt;“What on earth would I be doing right now, if I hadn’t left my job and the U.S. over a year ago?”&lt;/em&gt;
Can you answer this? Keep reading!&lt;/p&gt;
&lt;h2&gt;Step 1: Definition&lt;/h2&gt;
&lt;p&gt;Tim defines two groups of people. The Deferrers, those who save it all for the
end only to find that life has passed them by and the New Rich.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The employee who rearranges his schedule and negotiates a remote work agreement
  to achieve 90% of the results in one-tenth of the time, which frees him to
  practice cross-country skiing and take road trips with his family two weeks per
  month.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The business owner who eliminates the least profitable customers and projects,
  outsources all operations entirely, and travels the world collecting rare
  documents, all while working remotely on a website to showcase her own
  illustration work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The student who elects to risk it all—which is nothing—to establish an online
  video rental service that delivers $5,000 per month in income from a small niche
  of Blu-ray aficionados, a two-hour-per-week side project that allows him to work
  full-time as an animal rights lobbyist.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The possibilities are endless. What defines the New Rich is their unrestricted mobility
and availability of free time! Money alone doesn't count anymore. Its practical value is
multiplied by the &lt;em&gt;what&lt;/em&gt;, &lt;em&gt;when&lt;/em&gt;, &lt;em&gt;where&lt;/em&gt; and with &lt;em&gt;whom&lt;/em&gt; you do what you do.&lt;/p&gt;
&lt;p&gt;From that point of view earning less money but spending far less time on that is
much more powerful than working 80 hours per week for a million dollars.&lt;/p&gt;
&lt;h2&gt;Step 2: Elimination&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;One does not accumulate but eliminate.
It is not daily increase but daily decrease.
The height of cultivation always runs to simplicity.&lt;/p&gt;
&lt;p&gt;BRUCE LEE&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this chapter Tim talks about developing selective ignorance of information,
the 80-20 &lt;a href="https://en.wikipedia.org/wiki/Pareto_principle"&gt;Pareto principle&lt;/a&gt;,
gives tips for faster reading and battling interruption like checking your e-mail
and smart phone.&lt;/p&gt;
&lt;h2&gt;Step 3: Automation&lt;/h2&gt;
&lt;p&gt;Outsourcing and technical automation are the keys here but there is more.
Tim talks about income autopilot - designing your income sources in such a way
so that they don't consume much of your time and continue to produce income
even after the initial time investment.&lt;/p&gt;
&lt;p&gt;Think about the following: working a 9-to-5 job yields an income only during
office hours. Having written a book yields income whenever a copy is sold, which
is while you're asleep and long after the initial time investment required to
write the book.&lt;/p&gt;
&lt;p&gt;Then you can diversify your income streams and voila - you're making money
automatically :)&lt;/p&gt;
&lt;p&gt;Tim also refers to the business management side of things. Why become the
manager when you can be the owner of the business ? It's kind of hard to
let virtual assistants run your business and resolve issues for you but that
frees up your time which is more valuable.&lt;/p&gt;
&lt;p&gt;In between he also mentions why as a business you should keep prices high!
Counter intuitive, isn't it? &lt;/p&gt;
&lt;p&gt;This is easier said than done but I've been working on it for the last couple
of years and its starting to take shape nicely so there's truth to it.&lt;/p&gt;
&lt;h2&gt;Step 4: Liberation&lt;/h2&gt;
&lt;p&gt;This is the chapter which helps you escape the 9-5 office hours through some
interesting techniques. This is not only for freelancers like myself but also
for the regular employee. One of the principles is to ask for forgiveness,
not a permission (which will be denied anyway).&lt;/p&gt;
&lt;p&gt;Another one boils down to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Increase company investment into you so that the loss is greater if you quit,
e.g. corporate training;&lt;/li&gt;
&lt;li&gt;Prove increased output offsite - call in sick Tuesday to Thursday but continue
working. Produce more and leave some sort of digital trail, emails, etc;&lt;/li&gt;
&lt;li&gt;Prepare the quantifiable business benefit - you need to present remote working
as a good business decision and not a personal perk, for example you've managed to
bill more hours to your company's customers. As explanation use removal of commute
and fewer distractions from the office noise;&lt;/li&gt;
&lt;li&gt;Propose a revocable trial period - plan everything that will be said but play it
cool and casual. You want to avoid the impression that remote working will be something
permanent (for now). Find a relaxed afternoon and give it a shot!&lt;/li&gt;
&lt;li&gt;Expand remote time by making sure you're most productive on your days out of the
office and if need be lower the productivity inside the office a bit. Then give it
a shot for a longer trial period or more days working remotely;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's also another one called the hourglass approach, so named because you use a
long proof-of-concept up front to get a short remote agreement and then negotiate
back up to full-time out of the office.&lt;/p&gt;
&lt;p&gt;I personally had it easier in terms of remote working. Before I became a contractor
I've been working with folks in the US to whom it doesn't really matter whether I was
based in Czech Republic or in Bulgaria. Also I've been sick at that time and had an
important project to manage which all just played nicely in proving that I
can be productive in any location.&lt;/p&gt;
&lt;p&gt;Then comes one of my favorite sections &lt;em&gt;Killing Your Job&lt;/em&gt;. Boy you just have to read
this. Lots of people need to read this! Everything you are afraid of and keeps you from
quitting your job is total bulshit. There are always options. It might be emotionally
difficult, but you won’t starve!&lt;/p&gt;
&lt;h2&gt;Extended edition&lt;/h2&gt;
&lt;p&gt;This extended edition of the book completes with blog articles and bonus sections
like &lt;em&gt;Killing Your BlackBerry&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’m a 37-year-old Subway franchisee owning and operating 13 stores. 
Been doing this for seven years. Prior to reading 4HWW I was KING at W4W
(translate: work for work’s sake)&lt;/p&gt;
&lt;p&gt;Crunched my “always open” workweek into four days and 20 hours. I immediately
began taking Mondays OFF, giving me a nice three-day weekend.
Tuesday to Friday I work 11 A.M.–4 P.M. (20 hours per week).&lt;/p&gt;
&lt;p&gt;I was forced to appraise everything through the 80/20 filter and found that
50% of the 80% was pure crap and the other 50% of the 80% could be done by someone
on my payroll.&lt;/p&gt;
&lt;p&gt;I still carry portable e-mail but I’ve killed “auto-sync”.
Now it’s on a Tues–Fri, 11 A.M.–4 P.M. schedule.&lt;/p&gt;
&lt;p&gt;My e-mail autoresponder eliminated 50% of my e-mail within two weeks as people sending
me meaningless crap got fed up looking at my autoresponder and stopped including me.&lt;/p&gt;
&lt;p&gt;ANDREW, self-employed in the UK&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="books"></category></entry><entry><title>Book Review: How to Win Friends</title><link href="http://atodorov.org/blog/2014/07/19/book-review-how-to-win-friends/" rel="alternate"></link><updated>2014-07-19T18:05:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-07-19:blog/2014/07/19/book-review-how-to-win-friends/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/0091906350/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0091906350&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=Q2DBNO4UJBZ6HQX2"&gt;How to Win Friends &amp;amp; Influence People&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0091906350" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Dale Carnegie teaches you how to deal with people. The book briefly explains
some easy to use principles, why and how they work and then provides tons of
real life examples behind those principles. This book is a must for everyone but
especially parents and teachers and folks in sales, management or business leaders.&lt;/p&gt;
&lt;p&gt;I will only highlight the key points. What follows are direct quotes from the book.&lt;/p&gt;
&lt;h2&gt;Part One: Fundamental Techniques in Handling People&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;'If You Want to Gather Honey, Don't Kick Over the Beehive'&lt;/em&gt; - PRINCIPLE 1: Don't criticise, condemn or complain.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Big Secret of Dealing with People&lt;/em&gt; - PRINCIPLE 2: Give honest and sincere appreciation.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;'He Who Can Do This Has the Whole World with Him. He Who Cannot Walks a Lonely Way'&lt;/em&gt; - 
PRINCIPLE 3: Arouse in the other person an eager want.&lt;/p&gt;
&lt;h2&gt;Part Two: Six Ways to Make People Like You&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Do This and You'll Be Welcome Anywhere&lt;/em&gt; - PRINCIPLE 1: Become genuinely interested in other people.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A Simple Way to Make a Good First Impression&lt;/em&gt; - PRINCIPLE 2: Smile.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If You Don't Do This, You Are Headed for Trouble&lt;/em&gt; - PRINCIPLE 3: 
Remember that a person's name is to that person the sweetest and most important sound in any language.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;An Easy Way to Become a Good Conversationalist&lt;/em&gt; - PRINCIPLE 4: Be a good listener. 
Encourage others to talk about themselves.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;How to Interest People&lt;/em&gt; - PRINCIPLE 5: Talk in terms of the other person's interests.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;How to Make People Like You Instantly&lt;/em&gt; - PRINCIPLE 6: Make the other person feel important – and do it sincerely.&lt;/p&gt;
&lt;h2&gt;Part Three: How to Win People to Your Way of Thinking&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;You Can't Win an Argument&lt;/em&gt; - PRINCIPLE 1: The only way to get the best of an argument is to avoid it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A Sure Way of Making Enemies – and How to Avoid It&lt;/em&gt; - PRINCIPLE 2: Show respect for the other person's opinions.
Never say, 'You're wrong'.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If You're Wrong, Admit It&lt;/em&gt; - PRINCIPLE 3: If you are wrong, admit it quickly and emphatically.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A Drop of Honey&lt;/em&gt; - PRINCIPLE 4: Begin in a friendly way.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Secret of Socrates&lt;/em&gt; - PRINCIPLE 5: Get the other person saying 'yes, yes' immediately.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Safety Valve in Handling Complaints&lt;/em&gt; - PRINCIPLE 6: Let the other person do a great deal of the talking.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;How to Get Cooperation&lt;/em&gt; - PRINCIPLE 7: Let the other person feel that the idea is his or hers.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A Formula That Will Work Wonders for You&lt;/em&gt; - PRINCIPLE 8: Try honestly to see things from the other person's point of view.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What Everybody Wants&lt;/em&gt; - PRINCIPLE 9: Be sympathetic with the other person's ideas and desires.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;An Appeal That Everybody Likes&lt;/em&gt; - PRINCIPLE 10: Appeal to the nobler motives.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Movies Do It. TV Does It. Why Don't You Do It?&lt;/em&gt; - PRINCIPLE 11: Dramatise your ideas.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;When Nothing Else Works, Try This&lt;/em&gt; - PRINCIPLE 12: Throw down a challenge.&lt;/p&gt;
&lt;h2&gt;Part Four: Be a Leader: How to Change People Without Giving Offense or Arousing Resentment&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;If You Must Find Fault, This Is the Way to Begin&lt;/em&gt; - PRINCIPLE 1: Begin with praise and honest appreciation.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;How to Criticise – and Not Be Hated for It&lt;/em&gt; - PRINCIPLE 2: Call attention to people's mistakes indirectly.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Talk About Your Own Mistakes First&lt;/em&gt; - PRINCIPLE 3: Talk about your own mistakes before criticising the other person.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No One Likes to Take Orders&lt;/em&gt; - PRINCIPLE 4: Ask questions instead of giving direct orders.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Let the Other Person Save Face&lt;/em&gt; - PRINCIPLE 5: Let the other person save face.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;How to Spur People On to Success&lt;/em&gt; - PRINCIPLE 6: Praise the slightest improvement and 
praise every improvement. Be 'hearty in your approbation and lavish in your praise'.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Give a Dog a Good Name&lt;/em&gt; - PRINCIPLE 7: Give the other person a fine reputation to live up to.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Make the Fault Seem Easy to Correct&lt;/em&gt; - PRINCIPLE 8: Use encouragement. Make the fault seem easy to correct.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Making People Glad to Do What You Want&lt;/em&gt; - PRINCIPLE 9: Make the other person happy about doing the thing you suggest.&lt;/p&gt;</summary><category term="books"></category></entry><entry><title>SNAKE is no Longer Needed to Run Installation Tests in Beaker</title><link href="http://atodorov.org/blog/2014/07/18/snake-is-no-longer-needed-to-run-installation-tests-in-beaker/" rel="alternate"></link><updated>2014-07-18T23:05:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-07-18:blog/2014/07/18/snake-is-no-longer-needed-to-run-installation-tests-in-beaker/</id><summary type="html">&lt;p&gt;This is a quick status update for one of the pieces of
&lt;a href="/blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/"&gt;Fedora QA infrastructure&lt;/a&gt;
and mostly a self-note.&lt;/p&gt;
&lt;p&gt;Previously to control the kickstart configuration used during installation in Beaker one
had to either modify the job XML in Beaker or use SNAKE (&lt;code&gt;bkr workflow-snake&lt;/code&gt;) to render
a kickstart configuration from a Python template.&lt;/p&gt;
&lt;p&gt;SNAKE presented challenges when deploying and using
&lt;a href="https://beaker.fedoraproject.org"&gt;beaker.fedoraproject.org&lt;/a&gt; and is
virtually unmaintained.&lt;/p&gt;
&lt;p&gt;I present the new &lt;code&gt;bkr workflow-installer-test&lt;/code&gt; which uses Jinja2 templates to
generate a kickstart configuration when provisioning the system. This is already
available in beaker-client-0.17.1.&lt;/p&gt;
&lt;p&gt;The templates make use of all Jinja2 features (as far as I can tell) so you can create
very complex ones. You can even include snippets from one template into another if required.
The standard context that is passed to the template is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DISTRO&lt;/strong&gt; - if specified, the distro name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FAMILY&lt;/strong&gt; - as returned by Beaker server, e.g. &lt;em&gt;RedHatEnterpriseLinux6&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OS_MAJOR&lt;/strong&gt; and &lt;strong&gt;OS_MINOR&lt;/strong&gt; - also taken from Beaker server. e.g. OS_MAJOR=6 and OS_MINOR=5 for RHEL 6.5&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VARIANT&lt;/strong&gt; - if specified&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ARCH&lt;/strong&gt; - CPU architecture like x86_64&lt;/li&gt;
&lt;li&gt;any parameters passed to the test job with &lt;code&gt;--taskparam&lt;/code&gt;. They are processed last and can override previous values.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Installation related tests at &lt;a href="https://bitbucket.org/fedoraqa/fedora-beaker-tests"&gt;fedora-beaker-tests&lt;/a&gt;
have been updated with a &lt;code&gt;ks.cfg.tmpl&lt;/code&gt; templates to use with this new workflow.&lt;/p&gt;
&lt;p&gt;This workflow also has the ability to return boot arguments for the installer if needed. 
If any, they should be defined in a &lt;code&gt;{% block kernel_options %}{% endblock %}&lt;/code&gt;
block inside the template. A simpler variant is to define a comment line that stars with
&lt;em&gt;## kernel_options:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are still a few issues which need to be fixed before beaker.fedoraproject.org
can be used by the general public though. I will be writing another post about that
so stay tuned.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Tip: Collecting Emails - Webhooks for UserVoice and WordPress.com</title><link href="http://atodorov.org/blog/2014/07/12/tip-collecting-emails-with-webhooks-uservoice-wordpress/" rel="alternate"></link><updated>2014-07-12T23:15:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-07-12:blog/2014/07/12/tip-collecting-emails-with-webhooks-uservoice-wordpress/</id><summary type="html">&lt;p&gt;In my practice I like to use webhooks and integrate auxiliary services with
my internal processes or businesses. One of these is the collection of emails.
In this short article I'll show you an example of how to collect email addresses
from the comments of a WordPress.com blog and the UserVoice feedback/ticketing system.&lt;/p&gt;
&lt;h2&gt;WordPress.com&lt;/h2&gt;
&lt;p&gt;For your WordPress.com blog from the Admin Dashboard navigate to 
Settings -&amp;gt; Webhooks and add a new webhook with action &lt;code&gt;comment_post&lt;/code&gt;
and fields &lt;code&gt;comment_author&lt;/code&gt;, &lt;code&gt;comment_author_email&lt;/code&gt;. A simple
Django view that handles the input is shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@csrf_exempt&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hook_wp_comment_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Not a POST&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;hook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hook&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hook&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;comment_post&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Go away&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;comment_author&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;last_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;

    &lt;span class="n"&gt;details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;comment_author_email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;store_user_details&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;details&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OK&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;UserVoice&lt;/h2&gt;
&lt;p&gt;For UserVoice navigate to Admin Dashboard -&amp;gt; Settings -&amp;gt; Integrations -&amp;gt; 
Service Hooks and add a custom web hook for the New Ticket notification.
Then use a sample code like that:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@csrf_exempt&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hook_uservoice_new_ticket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Not a POST&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;event&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;new_ticket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Go away&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ticket&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;contact&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;store_user_details&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;details&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OK&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;store_user_details()&lt;/code&gt; is a function which handles the email/name received in the webhook,
possibly adding them to a database or anything else.&lt;/p&gt;
&lt;p&gt;I find webhooks extremely easy to setup and develop and used them whenever they are
supported by the service provider. What other services do you use webhooks for? Please
share your story in the comments.&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category><category term="start-up"></category></entry><entry><title>Software Design Vol. 1</title><link href="http://atodorov.org/blog/2014/06/30/software-design-vol-1/" rel="alternate"></link><updated>2014-06-30T23:22:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-06-30:blog/2014/06/30/software-design-vol-1/</id><summary type="html">&lt;p&gt;I'm starting a new series where I will share my thoughts about software design,
usability and other related topics with examples of items I like or dislike.
I've
&lt;a href="/blog/2013/05/30/why-vmware-multi-hypervisor-manager-architecture-is-wrong/"&gt;written before&lt;/a&gt;
about the topic so consider this post as a sequel. I'm starting with couple of
examples from the mobile world. Plese use the comments to tell if there is something
that you particulary like or dislike in software or hardware design
(and apologies to my readers for not being able to post more frequently lately).&lt;/p&gt;
&lt;h2&gt;BlackBerry Camera Burst Feature vs. Android&lt;/h2&gt;
&lt;p&gt;BlackBerry 10 Camera's burst mode is well made in my opinion. It is capable of
taking thousands of pictures and saving the to disk without interruption. Thus
I am capable of taking pictures of fast moving objects like flash lights.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Flash light" src="/images/flashlight.jpg" title="Flash light" /&gt;&lt;/p&gt;
&lt;p&gt;On the other hand I have access to an 
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=htc%20one&amp;linkCode=ur2&amp;tag=atodorovorg-20&amp;url=search-alias%3Daps&amp;linkId=CZ33VB6BARW7FWZS"&gt;HTC One smartphone&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
with Android. The burst
mode feature there is particularly crappy. It shoots between 20 to 50 photos
(haven't counted how much exactly), then takes a second to flash everything to disk,
then pops a question asking the user to select the best one and possibly delete
the rest. If you don't want all of this just tap the back button to return to
shooting mode.&lt;/p&gt;
&lt;h2&gt;BlackBerry Hub&lt;/h2&gt;
&lt;p&gt;Hub is another well designed application which integrates all of your accounts and
messaging into the core of the OS although other mobile OSes have a similar feature
as well if I'm not mistaken. I just mention it because it is easy and comfortable to use.&lt;/p&gt;
&lt;h2&gt;BlackBerry Memory Management&lt;/h2&gt;
&lt;p&gt;BlackBerry 10 OS memory management is particularly crappy with respect to
the end user. I'm not sure whether this is due to QNX being real-time OS
or just the Java stack keeping stuff in memory.&lt;/p&gt;
&lt;p&gt;After some usage my development Z10 will begin experiencing out of memory issues
(it has 1 GB of RAM vs. 2 GB in production hardware). This will lead to apps
crashing, web pages that were able to open, not being able to load and the most
annoying of all - camera starts taking pictures with random color spots.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Blackberry camera fail" src="/images/bbz10camerafail.jpg" title="BlackBerry Z10 camera fail" /&gt;&lt;/p&gt;
&lt;p&gt;After restarting the device everything is back to normal :(.&lt;/p&gt;
&lt;h2&gt;BlackBerry Date and Time Synchronization&lt;/h2&gt;
&lt;p&gt;This one I also hate a lot. It appears that the software is designed to
automatically synchronize over the Internet and without a reliable connection fails miserably.
After reboot (or even worse battery removal) the device will start with a fixed date and time
somewhere in the past. If it fails to synchronize or takes too long several things happen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Blackberry Hub application loads first (email and other accounts) which causes all sorts
of warnings of invalid SSL certificates. Which in their own right are annoying because Cancel
means dismiss the warning until the next connection retry; which blocks access to the main menu
for manual configuration;&lt;/li&gt;
&lt;li&gt;All images taken by the Camera app will be saved on disk with the wrong date which makes you think
they are gone; I've found this by accident while scrolling way back in my history looking for something
unrelated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Multiple File Selection&lt;/h2&gt;
&lt;p&gt;I haven't tested this explicitly on Android or other mobile devices but on BlackBerry
the user needs to tap each individual object to select it. My guess is this is similar
on all devices utilizing a touch screen.  However such interface makes it damn hard to
select a thousand files for deletion (the unusable results from the camera burst mode feature).
Luckily Z10 (and possibly others) has a shell application with &lt;code&gt;cp&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt; and &lt;code&gt;rm -f&lt;/code&gt; commands.&lt;/p&gt;</summary></entry><entry><title>Using D-Link DAP-1320 Wireless Range Extender with MAC Filtering</title><link href="http://atodorov.org/blog/2014/06/26/using-d-link-dap-1320-wireless-range-extender-with-mac-filtering/" rel="alternate"></link><updated>2014-06-26T10:10:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-06-26:blog/2014/06/26/using-d-link-dap-1320-wireless-range-extender-with-mac-filtering/</id><summary type="html">&lt;iframe style="width:120px;height:240px;float:left;display:inline-block;margin-right:10px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ss&amp;ref=ss_til&amp;ad_type=product_link&amp;tracking_id=atodorovorg-20&amp;marketplace=amazon&amp;region=US&amp;placement=B00B0RQSD0&amp;asins=B00B0RQSD0&amp;linkId=R2B5GSDVQ7GHLAXK&amp;show_border=true&amp;link_opens_in_new_window=true"&gt;
&lt;/iframe&gt;

&lt;p&gt;Recently I've purchased a
&lt;a href="http://www.amazon.com/gp/product/B00B0RQSD0/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00B0RQSD0&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=ELZCDTH62GGNKJTL"&gt;wireless range extender&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B00B0RQSD0" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
as the one shown here. It had troubles connecting to the upstream Wi-Fi router
because it used MAC filtering instead of password security. Luckily there was
a &lt;a href="http://forums.dlink.com/index.php?topic=56386.0"&gt;forum thread&lt;/a&gt; which helped
me figure it out.&lt;/p&gt;
&lt;h2&gt;DAP 1320 uses two MAC addresses&lt;/h2&gt;
&lt;p&gt;Everything was working just fine with MAC filtering disabled on the upstream
router but failed miserably when enabled. I thought the MAC address provided
on the DAP 1320 packaging was wrong. &lt;/p&gt;
&lt;p&gt;It turned out the device had 2 addresses.
The one on the packaging is &lt;em&gt;70:62:B8:07:0B:76&lt;/em&gt; and it didn't matter if that
is enabled or disabled in the router settings. The second MAC is used when
trying to forward connections through the router. Both addresses differ by the
second symbol with a difference of 2. So I've enabled &lt;em&gt;72:62:B8:07:0B:76&lt;/em&gt;
in the router settings and everything worked like a charm.&lt;/p&gt;
&lt;h2&gt;Other findings&lt;/h2&gt;
&lt;p&gt;Unfortunately if a device is connected to the wifi extender's network it will
bypass the MAC filtering employed on the upstream wifi router. As much as I dislike
using passwords for Wi-Fi I had to configure one for the extended network.&lt;/p&gt;
&lt;p&gt;I've also found that when you save the configuration file from the device on your
hard drive it comes in a base64-encoded-line-by-line format. Pretty awkward.&lt;/p&gt;
&lt;p&gt;Another pleasant (but not entirely surprising) finding was that D-Link included
a written acknowledgment of using open source components and an offer to provide
source code upon request.&lt;/p&gt;</summary></entry><entry><title>Summary of Evolve Digital</title><link href="http://atodorov.org/blog/2014/06/11/summary-of-evolve-digital/" rel="alternate"></link><updated>2014-06-11T22:29:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-06-11:blog/2014/06/11/summary-of-evolve-digital/</id><summary type="html">&lt;p&gt;&lt;img alt="Grand Coalition for Digital Jobs" src="/images/evolve_digital.jpg" title="Grand Coalition for Digital Jobs" /&gt;&lt;/p&gt;
&lt;p&gt;Yesterday I've visited an event organized by the 
&lt;a href="http://www.atlantic-club.org/index.php?en"&gt;Atlantic Club of Bulgaria&lt;/a&gt; which
officially marked the launch of a digital national alliance in Bulgaria. This is
part of an initiative of the European Commission, called 
&lt;a href="http://ec.europa.eu/digital-agenda/en/grand-coalition-digital-jobs"&gt;Grand Coalition for Digital Jobs&lt;/a&gt;,
which aims to address the lack of
sufficient amount and quality professionals in Europe working in the
field of Information and Communication technologies.&lt;/p&gt;
&lt;p&gt;The first part was few short keynotes, including one from deputy prime minister
and memorandum signing and group photo. In the keynotes (and afterwards)
the stress was on the lack of relevant ICT skills and the need of an estimated
1 million digital workers by 2020 in EU alone.&lt;/p&gt;
&lt;p&gt;The next two sessions were panel discussions. The first one presenting the local 
chapter of the Digital Coalition in Bulgaria. &lt;/p&gt;
&lt;p&gt;The goals of the coalition are to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;help more people master more digital skills (not only as developers but also
proper usage of social media, how to create content, etc)&lt;/li&gt;
&lt;li&gt;enable more people to choose digital jobs&lt;/li&gt;
&lt;li&gt;help local talents present themselves on the global scene&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How it (is supposed to) works:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;initiate own ideas and propose them for implementation (to the ICT industry and broad public I guess)&lt;/li&gt;
&lt;li&gt;stimulate learning through doing, learning by example using real use cases&lt;/li&gt;
&lt;li&gt;help (and possibly sponsor) outside projects and ideas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then the various companies supporting the coalition pledged how they are going to
help. The most interesting news from this panel was the announcement of a new HP
data center in Sofia which will be used as a training lab with access available to
students.&lt;/p&gt;
&lt;p&gt;The second panel was about education and how to bridge the gap! The interesting points were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ministry of Education and Science admits they have finally realized that our educational
system and programs are behind current tendencies and need concrete steps in order to boost
education and science research;&lt;/li&gt;
&lt;li&gt;Samsung will open their innovation lab at Sofia University to outside students as well;&lt;/li&gt;
&lt;li&gt;We need to pay more attention to content and training of teachers because they also have
a skills gap while young children do not;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I particularly liked what Prof. Petar Kenderov from the Institute of Mathematics and Informatics
at Bulgarian Academy of Sciences said - in the outside world children are constantly sharing
and communicating with each other while at school (also to some extent in universities) they
are expected to not communicate, not share and keep quiet. He emphasized the value of learning through
experimentation vs. learning through reading and writing, e.g. the current way things work
and the old way of teaching. &lt;/p&gt;
&lt;p&gt;Another thing that was obvious was that otherwise competing companies (e.g. Microsoft, Oracle, SAP,
VMware) were working together to fix some of the problems mentioned. However I'm a bit skeptical
that large multi-national companies will be flexible enough to make a positive change.
I'd bet on the independent organizations like &lt;a href="https://hackbulgaria.com/"&gt;HackBulgaria&lt;/a&gt; and
Svetlin Nakov's &lt;a href="https://softuni.bg/"&gt;Software University&lt;/a&gt; or initiatives by local Bulgarian companies
like the already proven &lt;a href="http://academy.telerik.com/"&gt;Telerik Academy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's the entire program of the event, for anyone interested:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“EVOLVE DIGITAL”
10th June 2014 (Tuesday)&lt;/p&gt;
&lt;p&gt;10:00 – 10:10 Opening: Gergana Passy, Digital Champion Bulgaria&lt;/p&gt;
&lt;p&gt;10:10 – 10:20 Daniela Bobeva, Deputy Prime-Minister of the Republic of Bulgaria&lt;/p&gt;
&lt;p&gt;10:20 – 10:30 Constantijn van Oranje, Head of Cabinet of Vice-President of EC Neelie Kroes&lt;/p&gt;
&lt;p&gt;10:30 – 10:40 Jonathan Murray, Director, Digital Europe
      Special guest: Sandi Češko, Founder &amp;amp; President, Studio Moderna&lt;/p&gt;
&lt;p&gt;10:40 – 10:50 Memorandum Signing and Group Photo&lt;/p&gt;
&lt;p&gt;10:50 – 11:00 Pause&lt;/p&gt;
&lt;p&gt;11:00 – 12:15 Digital Coalition Bulgaria
      Moderator: Boyan Benev, Founder, Forward.li
      Rennie Popcheva, CEO, Digital Coalition Bulgaria
      Boyko Iaramov, Co-founder &amp;amp; Chief Process Officer, Telerik
      Marta Poslad, Senior Policy Advisor, CEE Google
      Petar Ivanov, General Manager, Microsoft Bulgaria
      Iravan Hira, General Manager, Hewlett-Packard Bulgaria
      Atanas Dobrev, CEO, VIVACOM
      Danny Gooris, Senior Manager, Oracle Academy
      Dimitar Dimitrov, Relationship Business Development, Lenovo
      Stamen Kochkov, Vice-president, SAP Labs Bulgaria, Chairman of BASSCOM&lt;/p&gt;
&lt;p&gt;12:15 – 12:30 Coffee Break&lt;/p&gt;
&lt;p&gt;12:30 – 13:45 Education in the Digital Era
      Moderator: Boyan Benev, Founder, Forward.li
      Ivan Krastev, Deputy Minister, Ministry of Education and Science, Republic of Bulgaria
      George Stoytchev, Executive Director, Open Society Institute Sofia
      Sabina Stirb, Public Affairs &amp;amp; Corporate Citizenship Manager, Samsung
      Prof. Petar Kenderov, Institute of Mathematics and Informatics, Bulgarian
      Academy of Sciences
      Dr. George Sharkov, Director, European Software Institute - Center Eastern
      Europe
      Elena Marinova, President, Musala Soft, Chair of the Educational Commission,
      Bulgarian Association of Information Technologies
      Svetlin Nakov, Founder, Software University&lt;/p&gt;
&lt;p&gt;13:45 – Lunch in Restaurant “At the Eagles”
      11 Dyakon Ygnatiy str., in the building of Ministry of transport, 18th Floor&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="events"></category></entry><entry><title>Bulgaria Web Summit Report</title><link href="http://atodorov.org/blog/2014/06/02/bulgaria-web-summit-report/" rel="alternate"></link><updated>2014-06-02T09:02:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-06-02:blog/2014/06/02/bulgaria-web-summit-report/</id><summary type="html">&lt;p&gt;Last week ended up with &lt;a href="http://bulgariawebsummit.com/"&gt;Bulgaria Web Summit&lt;/a&gt;.
The event was very big this year, with 4 halls and 600 visitors.
I was moderating the so called &lt;em&gt;JavaScript&lt;/em&gt; hall and will concentrate on
what happened there.&lt;/p&gt;
&lt;p&gt;&lt;img alt="BGWS Rhodopi Hall at 10:00" src="/images/bgws2014.jpg" title="BGWS Rhodopi Hall at 10:00" /&gt;
This is what my hall looked like at around 10:00 and stayed pretty much the same
during the entire day.&lt;/p&gt;
&lt;p&gt;Speakers at hall Rhodopi were (in order of appearance)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/delian"&gt;Delian Delchev&lt;/a&gt; talking about the JavaScript
revolution taking over the world and how this language has become the most
widely used programming language in the world.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/hkdobrev"&gt;Haralan Dobrev&lt;/a&gt; with some tips about development
workflows, git, continuous integration and unit testing.&lt;/li&gt;
&lt;li&gt;Yoga for Geeks during the lunch break.&lt;/li&gt;
&lt;li&gt;Boyan Dzhumakov with topics about home automation and Internet of things, who
demonstrated his bed side lamp controlled via a light sensor and Arduino.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.boyanov.org/"&gt;Neven Boyanov&lt;/a&gt; continuing on the hardware topics with
comparison of ATmel, Arduino and Raspberry Pi and showing more examples of
small programmable devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/attodorov"&gt;Angel Todorov&lt;/a&gt; from Infragistics with a very
interesting talk about JavaScript instrumentation for performance analysis.
A very cool presentation and you should definitely check out his
&lt;a href="https://github.com/attodorov/cheetah.js"&gt;cheetah.js&lt;/a&gt; framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/KrasimirTsonev"&gt;Krasimir Tsonev&lt;/a&gt; with 
&lt;a href="http://absurdjs.com/"&gt;AbsurdJS&lt;/a&gt; - a JavaScript library with superpowers.
Teaser: Krasimir is also publishing a book caled
&lt;a href="https://twitter.com/atodorov_/status/472723298053537792"&gt;Node.js Blueprints&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/krokodilerian"&gt;Vasil Kolev&lt;/a&gt; with a talk about security
and web service design and how most of the web is doing it wrong :).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfortunately there is no video or audio recording available. If you find
some of the talks interesting and would like to get more info about it let
me know. I will ask the presenters to share their slides or give more details
where possible.&lt;/p&gt;
&lt;p&gt;Don't worry if you've missed the Web Summit in Sofia. There will be another one
in the autumn, held at Veliko Tarnovo. For more info please subscribe to the
&lt;a href="http://bulgariawebsummit.us6.list-manage.com/subscribe?u=44058a4036fe9516b0ea2004c&amp;amp;id=e768a8c09a"&gt;newsletter&lt;/a&gt;.&lt;/p&gt;</summary><category term="events"></category></entry><entry><title>DigitalK Day 2 Report</title><link href="http://atodorov.org/blog/2014/06/01/digitalk-day-2-report/" rel="alternate"></link><updated>2014-06-01T20:38:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-06-01:blog/2014/06/01/digitalk-day-2-report/</id><summary type="html">&lt;p&gt;Continuing to report on the last few events that took place in Sofia this week.&lt;/p&gt;
&lt;p&gt;Day #2 of DigitalK started with the presentation of Piotr Jas of BlaBla Car.
What I really liked about it (picture TBA) was one particular graph depicting
the various types of travel (time before travel vs. cost of travel) and
visualizing different industries (e.g. air travel) or competitor companies.
The image clearly exhibited a blank space which is the exact market segment
where BlaBla Car have positioned themselves in.&lt;/p&gt;
&lt;p&gt;A very practical and easy to use tool for entrepreneurs in my opinion.&lt;/p&gt;
&lt;p&gt;From the rest of the keynotes I can outline two in particular:
Ivan Hernandez' &lt;em&gt;Disruptive Innovation and the future of Digital Transformation&lt;/em&gt;
and &lt;em&gt;The future of Tech and Communities&lt;/em&gt; by Tim Röhrich.&lt;/p&gt;
&lt;p&gt;I liked them because both were very inspirational although not telling you
something which you haven't heard before. They were basically reinforcing
the spirit of the event.&lt;/p&gt;
&lt;p&gt;In the small hall there was a workshop called 
&lt;em&gt;How to turn a good idea into a successful start-up&lt;/em&gt; led by Daniela Neumann,
which didn't turn out to be what I expected. She was talking about the early
cycle of idea/customer validation and I don't remember any particular example
being shown. Frankly most of the people have heard about this before (myself included)
and were quite bored. Not many of them stayed till the end.&lt;/p&gt;
&lt;p&gt;The evening continued with the already traditional Silicon Drinkabout in Sofia
which hosted many of the conference attendees. I did a quick visit only
because I had to prepare myself for Bulgaria Web Summit on the next day!&lt;/p&gt;</summary><category term="events"></category></entry><entry><title>Twilio meetup and DigitalK 2014 Day 1</title><link href="http://atodorov.org/blog/2014/05/29/twilio-meetup-and-digitalk-2014-day-1/" rel="alternate"></link><updated>2014-05-29T22:31:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-05-29:blog/2014/05/29/twilio-meetup-and-digitalk-2014-day-1/</id><summary type="html">&lt;p&gt;The conference season (this week) is officially open! So here's my report about it.&lt;/p&gt;
&lt;p&gt;It started by accident last evening with a
&lt;a href="https://www.facebook.com/events/629009950539772/"&gt;warm-up event&lt;/a&gt;
sponsored by Twilio at betahaus Sofia. I had the pleasure to have a long chat
with &lt;a href="https://twitter.com/lilaineurope"&gt;Lisa from Twilio&lt;/a&gt; over a few beers.&lt;/p&gt;
&lt;p&gt;Today was Day #1 of &lt;a href="http://digitalk.bg/"&gt;DigitalK&lt;/a&gt; which is the leading SEE
technology event. I've also visited the event last year and must say that this
time it is bigger. The main hall was totally packed. The WiFi connectivity has been
improved since last year but still sucked. I had more success using my 3G instead. &lt;/p&gt;
&lt;p&gt;The most interesting part of Day #1 was the mini Seedcamp session which presented
10 startups. In order of appearance they are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.adtapsy.com/"&gt;AdTapsy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitcoini.com/"&gt;Bitcoini.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ikollect.net/"&gt;iKollect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rocketads.co/"&gt;RocketAds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.scalewhale.eu/"&gt;ScaleWhale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angel.co/smartoken"&gt;Smartoken&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stepsss.co/"&gt;Stepsss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=co.talkie_kids.talkie"&gt;Talkie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://viblast.com/"&gt;Viblast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiziva.com"&gt;Wiziva&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Viblast, Stepsss and Talkie were the 3 finalists who also presented at the main hall.
Needless to say the coolest one from technology point of view is Viblast, which is
a peer-to-peer video streaming platform, utilizing WebRTC. They were also strong at the
presentation and look very strong at the business level as well. I wish them good luck.&lt;/p&gt;
&lt;p&gt;Stepsss is essentially a shoe sole with sensors paired with smart-phone apps to
give runners more info and feedback. I like it because they are a hardware company
although there's lots of competition in this space. I'd like to beta test their product
and see what happens when I go dancing all night long :).&lt;/p&gt;
&lt;p&gt;Talkie is an educational app for children which helps them learn new languages. I had the
pleasure to see it in action before the actual presentation. The design is very cool
and the app does seem usable and complete. However I don't see much of a technological
challenge here and I'm not sure how will they deal with the strong competition in the ed-tech
space. We'll have to wait and see. &lt;/p&gt;
&lt;p&gt;From the rest ScaleWhale and Smartoken do seem interesting but I really failed to get how things
will be organized on the technology side. Both ideas are run by a single person team, which
is a recipe for disaster (judging from my own experience).&lt;/p&gt;
&lt;p&gt;Tomorrow is Day #2 of DigitalK and on Saturday I'm moderating one of the rooms at
&lt;a href="http://bulgariawebsummit.com/"&gt;Bulgaria Web Summit&lt;/a&gt;. Expect more reports soon.&lt;/p&gt;</summary><category term="events"></category></entry><entry><title>I Want to Be a Robot - Book Review: The Singularity Is Near</title><link href="http://atodorov.org/blog/2014/05/19/i-want-to-be-a-robot-book-review-the-singularity-is-near/" rel="alternate"></link><updated>2014-05-19T21:43:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-05-19:blog/2014/05/19/i-want-to-be-a-robot-book-review-the-singularity-is-near/</id><summary type="html">&lt;p&gt;I've just finished reading
&lt;a href="http://www.amazon.com/gp/product/B000QCSA7C/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000QCSA7C&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=PY5X54XVJXYLZBIH"&gt;The Singularity Is Near: When Humans Transcend Biology&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B000QCSA7C" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
and all I have to say is "I want to be a robot"!&lt;/p&gt;
&lt;p&gt;This is one of the books that took me the longest time to read. It's a hard
to read book because it is full of technical and scientific details, quotes
a great deal of facts and research and leads your mind into fields which
deserve a separate books for themselves.&lt;/p&gt;
&lt;p&gt;The purely technical side of the book makes it a bit hard to follow as you need
to have a good deal of understanding of computing technology and concepts and
keep in mind what's been said in previous chapters.&lt;/p&gt;
&lt;p&gt;Ray Kurzweil starts with historical data about evolution and technological
progress. He postulates his theory of technology evolution called
"The Law of Accelerating Returns" and lists a great deal of examples to prove
that evolutionary processes are indeed not linear but exponential.&lt;/p&gt;
&lt;p&gt;The next two chapters explain how much is the computational capacity of the
human brain, how to achieve that and how to reverse engineer the brain itself.
Think about 3-D molecular computing, quantum computing, brain imaging and scanning :)&lt;/p&gt;
&lt;p&gt;Increased computing capacity and understanding of the human brain 
(and general progress of science and technology in the mean time)
will lead to the three revolutions which will make the Singularity possible:
Genetics, Nanotechnology and Robotics (Strong AI). Ray gives a lot of
examples and current research which is well under way currently or
will become a reality in the next 10 to 30 years.&lt;/p&gt;
&lt;p&gt;Following in the book is a list of impacts caused by the advancement of
technology and the Singularity itself. On the human body and brain, on
longevity, on warfare, on work and learning and play, on the Cosmos.&lt;/p&gt;
&lt;p&gt;Because the Singularity is not a single event but rather many events which
happen in parallel and gradually over time we will have a hard time defining
what a human means. What is human, what is consciousness and where the line is
are questions which need to be taken into consideration. Ultimately the human
race will become (predominantly) non-biological.&lt;/p&gt;
&lt;p&gt;How do you deal with dangers and shortcomings in technology? I myself as a QA
engineer have seen software fail in spectacular ways. How about machine failures? 
Now how about nanobots in your blood stream or strong AI gone wild? Ray explains
some of the possible threats and proposals to overcome them. His point is
that benefits from advanced technology will be far greater than dangers and
we will be able to first design our defense systems before anything else that
may threaten our existence. &lt;/p&gt;
&lt;p&gt;The last chapter contains examples of criticism and explanations why they
are incorrect which is the first of its kind I've seen in a book.&lt;/p&gt;
&lt;h2&gt;Epilogue&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Human Centrality. A common view is that science has consistently been correcting our overly inflated view of our
own significance. Stephen Jay Gould said, "The most important scientific revolutions all include, as their only
common feature, the dethronement of human arrogance from one pedestal after another of previous convictions about
our centrality in the cosmos."&lt;/p&gt;
&lt;p&gt;But it turns out that we are central, after all. Our ability to create models-virtual realities-in our brains, combined
with our modest-looking thumbs, has been sufficient to usher in another form of evolution: technology. That
development enabled the persistence of the accelerating pace that started with biological evolution. It will continue
until the entire universe is at our fingertips.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="books"></category></entry><entry><title>Book Review - Last 3 Months</title><link href="http://atodorov.org/blog/2014/05/13/book-review-last-3-months/" rel="alternate"></link><updated>2014-05-13T23:57:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-05-13:blog/2014/05/13/book-review-last-3-months/</id><summary type="html">&lt;p&gt;Hello folks, this is my book list for the past 3 months. It ranges from
tech and start-up related to Japanese and kid stories. Here's my quick review.&lt;/p&gt;
&lt;h2&gt;Lean UX&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/1449311652/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449311652&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=JNQIKHJJXU3KJ33H"&gt;Lean UX: Applying Lean Principles to Improve User Experience&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1449311652" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
is the second book I read on the subject after first reading
&lt;a href="/blog/2013/12/09/book-review-ux-for-lean-startups/"&gt;UX for Lean Startups&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is published before &lt;em&gt;UX for Lean Startups&lt;/em&gt; and is much more about principles than
any practical methods. Honestly I'm not sure if I took any real value out of it.
Maybe if I had read these two books in reverse order it would have been better.&lt;/p&gt;
&lt;h2&gt;The Hacienda - How Not to Run a Club&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/B00DEKLESK/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00DEKLESK&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=FOMGYFQW4BHGPPOL"&gt;The Hacienda: How Not to Run a Club&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B00DEKLESK" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Peter Hook is one of my favorites. It covers a great deal of music and clubland history,
depicts crazy parties and describes the adventure of owning one of the most
popular nightclubs in the world. All of that while struggling to make a buck and
pouring countless pounds into a black hole.&lt;/p&gt;
&lt;p&gt;The irony is The Hacienda became a legendary place only after it had closed down
and later on being demolished.&lt;/p&gt;
&lt;p&gt;A must read for anyone who is considering business in the entertainment industry
or wants to read a piece of history. My favorite quote of the book:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Years after, Tony Wilson found himself sitting opposite Madonna at dinner.&lt;/p&gt;
&lt;p&gt;‘I eventually plucked up the courage to look across the table to Madonna and ask,
“Are you aware that the first place you appeared outside of New York was our club in Manchester?”&lt;/p&gt;
&lt;p&gt;‘She gave me an ice-cold stare and said, “My memory seems to have wiped that.”’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Simple Science Experiments&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/0713428945/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0713428945&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=HU6TVCNR6DG67EFG"&gt;Simple Science Experiments&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0713428945" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Hans Jürgen Press is a very old book listing 200 experiments which you can
do at home using household materials. It is great for teaching basic science
to children. The book is very popular and is available in many languages
and editions - just search for it.&lt;/p&gt;
&lt;p&gt;I used to have this as a kid and was able to purchase the 1987 Bulgarian edition
at an antique bookstore in Varna two months ago.&lt;/p&gt;
&lt;h2&gt;Ronia, the Robber's Daughter&lt;/h2&gt;
&lt;p&gt;Decided to experiment a little bit and found
&lt;a href="http://www.amazon.com/gp/product/0140317201/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0140317201&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=FDHOPXQCZPMYCAA2"&gt;Ronia, the Robber's Daughter&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0140317201" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;.
It's a child's book telling the story of two kids whose fathers are rival
robbers. The book is an easy read (2-3 hrs before bed time) with stories
of magic woods, dwarfs and scary creatures mixed with human emotions
and the good vs. bad theme.&lt;/p&gt;
&lt;h2&gt;Japanese Short Stories&lt;/h2&gt;
&lt;p&gt;I've managed to find a 1973 compilation of Japanese short stories
translated into Bulgarian. Also one of my favorite books.&lt;/p&gt;
&lt;p&gt;If I'm not mistaken these are classic
Japanese authors, nothing modern or cutting edge. Most of the action happens
during the early 1900s as far as I can tell.
What impresses me most is the detailed description of nature and
surrounding details in all of the stories.&lt;/p&gt;
&lt;h2&gt;The Singularity Is Near&lt;/h2&gt;
&lt;p&gt;I've also started 
&lt;a href="http://www.amazon.com/gp/product/0143037889/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0143037889&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=BKMQ47NQEXNTDDRR"&gt;The Singularity Is Near: When Humans Transcend Biology&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0143037889" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Ray Kurzweil.&lt;/p&gt;
&lt;p&gt;It's a bit hard to read because the book is full of so many technical details
about genetics, nanotechnology, robotics and AI.&lt;/p&gt;
&lt;p&gt;Ray depicts a bright future where humans will transcend our biological
limitations and essentially become pure intelligence. Definitely a good
read and I will tell you more about it when I finish it.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;What have you been reading since January ? I'd love to see your book list
or connect on 
&lt;a href="https://www.goodreads.com/user/show/16191345-alexander-todorov"&gt;Goodreads&lt;/a&gt;.&lt;/p&gt;</summary><category term="Fedora"></category><category term="books"></category></entry><entry><title>OpenSource.com article - 10 steps to migrate your closed software to open source</title><link href="http://atodorov.org/blog/2014/05/06/opensource-dot-com-article-10-steps-to-migrate-your-closed-software-to-open-source/" rel="alternate"></link><updated>2014-05-06T16:14:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-05-06:blog/2014/05/06/opensource-dot-com-article-10-steps-to-migrate-your-closed-software-to-open-source/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Difio is a Django based application that keeps track of packages and tells you when they change.
Difio was created as closed software, then I decided to migrate it to open source ....&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Read more at
&lt;a href="http://opensource.com/business/14/5/10-steps-migrate-closed-to-open-source"&gt;OpenSource.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Btw I'm wondering if Telerik will share their experience opening up
the core of their Kendo UI framework on the
&lt;a href="http://www.telerik.com/campaigns/kendo-ui-build-free"&gt;webinar tomorrow&lt;/a&gt;.&lt;/p&gt;</summary><category term="Django"></category><category term="Fedora"></category></entry><entry><title>Screen Magnifier and Smart Phone!</title><link href="http://atodorov.org/blog/2014/05/04/screen-magnifier-and-smart-phone-has-anyone-used-it/" rel="alternate"></link><updated>2014-05-04T10:25:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-05-04:blog/2014/05/04/screen-magnifier-and-smart-phone-has-anyone-used-it/</id><summary type="html">&lt;p&gt;Hey guys, I want to
&lt;a href="/blog/2013/08/01/laptop-vs-smartphone-part-one/"&gt;replace my laptop for a smartphone&lt;/a&gt;.
There's the issue with a desk working environment and one solution is to
&lt;a target="_blank" href="http://www.amazon.com/s/ref=as_li_ss_tl?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=computer%20display&amp;linkCode=ur2&amp;tag=atodorovorg-20&amp;url=search-alias%3Daps&amp;linkId=HB2I5AOCIBVSZOTG"&gt;buy an external display&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;
The other one is to use a
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=screen%20magnifier&amp;linkCode=ur2&amp;rh=i%3Aaps%2Ck%3Ascreen%20magnifier&amp;sprefix=screen%20magnifie%2Ccomputers%2C277&amp;tag=atodorovorg-20&amp;url=search-alias%3Daps&amp;linkId=KGF6F22QDNBRWAMP"&gt;screen magnifier&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
as shown on the picture.
&lt;img alt="Mobile Screen Magnifier" src="/images/mobile_screen_magnifier.jpg" title="Mobile Screen Magnifier" /&gt;&lt;/p&gt;
&lt;p&gt;Ultimately it should be possible to use
any 3x Fresnel lens magnifier and make your 5" phone display into a 15" laptop
size one, which is perfect for me!
The magnifiers used for reading, like
&lt;a href="http://www.amazon.com/gp/product/B001TLJXJ8/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B001TLJXJ8&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=HS6EY4BELCHBZ6HC"&gt;this one&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B001TLJXJ8" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
are cheap and portable but don't look very well around the edges.&lt;/p&gt;
&lt;p&gt;None of the
&lt;a rel="nofollow" href="http://www.amazon.com/gp/product/B0173AZL62/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B0173AZL62&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=RWCHMP2LMA6OLMKO"&gt;phone screen magnifiers&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B0173AZL62" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;
on Amazon ships to my country so I don't have any experience with them,
although they appear to be exactly what I need. If anyone has such a device
at hand I'd love to hear how well this works for you. Please comment below.&lt;/p&gt;</summary><category term="fedora.planet"></category></entry><entry><title>Howto: Django Forms with Dynamic Fields</title><link href="http://atodorov.org/blog/2014/05/03/howto-django-forms-with-dynamic-fields/" rel="alternate"></link><updated>2014-05-03T16:58:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-05-03:blog/2014/05/03/howto-django-forms-with-dynamic-fields/</id><summary type="html">&lt;p&gt;Last week at &lt;a href="http://hackfmi.com"&gt;HackFMI 3.0&lt;/a&gt; one team had to display a form
which presented multiple choice selection for filtering, where the filter keys
are read from the database. They've solved the problem by simply building up the
HTML required inside the view. I was wondering if this can be done with forms.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyForm&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MyForm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;base_fields&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MyForm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;base_fields&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyForm&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_name&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_age&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_age&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;age&amp;quot;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;POST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Alex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;age&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MyForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_name&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Alex&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_age&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_age&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;age&amp;quot;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_bound&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;
&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Alex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So if we were to query all names from the database then we could build up the
class by adding a BooleanField using the object primary key as the name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MyForm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;base_fields&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BooleanField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyForm&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_123&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id_123&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;123&amp;quot;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MyForm&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;123&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Django"></category></entry><entry><title>HackFMI 3.0 Post-mortem</title><link href="http://atodorov.org/blog/2014/04/30/hackfmi-post-mortem/" rel="alternate"></link><updated>2014-04-30T00:03:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-04-30:blog/2014/04/30/hackfmi-post-mortem/</id><summary type="html">&lt;p&gt;&lt;img src="/images/hackfmi/hackfmi_beer.jpg" alt="HackFMI" style="float:left;margin-right:10px;" /&gt;&lt;/p&gt;
&lt;p&gt;The fourth &lt;a href="http://hackfmi.com/hackfmi3-winners/"&gt;HackFMI&lt;/a&gt;,
now traditional, hackathon was held this weekend.
It is over and I still can't wrap my head around what happened during these 3 nights. Here's
bits of code, beer, energy drinks and fun as I saw it.&lt;/p&gt;
&lt;p&gt;A big thanks goes to Lilly and Misha who were running around like
&lt;a href="https://www.youtube.com/watch?v=uL6e3co4Qqc"&gt;robots&lt;/a&gt; managing the day-to-day activities.
Kudos to the rest of the team as well because they've established HackFMI as a tradition
and people already ask when is going to be the next event.&lt;/p&gt;
&lt;h2&gt;What&lt;/h2&gt;
&lt;p&gt;This year the topic was &lt;em&gt;Hack for charity&lt;/em&gt; and immediate goal of raising money for
a sick kid. Most of the teams got to work to meet these goals. Only a few had worked
on slightly different charity (broadly defined) ideas.&lt;/p&gt;
&lt;p&gt;My favorite two apps were Blago-darenie and SMShelp although they were not
developed with Django.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blago-darenie.outernetnotes.com/"&gt;Blago-darenie&lt;/a&gt; is a simple WordPress
site listing donation campaigns. Instead of directly donating money one needs to
promise something (an action, an object, etc) and put a price tag on it. When the
promise is claimed the two parties donate the money to that particular campaign
and exchange the promised goods or services. I've promised to cook dinner
involving tasty meatballs from horse meat and serve one of my wine bottles to whoever
decides to donate 25 EUR. (disclaimer: I'm a good cook and love wine more than code).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ganev.bg/project-8/"&gt;SMShelp&lt;/a&gt; is an aggregator of donation campaigns via SMS
which are very popular in the country but lack a central repository for all of them.
A simple web site, live Android app and wonderful design secured the team the first place!
BTW Team 8 was &lt;a href="http://atodorov.org/blog/2013/04/15/hackfmi-post-mortem/"&gt;Adrian and Vihren&lt;/a&gt;
who took part in all previous editions as well.&lt;/p&gt;
&lt;h2&gt;TODO&lt;/h2&gt;
&lt;p&gt;I'm glad both organizers and teams had listened to some of my feedback but there are
still things to improve. The most obvious one was that a quick communication channel
to all the teams is needed. Facebook and email just didn't cut it.&lt;/p&gt;
&lt;p&gt;I already have couple of quick ideas involving Django and Twilio's cloud services.
Let me take a few more days to get it clear before going any further.&lt;/p&gt;
&lt;h2&gt;/me&lt;/h2&gt;
&lt;p&gt;I found myself mentoring as much as I could helping folks with Django or just
with general ideal or concepts, serving cake provided by &lt;a href="http://www.chaosgroup.com"&gt;Chaos Group&lt;/a&gt;
and opening stacks of energy drinks, going door to door and letting teams know deployment and presentation
details for the last day.&lt;/p&gt;
&lt;p&gt;What surprised me a bit was that there were many new teams (some involving previous contestants)
who were very diverse in their technological background. This presented a challenge to
some of them as they had to use a technology which nobody on the team knew very well
and had to make a working app with that. One team even changed from Python to PHP in the
middle of day 2.&lt;/p&gt;
&lt;p&gt;On Sunday I was pretty much helping the HackFMI team with whatever I can,
checking on my favorite teams from time to time and giving access to cloud servers
left and right to people who needed them.&lt;/p&gt;
&lt;p&gt;Unfortunately I missed the Grand Finale due to unexpected hardware problems involving
big iron and 150 litters of loose water :(. See you next time!&lt;/p&gt;</summary><category term="hackathon"></category><category term="hackfmi"></category><category term="events"></category></entry><entry><title>HackFMI 3.0 Post-mortem</title><link href="http://atodorov.org/blog/2014/04/30/hackfmi-post-mortem/" rel="alternate"></link><updated>2014-04-30T00:03:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-04-30:blog/2014/04/30/hackfmi-post-mortem/</id><summary type="html">&lt;p&gt;&lt;img src="/images/hackfmi/hackfmi_beer.jpg" alt="HackFMI" style="float:left;margin-right:10px;" /&gt;&lt;/p&gt;
&lt;p&gt;The fourth &lt;a href="http://hackfmi.com/hackfmi3-winners/"&gt;HackFMI&lt;/a&gt;,
now traditional, hackathon was held this weekend.
It is over and I still can't wrap my head around what happened during these 3 nights. Here's
bits of code, beer, energy drinks and fun as I saw it.&lt;/p&gt;
&lt;p&gt;A big thanks goes to Lilly and Misha who were running around like
&lt;a href="https://www.youtube.com/watch?v=uL6e3co4Qqc"&gt;robots&lt;/a&gt; managing the day-to-day activities.
Kudos to the rest of the team as well because they've established HackFMI as a tradition
and people already ask when is going to be the next event.&lt;/p&gt;
&lt;h2&gt;What&lt;/h2&gt;
&lt;p&gt;This year the topic was &lt;em&gt;Hack for charity&lt;/em&gt; and immediate goal of raising money for
a sick kid. Most of the teams got to work to meet these goals. Only a few had worked
on slightly different charity (broadly defined) ideas.&lt;/p&gt;
&lt;p&gt;My favorite two apps were Blago-darenie and SMShelp although they were not
developed with Django.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blago-darenie.outernetnotes.com/"&gt;Blago-darenie&lt;/a&gt; is a simple WordPress
site listing donation campaigns. Instead of directly donating money one needs to
promise something (an action, an object, etc) and put a price tag on it. When the
promise is claimed the two parties donate the money to that particular campaign
and exchange the promised goods or services. I've promised to cook dinner
involving tasty meatballs from horse meat and serve one of my wine bottles to whoever
decides to donate 25 EUR. (disclaimer: I'm a good cook and love wine more than code).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ganev.bg/project-8/"&gt;SMShelp&lt;/a&gt; is an aggregator of donation campaigns via SMS
which are very popular in the country but lack a central repository for all of them.
A simple web site, live Android app and wonderful design secured the team the first place!
BTW Team 8 was &lt;a href="http://atodorov.org/blog/2013/04/15/hackfmi-post-mortem/"&gt;Adrian and Vihren&lt;/a&gt;
who took part in all previous editions as well.&lt;/p&gt;
&lt;h2&gt;TODO&lt;/h2&gt;
&lt;p&gt;I'm glad both organizers and teams had listened to some of my feedback but there are
still things to improve. The most obvious one was that a quick communication channel
to all the teams is needed. Facebook and email just didn't cut it.&lt;/p&gt;
&lt;p&gt;I already have couple of quick ideas involving Django and Twilio's cloud services.
Let me take a few more days to get it clear before going any further.&lt;/p&gt;
&lt;h2&gt;/me&lt;/h2&gt;
&lt;p&gt;I found myself mentoring as much as I could helping folks with Django or just
with general ideal or concepts, serving cake provided by &lt;a href="http://www.chaosgroup.com"&gt;Chaos Group&lt;/a&gt;
and opening stacks of energy drinks, going door to door and letting teams know deployment and presentation
details for the last day.&lt;/p&gt;
&lt;p&gt;What surprised me a bit was that there were many new teams (some involving previous contestants)
who were very diverse in their technological background. This presented a challenge to
some of them as they had to use a technology which nobody on the team knew very well
and had to make a working app with that. One team even changed from Python to PHP in the
middle of day 2.&lt;/p&gt;
&lt;p&gt;On Sunday I was pretty much helping the HackFMI team with whatever I can,
checking on my favorite teams from time to time and giving access to cloud servers
left and right to people who needed them.&lt;/p&gt;
&lt;p&gt;Unfortunately I missed the Grand Finale due to unexpected hardware problems involving
big iron and 150 litters of loose water :(. See you next time!&lt;/p&gt;</summary><category term="hackathon"></category><category term="hackfmi"></category><category term="events"></category></entry><entry><title>Spoiler: How to Open Source Existing Proprietary Code in 10 Steps</title><link href="http://atodorov.org/blog/2014/04/23/how-to-open-source-existing-proprietary-code-in-10-steps/" rel="alternate"></link><updated>2014-04-23T22:47:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-04-23:blog/2014/04/23/how-to-open-source-existing-proprietary-code-in-10-steps/</id><summary type="html">&lt;p&gt;We've heard about companies opening up their proprietary software products,
this is hardly news nowadays. But have you wondered what it is like to migrate
production software from closed to open source? I would like to share my own
experience about going open source as seen from behind the keyboard.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; was recently open sourced and the steps to go through
were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simplify - remove everything that can be deleted&lt;/li&gt;
&lt;li&gt;Create self contained modules aka re-organize the file structure&lt;/li&gt;
&lt;li&gt;Separate internal from external modules&lt;/li&gt;
&lt;li&gt;Refactor the existing code&lt;/li&gt;
&lt;li&gt;Select license and update copyright&lt;/li&gt;
&lt;li&gt;Update 3rd party dependencies to latest versions and add requirements.txt&lt;/li&gt;
&lt;li&gt;Add README and verbose settings example&lt;/li&gt;
&lt;li&gt;Split difio/ into its own git repository&lt;/li&gt;
&lt;li&gt;Test stand alone deployments on fresh environment&lt;/li&gt;
&lt;li&gt;Announce&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Do you want to know more? Use the comments and tell me what exactly!
I'm writing a longer version of this article so stay tuned!&lt;/p&gt;</summary><category term="Fedora"></category><category term="Django"></category></entry><entry><title>Beware of Django default Model Field Option When Using datetime.now()</title><link href="http://atodorov.org/blog/2014/04/15/beware-of-django-default-model-field-option-when-using-datetime-now/" rel="alternate"></link><updated>2014-04-15T15:54:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-04-15:blog/2014/04/15/beware-of-django-default-model-field-option-when-using-datetime-now/</id><summary type="html">&lt;p&gt;Beware if you are using code like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;models.DateTimeField(default=datetime.now())
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;i.e. passing a function return value as the default option for a model field in Django.
In some cases the value will be calculated once when the application starts or
the module is imported and will not be updated later. The most common scenario
is DateTime fields which default to now(). The correct way is to use a callable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;models.DateTimeField(default=datetime.now)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I've hit this issue on a low volume application which uses cron to collect its own
metrics by calling an internal URL. The app was running as WSGI app and I wondered
why I got records with duplicate dates in the DB. A more detailed (correct) example follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_strftime&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Metrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;added_on&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateTimeField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;added_on_as_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_strftime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; also had the same bug but didn't exhibit the problem
because all objects with default date-time values were created on the backend nodes
which get updated and restarted very often.&lt;/p&gt;
&lt;p&gt;For more info read this
&lt;a href="http://david.feinzeig.com/blog/2011/12/06/how-to-properly-set-a-default-value-for-a-datetimefield-in-django/"&gt;blog&lt;/a&gt;.
For general info on Django, please check out
&lt;a target="_blank" href="http://www.amazon.com/s/ref=as_li_ss_tl?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=Django&amp;linkCode=ur2&amp;rh=n%3A283155%2Ck%3ADjango&amp;tag=atodorovorg-20&amp;url=search-alias%3Dstripbooks&amp;linkId=M56M35GO5XWGIBJE"&gt;Django books on Amazon&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;.&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>Positive Biological Effects of Open Source on Humans</title><link href="http://atodorov.org/blog/2014/04/08/positive-biological-effects-of-open-source-on-humans/" rel="alternate"></link><updated>2014-04-08T16:45:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-04-08:blog/2014/04/08/positive-biological-effects-of-open-source-on-humans/</id><summary type="html">&lt;p&gt;Recently I watched a &lt;a href="http://www.youtube.com/watch?v=ReRcHdeUG9Y"&gt;talk by Simon Sinek&lt;/a&gt;
about leadership. He talks about Endorphins, Dopamine, Serotonin and Oxytocin
and how they make us feel and act a particular way. Then I though - maybe that's why working
in the open source field always felt great and natural to me. Maybe we humans
are programmed to follow the open source way!&lt;/p&gt;
&lt;p&gt;This article scratches the surface where body chemistry and open source intersect.
I hope it will help both volunteers and community managers get an insight of the
driving forces in our bodies, how they relate to the open source world and promt
further exploration. By seeking to better understand the positive effects and avoid
the negative ones we can become better contributors and leaders which ultimately 
helps our communities.&lt;/p&gt;
&lt;h2&gt;Endorphins&lt;/h2&gt;
&lt;p&gt;Endorphins stand for endurance. Their job is to mask physical pain and it has been
suggested to have evolutionary roots based on the theory that they helped with the
survival of early humans. Athletes experience so called Runner's high.&lt;/p&gt;
&lt;p&gt;In the open source world one may work on a feature or task for hours and hours
without feeling exhausted. The task itself keeps you going and excited.
This is endorphins going through your brain.&lt;/p&gt;
&lt;p&gt;In software one may experience an endorphin rush during public release days for example. For large
projects like Fedora the release process includes many steps and may take several hours.
During all that time the release engineer is usually available regardless of their native
time zone.&lt;/p&gt;
&lt;p&gt;Effects of endorphins could potentially increase the likelihood of injury or extreme exhaustion,
as pain sensation could be more easily ignored. Work and rest cycles need to be properly balanced.&lt;/p&gt;
&lt;h2&gt;Dopamine&lt;/h2&gt;
&lt;p&gt;This is the feeling when we achieve our goals or found something we were looking for.
Dopamine helps us get things done! This is why we're told to write down our goals and then
cross them off. It makes people more productive.&lt;/p&gt;
&lt;p&gt;Getting dopamine through open source is very easy - all you need to do is fix a bug,
then another one, and another one, and another one ... After every task you complete the body
gets a small dopamine fix. "Release early, release often ..." and you get your fix :). &lt;/p&gt;
&lt;p&gt;Dopamine however is highly addictive and destructive if unbalanced. It has the same negative
effects as any other addiction - alcohol, drugs, etc. Be aware of that and don't fall for the
performance trap.&lt;/p&gt;
&lt;p&gt;Endorphins and Dopamine are so called selfish chemicals. You can get them without external help.
The next two are the social chemicals.&lt;/p&gt;
&lt;h2&gt;Serotonin&lt;/h2&gt;
&lt;p&gt;It is responsible for feelings of pride and status and assessing social rank.
Serotonin is produced when you are recognized for achievements by the open source community
or credited by somebody (e.g. Johnny Bravo mentioned a great idea on IRC today).&lt;/p&gt;
&lt;p&gt;As a contributor one may work on items which will help you get recognition but ultimately this
is not for you to decide. However practice shows that credit and recognition are relatively easy
to get in the open source world provided one has contributed to make the project and the
community better in some sort.&lt;/p&gt;
&lt;p&gt;In software this is being granted commit rights to a repository, being in the top spot of
some metrics, having your blog read by other members or simply people asking for help or 
what you think about some topic.&lt;/p&gt;
&lt;p&gt;Serotonin is considered the leadership chemical. As one becomes a leader recognized by the
community there's a catch - the more your status goes up the more work you have to
do. The more people recognize you as the leader the more they expect you to sacrifice yourself
in case it all goes Pete Tong. If you are not ready to step up find a more suitable place in
the community instead.&lt;/p&gt;
&lt;h2&gt;Oxytocin&lt;/h2&gt;
&lt;p&gt;Oxytocin is responsible for feelings of love, trust and friendship. It makes us feel safe.
It is also very good for the body because it makes us healthier, boosts our
immune system, increases ability to solve problems and increases creativity.&lt;/p&gt;
&lt;p&gt;One way to get Oxytocin is by physical touch - e.g. a hand shake. This is probably one of
the reasons beer gatherings are so popular among open source developers.
Working digitally we need a way to
reinforce human bonds in our communities. Knowing the person on the other end of the wire
ultimately makes us feel safer. If you are in open source just go for that conference or a
local beer bash you wanted to go - it is good for you (but don't get drunk).&lt;/p&gt;
&lt;p&gt;Another way to get Oxytocin is by performing or witnessing acts of human generosity. 
This comes natural in open source world where people give up their free time and energy to work towards
a shared goal. Just by working in an open source environment you get all that goodness for you.&lt;/p&gt;
&lt;p&gt;The best thing about Oxytocin is that it is not addictive and slowly builds up in the body. 
The bad side is that it takes a while to build up. This is why you have to stay a little longer
in open source before it starts feeling safe and welcoming.&lt;/p&gt;
&lt;h2&gt;Cortisol&lt;/h2&gt;
&lt;p&gt;The last chemical Simon talks about is Cortisol. It is bad, very bad. It will crash your body.
Cortisol means stress. It is designed to keep humans (and animals) alive by hyper tuning
our senses in case of danger. Trouble is you are not supposed to have it in your body for
long periods of time because it shuts down non-essential systems to deliver that extra energy.&lt;/p&gt;
&lt;p&gt;Luckily most open source projects are not stressful and I think can be considered a safe place
to work in. In the end one can always shift to another role or move to another project if it
becomes too pressing.&lt;/p&gt;
&lt;p&gt;By committing
to help another member or perform service to the community our bodies get all the good
stuff and beat the negative. Service to a community is exactly what open source does!
See, humans are programmed to live and work the open source way! &lt;/p&gt;</summary><category term="Fedora"></category></entry><entry><title>Happy April Fools Day</title><link href="http://atodorov.org/blog/2014/04/01/happy-april-fools-day/" rel="alternate"></link><updated>2014-04-01T11:35:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-04-01:blog/2014/04/01/happy-april-fools-day/</id><summary type="html">&lt;p&gt;Happy April Fools Day everyone! Here are few stories that I find particularly
amusing.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://thisisanothercastle.com/2014/03/26/april-fools-top-5-pranks-game-developers-pulled-on-players/"&gt;Top 5 Pranks Game Developers Pulled on Players&lt;/a&gt;
- now that's what I call dedication. #1 is definitely worth a peek :)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://signaltower.co/april-fools-pranks-for-developers/"&gt;April Fools Pranks for Developers&lt;/a&gt; or
office workers! This is pure evil which messes up with the default CSS settings
on your computer. &lt;/p&gt;
&lt;p&gt;What other developer related pranks did you find ?&lt;/p&gt;</summary></entry><entry><title>I Need an App to Connect With My Facebook Page Fans</title><link href="http://atodorov.org/blog/2014/03/28/i-need-an-app-to-connect-with-my-facebook-page-fans/" rel="alternate"></link><updated>2014-03-28T23:18:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-03-28:blog/2014/03/28/i-need-an-app-to-connect-with-my-facebook-page-fans/</id><summary type="html">&lt;p&gt;The biggest problem of Facebook is the sheer number of news items 
which are filtered out if users are not actively engaged with them.
For a page admin/business owner this means Facebook makes a poor job at reaching
to my fans and potential customers unless I keep paying them money!
I need two basic features to solve this problem. &lt;/p&gt;
&lt;h2&gt;Contact All Users App aka Newsletter&lt;/h2&gt;
&lt;p&gt;I need to be able to message my fan base like a newsletter with the following
requirements in mind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users have already liked the page, don't make them sign-up or follow anything else;&lt;/li&gt;
&lt;li&gt;Preferably use Facebook messages instead of email;&lt;/li&gt;
&lt;li&gt;Let them unsubscribe from the newsletter without going away/blocking the page;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first one is straight forward - I've already put some money in promoting my page
and collecting fans. No need for more hurdles to get started. For reference out of 500
users none has actually subscribed to the page. This gives you an idea how much they
will subscribe to newsletters and such. They click LIKE and forget about it.&lt;/p&gt;
&lt;p&gt;The second one is dependent on the target audience. I have the feeling that my target
audience is reading Facebook messages much more than email.&lt;/p&gt;
&lt;p&gt;My primary use case of this will be to send new offers and validation queries to the
target audience in order to tailor the content and business to them.&lt;/p&gt;
&lt;h2&gt;Weekly Digest App&lt;/h2&gt;
&lt;p&gt;Looking at my Facebook page stats it is clear that only promoted content gets a higher reach.
This includes both content paid for and content posted during periods where the page itself
had an active advertisement.&lt;/p&gt;
&lt;p&gt;This is no coincidence I think. When the page is promoted to new audience they will get around
the available tabs, explore and like pictures and scroll down to see some of the older content.
Assuming the person becomes a page fan they will fall into the previously described trap (content filter)
and not see much of the page activity.&lt;/p&gt;
&lt;p&gt;I need an application which will aggregate the content from the last week and send it to
everyone. This app needs to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be able to configure digest period/cut-off days and when to send the digest;&lt;/li&gt;
&lt;li&gt;Allow users to unsubscribe or alter their digest preferences;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Primary use case is to alert users of content which they may have missed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bonus feature: exclude content which was seen by the specific person or they somehow reacted to it;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Where to next&lt;/h2&gt;
&lt;p&gt;I am actively looking for such kinds of apps but haven't found any yet. When time allows I will
be looking at the Facebook API to see if this is at all possible to implement. &lt;/p&gt;
&lt;p&gt;Any suggestions ? &lt;/p&gt;</summary></entry><entry><title>SMS PIN Verification with Twilio and Django</title><link href="http://atodorov.org/blog/2014/03/19/sms-pin-verification-with-twilio-and-django/" rel="alternate"></link><updated>2014-03-19T11:41:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-03-19:blog/2014/03/19/sms-pin-verification-with-twilio-and-django/</id><summary type="html">&lt;p&gt;This is a quick example of SMS PIN verification using Twilio cloud services and
Django which I did for a small site recently.&lt;/p&gt;
&lt;p&gt;&lt;img alt="SMS PIN form" src="/images/sms_pin.png" title="SMS PIN form" /&gt;&lt;/p&gt;
&lt;p&gt;The page template contains the following HTML snippet&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mobile_number&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mobile_number&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;111-111-1111&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;send_pin()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;icon-share&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; Get PIN&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and a JavaScript function utilizing jQuery:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;send_pin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{% url &amp;#39;ajax_send_pin&amp;#39; %}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;mobile_number&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#mobile_number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PIN sent via SMS!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jqXHR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;textStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;errorThrown&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errorThrown&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; : &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;jqXHR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then create the following views in Django:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_get_pin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Return a numeric PIN with length digits &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_verify_pin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mobile_number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Verify a PIN is correct &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mobile_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ajax_send_pin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Sends SMS PIN to the specified number &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;mobile_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mobile_number&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;mobile_number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;No mobile number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_get_pin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c"&gt;# store the PIN in the cache for later verification.&lt;/span&gt;
    &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mobile_number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# valid for 24 hrs&lt;/span&gt;

    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TwilioRestClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TWILIO_ACCOUNT_SID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TWILIO_AUTH_TOKEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mobile_number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TWILIO_FROM_NUMBER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Message &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; sent&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Process orders made via web form and verified by SMS PIN. &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OrderForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;mobile_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mobile_number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;_verify_pin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mobile_number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;transaction_complete&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Invalid PIN!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;&amp;#39;order.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="s"&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;PINs are only numeric and are stored in the CACHE instead of the database which
I think is simpler and less expensive in terms of I/O operations.&lt;/p&gt;</summary><category term="Django"></category><category term="cloud"></category><category term="Twilio"></category></entry><entry><title>How Do You Test Thai Scalable Fonts</title><link href="http://atodorov.org/blog/2014/03/17/how-do-you-test-thai-scalable-fonts/" rel="alternate"></link><updated>2014-03-17T22:51:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-03-17:blog/2014/03/17/how-do-you-test-thai-scalable-fonts/</id><summary type="html">&lt;p&gt;Recently I wrote about &lt;a href="/blog/2014/03/04/how-do-you-test-fonts/"&gt;testing fonts&lt;/a&gt;.
I finally managed to get an answer from the authors of &lt;em&gt;thai-scalable-fonts&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;What is your approach for testing Fonts-TLWG?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's not automated test. What it does is generate PDF with sample
texts at several sizes (the waterfall), pangrams, and glyph table.
It needs human eyes to investigate.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What kind of problems is your test suite designed for ?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Shaping&lt;/li&gt;
&lt;li&gt;Glyph coverage&lt;/li&gt;
&lt;li&gt;Metrics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also make use of fontforge features to make spotting errors
easier, such as
- Show extremas
- Show almost vertical/horizontal lines/curves&lt;/p&gt;
&lt;p&gt;Theppitak Karoonboonyanan, Fonts-TLWG&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Reducing AWS Cloud Costs - Real Money Example</title><link href="http://atodorov.org/blog/2014/03/07/reducing-aws-cloud-costs-real-money-example/" rel="alternate"></link><updated>2014-03-07T17:14:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-03-07:blog/2014/03/07/reducing-aws-cloud-costs-real-money-example/</id><summary type="html">&lt;p&gt;&lt;a href="http://aws.amazon.com/ebs/pricing/effective-february-2014/"&gt;Last month&lt;/a&gt; Amazon
reduced by 50% prices for EBS storage. This, combined with 
&lt;a href="/blog/2014/02/07/aws-tip-shrinking-ebs-root-volume-size/"&gt;shrinking EBS root volume size&lt;/a&gt; and
&lt;a href="/blog/2014/02/10/moving-tmp-from-ebs-to-instance-storage/"&gt;moving /tmp to instance storage&lt;/a&gt;
allowed me to reduce EBS related costs behind &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; by around 50%.
Following are the real figures from my AWS Bill.&lt;/p&gt;
&lt;p&gt;EBS costs for Difio were gradually rising up with every new node added to the cluster and
increased package processing (resulting in more I/O):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 2013 - $7.38&lt;/li&gt;
&lt;li&gt;December 2013 - $10.55&lt;/li&gt;
&lt;li&gt;January 2014 - $11.97&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;January 2014:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;EBS
$0.095 per GB-Month of snapshot data stored     9.052 GB-Mo     $0.86
$0.10  per GB-month of provisioned storage      101.656 GB-Mo  $10.17
$0.10  per 1 million I/O requests               9,405,243 IOs   $0.94
                                                        Total: $11.97
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In February there was one new system added to process additional requests
(cluster nodes run as spot instances) and an increased number of temporary
instances (although I haven't counted them) while I was restructuring AMI
internals to accommodate the &lt;a href="https://github.com/difio/difio"&gt;open source&lt;/a&gt;
version of Difio. My assumption (based on historical data) is this would
have driven the costs up in the region of $15 per month only for EBS.&lt;/p&gt;
&lt;p&gt;After implementing the stated minimal improvements and having Amazon reduced the prices by
half the bill looks like this:&lt;/p&gt;
&lt;p&gt;February 2014:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;EBS
$0.095 per GB-Month of snapshot data stored     8.668 GB-Mo     $0.82
$0.05  per GB-month of provisioned storage      58.012 GB-Mo    $2.90
$0.05  per 1 million I/O requests               5,704,482 IOs   $0.29
                                                        Total:  $4.01
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Explanation&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Snapshot data stored&lt;/em&gt; is the volume of snapshots (AMIs, backups, etc) which
I have. This is fairly constant.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Provisioned storage&lt;/em&gt; is the volume of EBS storage provisioned for running
instances (e.g. root file system, data partitions, etc.). This was reduced
mainly because of shrinking the root volumes. (Previously I've used larger
root volumes for a bigger /tmp).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I/O requests&lt;/em&gt; is the number of I/O requests associated with your EBS volumes.
As far as I understand Amazon doesn't charge for I/O related to ephemeral storage.
Moving /tmp from EBS to instance storage is the reason this was reduced roughly by half.&lt;/p&gt;
&lt;h2&gt;Where To Next&lt;/h2&gt;
&lt;p&gt;I've reduced the root volumes back to the 8GB defaults but this has still room for
improvement b/c the AMI is quite minimal. This will bring the largest improvements.
Another thing is the still relatively high I/O rate that touches EBS volumes.
I haven't investigated where this comes from though.&lt;/p&gt;</summary><category term="Amazon"></category><category term="cloud"></category></entry><entry><title>How do You Test Fonts</title><link href="http://atodorov.org/blog/2014/03/04/how-do-you-test-fonts/" rel="alternate"></link><updated>2014-03-04T21:30:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-03-04:blog/2014/03/04/how-do-you-test-fonts/</id><summary type="html">&lt;p&gt;&lt;a href="/blog/2014/03/03/last-week-in-fedora-qa/"&gt;Previously&lt;/a&gt; I mentioned about testing
fonts but didn't have any idea how this is done. Authors
Khaled Hosny of &lt;a href="http://www.amirifont.org/"&gt;Amiri Font&lt;/a&gt; and Steve White of
&lt;a href="http://www.gnu.org/software/freefont/"&gt;GNU FreeFont&lt;/a&gt; provided valuable insight
and material for further reading. I've asked them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is your approach for testing ?&lt;/li&gt;
&lt;li&gt;What kind of problems is your test suite designed for ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's what they say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Currently my test suite consists of text strings (or lists of code
points) and expected output glyph sequences and then use HarfBuzz
(through its hb-shape command line tool) to check that the fonts always
output the expected sequence of glyphs, sometimes with the expected
positioning as well. Amiri is a complex font that have many glyph
substitution and positioning rules, so the test suite is designed to
make sure those rules are always executed correctly to catch regressions
in the font (or in HarfBuzz, which sometimes happens since the things I
do in my fonts are not always that common).&lt;/p&gt;
&lt;p&gt;I think Lohit project do similar testing for their fonts, and HarfBuzz
itself has a similar test suite with a bunch of nice scripts (though
they are not installed when building HarfBuzz, yet[1]).&lt;/p&gt;
&lt;p&gt;Recently I added more kinds of tests, namely checking that OTS[2]
sanitizes the fonts successfully as this is important for using them on
the web, and a test for a common mistakes I made in my feature files
that result in unexpected blank glyphs in the fonts.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/behdad/harfbuzz/pull/12"&gt;https://github.com/behdad/harfbuzz/pull/12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khaledhosny/ots"&gt;https://github.com/khaledhosny/ots&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Khaled Hosny, Amiri Font&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The answer is complicated.  I'll do what I can to answer.&lt;/p&gt;
&lt;p&gt;First, the FontForge application has a "verification" function which
can be run from a script, and which identifies numerous technical
problems.&lt;/p&gt;
&lt;p&gt;FontForge also has a "Find Problems" function that I run by hand.&lt;/p&gt;
&lt;p&gt;The monospaced face has special restrictions, first that all glyphs of
non-zero width must be of the same width, and second, that all glyphs
lie within the vertical bounds of the font.&lt;/p&gt;
&lt;p&gt;Beside this, I have several other scripts that check for a few things
that FontForge doesn't (duplicate names, that glyph slots agree with
Unicode code within Unicode character blocks).&lt;/p&gt;
&lt;p&gt;Several tests scripts have yet to be uploaded to the version control
system -- because I'm unsure of them.&lt;/p&gt;
&lt;p&gt;There is a more complicated check of TrueType tables, which attempts
to find cases of tables that have been "shadowed" by the
script/language specification of another table.  This is helpful, but
works imperfectly.&lt;/p&gt;
&lt;p&gt;ALL THAT SAID,&lt;/p&gt;
&lt;p&gt;In the end, every script used in the font has to be visually checked.
This process takes me weeks, and there's nothing systematic about it,
except that I look at printout of documents in each language to see if
things have gone awry.&lt;/p&gt;
&lt;p&gt;For a few documents in a few languages, I have images of how text
&lt;em&gt;should&lt;/em&gt; look, and can compare that visually (especially important for
complex scripts.)&lt;/p&gt;
&lt;p&gt;A few years back, somebody wrote a clever script that generated images
of text and compared them pixel-by-pixel.  This was a great idea, and
I wish I could use it more effectively, but the problem was that it
was much too sensitive.  A small change to the font (e.g. PostScript
parameters) would cause a small but global change in the rendering.
Also the rendering could vary from one version of the rendering
software to another.  So I don't use this anymore.&lt;/p&gt;
&lt;p&gt;That's all I can think of right now.&lt;/p&gt;
&lt;p&gt;In fact, testing has been a big problem in getting releases out.  In
the past, each release has taken at least two weeks to test, and then
another week to fix and bundle...if I was lucky.  And for the past
couple of years, I just haven't been able to justify the time
expenditure.  (Besides this, there are still a few serious problems
with the fonts--once again, a matter of time.)&lt;/p&gt;
&lt;p&gt;Have a look at the bugs pages, to get an idea of work being done.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://savannah.gnu.org/bugs/?group=freefont"&gt;http://savannah.gnu.org/bugs/?group=freefont&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Steve White, GNU FreeFont&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm not sure if ImageMagic or PIL can help solve the rendering and compare
problem Steve is talking about. They can definitely be used for
&lt;a href="/blog/2013/05/17/linux-and-python-tools-to-compare-images/"&gt;image comparison&lt;/a&gt;
so maybe coupled with some rendering library it's worth a quick try.&lt;/p&gt;
&lt;p&gt;If you happen to know more about fonts, please join me in 
&lt;a href="/blog/2014/02/28/action-improving-test-coverage-in-fedora/"&gt;improving overall test coverage in Fedora&lt;/a&gt;
by designing test suites for fonts packages.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Last Week in Fedora QA</title><link href="http://atodorov.org/blog/2014/03/03/last-week-in-fedora-qa/" rel="alternate"></link><updated>2014-03-03T10:23:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-03-03:blog/2014/03/03/last-week-in-fedora-qa/</id><summary type="html">&lt;p&gt;Here are some highlights from the past week discussions in Fedora which I found
interesting or participated in.&lt;/p&gt;
&lt;h2&gt;Call to Action: Improving Overall Test Coverage in Fedora&lt;/h2&gt;
&lt;p&gt;I can not stress enough how important it is to further
&lt;a href="/blog/2014/02/28/action-improving-test-coverage-in-fedora/"&gt;improve test coverage in Fedora&lt;/a&gt;!
You can help too. Here's how:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Join upstream and create a test suite for a package you find interesting;&lt;/li&gt;
&lt;li&gt;Provide patches - &lt;a href="https://lists.fedoraproject.org/pipermail/devel/2014-February/196035.html"&gt;first patch&lt;/a&gt;
came in less than 30 minutes of initial announcement :);&lt;/li&gt;
&lt;li&gt;Review packages in the wiki and help identify false negatives;&lt;/li&gt;
&lt;li&gt;Forward to people who may be interested to work on these items;&lt;/li&gt;
&lt;li&gt;Share and promote in your local open source and developer communities;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Auto BuildRequires&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://people.redhat.com/~rjones/auto-buildrequires/"&gt;Auto-BuildRequires&lt;/a&gt;
is a simple set of scripts which compliments &lt;code&gt;rpmbuild&lt;/code&gt; by
automatically suggesting BuildRequires lines for the just built package.&lt;/p&gt;
&lt;p&gt;It would be interesting to have this integrated into Koji and/or
continuous integration environment and compare the output between every two
consecutive builds (iow older and newer package versions). It sounds like a
good way to identify newly added or removed dependencies and update the package
specs accordingly.&lt;/p&gt;
&lt;h2&gt;How To Test Fonts Packages&lt;/h2&gt;
&lt;p&gt;This is exactly what 
&lt;a href="https://lists.fedoraproject.org/pipermail/test/2014-February/120570.html"&gt;Christopher Meng asked&lt;/a&gt;
and frankly I have no idea. &lt;/p&gt;
&lt;p&gt;I've come across a few fonts packages (&lt;em&gt;amiri-fonts&lt;/em&gt;, &lt;em&gt;gnu-free-fonts&lt;/em&gt; and &lt;em&gt;thai-scalable-fonts&lt;/em&gt;)
which seem to have some sort of test suites but I don't know how they work or
what type of problems they test for. On top of that all three have a different
way of doing things (e.g. not using a standardized test framework or a variation of such).&lt;/p&gt;
&lt;p&gt;I'll keep you posted on this once I manage to get more info from upstream developers.&lt;/p&gt;
&lt;h2&gt;Is URL Field in RPM Useless&lt;/h2&gt;
&lt;p&gt;So is it? Opinions here differ from totally useless to "don't remove it, I need it".
However I run a small test and from 2574 RPMs on the source DVD there is around 
40% of "something different than HTTP 200 OK". This means &lt;strong&gt;40% potentially broken URLs&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;The majority are responses in the 3XX range and only less than 10% are 
actual errors (4XX, 5XX, missing URLs or connection errors).&lt;/p&gt;
&lt;p&gt;It will be interesting to see if this can be removed from &lt;code&gt;rpm&lt;/code&gt; altogether.
I don't think it will happen soon but if we don't use it why have it there? &lt;/p&gt;
&lt;p&gt;My script for the test is
&lt;a href="https://github.com/atodorov/fedora-scripts/blob/master/test-rpm-url-field.sh"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Call to Action: Improving Overall Test Coverage in Fedora</title><link href="http://atodorov.org/blog/2014/02/28/action-improving-test-coverage-in-fedora/" rel="alternate"></link><updated>2014-02-28T14:46:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-28:blog/2014/02/28/action-improving-test-coverage-in-fedora/</id><summary type="html">&lt;p&gt;Around Christmas 2013
&lt;a href="/blog/2013/12/24/upstream-test-suite-status-of-fedora-20/"&gt;I said&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;... it looks like on average 30% of the packages execute their test suites at
build time in the %check section and less than 35% have test suites at all!
There’s definitely room for improvement and I plan to focus on this during 2014!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've recently started working on this goal by first identifying potential offending
packages and discussing the idea on Fedora's
&lt;a href="https://lists.fedoraproject.org/pipermail/devel/2014-February/thread.html"&gt;devel&lt;/a&gt;,
&lt;a href="https://lists.fedoraproject.org/pipermail/packaging/2014-February/thread.html"&gt;packaging&lt;/a&gt;
and &lt;a href="https://lists.fedoraproject.org/pipermail/test/2014-February/thread.html"&gt;test&lt;/a&gt;
mailing lists.&lt;/p&gt;
&lt;p&gt;May I present you nearly &lt;strong&gt;2000 packages&lt;/strong&gt; which need your love:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fedoraproject.org/wiki/QA/Testing_in_check"&gt;wiki/QA/Testing_in_check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fedoraproject.org/wiki/QA/Missing_upstream_test_suites"&gt;wiki/QA/Missing_upstream_test_suites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The intent for these pages is to serve as a source of working material for Fedora 
volunteers.&lt;/p&gt;
&lt;h2&gt;How Can I Help&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Join upstream and create a test suite for a package you find interesting;&lt;/li&gt;
&lt;li&gt;Provide patches - &lt;a href="https://lists.fedoraproject.org/pipermail/devel/2014-February/196035.html"&gt;first patch&lt;/a&gt;
came in less than 30 minutes of initial announcement :);&lt;/li&gt;
&lt;li&gt;Review packages in the wiki and help identify false negatives;&lt;/li&gt;
&lt;li&gt;Forward to people who may be interested to work on these items;&lt;/li&gt;
&lt;li&gt;Share and promote in your local open source and developer communities;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Important&lt;/h2&gt;
&lt;p&gt;If you would like to gain some open source practice and QA experience I will
happily provide mentorship and general help so you can start working on Fedora.
Just ping me!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Mocking Django AUTH_PROFILE_MODULE without a Database</title><link href="http://atodorov.org/blog/2014/02/27/mocking-django-auth-profile-module-without-database/" rel="alternate"></link><updated>2014-02-27T16:18:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-27:blog/2014/02/27/mocking-django-auth-profile-module-without-database/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; is a Django based service which uses a profile
model to provide site-specific, per-user information.
In the process of &lt;a href="https://github.com/difio/difio"&gt;open sourcing Difio&lt;/a&gt; its core
functionality becomes available as a Django app. The trouble is that the 
&lt;code&gt;UserProfile&lt;/code&gt; model contains site-specific and proprietary data which doesn't
make sense to the public nor I want to release it.&lt;/p&gt;
&lt;p&gt;The solution is to have a &lt;code&gt;MockProfile&lt;/code&gt; model and work with
that by default while &lt;a href="http://www.dif.io"&gt;www.dif.io&lt;/a&gt; and other implementations
override it as needed.
&lt;strong&gt;How do you do that without creating useless table and records in the database
but still have the profiles created automatically for every user?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It turns out the solution is quite simple. See my comments inside the code below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AbstractMockProfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Any AUTH_PROFILE_MODULE model should inherit this&lt;/span&gt;
&lt;span class="sd"&gt;        and override the default methods.&lt;/span&gt;

&lt;span class="sd"&gt;        This model provides the FK to User!&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_subscribed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Is this user subscribed for our newsletter? &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# no DB table created b/c model is abstract&lt;/span&gt;
        &lt;span class="n"&gt;abstract&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MockProfileManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Manager&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        This manager creates MockProfile&amp;#39;s on the fly without&lt;/span&gt;
&lt;span class="sd"&gt;        touching the database. It is needed by User.get_profile()&lt;/span&gt;
&lt;span class="sd"&gt;        b/c we can&amp;#39;t have an abstract base class as AUTH_PROFILE_MODULE.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;using&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; It doesn&amp;#39;t matter which database we use! &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;            User.get_profile() calls .using(...).get(user_id__exact=X)&lt;/span&gt;
&lt;span class="sd"&gt;            so we instrument it here to return a MockProfile() with&lt;/span&gt;
&lt;span class="sd"&gt;            user_id=X parameter. Anything else may break!!!&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="c"&gt;# this creates an object in memory. To save it to DB&lt;/span&gt;
        &lt;span class="c"&gt;# call obj.save() which we DON&amp;#39;T do anyway!&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MockProfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MockProfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AbstractMockProfile&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        In-memory (fake) profile class used by default for&lt;/span&gt;
&lt;span class="sd"&gt;        the AUTH_PROFILE_MODULE setting.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MockProfileManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# DB table is NOT created automatically&lt;/span&gt;
        &lt;span class="c"&gt;# when managed = False&lt;/span&gt;
        &lt;span class="n"&gt;managed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In Difio core the user profile is always used like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;profile = request.user.get_profile()
if profile.is_subscribed():
    pass
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and by default&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;AUTH_PROFILE_MODULE = &amp;quot;difio.MockProfile&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Voila!&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>Skip or Render Specific Blocks from Jinja2 Templates</title><link href="http://atodorov.org/blog/2014/02/21/skip-or-render-specific-blocks-from-jinja2-templates/" rel="alternate"></link><updated>2014-02-21T00:08:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-21:blog/2014/02/21/skip-or-render-specific-blocks-from-jinja2-templates/</id><summary type="html">&lt;p&gt;I wasn't able to find detailed information on how to skip rendering
or only render specific blocks from Jinja2 templates so here's my solution.
Hopefully you find it useful too.&lt;/p&gt;
&lt;p&gt;With below template I want to be able to render &lt;strong&gt;only&lt;/strong&gt; &lt;em&gt;kernel_options&lt;/em&gt; block
as a single line and then render the rest of the template &lt;strong&gt;excluding&lt;/strong&gt; &lt;em&gt;kernel_options&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;base.j2&lt;/span&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;kernel_options&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;console=tty0&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;debug&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        debug=1&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="nv"&gt;kernel_options&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;OS_MAJOR&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;key --skip&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;%packages&lt;/span&gt;
&lt;span class="x"&gt;@base&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;OS_MAJOR&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;%end&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To render a particular block you have to use the low level Jinja API
&lt;em&gt;&lt;a href="http://jinja.pocoo.org/docs/api/#jinja2.Template.blocks"&gt;template.blocks&lt;/a&gt;&lt;/em&gt;.
This will return a dict of block rendering functions which need a &lt;em&gt;Context&lt;/em&gt; to work with.&lt;/p&gt;
&lt;p&gt;The second part is trickier. To remove a block we have to create an extension
which will filter it out. The provided &lt;em&gt;SkipBlockExtension&lt;/em&gt; class does
exactly this.&lt;/p&gt;
&lt;p&gt;Last but not least - if you'd like to use both together you have to disable
caching in the &lt;em&gt;Environment&lt;/em&gt; (so you get a fresh template every time), render
your blocks first, configure &lt;em&gt;env.skip_blocks&lt;/em&gt; and render the entire template
without the specified blocks.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;jinja2-render&lt;/span&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jinja2.ext&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Extension&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jinja2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FileSystemLoader&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SkipBlockExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Extension&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SkipBlockExtension&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;skip_blocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;filter_stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;block_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;in_endblock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;block_begin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;block&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;block_level&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;look&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;skip_blocks&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                        &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;block_level&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;endblock&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;in_endblock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;block_end&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;in_endblock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;in_endblock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
                    &lt;span class="n"&gt;block_level&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;block_level&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;skip_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;OS_MAJOR&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ARCH&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;x86_64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;abs_path&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;dir_name&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abs_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;base_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abs_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FileSystemLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir_name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SkipBlockExtension&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="n"&gt;cache_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;# disable cache b/c we do 2 get_template()&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# first render only the block we want&lt;/span&gt;
    &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;kernel_options&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new_context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Boot Args:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;---------------------------&amp;quot;&lt;/span&gt;

    &lt;span class="c"&gt;# now instruct SkipBlockExtension which blocks we don&amp;#39;t want&lt;/span&gt;
    &lt;span class="c"&gt;# and get a new instance of the template with these blocks removed&lt;/span&gt;
    &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;skip_blocks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;kernel_options&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;---------------------------&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above code results in the following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;j2&lt;/span&gt; 
&lt;span class="n"&gt;Boot&lt;/span&gt; &lt;span class="nl"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tty0&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; 
&lt;span class="o"&gt;---------------------------&lt;/span&gt;

&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;skip&lt;/span&gt;

&lt;span class="nf"&gt;%packages&lt;/span&gt;
&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;
&lt;span class="o"&gt;---------------------------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Teaser: this is part of my effort to replace SNAKE with a client side
kickstart template engine for
&lt;a href="/blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/"&gt;Beaker&lt;/a&gt;
so stay tuned!&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category><category term="Fedora"></category></entry><entry><title>7 Years and 1400 Bugs Later as Red Hat QA</title><link href="http://atodorov.org/blog/2014/02/19/7-years-1400-bugs-red-hat-qa/" rel="alternate"></link><updated>2014-02-19T10:43:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-19:blog/2014/02/19/7-years-1400-bugs-red-hat-qa/</id><summary type="html">&lt;p&gt;Today I celebrate my 7th year working at Red Hat's Quality Engineering department.
Here's my story!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Platform QE" src="/images/redhat_platform_qe.jpg" title="Platform QE" /&gt;&lt;/p&gt;
&lt;p&gt;On a cold winter Friday in 2007 I left my job as a software developer in Sofia,
packed my stuff together, purchased my &lt;a href="http://amzn.to/1hlPuyr"&gt;first laptop&lt;/a&gt; and
on Sunday jumped the train to Brno to join the Release Test Team at Red Hat.
Little did I know what it was all about. When I was offered the position
I was on a very noisy bus and had to pick between two positions. I didn't quite understood
what were the options and just picked the second one.
Luckily everything turned out great and continues to this day.&lt;/p&gt;
&lt;p&gt;I'm sharing my experience and highlighting some bugs which I've found.
Hopefully you will find this interesting and amusing. If you are a QA engineer
I urge you to take a look at &lt;a href="http://red.ht/1gbHElQ"&gt;my public bug portfolio&lt;/a&gt;,
dive into details, read the comments and learn as much as you can.&lt;/p&gt;
&lt;h2&gt;What do I do exactly&lt;/h2&gt;
&lt;p&gt;From all QE teams in Red Hat, Release Test Team is the first one and
last one to test a release. The team has both technical function and a more managerial one.
Our focus is on the core Red Hat Enterprise Linux product. 
Unfortunately I can't go into much details because this is not a public facing unit.
I will limit myself to &lt;strong&gt;public and/or non-sensitive information&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We are the first to test a new nightly build or a
snapshot of the upcoming RHEL release. If the tree is installable other teams take over
and do their magic. At the end when bits are published live we're the last to
verify that content is published where it is expected to be. In short this is
covering the work of the release engineering team which is to build a product and
publish the contents for consumption.&lt;/p&gt;
&lt;p&gt;The same principles apply to Fedora although the engagement here is less demanding.&lt;/p&gt;
&lt;p&gt;Personally I have been and continue to be responsible for Red Hat Enterprise Linux 5
family of releases. It's up to me to give the go ahead for further testing or request
a re-spin. This position
also has the power to block and delay the GA release if not happy with testing or
there is a considerable risk of failure until things are sorted out.&lt;/p&gt;
&lt;p&gt;Like in other QA teams I create test plan documents, write test case scenarios,
implement test automation scripts (and sometimes tools), regularly execute said test
plans and test cases, find and report any new bugs and verify old ones are fixed. 
Most importantly make sure RHEL installs and is usable for further testing :).&lt;/p&gt;
&lt;p&gt;Sometimes I have to deal with capacity planning and as RHEL 5 installation 
test lead I have to organize and manage the entire installation testing campaign
for that product.&lt;/p&gt;
&lt;p&gt;My favorite testing technique is
&lt;a href="https://en.wikipedia.org/wiki/Exploratory_testing"&gt;exploratory testing&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Stats and Numbers&lt;/h2&gt;
&lt;p&gt;It is hard (if not impossible) to &lt;a href="https://github.com/atodorov/qe-metrics"&gt;measure QA work&lt;/a&gt;
with numbers alone but here are some interesting facts about my experience so far.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nearly 1400 bugs filed (1390 at the time of writing);&lt;/li&gt;
&lt;li&gt;Reported bugs across 32 different products. Top 3 being RHEL 6, RHEL 5 and Fedora (1000+ bugs);&lt;/li&gt;
&lt;li&gt;Top 3 components for reporting bugs against: anaconda, releng, kernel;&lt;/li&gt;
&lt;li&gt;Nearly 100 bugs filed in my first year 2007;&lt;/li&gt;
&lt;li&gt;The 3 most productive years being 2010, 2009, 2011 (800 + bugs); &lt;/li&gt;
&lt;li&gt;Filed 200 bugs/year which is about 1 bug/day considering holidays;&lt;/li&gt;
&lt;li&gt;35th top bug reporter (excluding robot accounts). I was in top 10 a few years back;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many of &lt;a href="http://red.ht/1gbHElQ"&gt;the bugs I report&lt;/a&gt; are private so if you'd like
to know more stats just ask me and I'll see what I can do.&lt;/p&gt;
&lt;h2&gt;2007&lt;/h2&gt;
&lt;p&gt;My very first bug is &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=231860"&gt;RHBZ #231860&lt;/a&gt;(private)
which is about the graphical update tool Pup which used to show the wrong number of available
updates.&lt;/p&gt;
&lt;p&gt;Then I've played with adding &lt;a href="https://fedorahosted.org/dogtail/"&gt;Dogtail&lt;/a&gt; support to Anaconda.
While initially this was rejected (Fedora 6/7), it was &lt;a href="https://fedoraproject.org/wiki/Anaconda/Features/Dogtail"&gt;implemented&lt;/a&gt;
few years later (Fedora 9) and then removed once again during the big Anaconda rewrite.&lt;/p&gt;
&lt;p&gt;I've spent my time working extensively on RHEL 5 battling with multi-lib issues, SELinux denials and
generally making the 5 family less rough. Because I was still on-boarding I generally worked
on everything I could get my hands on and also did some work on RHEL3-U9 (latest release
before EOL) and some RHEL4-U6 testing.&lt;/p&gt;
&lt;p&gt;With ia64 on RHEL3 I found a corner case
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=240782"&gt;kernel bug&lt;/a&gt; which flooded the serial
console with messages and caused a multi-CPU system to freeze.&lt;/p&gt;
&lt;h2&gt;In 2008 Time went backwards&lt;/h2&gt;
&lt;p&gt;My first bug in 2008 is &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=428280"&gt;RHBZ #428280&lt;/a&gt;.
glibc introduced SHA-256/512 hashes for hashing passwords with crypt but that wasn't documented.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2014-02-21&lt;/strong&gt;
While testing 5.1 to 5.2 updates I found
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=435475"&gt;RHBZ #435475&lt;/a&gt; - a severe
&lt;strong&gt;performance degradation&lt;/strong&gt; in the package installation process. Upgrades
took almost twice as much time to complete, rising &lt;strong&gt;from 4 hours to 7 hours&lt;/strong&gt;
depending on hardware and package set. This was a tough one to test and verify.
&lt;strong&gt;END UPDATE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While dogfooding the 5.2 beta in March I hit
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=437252"&gt;RHBZ #437252&lt;/a&gt; - kernel: Timer ISR/0: Time went backwards.
To this date this is one of my favorite bugs with a great error message!&lt;/p&gt;
&lt;p&gt;Removal of a hack in RPM led to file conflicts under &lt;code&gt;/usr/share/doc&lt;/code&gt; in several packages:
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448905"&gt;RHBZ #448905&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448906"&gt;RHBZ #448906&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448907"&gt;RHBZ #448907&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448909"&gt;RHBZ #448909&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448910"&gt;RHBZ #448910&lt;/a&gt;,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=448911"&gt;RHBZ #448911&lt;/a&gt;
which is also the first time I happen to file several bugs in a row.&lt;/p&gt;
&lt;p&gt;ia64 couldn't boot with encrypted partitions -
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=464769"&gt;RHBZ #464769&lt;/a&gt;,
RHEL 5 introduced support for ext4 - &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=465248"&gt;RHBZ #465248&lt;/a&gt;
and I've hit a fontconfig issue during upgrades - &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=469190"&gt;RHBZ #469190&lt;/a&gt;
which continued to resurface occasionally during the next 5 years.&lt;/p&gt;
&lt;p&gt;This is the year when I took over responsibility for the general installation
testing of RHEL 5 from James Laska and will continue to do so until it reaches end-of-life!&lt;/p&gt;
&lt;p&gt;I've also worked on RHEL 4, Fedora and even the OLPC project. On the testing side of things
I've participated in testing
&lt;a href="https://fedoraproject.org/wiki/QA/TestPlans/Networking"&gt;Fedora networking on the XO&lt;/a&gt;
hardware and worked on translation and general issues.&lt;/p&gt;
&lt;h2&gt;2009 - here comes RHEL 6&lt;/h2&gt;
&lt;p&gt;This year starts my 3 most productive years period. &lt;/p&gt;
&lt;p&gt;The second bug reported this
year is &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=481338"&gt;RHBZ #481338&lt;/a&gt; which
also mentions one of my hobbies - wrist watches. While browsing a particular
website Xorg CPU usage rose to 100%. I've seen a number of these through the years
and I'm still not sure if its Xorg or Firefox or both to blame. And I still see my
CPU usage go to 100% just like that and drain my battery. I'm open to suggestions how
to test and debug what's going on as it doesn't happen in a reproducible fashion.&lt;/p&gt;
&lt;p&gt;I happened to work on RHEL 4, RHEL 5, Fedora and the upcoming RHEL 6 releases and
managed to file bugs in a row not once but twice. 
I wish I was paid per bug reported back then :).&lt;/p&gt;
&lt;p&gt;The first series was about empty debuginfo packages with both empty packages which
shouldn't have existed at all
(e.g. &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=500628"&gt;redhat-release&lt;/a&gt;) 
and missing debuginfo information for binary packages
(e.g. &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=500612"&gt;nmap&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The second series is around 100 bugs which had to do with the texinfo
documentation of packages when installed with --excludedocs. The first one
is &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=515909"&gt;RHBZ #515909&lt;/a&gt; and the
last one &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=516014"&gt;RHBZ #516014&lt;/a&gt;.
While this works great for bumping up your bug count it made lots of developers
unhappy and not all bugs were fixed. Still the use case is valid and these
were proper software errors. It is also the first time I've used a script to
file the bugs automatically and not by hand.&lt;/p&gt;
&lt;p&gt;Near the end of the year I've started testing installation on new hardware
by the likes of Intel and AMD before they hit the market. I had the pleasure to work
with the latest chipsets and CPUs, even sometime pre-release versions and make sure
Red Hat Enterprise Linux installed and worked properly on them. I've stopped doing
this last year to free up time for other tasks.&lt;/p&gt;
&lt;h2&gt;2010 - one bug a day keeps developers at bay :)&lt;/h2&gt;
&lt;p&gt;My most productive year with 1+ bugs per day.&lt;/p&gt;
&lt;p&gt;2010 starts with a bug about file conflicts (private one) and continues with the same
narrative throughout the year.
As a matter of fact I did a small experiment and found around &lt;strong&gt;50000&lt;/strong&gt;
(you read that right, fifty thousand) potentially
conflicting files, mostly between multi-lib packages, which were being ignored by RPM
due to its multi-lib policies. However these were primarily man pages or documentation
and most of them didn't get fixed. The proper fix would have been to introduce a
-docs sub-package and split these files from the actual binaries. Fortunately the world
migrated to 64bit only and this isn't an issue anymore.&lt;/p&gt;
&lt;p&gt;By that time RHEL 6 development was running at its peak capacity and there were Beta
versions available. Almost the entire year I've been working on internal RHEL 6 snapshots
and discovering the many new bugs introduced with tons of new features in the installer.
Some of the new features included better IPv6 support, dracut and KVM.&lt;/p&gt;
&lt;p&gt;An interesting set of bugs from September are the rpmlint errors and warnings ones,
for example &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=634931"&gt;RHBZ #634931&lt;/a&gt;. I just
run the most basic test tool against some packages. It generated lots of false negatives
but also revealed bugs which were fixed.&lt;/p&gt;
&lt;p&gt;Although there were many bugs filed this year I don't see any particularly interesting ones.
It's been more like lots of work to improve the overall quality than exploring
edge cases and finding interesting failures. If you find a bug from this period that you
think is interesting I will comment on it.&lt;/p&gt;
&lt;h2&gt;2011 - Your system may be seriously compromised&lt;/h2&gt;
&lt;p&gt;This is the last year of my 3 year top cycle. &lt;/p&gt;
&lt;p&gt;It starts with &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=666687"&gt;RHBZ #666687&lt;/a&gt; -
a patch for my crappy printer-scanner-coffee maker which I've been carrying around
since &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=498228"&gt;2009&lt;/a&gt; when I bought it.&lt;/p&gt;
&lt;p&gt;I was still working primarily on RHEL 6 but helped test the latest RHEL 4 release
before it went end-of-life. The interesting thing about it was that unlike other
released RHEL4-U9 was not available on installation media but only as an update from
RHEL4-U8. This was a great experience which you happen to see
&lt;a href="https://access.redhat.com/site/support/policy/updates/errata/"&gt;every 4 to 5 years&lt;/a&gt; or so.&lt;/p&gt;
&lt;p&gt;Btw I've also led the installation testing effort and RTT team through the last few
RHEL 4 releases but given the product was approaching EOL there weren't many changes
and things went smoothly.&lt;/p&gt;
&lt;p&gt;A minor side activity was me playing around with
&lt;a href="/blog/2011/03/14/usb-multi-seat-on-red-hat-enterprise-linux-6/"&gt;USB Multi-seat&lt;/a&gt;
and finding a few bugs here and there along the way.&lt;/p&gt;
&lt;p&gt;Another interesting activity in 2011 was proof-reading the entire product documentation
before its release which I can now relate to the 
&lt;a href="/blog/2014/02/03/fosdem-2014-report-day-2-testing-and-automation/"&gt;Testing Documentation&lt;/a&gt;
talk at FOSDEM 2014.&lt;/p&gt;
&lt;p&gt;In 2011 I've started using the cloud and most notably Red Hat's OpenShift PaaS service.
First internally as an early adopter and later externally after the product was announced
to the public. There are a few interesting bugs here but they are private and I'm not
at liberty to share although they've all been fixed since then.&lt;/p&gt;
&lt;p&gt;An interesting bug with NUMA, Xen and ia64
(&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=696599"&gt;RHBZ #696599&lt;/a&gt; - private) had
me and devel banging our heads against the wall until we figured out that on this
particular system the NUMA configuration was not suitable for running Xen virtualization.&lt;/p&gt;
&lt;p&gt;Can you spot the problem here ?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;kickstartGui&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Could not open display because no X server is running.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Try running &amp;#39;system-config-kickstart --help&amp;#39; for a list of options.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Be honest and use the comments form to tell me what you've found. If you struggled
then see &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=703085"&gt;RHBZ #703085&lt;/a&gt; and come
back again to comment. I'd love to hear from you.&lt;/p&gt;
&lt;p&gt;What do you do when you see an error message saying: 
&lt;strong&gt;Your system may be seriously compromised! /usr/sbin/NetworkManager tried to load a kernel module.&lt;/strong&gt;
This is the scariest error message I've ever seen. Luckily its just
SELinux overreacting, see &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=704090"&gt;RHBZ #704090&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;2012 is in the red zone&lt;/h2&gt;
&lt;p&gt;While the number of reported bugs dropped significantly compared to previous
years this is the year when I've reported almost exclusively high priority and
urgent bugs, the first one being 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=771901"&gt;RHBZ #771901&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=799384"&gt;RHBZ #799384&lt;/a&gt;(against Fedora)
is one of the rare cases when I was able to contribute
(although just by raising awareness) to localization and improved support for
Bulgarian and Cyrillic. 
The other one case was &lt;a href="http://atodorov.org/blog/2013/10/11/fedora-20-gnome-3-dot-10-test-day-post-mortem/"&gt;last year&lt;/a&gt;.
Btw I find it strange that although 
&lt;a href="https://en.wikipedia.org/wiki/Cyrillic_script"&gt;Cyrillic was invented by Bulgarians&lt;/a&gt;
we didn't (or still don't) have a native font co-maintainer.
Somebody please step up!&lt;/p&gt;
&lt;p&gt;The red zone bugs continue to span till the end of the year across RHEL 5, 6 and
early cuts of RHEL 7 with a pinch of OpenShift and some internal and external test tools.&lt;/p&gt;
&lt;h2&gt;In 2013 Bugzilla hit 1 million bugs&lt;/h2&gt;
&lt;p&gt;The year starts with a very annoying and still not fixed bug against ABRT.
It's very frustrating when the tool which is supposed to help you file bugs
doesn't work properly, see &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=903591"&gt;RHBZ #903591&lt;/a&gt;.
It's a known fact that
&lt;a href="/2012/07/13/mission-impossible-abrt-bugzilla-plugin-on-rhel6/"&gt;ABRT has problems&lt;/a&gt;
and for this scenario I may have a 
&lt;a href="/blog/2013/10/12/tip-installing-missing-debuginfo-packages-for-abrt/"&gt;tip&lt;/a&gt; for you.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=923416"&gt;RHBZ #923416&lt;/a&gt; - another one of these
100% CPU bugs. As I said they happen from time to time and mostly go by unfixed or
partially fixed because of their nature. Btw as I'm writing this post and have
a few tabs open in Firefox it keeps using between 15% and 20% CPU and the CPU
temperature is over 90 degrees C. And all I'm doing is writing text in the console.
Help!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=967229"&gt;RHBZ #967229&lt;/a&gt; - a minor one but
reveals an important thing - your output (and input for that matter) methods may
be producing different results. Worth testing if your software supports more than one.&lt;/p&gt;
&lt;p&gt;This year I did some odd jobs working on several of Red Hat's layered products mainly
Developer Toolset. It wasn't a tough job and was a refreshing break away from the mundane
installation testing.&lt;/p&gt;
&lt;p&gt;While I stopped working actively on the various RHEL families which are under development
or still supported I happened to be one of top 10 bug reporters for high/urgent priority bugs
for RHEL 7. In appreciation Red Hat sent me lots of corporate gifts and the Platform QE hoodie
pictured at the top of the page. Many thanks!&lt;/p&gt;
&lt;p&gt;In the summer Red Hat's 
&lt;a href="/blog/2013/08/23/red-hats-bugzilla-hits-one-million-bugs/"&gt;Bugzilla hit One Million bugs&lt;/a&gt;.
The closest I come to this milestone is
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=999941"&gt;RHBZ #999941&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I finally managed to transfer most of my responsibilities to co-workers and joined
the Fedora QA team as a part-time contributor. I had some highs and lows with
&lt;a href="/blog/2013/10/07/fedora-20-virtualization-and-gnome-test-days-at-init-lab-this-week/"&gt;Fedora test days in Sofia&lt;/a&gt;
as well. Good thing is I scored another 15 bugs across the
&lt;a href="/blog/2013/10/08/fedora-20-virtualization-test-day-post-mortem/"&gt;virtualization stack&lt;/a&gt;
and &lt;a href="/blog/2013/10/11/fedora-20-gnome-3-dot-10-test-day-post-mortem/"&gt;GNOME 3.10&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The year wraps up with another series of identical bugs,
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1024729"&gt;RHBZ #1024729&lt;/a&gt; and
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1025289"&gt;RHBZ #1025289&lt;/a&gt; for example.
As it &lt;a href="/blog/2013/12/24/upstream-test-suite-status-of-fedora-20/"&gt;turned out&lt;/a&gt;
lots of packages don't have any test suites at all and those
which do don't always execute them automatically in %check. I've promised myself
to improve this but still haven't had time to work on it. Hopefully by
March I will have something in the works.&lt;/p&gt;
&lt;h2&gt;2014 - Fedora QA improvement&lt;/h2&gt;
&lt;p&gt;Last two months I've been working on some internal projects and looking
a little bit into improving processes, test coverage and QA infrastructure - 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1064895"&gt;RHBZ #1064895&lt;/a&gt;.
And Rawhide (upcoming Fedora 21) isn't behaving -
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1063245"&gt;RHBZ #1063245&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My goal for this year is to do more work on improving the overall test coverage
of Fedora and together with the Fedora QA team bring an
&lt;a href="/blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/"&gt;open testing infrastructure&lt;/a&gt;
to the community. &lt;/p&gt;
&lt;p&gt;Let's see how well that plays out!&lt;/p&gt;
&lt;h2&gt;What do I do now&lt;/h2&gt;
&lt;p&gt;During the last year I have gradually changed my responsibilities to work more on Fedora.
As a volunteer in the Fedora QA I'm regularly testing installation
of Rawhide trees and try to work closely with the community. I still have to
manage RHEL 5 test cycles where I don't expect nothing disruptive at this stage in the
product life-cycle!&lt;/p&gt;
&lt;p&gt;I'm open to any ideas and help which can improve test coverage and quality of software
in Fedora. If you're just joining the open source world this is an excellent
opportunity to do some good, get noticed and even maybe get a job. I will definitely
help you get through the process if you're willing to commit your time to this.&lt;/p&gt;
&lt;p&gt;I hope this long post has been useful and fun to read. Please use the comments form to tell
me if I'm missing something or you'd like to know more.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Looking forward to the next 7 years!&lt;/em&gt;&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Moving /tmp from EBS to Instance Storage</title><link href="http://atodorov.org/blog/2014/02/10/moving-tmp-from-ebs-to-instance-storage/" rel="alternate"></link><updated>2014-02-10T13:48:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-10:blog/2014/02/10/moving-tmp-from-ebs-to-instance-storage/</id><summary type="html">&lt;p&gt;I've seen a fair amount of stories about moving away from Amazon's EBS volumes
to ephemeral instance storage. I've decided to give it a try starting with &lt;code&gt;/tmp&lt;/code&gt;
directory where &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; operates.&lt;/p&gt;
&lt;p&gt;It should be noted that although instance storage may be available for some instance
types it may not be attached by default. Use this command to check:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://169.254.169.254/latest/meta-data/block-device-mapping/
ami
root
swap
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the above example there is no instance storage present. &lt;/p&gt;
&lt;p&gt;You can attach one either when launching the EC2 instance or when creating a customized AMI
(instance storage devices are pre-defined in the AMI). When creating an AMI you can attach more ephemeral devices
but they will not available when instance is launched. The maximum number of available
instance storage devices can be found in the
&lt;a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes"&gt;docs&lt;/a&gt;.
That is to say if you have an AMI which defines 2 ephemeral devices and launch a
standard m1.small instance there will be only one ephemeral device present.&lt;/p&gt;
&lt;p&gt;Also note that for M3 instances, you must specify instance store volumes in the
block device mapping for the instance. When you launch an M3 instance, Amazon ignores
any instance store volumes specified in the block device mapping for the AMI.&lt;/p&gt;
&lt;p&gt;As far as I can see the AWS Console doesn't indicate if instance storage is attached
or not. For instance with 1 ephemeral volume:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://169.254.169.254/latest/meta-data/block-device-mapping/
ami
ephemeral0
root
swap

&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://169.254.169.254/latest/meta-data/block-device-mapping/ephemeral0
sdb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ephemeral devices can be mounted in &lt;code&gt;/media/ephemeralX/&lt;/code&gt;, but not all volumes.
I've found that usually only &lt;code&gt;ephemeral0&lt;/code&gt; is mounted automatically.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://169.254.169.254/latest/meta-data/block-device-mapping/
ami
ephemeral0
ephemeral1
root

&lt;span class="nv"&gt;$ &lt;/span&gt;ls -l /media/
drwxr-xr-x &lt;span class="m"&gt;3&lt;/span&gt; root root &lt;span class="m"&gt;4096&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt; ное  &lt;span class="m"&gt;2009&lt;/span&gt; ephemeral0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For Difio I have an init.d script which executes when the system
boots. To enable &lt;code&gt;/tmp&lt;/code&gt; on ephemeral storage I just added the following snippet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;$&amp;quot;Mounting /tmp on ephemeral storage:&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; ef in &lt;span class="sb"&gt;`&lt;/span&gt;curl http://169.254.169.254/latest/meta-data/block-device-mapping/ 2&amp;gt;/dev/null &lt;span class="p"&gt;|&lt;/span&gt; grep ephemeral&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nv"&gt;disk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;curl http://169.254.169.254/latest/meta-data/block-device-mapping/&lt;span class="nv"&gt;$ef&lt;/span&gt; 2&amp;gt;/dev/null&lt;span class="sb"&gt;`&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$&amp;quot;&lt;/span&gt;Unmounting /dev/&lt;span class="nv"&gt;$disk&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    umount /dev/&lt;/span&gt;&lt;span class="nv"&gt;$disk&lt;/span&gt;&lt;span class="s2"&gt;&lt;/span&gt;

&lt;span class="s2"&gt;    echo &lt;/span&gt;&lt;span class="nv"&gt;$&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;mkfs /dev/&lt;/span&gt;&lt;span class="nv"&gt;$disk&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    mkfs.ext4 -q /dev/&lt;span class="nv"&gt;$disk&lt;/span&gt;

    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$&amp;quot;&lt;/span&gt;Mounting /dev/&lt;span class="nv"&gt;$disk&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    mount -t ext4 /dev/&lt;/span&gt;&lt;span class="nv"&gt;$disk&lt;/span&gt;&lt;span class="s2"&gt; /tmp &amp;amp;&amp;amp; chmod 1777 /tmp &amp;amp;&amp;amp; success || failure&lt;/span&gt;
&lt;span class="s2"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; success and failure are from &lt;code&gt;/etc/rc.d/init.d/functions&lt;/code&gt;.
If you are using LVM or RAID you need to reconstruct your block devices
accordingly!&lt;/p&gt;
&lt;p&gt;If everything goes right I should be able to reduce my AWS costs by saving on
provisioned storage and I/O requests. I'll keep you posted on this after a month or two.&lt;/p&gt;</summary><category term="cloud"></category><category term="Amazon"></category></entry><entry><title>Articles of The Week: Git Submodules and Stopping SPAM Without CAPTCHA</title><link href="http://atodorov.org/blog/2014/02/08/articles-week-git-submodules-stopping-spam-without-captcha/" rel="alternate"></link><updated>2014-02-08T23:00:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-08:blog/2014/02/08/articles-week-git-submodules-stopping-spam-without-captcha/</id><summary type="html">&lt;p&gt;Here are two articles which I found very useful and interesting this week:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://chrisjean.com/2009/04/20/git-submodules-adding-using-removing-and-updating/"&gt;Git Submodules: Adding, Using, Removing, Updating&lt;/a&gt;
is a clear description of working with git submodules which I had to do recently.
There's a huge comments section with more useful info as well. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://nedbatchelder.com/text/stopbots.html"&gt;Stopping spambots with hashes and honeypots&lt;/a&gt;
is a very interesting read about non-CAPTCHA techniques to stop SPAM bots from filling forms
and comments on your site. I didn't even know these exist but I have to admin this is not my
area of expertise either. The author just scratches the surface of the topic and there are other
methods described in the comments as well. Make sure to read this if you are building forms
or sites with comments.&lt;/p&gt;</summary></entry><entry><title>Tip: How to Build updates.img for Fedora</title><link href="http://atodorov.org/blog/2014/02/07/tip-how-to-build-updates.img-for-fedora/" rel="alternate"></link><updated>2014-02-07T11:01:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-07:blog/2014/02/07/tip-how-to-build-updates.img-for-fedora/</id><summary type="html">&lt;p&gt;Anaconda the Fedora, CentOS and Red Hat Enterprise Linux installer has the
capability to incorporate
&lt;a href="https://fedoraproject.org/wiki/Anaconda/Updates"&gt;updates at runtime&lt;/a&gt;.
These updates are generally distributed as an &lt;code&gt;updates.img&lt;/code&gt; file. Here is how
to easily build one from a working installation tree.&lt;/p&gt;
&lt;p&gt;Instead of using the git sources to build an updates.img I prefer using the SRPM
from the tree which I am installing. &lt;strike&gt;This way the resulting updates image will be
more consistent with the anaconda version already available in the tree. And in theory
everything you need to build it should already be available as well.&lt;/strike&gt;
&lt;strong&gt;UPDATE 2014-02-08:&lt;/strong&gt; You can also build the &lt;code&gt;updates.img&lt;/code&gt; from the git source tree
which is shown at the bottom of this article. &lt;/p&gt;
&lt;p&gt;The following steps work for me on a Fedora 20 system. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download the source RPM for anaconda from the tree and extract the sources to a working
directory. Then;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;anaconda-20.25.16-1
git init
git add .
git commit -m &lt;span class="s2"&gt;&amp;quot;initial import&amp;quot;&lt;/span&gt;
git tag anaconda-20.25.16-1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The above steps will create a local git repository and tag the initial contents before
modification. The tag is required later by the script which creates the updates image;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After making your changes commit them and from the top anaconda directory execute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./scripts/makeupdates -t anaconda-20.25.16-1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also add RPM contents to the updates.img but you need to download the packages first:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yumdownloader python-coverage python-setuptools

./scripts/makeupdates -t anaconda-20.25.16-1 -a ~/python-coverage-3.7-1.fc20.x86_64.rpm -a ~/python-setuptools-1.4.2-1.fc20.noarch.rpm 
BUILDDIR /home/atodorov/anaconda-20.25.16-1
Including anaconda
&lt;span class="m"&gt;2&lt;/span&gt; RPMs added manually:
python-setuptools-1.4.2-1.fc20.noarch.rpm
python-coverage-3.7-1.fc20.x86_64.rpm
&lt;span class="nb"&gt;cd&lt;/span&gt; /home/atodorov/anaconda-20.25.16-1/updates &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rpm2cpio /home/atodorov/python-setuptools-1.4.2-1.fc20.noarch.rpm &lt;span class="p"&gt;|&lt;/span&gt; cpio -dium
&lt;span class="m"&gt;3534&lt;/span&gt; blocks
&lt;span class="nb"&gt;cd&lt;/span&gt; /home/atodorov/anaconda-20.25.16-1/updates &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rpm2cpio /home/atodorov/python-coverage-3.7-1.fc20.x86_64.rpm &lt;span class="p"&gt;|&lt;/span&gt; cpio -dium
&lt;span class="m"&gt;1214&lt;/span&gt; blocks
&amp;lt;stdin&amp;gt; to &amp;lt;stdout&amp;gt; &lt;span class="m"&gt;4831&lt;/span&gt; blocks

updates.img ready
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the above example I have only modified the top level anaconda file (&lt;code&gt;/usr/sbin/anaconda&lt;/code&gt;
inside the installation environment) experimenting with
&lt;a href="http://nedbatchelder.com/code/coverage/"&gt;python-coverage&lt;/a&gt; integration.&lt;/p&gt;
&lt;p&gt;You are done! Make the &lt;code&gt;updates.img&lt;/code&gt; available to Anaconda and start using it!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2014-02-08:&lt;/strong&gt; If you prefer working with the anaconda source tree here's
how to do it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone git://git.fedorahosted.org/git/anaconda.git
&lt;span class="nb"&gt;cd &lt;/span&gt;anaconda/
git checkout anaconda-20.25.16-1 -b my_feature-branch

... make changes ...

git commit -a -m &lt;span class="s2"&gt;&amp;quot;Fixed something&amp;quot;&lt;/span&gt;

./scripts/makeupdates -t anaconda-20.25.16-1
&lt;/pre&gt;&lt;/div&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>AWS Tip: Shrinking EBS Root Volume Size</title><link href="http://atodorov.org/blog/2014/02/07/aws-tip-shrinking-ebs-root-volume-size/" rel="alternate"></link><updated>2014-02-07T00:23:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-07:blog/2014/02/07/aws-tip-shrinking-ebs-root-volume-size/</id><summary type="html">&lt;p&gt;Amazon's Elastic Block Store volumes are easy to use and expand but notoriously
hard to shrink once their size has grown. Here is my tip for shrinking EBS size
and saving some money from over-provisioned storage. I'm assuming that you want to
shrink the root volume which is on EBS. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write down the block device name for the root volume (/dev/sda1) - &lt;em&gt;from AWS console:
Instances; Select instance; Look at Details tab; See Root device or Block devices&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Write down the availability zone of your instance - &lt;em&gt;from AWS console: Instances;
column Availability Zone&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Stop instance;&lt;/li&gt;
&lt;li&gt;Create snapshot of the root volume;&lt;/li&gt;
&lt;li&gt;From the snapshot, create a second volume, in the &lt;strong&gt;same availability zone&lt;/strong&gt; as
your instance (you will have to attach it later). This will be your pristine source;&lt;/li&gt;
&lt;li&gt;Create new empty EBS volume (not based on a snapshot), with smaller size,
in the same availability zone - &lt;em&gt;from AWS console: Volumes; Create Volume;
Snapshot == No Snapshot&lt;/em&gt;; &lt;strong&gt;IMPORTANT&lt;/strong&gt; - size should be large enough to hold
all the files from the source file system (try &lt;code&gt;df -h&lt;/code&gt; on the source first);&lt;/li&gt;
&lt;li&gt;Attach both volumes to instance while taking note of the block devices names
you assign for them in the AWS console;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example: In my case &lt;code&gt;/dev/sdc1&lt;/code&gt; is the source snapshot and &lt;code&gt;/dev/sdd1&lt;/code&gt; is the
empty target.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start instance;&lt;/li&gt;
&lt;li&gt;Optionally check the source file system with &lt;code&gt;e2fsck -f /dev/sdc1&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Create a file system for the empty volume - &lt;code&gt;mkfs.ext4 /dev/sdd1&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Mount volumes at &lt;code&gt;/source&lt;/code&gt; and &lt;code&gt;/target&lt;/code&gt; respectively;&lt;/li&gt;
&lt;li&gt;Now sync the files: &lt;code&gt;rsync -aHAXxSP /source/ /target&lt;/code&gt;. &lt;strong&gt;Note the missing slash (/)
after &lt;code&gt;/target&lt;/code&gt;&lt;/strong&gt;. If you add it you will end up with files inside &lt;code&gt;/target/source/&lt;/code&gt;
which you don't want;&lt;/li&gt;
&lt;li&gt;Quickly verify the new directory structure with &lt;code&gt;ls -l /target&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Unmount &lt;code&gt;/target&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Optionally check the new file system for consistency &lt;code&gt;e2fsck -f /dev/sdd1&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; - check how &lt;code&gt;/boot/grub/grub.conf&lt;/code&gt; specifies the root volume - 
by UUID, by LABEL, by device name, etc. You will have to duplicate the same for the
new smaller volume or update &lt;code&gt;/target/boot/grub/grub.conf&lt;/code&gt; to match the new volume.
Check &lt;code&gt;/target/etc/fstab&lt;/code&gt; as well!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my case I had to &lt;code&gt;e2label /dev/sdd1 /&lt;/code&gt; because both &lt;code&gt;grub.conf&lt;/code&gt; and &lt;code&gt;fstab&lt;/code&gt; were
using the device label.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shutdown the instance;&lt;/li&gt;
&lt;li&gt;Detach all volumes;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; - attach the new smaller volume to the instance using the same block device
name from the first step (e.g. &lt;code&gt;/dev/sda1&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;Start the instance and verify it is working correctly;&lt;/li&gt;
&lt;li&gt;DELETE auxiliary volumes and snapshots so they don't take space and accumulate costs!&lt;/li&gt;
&lt;/ul&gt;</summary><category term="tips"></category><category term="Amazon"></category><category term="cloud"></category></entry><entry><title>FOSDEM 2014 Report - Day #2 Testing and Automation</title><link href="http://atodorov.org/blog/2014/02/03/fosdem-2014-report-day-2-testing-and-automation/" rel="alternate"></link><updated>2014-02-03T22:54:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-03:blog/2014/02/03/fosdem-2014-report-day-2-testing-and-automation/</id><summary type="html">&lt;p&gt;&lt;img alt="Testing and Automation" src="/images/fosdem/2014/testing_automation.jpg" title="Testing and Automation" /&gt;&lt;/p&gt;
&lt;p&gt;FOSDEM was hosting the
&lt;a href="https://fosdem.org/2014/schedule/track/testing_and_automation/"&gt;Testing and automation devroom&lt;/a&gt;
for the second year and this was the very reason I attended the conference. I managed to get in
early and stayed until 15:00 when I had to leave to catch my flight (which was late :(). &lt;/p&gt;
&lt;p&gt;There were 3 talks given by Red Hat employees in the testing devroom which was a nice opportunity
to meet some of the folks I've been working on IRC with. Unfortunately I didn't meet anyone from
Fedora QA. Not sure if they were attending or not. &lt;/p&gt;
&lt;p&gt;All the talks were interesting so see the official schedule and video for more details. I will
highlight only the items I saw as particularly interesting or have not heard of before. &lt;/p&gt;
&lt;h2&gt;ANSTE&lt;/h2&gt;
&lt;p&gt;ANSTE - Advanced Network Service Testing Environment is a test infrastructure controller,
something like our own &lt;a href="http://beaker-project.org/"&gt;Beaker&lt;/a&gt; but designed to create complex
networking environments. I think it lacks many of the provisioning features built in Beaker
and integration with various hypervisors and bare-metal provisioning. What it seems to do better
(as far as I can tell from the talk) is to deploy virtual systems and create more complex network
configuration between them. Not something I will need in the near future but definitely worth
a look at. &lt;/p&gt;
&lt;h2&gt;cwrap&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;cwrap is...&lt;/p&gt;
&lt;p&gt;a set of tools to create a fully isolated network environment to test client/server components on a single host.
It provides synthetic account information, hostname resolution and support for privilege separation.
The heart of cwrap consists of three libraries you can preload to any executable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That one was the coolest technology I've seen so far although I may not need to use it at all,
hmmm maybe testing DHCP fits the case.&lt;/p&gt;
&lt;p&gt;It evolved from the Samba project and takes advantage of the order in which
libraries are searched when resolving functions. When you preload the project libraries
to any executable they will override standard libc functions for working with sockets,
user accounts and privilege escalation.&lt;/p&gt;
&lt;p&gt;The socket_wrapper library redirects networking sockets through local UNIX sockets and
gives you the ability to test applications which need privileged ports with a local developer
account. &lt;/p&gt;
&lt;p&gt;The nss_wrapper library provides artificial information for user and group accounts,
network name resolution using a hosts file and loading and testing of NSS modules.&lt;/p&gt;
&lt;p&gt;The uid_wrapper library allows uid switching as a normal user (e.g. fake root) and
supports user/group changing in the local thread using the syscalls (like glibc).&lt;/p&gt;
&lt;p&gt;All of these wrapper libraries are controlled via environment variables and definitely
makes testing of daemons and networking applications easier.&lt;/p&gt;
&lt;h2&gt;Testing Documentation&lt;/h2&gt;
&lt;p&gt;That one was just scratching the surface of an entire branch of testing which I've not
even considered before. The talk also explains why it is hard to test documentation and
what possible solutions there are. &lt;/p&gt;
&lt;p&gt;If you write user guides and technical articles which need to
stay current with the software this is definitely the place to start.&lt;/p&gt;
&lt;h2&gt;Automation in the Foreman Infrastructure&lt;/h2&gt;
&lt;p&gt;The last &lt;a href="http://ftp.osuosl.org/pub/fosdem//2014/previews/fosdem/fosdem_2014/dv/UD2218A/2014-02-02/12_51_36.ogv"&gt;talk&lt;/a&gt;
I've listened to. Definitely the best one from a general testing approach
point of view. Greg talked about starting with Foreman unit tests, then testing the merged PR,
then integration tests, then moving on to test the package build and then the resulting packages themselves. &lt;/p&gt;
&lt;p&gt;These guys try to even test their own infrastructure (infra as code) and the test suites
they use to test everything else. It's all about automation and the level of confidence
you have in the entire process.&lt;/p&gt;
&lt;p&gt;I like the fact that no single testing approach can make you confident enough before shipping
the code and that they've taken into account changes which get introduced at various places
(e.g. 3rd party package upgrades, distro specific issues, infrastructure changes and such) &lt;/p&gt;
&lt;p&gt;If I had to attend only one session it would have been this one. There are many things for me
to take back home and apply to my work on Fedora and RHEL.&lt;/p&gt;
&lt;p&gt;If you find any of these topics remotely interesting I advise you to wait until FOSDEM video
team uploads the recordings and watch the entire session stream. I'm definitely missing a lot
of stuff which can't be easily reproduced in text form.&lt;/p&gt;
&lt;p&gt;You can also find my report of the first FOSDEM'14 day on Saturday
&lt;a href="/blog/2014/02/03/fosdem-2014-report-day-1-python-stands-lightning-talks/"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="events"></category><category term="Fedora"></category><category term="QA"></category></entry><entry><title>FOSDEM 2014 Report - Day #1 Python, Stands and Lightning Talks</title><link href="http://atodorov.org/blog/2014/02/03/fosdem-2014-report-day-1-python-stands-lightning-talks/" rel="alternate"></link><updated>2014-02-03T21:37:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-02-03:blog/2014/02/03/fosdem-2014-report-day-1-python-stands-lightning-talks/</id><summary type="html">&lt;p&gt;As promised I'm starting catching up on blogging after being sick and traveling.
Here's my report of what I saw and found interesting at this year's
&lt;a href="https://fosdem.org/2014/"&gt;FOSDEM&lt;/a&gt; which was held the last weekend in Brussels.&lt;/p&gt;
&lt;p&gt;On Friday evening I've tried to attend the FOSDEM beer event at Delirium Cafe but
had a bad luck. At 21:30 the place was already packed with people. I managed to get
access to only one of the rooms but it looked like the wrong one :(. I think the space
is definitely small for all who are willing to attend.&lt;/p&gt;
&lt;p&gt;During Saturday morning I did a quick sight-seeing most notably 
&lt;a href="www.migsworldwines.be/"&gt;Mig's wine shop&lt;/a&gt; and the area around it since I've never
been to this part of the city before. Then I took off to FOSDEM arriving at noon
(IOW not too late).&lt;/p&gt;
&lt;p&gt;I've spent most of my day at building K where project stands were and I stayed quite
a long time around the Python and Perl stands meeting new people and talking to them
about their upgrade practices and how they manage package dependencies
(aka promoting &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fedora Octopus" src="/images/fosdem/2014/fedora_octopus.jpg" title="Fedora Octopus" /&gt;&lt;/p&gt;
&lt;p&gt;Fedora stand was busy with 3D printing this year. I've seen 3D printing
before but here I was amazed of the fine-grained quality of the pieces produced.
This is definitely something to have in mind if you are building physical products.&lt;/p&gt;
&lt;p&gt;Red Hat's presence was very strong this year. In addition to the numerous talks they
gave there were also oVirt and OpenShift Origin stands which were packed with people.
I couldn't even get close to say hi or take a picture. &lt;/p&gt;
&lt;p&gt;&lt;img src="/images/fosdem/2014/doudou_linux.png" alt="DoudouLinux" style="float:left;margin-right:10px;"/&gt;&lt;/p&gt;
&lt;p&gt;Near the end of the day I went to listen to some of the lightning talks. The ones that
I liked the most were MATE Desktop and DoudouLinux. &lt;/p&gt;
&lt;p&gt;The thing about MATE which I liked
is that they have a &lt;a href="https://github.com/mate-desktop/mate-university"&gt;MATE University&lt;/a&gt;
initiative which is targeting developers who want to learn how to develop MATE extensions.
This is pretty cool with respect to community and developers on-boarding. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.doudoulinux.org"&gt;DoudouLinux&lt;/a&gt; is a Debian based distribution targeted at
small children (2 or 3 years old) based on simple desktop and educational activities.
I've met project leader and founder Jean-Michel Philippe who gave the talk. We chatted for
a while when Alejandro Simon from &lt;a href="http://www.kano.me/"&gt;Kano&lt;/a&gt; came around and showed us a prototype
of their computer for children. I will definitely give DoudouLinux a try and maybe pre-order Kano as well.&lt;/p&gt;
&lt;p&gt;In the evening there was a Python beer event at Delirium and after that dinner at
Chez Leon where I had snails and rabbit with cherries in cherry beer sauce.
I've had a few beers with Marc-Andre from &lt;a href="http://egenix.com"&gt;eGenix&lt;/a&gt;
and Charlie from &lt;a href="http://www.clark-consulting.eu/"&gt;Clark Consulting&lt;/a&gt; and the talk
was mostly about non-technical stuff which was nice.&lt;/p&gt;
&lt;p&gt;After that we went back to Delirium and
re-united with &lt;a href="http://akurtakov.blogspot.com"&gt;Alexander Kurtakov&lt;/a&gt; and other folks from
Red Hat for more cherry beer!&lt;/p&gt;
&lt;p&gt;Report of the second day of FOSDEM'14 on Sunday is
&lt;a href="/blog/2014/02/03/fosdem-2014-report-day-2-testing-and-automation/"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="events"></category><category term="Fedora"></category><category term="Python"></category></entry><entry><title>Book Review - January 2014</title><link href="http://atodorov.org/blog/2014/01/28/book-review-january-2014/" rel="alternate"></link><updated>2014-01-28T23:16:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-01-28:blog/2014/01/28/book-review-january-2014/</id><summary type="html">&lt;p&gt;Sorry for not being able to write anything this month. I've been very sick
and hardly even touched a computer in the last few weeks. I promise to make
it up to you next month. Until then here's the books I've managed to read in
January.&lt;/p&gt;
&lt;h2&gt;Hooked: How to Build Habit-Forming Products&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://amzn.to/1erRrnb"&gt;Hooked&lt;/a&gt; is an ebook for Kindle which I luckily got for
free on NYE (it's paid now). The book describes the so called "Hook Model"
which is a guide to building products people can’t put down. &lt;/p&gt;
&lt;p&gt;The book goes through a cycle of &lt;strong&gt;trigger&lt;/strong&gt;, &lt;strong&gt;action&lt;/strong&gt;, &lt;strong&gt;variable reward&lt;/strong&gt; and
&lt;strong&gt;investment&lt;/strong&gt; to describe how one can design a product which users keep using
without you doing anything (pretty much). There are plenty of examples with products
like Instagram and Pinterest.&lt;/p&gt;
&lt;p&gt;I really find the book interesting and will strongly recommend it as a must read
to anyone who is building a product. If you're thinking about a mobile app or an
online service this book is definitely for you.&lt;/p&gt;
&lt;h2&gt;CyberJoly Drim&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://hell.pl/nina/carramba.htm"&gt;CyberJoly Drim&lt;/a&gt; is a 1998 cyber punk story by
Polish writer Antonina Liedtke. One I've heard about through the years but found
just recently. It's about a love story although everything else is fiction. PDF format
is around 30 pages.&lt;/p&gt;
&lt;p&gt;I found it hard to read especially b/c my Polish is totally rusty (not to mention I hardly
understand it) and Google translate didn't manage well neither. Anyway, not a bad read
before bed time if you like this kind of stuff.&lt;/p&gt;
&lt;h2&gt;The First in Bulgarian Internet&lt;/h2&gt;
&lt;p&gt;Last a book about 
&lt;a href="https://www.goodreads.com/book/show/13398350"&gt;Bulgarian Internet pioneers&lt;/a&gt;. The book
compiles a great deal with historical data as well as interviews and web site descriptions.
It's said to mention about 400 persons. &lt;/p&gt;
&lt;p&gt;The events start around 1989 with the BBS systems at the time and the first one to appear in
the country with accounts of first time logging into the network and pretty much seeing a
computer. Then it goes to tell the story of first companies and Internet providers, how they
started business, how they grew and formed the country's backbone infrastructure. There's
lots of personal memories and stories as well. This goes to about 2002 when the book
was written.&lt;/p&gt;
&lt;p&gt;The second part of the book mostly describes various websites, some of the first ones and
some milestone or famous ones. It's organized by date of website launch but isn't that much
interesting. I find the local contents at the time a bit boring.&lt;/p&gt;
&lt;p&gt;The book isn't what I initially expected - I wanted more personal stories and more news from
the kitchen. It's not that, it looks to me the people who were interviewed had chosen their
words very carefully and didn't reveal any sensational stories.&lt;/p&gt;
&lt;p&gt;The nice thing about all of that is I've started using the web in early 1998 and remember
most of the events and websites described in the book. It's good to remember the history.
I own the book and can give it to you if you like. It's on the &lt;a href="/blog/2013/04/05/give-away-list/"&gt;Give Away&lt;/a&gt;
list.&lt;/p&gt;
&lt;p&gt;I hope you find something interesting to read in my library. If not please share what did you
read this month.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;PS: I'm currently in Milan and will be visiting FOSDEM at the end of the week. Catch
you there if you're coming.&lt;/p&gt;</summary><category term="books"></category></entry><entry><title>Book Review of 2013</title><link href="http://atodorov.org/blog/2014/01/02/book-review-of-2013/" rel="alternate"></link><updated>2014-01-02T10:07:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2014-01-02:blog/2014/01/02/book-review-of-2013/</id><summary type="html">&lt;p&gt;Happy New Year everyone! I was able to complete reading a few books in the last
days so this first post will be a quick review of
&lt;a href="https://www.goodreads.com/review/list/16191345-alexander-todorov?read_at=2013&amp;amp;view=covers"&gt;all twelve books I've read in 2013&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Technical Blogging&lt;/h2&gt;
&lt;p&gt;I've started the year with 
&lt;a href="http://amzn.to/1a2QySD"&gt;Technical Blogging: Turn Your Expertise into a Remarkable Online Presence&lt;/a&gt;
by Antonio Cangiano. This is the book which prompted me to start this blog. It is
targeted primarily at technical blogging but could be useful to non-tech bloggers as well.
I strongly recommend this book to anyone who is writing for the web.&lt;/p&gt;
&lt;h2&gt;The 4-Hour Workweek&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://amzn.to/1ivu2q4"&gt;The 4-Hour Workweek: Escape 9-5, Live Anywhere, and Join the New Rich&lt;/a&gt;
by Timothy Ferriss. This book I found at a local 
&lt;a href="/blog/2013/01/30/startup-talk-5-book-list/"&gt;start-up event&lt;/a&gt; and is one of my
all time favorites. The basic idea is to ditch the traditional working space and
work less utilizing more automation. This is something I've been doing to an extent
during the last 5+ years and I am still changing my life and working habits to 
reach the moment where I work only a few hours a week.&lt;/p&gt;
&lt;p&gt;A must read for any entrepreneur, freelancer or work from home folks.&lt;/p&gt;
&lt;h2&gt;The E-Myth Revisited&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://amzn.to/1d0j5ee"&gt;The E-Myth Revisited: Why Most Small Businesses Don't Work and What to Do About It&lt;/a&gt;
by Michael Gerber is the second book I've found at the same start-up event mentioned
previously. I found this one particularly hard to read. What I took from it was
that you should think about your business as a franchise and document processes
so that others can do it for you in the same way you would do it yourself.&lt;/p&gt;
&lt;h2&gt;Culture and Wine&lt;/h2&gt;
&lt;p&gt;Next two books are in Bulgarian and can be found at my 
&lt;a href="https://www.goodreads.com/review/list/16191345-alexander-todorov?read_at=2013&amp;amp;view=covers"&gt;Goodreads list&lt;/a&gt;.
They are about culture and religion and wine tasting 101.&lt;/p&gt;
&lt;h2&gt;Accelerando&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://amzn.to/19Ctnk8"&gt;Accelerando (Singularity)&lt;/a&gt; by Charles Stross is also one
of my favorites. I've heard about it at a local CloudFoundry conference a few years
back and finally had the time to read it. This is a fiction book where events start
in the near future and drive forward to dismantling the planets in the Solar system,
uploading lobsters minds on the Internet, space travel, aliens and family
relationships. I will definitely recommend it, the book is a very relaxing read.&lt;/p&gt;
&lt;h2&gt;DevOps&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://amzn.to/1eXk3JN"&gt;What Is DevOps?&lt;/a&gt; by Mike Loukides and
&lt;a href="http://amzn.to/19KobFn"&gt;Building a DevOps Culture&lt;/a&gt; by Mandi Walls are two short
free books for Kindle. They just touch base on the topic of DevOps and what it
takes to create a DevOps organization. Definitely worth reading even if you're
not deeply interested in this topic. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://amzn.to/1dVvQmE"&gt;DevOps for Developers&lt;/a&gt; by Michael Huttermann is a
practical books about DevOps. It talks about processes and tools and lists
lots of examples. The tools part is Ruby centric though.
I found it a bit hard to read at times and it took me a while
to complete it. I'm not sure if the book is really helpful if one decides to
change an exiting organization to a DevOps like structure but it is definitely
a starting point. &lt;/p&gt;
&lt;p&gt;The days of waterfall software development are gone and knowingly or not most of
us work in a DevOps like environment these days. I think it's worth at least skimming
through this book and taking some essentials from it. &lt;/p&gt;
&lt;h2&gt;UX For Lean Startups&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://amzn.to/1fi1KeE"&gt;UX for Lean Startups&lt;/a&gt; by Laura Klein is a very good book
about designing user experience and validation which I've
&lt;a href="/blog/2013/12/09/book-review-ux-for-lean-startups/"&gt;reviewed previously&lt;/a&gt;.
I strongly recommend this book to everyone who is building a product of some sort.&lt;/p&gt;
&lt;h2&gt;Bulgarian Comics&lt;/h2&gt;
&lt;p&gt;At the end of the year I've managed to read two comics books, both in Bulgarian.
The first one is a brief history of the comics arts in the country in the past 150
years with lots of references to good old stories which I've read when I was a kid.&lt;/p&gt;
&lt;p&gt;The second one is a special edition (ebook only, print edition is out of stock) of
the popular Daga (Rainbow) magazine which ceased to exist 20 years ago. There are
some new episodes of the old stories drawn by the original artists.&lt;/p&gt;
&lt;p&gt;Both books seem to be a turning point in Bulgarian comics art and market. Hopefully
we'll see more cool stuff in the future. These books are not available on Amazon
but there are some &lt;a href="http://amzn.to/19Cw6tV"&gt;free comics books for Kindle&lt;/a&gt; which
you may give a try.&lt;/p&gt;
&lt;p&gt;I hope you find something interesting to read in my list. Also feel free to comment
and share your favorite books in the comments below.&lt;/p&gt;</summary><category term="books"></category></entry><entry><title>Upstream Test Suite Status of Fedora 20</title><link href="http://atodorov.org/blog/2013/12/24/upstream-test-suite-status-of-fedora-20/" rel="alternate"></link><updated>2013-12-24T08:01:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-12-24:blog/2013/12/24/upstream-test-suite-status-of-fedora-20/</id><summary type="html">&lt;p&gt;Last week I've expressed my thoughts about the state of
&lt;a href="https://lists.fedoraproject.org/pipermail/test/2013-December/119637.html"&gt;upstream test suites in Fedora&lt;/a&gt;
along with some other ideas. Following the response on this thread I'm starting
to analyze all SRPM packages in Fedora 20 in order to establish a baseline. Here are my initial findings.&lt;/p&gt;
&lt;h2&gt;What's Inside&lt;/h2&gt;
&lt;p&gt;I've found two source distributions for Fedora 20:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;Fedora-20-source-DVD.iso&lt;/code&gt; file which to my knowledge contains the sources
of all packages that comprise the installation media;&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Everything/source/SRPMS/&lt;/code&gt; directory which appears to contain the sources
of everything else available in the Fedora 20 repositories.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are &lt;strong&gt;2574&lt;/strong&gt; SRPM packages in Fedora-20 source DVD and &lt;strong&gt;14364&lt;/strong&gt; SRPMs
in the Everything/ directory. 9,2G vs. 41G.&lt;/p&gt;
&lt;h2&gt;Test Suite Execution In %check&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://fedoraproject.org/wiki/Packaging:Guidelines#Test_Suites"&gt;Fedora Packaging Guidelines&lt;/a&gt;
state&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the source code of the package provides a test suite,
it should be executed in the %check section,
whenever it is practical to do so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In my research I found &lt;strong&gt;738&lt;/strong&gt; SRPMs on the DVD which have a %check
section and &lt;strong&gt;4838&lt;/strong&gt; such packages under &lt;code&gt;Everything/&lt;/code&gt;. This is &lt;strong&gt;28,6%&lt;/strong&gt; and &lt;strong&gt;33,6%&lt;/strong&gt;
respectively.&lt;/p&gt;
&lt;h2&gt;Test Suite Existence&lt;/h2&gt;
&lt;p&gt;A quick grep for either &lt;code&gt;test/&lt;/code&gt; or &lt;code&gt;tests/&lt;/code&gt; directories in the package sources revealed
&lt;strong&gt;870&lt;/strong&gt; SRPM packages in the source DVD which are very likely to have a test suite.
This is &lt;strong&gt;33,8%&lt;/strong&gt;. &lt;strike&gt;I wasn't able to inspect the &lt;code&gt;Everything/&lt;/code&gt; directory with this script
because it takes too long to execute and my system crashed out of memory.
I will update this post later with that info.&lt;/strike&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE 2014-01-02&lt;/em&gt;: 
In the &lt;code&gt;Everything/&lt;/code&gt; directory only &lt;strong&gt;4481&lt;/strong&gt; (&lt;strong&gt;31,2%&lt;/strong&gt;) SRPM packages appear to have
test suites.&lt;/p&gt;
&lt;p&gt;The scripts and raw output are available at &lt;a href="https://github.com/atodorov/fedora-scripts"&gt;https://github.com/atodorov/fedora-scripts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So it looks like on average &lt;strong&gt;30%&lt;/strong&gt; of the packages execute their test suites at build
time in the %check section and less than &lt;strong&gt;35%&lt;/strong&gt; have test suites at all!
There's definitely room for improvement and I plan to focus on this during 2014!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Django Template Tag Inheritance How-to</title><link href="http://atodorov.org/blog/2013/12/22/django-template-tag-inheritance-howto/" rel="alternate"></link><updated>2013-12-22T23:02:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-12-22:blog/2013/12/22/django-template-tag-inheritance-howto/</id><summary type="html">&lt;p&gt;While working on open-sourcing &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; I needed to remove
all hard-coded URL references from the templates. My solution was to essentially
inherit from the standard &lt;code&gt;{% url %}&lt;/code&gt; template tag. Here is how to do it.&lt;/p&gt;
&lt;h2&gt;Background History&lt;/h2&gt;
&lt;p&gt;Difio is not hosted on a single server. Parts of the website are static HTML,
hosted on Amazon S3. Other parts are dynamic - hosted on OpenShift. It's also
possible but not required at the moment to host at various PaaS providers for
redundancy and simple load balancing. &lt;/p&gt;
&lt;p&gt;As an easy fix I had hard-coded some URLs to link to the static S3 pages and others
go link to my PaaS provider.&lt;/p&gt;
&lt;p&gt;I needed a simple solution which can be extended to allow for multiple domain hosting.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;The solution I came up with is to override the standard &lt;code&gt;{% url %}&lt;/code&gt;
tag and use it everywhere in my templates. The new tag will produce absolute URLs containing
the specified protocol plus domain name and view path. For this to work you have to
inherit the standard &lt;code&gt;URLNode&lt;/code&gt; class and override the &lt;code&gt;render()&lt;/code&gt; method to include the new
values.&lt;/p&gt;
&lt;p&gt;You also need to register a tag method to utilize the new class. My approach was to use
the existing &lt;code&gt;url()&lt;/code&gt; method to do all background processing and simply casting the result
object to the new class. &lt;/p&gt;
&lt;p&gt;All code is available at &lt;a href="https://djangosnippets.org/snippets/3013/"&gt;https://djangosnippets.org/snippets/3013/&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;To use in your templates simply add&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% load fqdn_url from fqdn_url %}
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{% fqdn_url &amp;#39;dashboard&amp;#39; %}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Dashboard&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Django"></category></entry><entry><title>Can I Use Android Phone as Smart Card Reader</title><link href="http://atodorov.org/blog/2013/12/18/can-i-use-android-phone-as-smart-card-reader/" rel="alternate"></link><updated>2013-12-18T23:09:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-12-18:blog/2013/12/18/can-i-use-android-phone-as-smart-card-reader/</id><summary type="html">&lt;p&gt;Today I had troubles with my Omnikey CardMan 6121 smart card reader.
For some reason it will not detect the card inside and was unusable.
&lt;code&gt;/var/log/messages&lt;/code&gt; was filled with  &lt;em&gt;Card Not Powered&lt;/em&gt; messages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Dec 18 11:17:55 localhost pcscd: eventhandler.c:292:EHStatusHandlerThread() Error powering up card: -2146435050 0x80100016
Dec 18 11:18:01 localhost pcscd: winscard.c:368:SCardConnect() Card Not Powered
Dec 18 11:18:02 localhost pcscd: winscard.c:368:SCardConnect() Card Not Powered
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="/images/omnikey_cardman_6121.gif" style="float:right;margin-left:20px;" /&gt;&lt;/p&gt;
&lt;p&gt;I've found the solution in 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=531998"&gt;RHBZ #531998&lt;/a&gt;. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I've found the problem, and it's purely mechanical.
Omnikey has simply screwed up when they designed this reader.
When the reader is inserted into the ExpressCard slot, it gets slightly
compressed. This is enough to trigger the mechanical switch that detects
insertions. If I jam something in there and force it apart, then pcscd
starts reporting that the slot is empty.&lt;/p&gt;
&lt;p&gt;Pierre Ossman, https://bugzilla.redhat.com/show_bug.cgi?id=531998#c12&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So I tried moving the smart card a millimeter back and forth inside the reader and
that fixed it for me.&lt;/p&gt;
&lt;p&gt;This smart card is standard SIM size and I wonder if it is possible to use
&lt;a href="http://amzn.to/1dnl2gN"&gt;dual SIM&lt;/a&gt; smart phones and &lt;a href="http://amzn.to/18XpWlp"&gt;tablets&lt;/a&gt;
as a reader? I will be happy to work on the software side if there is an open source
project already (e.g. OpenSC + drivers for Android). If not, why not? &lt;/p&gt;
&lt;p&gt;If you happen to have information on the subject please share it in the comments.
Thanks!&lt;/p&gt;</summary><category term="RHEL"></category><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Idempotent Django Email Sender with Amazon SQS and Memcache</title><link href="http://atodorov.org/blog/2013/12/11/idempotent-django-email-sender-with-amazon-sqs-and-memcache/" rel="alternate"></link><updated>2013-12-11T23:29:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-12-11:blog/2013/12/11/idempotent-django-email-sender-with-amazon-sqs-and-memcache/</id><summary type="html">&lt;p&gt;Recently I wrote about my problem with
&lt;a href="/blog/2013/12/06/duplicate-amazon-sqs-messages-cause-multiple-emails/"&gt;duplicate Amazon SQS messages causing multiple emails&lt;/a&gt;
for &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt;. After considering several options and
feedback from 
&lt;a href="https://twitter.com/atodorov_/status/409429840820199424"&gt;@Answers4AWS&lt;/a&gt;
I wrote a small decorator to fix this.&lt;/p&gt;
&lt;p&gt;It uses the cache backend to prevent the task from executing twice
during the specified time frame. The code is available at
&lt;a href="https://djangosnippets.org/snippets/3010/"&gt;https://djangosnippets.org/snippets/3010/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As stated on Twitter you should use Memcache (or ElastiCache) for this.
If using Amazon S3 with my
&lt;a href="https://github.com/atodorov/django-s3-cache"&gt;django-s3-cache&lt;/a&gt; don't use the
&lt;code&gt;us-east-1&lt;/code&gt; region because it is eventually consistent.&lt;/p&gt;
&lt;p&gt;The solution is fast and simple on the development side and uses my existing
cache infrastructure so it doesn't cost anything more!&lt;/p&gt;
&lt;p&gt;There is still a race condition between marking the message as processed
and the second check but nevertheless this should minimize the possibility of
receiving duplicate emails to an accepted level. Only time will tell though!&lt;/p&gt;</summary><category term="cloud"></category><category term="Amazon"></category><category term="SQS"></category><category term="Django"></category><category term="Python"></category></entry><entry><title>Book Review: UX for Lean Startups</title><link href="http://atodorov.org/blog/2013/12/09/book-review-ux-for-lean-startups/" rel="alternate"></link><updated>2013-12-09T10:09:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-12-09:blog/2013/12/09/book-review-ux-for-lean-startups/</id><summary type="html">&lt;p&gt;Recently I've finished reading &lt;a href="http://amzn.to/1fi1KeE"&gt;UX for Lean Startups&lt;/a&gt;
and strongly recommend this book to anyone who is &lt;strong&gt;OR&lt;/strong&gt; wants to be an
entrepreneur. Here is a short review of the book.&lt;/p&gt;
&lt;p&gt;This book is for anyone who is creating a product/service or is considering the
idea of doing so. It talks about validation, interaction design and subsequent
product measurement and iteration. The book demonstrates some techniques and tools
to validate, design and measure your business ideas and products.
Its goal is to teach you how to design products that deliver fantastic user
experience, e.g. ones that are intuitive and easy to use.
It has nothing to do with visual design. &lt;/p&gt;
&lt;p&gt;The author Laura Klein summarizes the book as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;User research&lt;/p&gt;
&lt;p&gt;Listen to your users. All the time. I mean it.&lt;/p&gt;
&lt;p&gt;Validation&lt;/p&gt;
&lt;p&gt;When you make assumptions or create hypotheses,
  test them before spending lots of time building products around them.&lt;/p&gt;
&lt;p&gt;Design&lt;/p&gt;
&lt;p&gt;Iterate. Iterate. Iterate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Early Validation&lt;/h2&gt;
&lt;p&gt;This chapter helped me a lot to understand what exactly is validation and how
to go about it. The flow is validating the problem you are trying to solve,
then the market and then the product. &lt;/p&gt;
&lt;p&gt;I will also add that by using some of these research techniques around a
vague idea/area of interest you may come around a particular trend/pattern or problem 
and develop your business from there.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You’ll know that you’ve validated a problem when you start to hear
particular groups of people complaining about something specific.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Your goal in validating your market is to begin to narrow down the
group of people who will want their problems solved badly enough to buy
your product. Your secondary goal is to understand exactly why they’re
interested so you can find other markets that might be similarly motivated.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;You’ll know that you’ve successfully validated your market when you can
accurately predict that a particular type of person will have a specific
problem and that the problem will be severe enough that that person is
interested in purchasing a solution.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Just because you have discovered a real problem and have a group of people
willing to pay you to solve their problem, that doesn’t necessarily mean that
your product is the right solution. &lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;You’ll know that you’ve validated your product when a large percentage of
your target market offers to pay you money to solve their problem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;User Research&lt;/h2&gt;
&lt;p&gt;Next few chapters talk about user research, the various kinds of it and when/how
to perform it. It talks how to properly run surveys, how to ask good questions,
etc. &lt;/p&gt;
&lt;h2&gt;Qualitative vs. Quantitative Research&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Quantitative research is about measuring what real people are actually
doing with your product. It doesn’t involve speaking with specific humans.
It’s about the data in aggregate. It should always be statistically significant.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Quantitative research tells you &lt;strong&gt;what&lt;/strong&gt; your problem is. Qualitative
research tells you &lt;strong&gt;why&lt;/strong&gt; you have that problem.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;If you want to measure something that exists, like traffic or revenue or how
many people click on a particular button, then you want quantitative data.
If you want to know why you lose people out of your purchase funnel or
why people all leave once they hit a specific page, or why people seem not
to click that button, then you need qualitative.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Part Two: Design&lt;/h2&gt;
&lt;p&gt;The second part of this book talks about design - everything from building a
prototype to figuring out when you don’t want one. It assumes you have validated
the initial idea and now move on to designing the product and validating that
design before you start building it. It talks about diagrams, sketches, wireframes,
prototypes and of course MVPs.&lt;/p&gt;
&lt;p&gt;I think you can safely skip some of these steps when it comes to small applications
because it may be easier/faster to build the application instead of a prototype.
Definitely not to be skipped if you're building a more complex product!&lt;/p&gt;
&lt;h2&gt;Part Three: Product&lt;/h2&gt;
&lt;p&gt;This section talks about metrics and measuring the product once it is out of the door.
Supposedly based on these metrics you will refine your design and update the product
accordingly.  Most of the time it focuses on A/B testing and which metrics are
important and which are so called "vanity metrics".&lt;/p&gt;
&lt;p&gt;I particularly liked the examples of A/B testing and explanations what it is good for
and what it does poorly. Definitely a mistake I've happened to made myself. I'm sure you too.&lt;/p&gt;
&lt;p&gt;Let me know if you have read this book and what your thoughts are. Thanks!&lt;/p&gt;</summary><category term="books"></category><category term="start-up"></category></entry><entry><title>Duplicate Amazon SQS Messages Cause Multiple Emails</title><link href="http://atodorov.org/blog/2013/12/06/duplicate-amazon-sqs-messages-cause-multiple-emails/" rel="alternate"></link><updated>2013-12-06T22:47:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-12-06:blog/2013/12/06/duplicate-amazon-sqs-messages-cause-multiple-emails/</id><summary type="html">&lt;p&gt;Beware if using Amazon Simple Queue Service to send email messages!
Sometime SQS messages are duplicated which results in multiple copies of
the messages being sent. This happened today at &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt;
and is really annoying to users. In this post I will explain why there is no easy
way of fixing it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Q: Can a deleted message be received again?&lt;/p&gt;
&lt;p&gt;Yes, under rare circumstances you might receive a previously deleted message again.
This can occur in the rare situation in which a DeleteMessage operation doesn't
delete all copies of a message because one of the servers in the distributed
Amazon SQS system isn't available at the time of the deletion. That message copy
can then be delivered again. You should design your application so that no errors
or inconsistencies occur if you receive a deleted message again.&lt;/p&gt;
&lt;p&gt;Amazon FAQ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In my case the cron scheduler logs say:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; &amp;lt;AsyncResult: a9e5a73a-4d4a-4995-a91c-90295e27100a&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;While on the worker nodes the logs say:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[2013-12-06 10:13:06,229: INFO/MainProcess] Got task from broker: tasks.cron_monthly_email_reminder[a9e5a73a-4d4a-4995-a91c-90295e27100a]&lt;/span&gt;
&lt;span class="k"&gt;[2013-12-06 10:18:09,456: INFO/MainProcess] Got task from broker: tasks.cron_monthly_email_reminder[a9e5a73a-4d4a-4995-a91c-90295e27100a]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This clearly shows the same message (see the UUID) has been processed twice!
This resulted in hundreds of duplicate emails :(.&lt;/p&gt;
&lt;h2&gt;Why This Is Hard To Fix&lt;/h2&gt;
&lt;p&gt;There are two basic approaches to solve this issue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check some log files or database for previous record of the message having
been processed;&lt;/li&gt;
&lt;li&gt;Use idempotent operations that if you process the message again, you
get the same results, and that those results don't create duplicate files/records.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The problem with checking for duplicate messages is: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There is a race condition between marking the message as processed and the
second check;&lt;/li&gt;
&lt;li&gt;You need to use some sort of locking mechanism to safe-guard against the race condition;&lt;/li&gt;
&lt;li&gt;In the event of an eventual consistency of the log/DB you can't guarantee that
the previous attempt will show up and so can't guarantee that you won't process
the message twice.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the above don't seem to work well for distributed applications not to mention
Difio processes millions of messages per month, per node and the logs are quite big.&lt;/p&gt;
&lt;p&gt;The second option is to have control of the Message-Id or some other email header
so that the second message will be discarded either at the server (Amazon SES in my case)
or at the receiving MUA. I like this better but I don't think it is technically possible
with the current environment. Need to check though. &lt;/p&gt;
&lt;p&gt;I've asked AWS support to look into
&lt;a href="https://forums.aws.amazon.com/thread.jspa?threadID=140782"&gt;this thread&lt;/a&gt; and hopefully
they will have some more hints. If you have any other ideas please post in the comments!
Thanks!&lt;/p&gt;</summary><category term="cloud"></category><category term="Amazon"></category><category term="SQS"></category><category term="SES"></category></entry><entry><title>Bug in Python URLGrabber/cURL on Fedora and Amazon Linux</title><link href="http://atodorov.org/blog/2013/11/29/bug-python-urlgrabber-curl-fedora-amazon-linux/" rel="alternate"></link><updated>2013-11-29T14:05:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-29:blog/2013/11/29/bug-python-urlgrabber-curl-fedora-amazon-linux/</id><summary type="html">&lt;p&gt;Accidentally I have discovered a bug for Python's
URLGrabber module which has to do with change in behavior in libcurl.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urlgrabber.grabber&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;URLGrabber&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;URLGrabber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlgrab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https://s3.amazonaws.com/production.s3.rubygems.org/gems/columnize-0.3.6.gem&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/tmp/columnize.gem&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;lt;console&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;976&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urlgrab&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_retry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;retryfunc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;880&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_retry&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;retryfunc&lt;/span&gt;
    &lt;span class="n"&gt;fo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PyCurlFileObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1056&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_do_open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1307&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_do_open&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_set_opts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/celeryd/.virtualenvs/difio/lib/python2.6/site-packages/urlgrabber/grabber.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1161&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_set_opts&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curl_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSL_VERIFYHOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssl_verify_host&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The code above works fine with curl-7.27 or older while it breaks with curl-7.29 and
newer. As explained by 
&lt;a href="http://lists.baseurl.org/pipermail/yum-devel/2013-November/010428.html"&gt;Zdenek Pavlas&lt;/a&gt;
the reason is an internal change in libcurl which doesn't accept a value of 1 anymore!&lt;/p&gt;
&lt;p&gt;The bug is reproducible with a newer libcurl version and a vanilla urlgrabber==3.9.1
from PyPI (e.g. inside a virtualenv). The latest python-urlgrabber RPM packages in both
Fedora and Amazon Linux already have the fix.&lt;/p&gt;
&lt;p&gt;I have tested the patch proposed by Zdenek and it works for me. I still have no idea why
there aren't any updates released on PyPI though!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category><category term="cloud"></category><category term="Python"></category></entry><entry><title>Open Source Quality Assurance Infrastructure for Fedora QA</title><link href="http://atodorov.org/blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/" rel="alternate"></link><updated>2013-11-19T14:12:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-19:blog/2013/11/19/open-source-quality-assurance-infrastructure-for-fedora-qa/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Beaker test lab&amp;quot;" src="/images/fedora/beaker.png" title="Beaker test lab" /&gt;&lt;/p&gt;
&lt;p&gt;In the last few weeks I've been working together with 
&lt;a href="https://fedoraproject.org/wiki/User:Tflink"&gt;Tim Flink&lt;/a&gt; and
&lt;a href="https://fedoraproject.org/wiki/User:Kparal"&gt;Kamil Paral&lt;/a&gt; from the Fedora QA
team on bringing some installation testing expertise to Fedora and establishing
an &lt;a href="http://beaker.fedoraproject.org/bkr/"&gt;open source test lab&lt;/a&gt;
to perform automated testing in. The infrastructure is
already in relatively usable condition so I've decided to share this information
with the community. &lt;/p&gt;
&lt;h2&gt;Beaker is Running Our Test Lab&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://beaker-project.org/"&gt;Beaker&lt;/a&gt; is the software suite that powers the test
lab infrastructure. It is quite complex, with many components and sometimes not
very straight-forward to set up. Tim has been working on that with me giving it
a try and reporting issues as they have been discovered and fixed. &lt;/p&gt;
&lt;p&gt;In the process of working on this I've managed to create
&lt;a href="http://gerrit.beaker-project.org/#/q/owner:%22Alexander+Todorov%22,n,z"&gt;couple of patches&lt;/a&gt;
against Beaker and friends. They are still pending release in a future version
because of more urgent bug fixes which need to released first.&lt;/p&gt;
&lt;h2&gt;SNAKE is The Kickstart Template Server&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://fedorahosted.org/snake/"&gt;SNAKE&lt;/a&gt; is a client/server Python framework used
to support Anaconda installations. It supports plain text ks.cfg files, IIRC those
were static templates, no variable substitution.&lt;/p&gt;
&lt;p&gt;The other possibility is Python templates based on Pykickstart:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pykickstart.constants&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KS_SCRIPT_POST&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pykickstart.parser&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Script&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;installdefaults&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;InstallKs&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;Anaconda autopart&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;InstallKs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;@base&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clearpart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initAll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;autopart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;autopart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;cp /tmp/ks.cfg /mnt/sysimage/root/ks.cfg || &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s"&gt;cp /run/install/ks.cfg /mnt/sysimage/root/ks.cfg&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;KS_SCRIPT_POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inChroot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ks&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At the moment SNAKE is essentially abandoned but feature complete.
I'm thinking about adopting the project just in case we need to make some fixes.
Will let you know more about this when it happens. &lt;/p&gt;
&lt;h2&gt;Open Source Test Suite&lt;/h2&gt;
&lt;p&gt;I have been working on opening up several test cases for what we (QE) call
a tier #1 installation test suite. They can be found in
&lt;a href="http://taskbot.cloud.fedoraproject.org/cgit/fedora-beaker-tests/"&gt;git&lt;/a&gt;.
The tests are base on &lt;a href="https://fedorahosted.org/beakerlib/"&gt;beakerlib&lt;/a&gt; and
the legacy RHTS framework which is now part of Beaker.&lt;/p&gt;
&lt;p&gt;This effort has been coordinated with Kamil as part of a pilot
project he's responsible for. I've been executing the same test suite against
earlier Fedora 20 snapshots but using an internal environment. Now everything
is going out in the open.&lt;/p&gt;
&lt;h2&gt;Executing The Tests&lt;/h2&gt;
&lt;p&gt;Well you can't do that - YET! There are command line client tools for Fedora
but Beaker and SNAKE are not well suited for use outside a restricted network
like LAN or VPN. There are issues with authentication most notably for SNAKE.&lt;/p&gt;
&lt;p&gt;At the moment I have to ssh through two different systems to get proper access.
However this is been worked on. I've read about a rewrite which will allow Beaker
to utilize a custom authentication framework like FAS for example. Hopefully that
will be implemented soon enough.&lt;/p&gt;
&lt;p&gt;I will also like to see the test systems have direct access to the Internet for
various reasons but this is not without its risks either. This is still to be
decided.&lt;/p&gt;
&lt;p&gt;If you are interested anyway see the &lt;code&gt;kick-tests.sh&lt;/code&gt; file in the test suite for
examples and command line options.&lt;/p&gt;
&lt;h2&gt;Test Results&lt;/h2&gt;
&lt;p&gt;The first successfully completed
&lt;a href="http://beaker.fedoraproject.org/bkr/jobs/"&gt;test jobs&lt;/a&gt; are jobs 50 to 58.
There's a failure in one of the test cases, namely SELinux related 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1027148"&gt;RHBZ #1027148&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;From what I can tell the lab is now working as expected and we can start doing
some testing against Fedora development snapshots.&lt;/p&gt;
&lt;p&gt;Ping me or join #fedora-qa on irc.freenode.net if you'd like to join Fedora QA!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Tip: Cut Leading or Trailing Fields From Strings in Bash</title><link href="http://atodorov.org/blog/2013/11/19/tip-cut-leading-or-trailing-fields-from-strings-in-bash/" rel="alternate"></link><updated>2013-11-19T00:16:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-19:blog/2013/11/19/tip-cut-leading-or-trailing-fields-from-strings-in-bash/</id><summary type="html">&lt;p&gt;Today I was looking for a command sequence to cut a string in two by predefined
delimiter (e.g. like &lt;code&gt;cut&lt;/code&gt; does). I wanted to get the last field only and all
fields but the last as separate variables.&lt;/p&gt;
&lt;p&gt;The proposed solutions I've found suggested using &lt;code&gt;awk&lt;/code&gt; but I don't like it.
Here's a simple solution using &lt;code&gt;cut&lt;/code&gt; and &lt;code&gt;rev&lt;/code&gt; which can extract arbitrary
field counts from the end of the string. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f1 -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f-2 -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
fedoraproject.org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f-3 -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
phx2.fedoraproject.org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f2- -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
buildvm-08.phx2.fedoraproject
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f3- -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
buildvm-08.phx2
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buildvm-08.phx2.fedoraproject.org&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; rev &lt;span class="p"&gt;|&lt;/span&gt; cut -f4- -d. &lt;span class="p"&gt;|&lt;/span&gt; rev
buildvm-08
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The magic here is done by &lt;code&gt;rev&lt;/code&gt; which reverses the order of characters in every
line. It comes with the &lt;em&gt;util-linux-ng&lt;/em&gt; package.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note to Self:&lt;/strong&gt; &lt;em&gt;util-linux-ng&lt;/em&gt; appears to contain more useful commands which
I wasn't aware of. Need to RTFM a little bit.&lt;/p&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>Keeping Backwards Compatibility for pykickstart</title><link href="http://atodorov.org/blog/2013/11/13/keeping-backwards-compatibility-for-pykickstart/" rel="alternate"></link><updated>2013-11-13T23:59:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-13:blog/2013/11/13/keeping-backwards-compatibility-for-pykickstart/</id><summary type="html">&lt;p&gt;Consider the following scenario:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I'm using &lt;a href="https://fedorahosted.org/snake/"&gt;SNAKE&lt;/a&gt; templates as part of my
installation testing work;&lt;/li&gt;
&lt;li&gt;SNAKE has a dependency on pykickstart;&lt;/li&gt;
&lt;li&gt;To test the latest and greatest kickstart features in Fedora we need the
latest version of pykickstart;&lt;/li&gt;
&lt;li&gt;Latest pykickstart needs Python 2.7&lt;/li&gt;
&lt;li&gt;Python 2.7 is not available on RHEL 6 which is used to host the test
infrastructure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just yesterday I hit an issue with the above setup and figured Fedora QA is
in a kind of strange situation - we always need the latest but need it
conservative enough to run on RHEL 6. See the original thread at
&lt;a href="https://www.redhat.com/archives/kickstart-list/2013-November/msg00001.html"&gt;kickstart-list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this particular case the solution will be to remove the offending code
and implement the same functionality in backward-compatible manner. Also add
more tests. I will be working on this tomorrow (there's an older patch already).&lt;/p&gt;
&lt;p&gt;The BIG question remains though - how do you manage software evolution and still
keep it compatible with older execution stacks? Please share your experience in
the comments section.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;PP: Spoiler - this is part of an ongoing effort to bring open source installation
testing expertise (my domain) into Fedora world, plus establish a community supported
test infrastructure. More info TBA soon.&lt;/p&gt;</summary><category term="QA"></category><category term="Fedora"></category></entry><entry><title>My First Article for OpenSource.com</title><link href="http://atodorov.org/blog/2013/11/01/my-first-article-for-opensource-dot-com/" rel="alternate"></link><updated>2013-11-01T12:47:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-11-01:blog/2013/11/01/my-first-article-for-opensource-dot-com/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Annoying bugs&amp;quot;" src="/images/annoyingbugs.png" title="Annoying bugs" /&gt;
&lt;em&gt;image by opensource.com&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Recently OpenSource.com published my first article
&lt;a href="http://opensource.com/business/13/10/user-guide-bugs-open-source-projects"&gt;User guide for open source project bug submissions&lt;/a&gt;
which was inspired by real events. &lt;/p&gt;
&lt;p&gt;The comments at the bottom are very interesting. It looks like Fedora needs to
make some changes in the bug reporting process and tools. &lt;/p&gt;
&lt;p&gt;I've started a
&lt;a href="https://lists.fedoraproject.org/pipermail/test/2013-November/118607.html"&gt;discussion&lt;/a&gt;
on Fedora QA mailing list about this. Follow the thread if you are interested in the
topic.&lt;/p&gt;</summary><category term="Fedora"></category></entry><entry><title>HackFMI 2013 Hacker Gifts</title><link href="http://atodorov.org/blog/2013/10/25/hackfmi-2013-hacker-gifts/" rel="alternate"></link><updated>2013-10-25T16:33:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-25:blog/2013/10/25/hackfmi-2013-hacker-gifts/</id><summary type="html">&lt;p&gt;&lt;a href="http://hackfmi.com"&gt;HackFMI&lt;/a&gt; starts tonight!
&lt;a href="/blog/2013/04/15/hackfmi-post-mortem/"&gt;During the previous edition&lt;/a&gt; of the hackathon
I gave one team a special personal gift based on my estimation of their hacker level!
Thanks to &lt;a href="http://blog.ganev.bg"&gt;Vihren Ganev&lt;/a&gt; (one of the gift winners) for reminding
me about that!&lt;/p&gt;
&lt;p&gt;This year I have even bigger items to give to those who think out of the box, who hack
their way around and are brave enough to try and change the world through software!
I have one 
&lt;a href="http://www.amazon.com/gp/product/B001AWCS52/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B001AWCS52&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Lenovo Thinkpad Business Backpack&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B001AWCS52" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
and one 
&lt;a href="http://www.amazon.com/gp/product/B00004TX7H/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00004TX7H&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Lowepro D-Res 20 AW Digital Camera Bag&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B00004TX7H" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
(a bit bigger than the one on Amazon, easily fits a BlackBerry Z10) as seen on the pictures below.
Plus some small Red Hat branded items.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Lenovo bagpack" src="/images/hackfmi/lenovo_bagpack.jpg" title="Lenovo bagpack" /&gt;
&lt;img alt="Lowepro case" src="/images/hackfmi/lowepro_case.jpg" title="Lowepro case" /&gt;&lt;/p&gt;
&lt;h2&gt;How To Get The Gifts&lt;/h2&gt;
&lt;p&gt;There are no rules, I will make a decision as I go along.
I can give away all items or none. It's up to you! Surprise me! &lt;/p&gt;
&lt;p&gt;Tomorrow I will be mentoring the teams who decided to work with Django but
I'm happy to talk to anyone who needs help or just wants to grab the
cool stuff! See you there!&lt;/p&gt;</summary><category term="events"></category><category term="hackathon"></category><category term="hackfmi"></category></entry><entry><title>Tip: Extending Btrfs Filesystem for Fedora Virtual Machine</title><link href="http://atodorov.org/blog/2013/10/13/tip-extending-btrfs-filesystem-for-fedora-virtual-machine/" rel="alternate"></link><updated>2013-10-13T14:53:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-13:blog/2013/10/13/tip-extending-btrfs-filesystem-for-fedora-virtual-machine/</id><summary type="html">&lt;p&gt;I was testing Fedora 20 inside a KVM guest this week when the disk
space run out. The system was configured to use Btrfs filesystem and this is how
to extend it.&lt;/p&gt;
&lt;p&gt;First you have to extend the underlying guest storage. On the host I'm using LVM
so this is a no brainer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# pvs
  PV                                                    VG              Fmt  Attr PSize   PFree  
  /dev/mapper/luks-f3f6cea1-baba-4aaf-bca8-33a0ec540369 vg_redbull_mini lvm2 a--  289,11g 134,11g

# lvs
  LV            VG              Attr      LSize   Pool Origin Data%  Move Log Cpy%Sync Convert
  vm_fedora     vg_redbull_mini -wi-ao---  15,00g                                             

# lvextend -L +5G /dev/mapper/vg_redbull_mini-vm_fedora 
  Extending logical volume vm_fedora to 20,00 GiB
  Logical volume vm_fedora successfully resized

# lvs
  LV            VG              Attr      LSize   Pool Origin Data%  Move Log Cpy%Sync Convert
  vm_fedora     vg_redbull_mini -wi-ao---  20,00g                                             

# pvs
  PV                                                    VG              Fmt  Attr PSize   PFree  
  /dev/mapper/luks-f3f6cea1-baba-4aaf-bca8-33a0ec540369 vg_redbull_mini lvm2 a--  289,11g 129,11g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the VM we have a default Btrfs layout:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# blkid
/dev/vda1: UUID=&amp;quot;410ee563-e701-42ff-9d5f-5805dd103e35&amp;quot; TYPE=&amp;quot;ext4&amp;quot; PARTUUID=&amp;quot;0000330f-01&amp;quot; 
/dev/vda2: UUID=&amp;quot;f4addad4-a0fc-482e-ad5a-240864b76f09&amp;quot; TYPE=&amp;quot;swap&amp;quot; PARTUUID=&amp;quot;0000330f-02&amp;quot; 
/dev/vda3: LABEL=&amp;quot;fedora&amp;quot; UUID=&amp;quot;f0b589ce-061c-4ac3-826e-7f3f8c8a6d30&amp;quot; UUID_SUB=&amp;quot;11aa8414-3ce1-4fe7-a506-9a4f91ba5c30&amp;quot; TYPE=&amp;quot;btrfs&amp;quot; PARTUUID=&amp;quot;0000330f-03&amp;quot; 

# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/vda3        13G   11G  1.4G  89% /
devtmpfs        996M     0  996M   0% /dev
tmpfs          1002M   80K 1002M   1% /dev/shm
tmpfs          1002M  668K 1002M   1% /run
tmpfs          1002M     0 1002M   0% /sys/fs/cgroup
tmpfs          1002M   16K 1002M   1% /tmp
/dev/vda3        13G   11G  1.4G  89% /home
/dev/vda1       477M   72M  376M  17% /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now power-off (not reboot) and power-on the VM guest so that it sees the new size
of the underlying storage. See the fdisk header (line 9 below), vda is now 20GiB!&lt;/p&gt;
&lt;p&gt;Before extending the filesystem you have to extend the underlying disk partition! This is the
trickiest part. Using fdisk or parted you have to delete the partition and add it again.
Make sure to use the &lt;strong&gt;SAME&lt;/strong&gt; starting sector for the new partition (line 33)!&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# fdisk /dev/vda&lt;/span&gt;

Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux 2.24-rc1&lt;span class="o"&gt;)&lt;/span&gt;.
Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
Be careful before using the write command.


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/vda: &lt;span class="m"&gt;20&lt;/span&gt; GiB, &lt;span class="m"&gt;21474836480&lt;/span&gt; bytes, &lt;span class="m"&gt;41943040&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disk label &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x0000330f

Device    Boot     Start       End   Blocks  Id System
/dev/vda1 *         &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;1026047&lt;/span&gt;   &lt;span class="m"&gt;512000&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/vda2        &lt;span class="m"&gt;1026048&lt;/span&gt;   &lt;span class="m"&gt;5253119&lt;/span&gt;  &lt;span class="m"&gt;2113536&lt;/span&gt;  &lt;span class="m"&gt;82&lt;/span&gt; Linux swap / Solaris
/dev/vda3        &lt;span class="m"&gt;5253120&lt;/span&gt;  &lt;span class="m"&gt;31457279&lt;/span&gt; &lt;span class="m"&gt;13102080&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: d
Partition number &lt;span class="o"&gt;(&lt;/span&gt;1-3, default 3&lt;span class="o"&gt;)&lt;/span&gt;: 3

Partition &lt;span class="m"&gt;3&lt;/span&gt; is deleted

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n

Partition &lt;span class="nb"&gt;type&lt;/span&gt;:
   p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;2&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
   e   extended
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;3,4, default 3&lt;span class="o"&gt;)&lt;/span&gt;: 3
First sector &lt;span class="o"&gt;(&lt;/span&gt;5253120-41943039, default 5253120&lt;span class="o"&gt;)&lt;/span&gt;: 
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;5253120-41943039, default 41943039&lt;span class="o"&gt;)&lt;/span&gt;: 

Created a new partition &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size 17,5 GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/vda: &lt;span class="m"&gt;20&lt;/span&gt; GiB, &lt;span class="m"&gt;21474836480&lt;/span&gt; bytes, &lt;span class="m"&gt;41943040&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disk label &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x0000330f

Device    Boot     Start       End   Blocks  Id System
/dev/vda1 *         &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;1026047&lt;/span&gt;   &lt;span class="m"&gt;512000&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/vda2        &lt;span class="m"&gt;1026048&lt;/span&gt;   &lt;span class="m"&gt;5253119&lt;/span&gt;  &lt;span class="m"&gt;2113536&lt;/span&gt;  &lt;span class="m"&gt;82&lt;/span&gt; Linux swap / Solaris
/dev/vda3        &lt;span class="m"&gt;5253120&lt;/span&gt;  &lt;span class="m"&gt;41943039&lt;/span&gt; &lt;span class="m"&gt;18344960&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: w

The partition table has been altered.
Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
Re-reading the partition table failed.: Device or resource busy

The kernel still uses the old table. The new table will be used at the next reboot or after you run partprobe&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt; or kpartx&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt;.

&lt;span class="c"&gt;# partprobe&lt;/span&gt;
Error: Partition&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; on /dev/vda have been written, but we have been unable to inform the kernel of the change, probably because it/they are in use.  As a result, the old partition&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; will remain in use.  You should reboot now before making further changes.

&lt;span class="c"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;See lines 36 and 49 above. The new partition has a greater size.
After reboot just resize the filesystem and verify the new space has been added&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# btrfs filesystem resize max /
Resize &amp;#39;/&amp;#39; of &amp;#39;max&amp;#39;

# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/vda3        18G   11G  6.4G  63% /
devtmpfs        996M     0  996M   0% /dev
tmpfs          1002M   80K 1002M   1% /dev/shm
tmpfs          1002M  660K 1002M   1% /run
tmpfs          1002M     0 1002M   0% /sys/fs/cgroup
tmpfs          1002M   16K 1002M   1% /tmp
/dev/vda3        18G   11G  6.4G  63% /home
/dev/vda1       477M   72M  376M  17% /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is it, more disk space available for the virtual machine. Let me know how it works
for you.&lt;/p&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>Tip: Installing Missing debuginfo Packages for ABRT</title><link href="http://atodorov.org/blog/2013/10/12/tip-installing-missing-debuginfo-packages-for-abrt/" rel="alternate"></link><updated>2013-10-12T14:38:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-12:blog/2013/10/12/tip-installing-missing-debuginfo-packages-for-abrt/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Reporting disabled&amp;quot;" src="/images/reporting_disabled.png" title="Reporting disabled" /&gt;&lt;/p&gt;
&lt;p&gt;Every once in a while ABRT will tell you that reporting is disabled because
backtrace is unusable. What it means is that it can't read some of the debugging
symbols and the most likely reason for that is debuginfo packages are missing.&lt;/p&gt;
&lt;p&gt;To install them first locate the directory containing the files for that particular
crash. Use the &lt;code&gt;executable&lt;/code&gt; file to find out if you are looking into the correct
directory. Then use this one liner to install the missing debuginfo packages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# pwd
/var/tmp/abrt/ccpp-2013-10-10-15:55:18-15533
# cat backtrace | grep lib | tr -s &amp;#39; &amp;#39; | cut -f4 -d&amp;#39; &amp;#39; | sort | uniq | grep &amp;quot;/&amp;quot; | xargs rpm -qf --qf &amp;quot;%{name}\n&amp;quot; | xargs debuginfo-install -y
&lt;/pre&gt;&lt;/div&gt;</summary><category term="tips"></category><category term="Fedora"></category></entry><entry><title>Fedora 20 GNOME 3.10 Test Day Post-mortem</title><link href="http://atodorov.org/blog/2013/10/11/fedora-20-gnome-3-dot-10-test-day-post-mortem/" rel="alternate"></link><updated>2013-10-11T12:25:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-11:blog/2013/10/11/fedora-20-gnome-3-dot-10-test-day-post-mortem/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Fedora sausage banner&amp;quot;" src="/images/fedora/sausage-banner.png" title="Fedora sausage banner" /&gt;&lt;/p&gt;
&lt;p&gt;Here is my summary of the second Fedora Test Day hosted at
&lt;a href="http://initlab.org"&gt;init Lab&lt;/a&gt; yesterday.&lt;/p&gt;
&lt;p&gt;Local attendance was a total disaster, in fact I was testing once again by my own.
This time
there were more people in the lab, all busy with their daily routines and tasks.
There were no people who came for the testing :(. I will have to try different
venues in the future and see if the situation improves.&lt;/p&gt;
&lt;p&gt;On the testing front I managed to score 5 bugs against
&lt;a href="https://bugzilla.gnome.org/buglist.cgi?bug_id=709797,709799,709806,709810"&gt;GNOME&lt;/a&gt;
and &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1017807"&gt;Fedora&lt;/a&gt;.
You can see the other test results and bugs on the
&lt;a href="https://fedoraproject.org/wiki/Test_Day:2013-10-10_Gnome_3.10"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are two things I didn't like in particular&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GNOME 3 as well as its classic mode - simply not the environment I'm used to;&lt;/li&gt;
&lt;li&gt;Having to record test results in the wiki! I'm
&lt;a href="https://lists.fedoraproject.org/pipermail/test/2013-October/118284.html"&gt;writing&lt;/a&gt;
to the Fedora QA mailing list about that as we speak.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At one time I was engaged in a discussion about which Bulgarian keyboard layout
should be the default in GNOME simply because of
&lt;a href="https://bugzilla.gnome.org/show_bug.cgi?id=709799"&gt;GNOME #709799&lt;/a&gt;. The default
keyboard layout will be Bulgarian (traditional phonetic) aka bg+phonetic.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(16,13,26) rtcm: atodorov: are you bulgarian and/or live in bulgaria?
(16,14,20) rtcm: atodorov: if yes, I wanted to know which keyboard layout most people expect there to be the default
(16,16,34) atodorov: rtcm: I&amp;#39;m a Bulgarian, however I can&amp;#39;t tell which one. Both Phonetic and standard (BDS) are common
(16,16,54) atodorov: a safe bet is to go with phonetic I guess. 
(16,19,46) rtcm: atodorov: can you tell me which one is it in XKB terms? is it &amp;quot;bg&amp;quot;, &amp;quot;bg+bas_phonetic&amp;quot; or &amp;quot;bg+phonetic&amp;quot; ?
(16,20,51) rtcm: they&amp;#39;re labeled as &amp;quot;Bulgarian&amp;quot;, &amp;quot;Bulgarian (new phonetic)&amp;quot; and &amp;quot;Bulgarian (traditional phonetic)&amp;quot;
(16,21,30) atodorov: bg+phonetic is the traditional phonetic
(16,22,04) atodorov: bg labeled as &amp;quot;Bulgarian&amp;quot; is the standard one I guess. Here we call it BDS after the standardization institute
(16,22,34) atodorov: bg+bas_phonetic is created from the Bulgarian Academy of Science and is not very popular as far as I know. I&amp;#39;ve never seen it in use
(16,23,15) rtcm: atodorov: all I want to know is what most people would expect? like what does windows do by default? that&amp;#39;s a good bet
(16,27,46) atodorov: rtcm: I&amp;#39;m just being told that new Windows releases use yet another layout by default, which is like phonetic but with some characters in new places and people don&amp;#39;t like that
(16,27,53) atodorov: my safe bet goes to bg+phonetic
(16,29,05) rtcm: ok, thanks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is a rare occasion when you get to make a decision that affects a large group
of people and I hope you don't hate me for that! &lt;/p&gt;
&lt;p&gt;Do you want to see more Fedora Test Days happening in Sofia? Join me and I will
organize some more!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>This Week: Python Testing, Chris DiBona on Open Source and OpenShift ENV Variables</title><link href="http://atodorov.org/blog/2013/10/11/this-week-python-chris-dibona-openshift/" rel="alternate"></link><updated>2013-10-11T10:45:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-11:blog/2013/10/11/this-week-python-chris-dibona-openshift/</id><summary type="html">&lt;p&gt;Here is a random collection of links I came across this week which
appear interesting to me but I don't have time to blog about in details.&lt;/p&gt;
&lt;h2&gt;Making a Multi-branch Test Server for Python Apps&lt;/h2&gt;
&lt;p&gt;If you are wondering how to test different feature branches of your Python
application but don't have the resources to create separate test servers this
is for you: 
&lt;a href="http://depressedoptimism.com/blog/2013/10/8/making-a-multi-branch-test-server"&gt;http://depressedoptimism.com/blog/2013/10/8/making-a-multi-branch-test-server&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kudos to the python-django-bulgaria Google group for finding this link!&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;OpenSource.com Interview with Chris DiBona&lt;/h2&gt;
&lt;p&gt;Just read it at
&lt;a href="http://opensource.com/business/13/10/interview-chris-dibona"&gt;http://opensource.com/business/13/10/interview-chris-dibona&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I particularly like the part where he called open source "brutal".&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You once called open source “brutal”. What did you mean by that?&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;I think that it is because open source projects are able to only work with the
productive people and ignore everyone else. That behavior can come across as
very harsh or exclusionary, and that's because it is that: brutally harsh and
exclusionary of anyone who isn't contributing.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;So, I guess what I'm saying is that survival of the fittest as practiced in the
open source world is a pretty brutal mechanism, but it works very very well for
producing quality software. Boy is it hard on newcomers though...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;OpenShift Finally Introduces Environment Variables&lt;/h2&gt;
&lt;p&gt;Yes! Finally! &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    rhc set-env VARIABLE1=VALUE1 -a myapp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No need for 
&lt;a href="/blog/2013/07/08/tip-setting-secure-env-variables-on-red-hat-openshift/"&gt;my work around&lt;/a&gt;
anymore! I will give the new feature a go very soon. &lt;/p&gt;
&lt;p&gt;Read more about it at the OpenShift blog:
&lt;a href="https://www.openshift.com/blogs/taking-advantage-of-environment-variables-in-openshift-php-apps"&gt;https://www.openshift.com/blogs/taking-advantage-of-environment-variables-in-openshift-php-apps&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Have you found anything interesting this week? Please share in the comments below! Thanks!&lt;/p&gt;</summary><category term="Python"></category><category term="cloud"></category><category term="OpenShift"></category></entry><entry><title>Fedora 20 Virtualization Test Day Post-mortem</title><link href="http://atodorov.org/blog/2013/10/08/fedora-20-virtualization-test-day-post-mortem/" rel="alternate"></link><updated>2013-10-08T22:01:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-08:blog/2013/10/08/fedora-20-virtualization-test-day-post-mortem/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Fedora 20 banner&amp;quot;" src="/images/fedora/fedora20-banner.png" title="Fedora 20 banner" /&gt;&lt;/p&gt;
&lt;p&gt;Here is a quick summary of the first Fedora Test Day in Sofia I hosted at
&lt;a href="http://initlab.org"&gt;init Lab&lt;/a&gt; today.&lt;/p&gt;
&lt;p&gt;Attendance was quite poor, actually nobody else except me participated but
almost nobody else visited the hackespace as well. I get that it is a
working day and Test Days conflict with regular business hours but this
is not going to change anyway. On the other hand where were all the freelancers
and non-office job workers who usually hang around in the Lab? I have no idea!&lt;/p&gt;
&lt;p&gt;On IRC there was much better activity, 5 or 6 people were testing across
Asia, Europe and USA time zones. You can see the test results
&lt;a href="http://209.132.184.192/testdays/show_event?event_id=7"&gt;here&lt;/a&gt;.
I've started filing quite a few bugs in the morning and continued well into the
afternoon. I've managed to file a total of
&lt;a href="https://bugzilla.redhat.com/buglist.cgi?bug_id=1016435,1016449,1016488,1016530,1016604,1016613,1016648,1016663,1016704,1016715"&gt;10 bugs&lt;/a&gt;.
Some of them were not related to virtualization and some of them turned out to be
duplicates or not a bug. I even managed to file 2 duplicate bugs which likely have the
same root cause myself :). &lt;/p&gt;
&lt;p&gt;I've also experienced two bugs filed by other people:
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=967371"&gt;RHBZ #967371&lt;/a&gt; for MATE desktop
and &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1015636"&gt;RHBZ #1015636&lt;/a&gt; for
virt-manager's Save/Restore functionality.&lt;/p&gt;
&lt;p&gt;I've tried ARM on x86_64 but that didn't get anywhere near a running system.
I will make another post about ARM and what I've discovered there.&lt;/p&gt;
&lt;p&gt;The one thing I liked is the 
&lt;a href="http://209.132.184.192/testdays/show_event?event_id=7"&gt;test results application&lt;/a&gt;.
It is not what I'm used to when dealing with RHEL, has far less features but is
very fast and easy to use and suits the Test Days participants just fine.
And is definitely much easier to use compared to filing results in the wiki.&lt;/p&gt;
&lt;p&gt;Overall Fedora 20 virtualization status according to me is pretty good.&lt;/p&gt;
&lt;p&gt;I hope to see more attendance &lt;a href="http://initlab.org/event/gnome-test-day"&gt;on Thursday&lt;/a&gt;
when we're going to test GNOME 3.10.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Fedora 20 Virtualization &amp; GNOME Test Days at init Lab this week</title><link href="http://atodorov.org/blog/2013/10/07/fedora-20-virtualization-and-gnome-test-days-at-init-lab-this-week/" rel="alternate"></link><updated>2013-10-07T10:28:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-10-07:blog/2013/10/07/fedora-20-virtualization-and-gnome-test-days-at-init-lab-this-week/</id><summary type="html">&lt;p&gt;Fedora 20 Virtualization and GNOME test days will be tomorrow (8th Oct) and on
Thursday (10th Oct)! Local community in Sofia will gather at
&lt;a href="http://initlab.org"&gt;init Lab&lt;/a&gt;! We start at 10:00 and everybody is welcome.&lt;/p&gt;
&lt;p&gt;If you have no idea what I'm talking about check my
&lt;a href="/blog/categories/fedora/"&gt;previous posts&lt;/a&gt; and the announcement at init Lab's website:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://initlab.org/event/testing-fedora-20-virtualization-test-day"&gt;http://initlab.org/event/testing-fedora-20-virtualization-test-day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://initlab.org/event/gnome-test-day"&gt;http://initlab.org/event/gnome-test-day&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See you there!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Facebook UI Bug Strikes Again at HackFMI</title><link href="http://atodorov.org/blog/2013/09/23/facebook-ui-bug-strikes-again-at-hackfmi/" rel="alternate"></link><updated>2013-09-23T23:33:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-09-23:blog/2013/09/23/facebook-ui-bug-strikes-again-at-hackfmi/</id><summary type="html">&lt;p&gt;Does this look familiar to you ? &lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;HackFMI UI bug&amp;quot;" src="/images/hackfmi_facebook_bug.png" title="HackFMI UI bug" /&gt;&lt;/p&gt;
&lt;p&gt;No? See 
&lt;a href="/blog/2013/06/02/sofiavalley-ui-bug/"&gt;SofiaValley&lt;/a&gt; and 
&lt;a href="/blog/2013/07/31/ui-bug-for-opensource-dot-com/"&gt;opensource.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Either this is a very common front-end mistake (I would blame CSS) or
Facebook have screwed up their buttons.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Fedora Test Days are Coming to Sofia</title><link href="http://atodorov.org/blog/2013/09/23/fedora-test-days-are-coming-to-sofia/" rel="alternate"></link><updated>2013-09-23T14:27:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-09-23:blog/2013/09/23/fedora-test-days-are-coming-to-sofia/</id><summary type="html">&lt;p&gt;As I &lt;a href="/blog/2013/09/14/upcoming-talk-fedora-test-days-in-sofia/"&gt;mentioned earlier&lt;/a&gt;
I will organize some Fedora testing in Sofia. Here's an outline of my talk this
Saturday and a general guide for anyone who wants to participate.&lt;/p&gt;
&lt;h2&gt;What are Fedora Test Days&lt;/h2&gt;
&lt;p&gt;Fedora Test Days are day long events focused on testing a particular feature
in the upcoming Fedora release. At the time of writing they are focused on
Fedora 20.&lt;/p&gt;
&lt;h2&gt;What You Need Before Joining Fedora&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href="https://bugzilla.redhat.com/createaccount.cgi"&gt;bugzilla.redhat.com&lt;/a&gt; account;&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://admin.fedoraproject.org/accounts/user/new"&gt;Fedora account&lt;/a&gt;. Please
complete the &lt;a href="https://fedoraproject.org/wiki/Join"&gt;onboarding process&lt;/a&gt; in advance
as it takes time;&lt;/li&gt;
&lt;li&gt;Create a wiki page for your profile. Mine is 
&lt;a href="https://fedoraproject.org/wiki/User:Atodorov"&gt;here&lt;/a&gt;. This will verify you can
edit the wiki;&lt;/li&gt;
&lt;li&gt;Know how to use IRC. There is a web chat client at &lt;a href="https://webchat.freenode.net/"&gt;https://webchat.freenode.net/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What You Need Before The Test Day&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Know how to properly
&lt;a href="https://fedoraproject.org/wiki/Bugs_and_feature_requests"&gt;report a bug&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Installation ISO (DVD) or Live CD depending on what you want to test;&lt;/li&gt;
&lt;li&gt;Nightly LiveCD ISOs can be found
&lt;a href="http://alt.fedoraproject.org/pub/alt/nightly-composes/"&gt;here&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Another alternative is official
&lt;a href="http://dl.fedoraproject.org/pub/alt/stage/"&gt;test compose&lt;/a&gt; (TC) images or
yum update to the latest release;&lt;/li&gt;
&lt;li&gt;Extra hardware or a virtual machine for testing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What You Need On The Test Day&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Join the #fedora-test-day IRC channel on freenode.net;&lt;/li&gt;
&lt;li&gt;Have the &lt;a href="https://fedoraproject.org/wiki/Test_Day:Current"&gt;current test day&lt;/a&gt;
wiki page handy;&lt;/li&gt;
&lt;li&gt;Execute some test cases and file bugs;&lt;/li&gt;
&lt;li&gt;Report your test results on the wiki;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Time and place for two test days will be announced at the end of the week
and earlier next week so stay tuned!&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category></entry><entry><title>Lenovo Rants: Battery and Dock Flaws</title><link href="http://atodorov.org/blog/2013/09/15/lenovo-rants-battery-and-dock-flaws/" rel="alternate"></link><updated>2013-09-15T10:23:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-09-15:blog/2013/09/15/lenovo-rants-battery-and-dock-flaws/</id><summary type="html">&lt;p&gt;To all my readers - sorry for not being able to blog more frequently lately.
Here's an easy read about my favourite laptop brand Lenovo and some of their
design flaws I've found.&lt;/p&gt;
&lt;h2&gt;X220 and T60 Batterries are ALMOST Identical&lt;/h2&gt;
&lt;p&gt;&lt;img alt="&amp;quot;X220 and T60 batteries&amp;quot;" src="/images/lenovo_x220_t60_battery.jpg" title="X220 and T60 batteries" /&gt;&lt;/p&gt;
&lt;p&gt;As you can see the &lt;a href="http://amzn.to/12y5hwp"&gt;X220&lt;/a&gt; and 
&lt;a href="http://amzn.to/183SgiR"&gt;T60&lt;/a&gt; batteries are nearly identical with the notable
exception of the connector placement. The end result - I have to purchase yet another
battery as a backup for long travel/work on the go. Not what I want.&lt;/p&gt;
&lt;p&gt;I wish all Lenovo models had the same batteries so people can swap them around
as they wish. Is this too much to ask for? Have you seen another brand which
got this right? &lt;/p&gt;
&lt;h2&gt;ThinkPad Mini Dock Design Flaw&lt;/h2&gt;
&lt;p&gt;I'm using a &lt;a href="http://amzn.to/15tjUYi"&gt;ThinkPad Mini Dock Series 3&lt;/a&gt; docking station
with my X220 laptop. Being a QA engineer for so long I immediately
noticed something that wasn't quite right. The buttons on the left and the mechanism
next to them are blocking the hot air exhaust from the CPU fan. This model of docking
station is made to fit several models of laptops and those which dock in position 2 are
less affected from those which dock in possition 1. Mine was not a lucky one.&lt;/p&gt;
&lt;p&gt;&lt;img alt="docking station in position 2" src="/images/dock/alone.jpg" title="docking station in position 2" /&gt;&lt;/p&gt;
&lt;p&gt;On the pictures below it is clearly visible that most of the hot air coming out of the CPU
fan is blocked.&lt;/p&gt;
&lt;p&gt;&lt;img alt="top view" src="/images/dock/top.jpg" title="top view" /&gt;
&lt;img alt="back view" src="/images/dock/back.jpg" title="back view" /&gt;
&lt;img alt="side view" src="/images/dock/side.jpg" title="side view" /&gt;&lt;/p&gt;
&lt;p&gt;In order to reduce laptop heating and provide better cooling I decided to remove the
1/2 position switch mechanism. To do that you have to unscrew all screws from the docking
station and carefully split the top and bottom halves. The offending piece of plastic is
screwed with two tiny screws at the bottom. Once they are removed everything comes off.&lt;/p&gt;
&lt;p&gt;&lt;img alt="blocking part removed" src="/images/dock/removed.jpg" title="blocking part removed" /&gt;&lt;/p&gt;
&lt;p&gt;Even with this piece removed my laptop still hets up too much! I guess 80 C is just
normal for the Core i7 processors :(.&lt;/p&gt;
&lt;p&gt;Have you found something not quite right in your hardware design? Please share in the
comments.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Upcoming Talk: Fedora Test Days in Sofia</title><link href="http://atodorov.org/blog/2013/09/14/upcoming-talk-fedora-test-days-in-sofia/" rel="alternate"></link><updated>2013-09-14T23:11:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-09-14:blog/2013/09/14/upcoming-talk-fedora-test-days-in-sofia/</id><summary type="html">&lt;p&gt;On September 28th I will be giving a short talk about
&lt;a href="https://fedoraproject.org/wiki/QA/Test_Days"&gt;Fedora Test Days&lt;/a&gt; at the regular
Linux for Bulgarians
&lt;a href="http://www.linux-bg.org/cgi-bin/y/index.pl?page=news&amp;amp;key=459487176"&gt;conference&lt;/a&gt;.
I will explain what these are and how one can participate. I will also announce
my plans and schedule to organize some
&lt;a href="https://fedoraproject.org/wiki/QA/Fedora_20_test_days"&gt;Fedora 20 test days&lt;/a&gt;
locally in Sofia. If you are a fan of Fedora and want to file bugs and kick 
some developers' ass this is the way to do it!&lt;/p&gt;
&lt;p&gt;Other talks include Alexander Shopov's „Oracle's take on NoSQL“ which I wanted
to hear since this summer and TBA talks about MicroTik routers.&lt;/p&gt;
&lt;p&gt;The conference will take place on September 28th at the French Institute at
Sofia University
(see &lt;a href="http://conf.linux-bg.org/wp-content/uploads/2009/12/su-2.png"&gt;map&lt;/a&gt;).
It starts at 13:00 and my talk should be at the beginning. See you there!&lt;/p&gt;
&lt;p&gt;PS: this post was initially written on my &lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt;
with Penzus Editor - another small step in 
&lt;a href="/blog/2013/08/01/laptop-vs-smartphone-part-one/"&gt;retiring my laptop&lt;/a&gt;.&lt;/p&gt;</summary><category term="Fedora"></category><category term="QA"></category><category term="events"></category></entry><entry><title>Bug Analysis Of RHBZ #1337</title><link href="http://atodorov.org/blog/2013/09/02/bug-analysis-of-rhbz-1337/" rel="alternate"></link><updated>2013-09-02T16:38:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-09-02:blog/2013/09/02/bug-analysis-of-rhbz-1337/</id><summary type="html">&lt;p&gt;In my &lt;a href="/blog/2013/08/23/red-hats-ebugzilla-hits-one-million-bugs/"&gt;previous post&lt;/a&gt;
I asked the readers of this blog to pick a bug number from Red Hat's Bugzilla
so I can analyze it later.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://radorado.me"&gt;Radoslav Georgiev&lt;/a&gt; decided to step up and
selected the &lt;a href="https://en.wikipedia.org/wiki/Leet"&gt;Leet&lt;/a&gt; bug
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1337"&gt;https://bugzilla.redhat.com/show_bug.cgi?id=1337&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a rather old bug against kernel, in particular
against the token ring driver. There isn't much info on the bug but it seems
the issue is hardware dependent and doesn't reproduce reliably.&lt;/p&gt;
&lt;p&gt;Looking at the bug status and history it looks like it was closed without
fixing it. Most likely the reason for this was there was no hardware
to test, bug was not reproduced and no customers were seeing the issue or
were willing to test and work with devel!&lt;/p&gt;
&lt;p&gt;If you'd like to see my comments on other interesting bugs just post a link
to them in the comments section.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Red Hat's Bugzilla Hits One Million Bugs</title><link href="http://atodorov.org/blog/2013/08/23/red-hats-bugzilla-hits-one-million-bugs/" rel="alternate"></link><updated>2013-08-23T12:21:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-23:blog/2013/08/23/red-hats-bugzilla-hits-one-million-bugs/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;RHBZ 1 million&amp;quot;" src="/images/redhat_1mil_bugs.jpg" title="RHBZ 1 million" /&gt;&lt;/p&gt;
&lt;p&gt;Red Hat's Bugzilla passed the 1 million bugs milestone yesterday!
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1000000"&gt;RHBZ #1000000&lt;/a&gt; has been
filed by Anton Arapov, a kernel engineer and a very nice guy (I know him btw).
I've filed several bugs yesterday but the last one was #999941. A bit too short!&lt;/p&gt;
&lt;p&gt;To celebrate this event I dare you to pick some bugs from Bugzilla that you find
interesting or frustrating and I will try to analyze and explain them from a
QA engineer's point of view. Since I've reported over 1000 bugs and been involved in
another close to 5000 I think I will be able to answer almost any question.&lt;/p&gt;
&lt;p&gt;Challenge accepted!&lt;/p&gt;</summary><category term="RHEL"></category><category term="QA"></category></entry><entry><title>Small But Annoying Twitter Bug</title><link href="http://atodorov.org/blog/2013/08/23/small-but-annoying-twitter-bug/" rel="alternate"></link><updated>2013-08-23T12:09:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-23:blog/2013/08/23/small-but-annoying-twitter-bug/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;Tweet Embed Bug&amp;quot;" src="/images/twitter_embed_bug.png" title="Tweet Embed Bug" /&gt;&lt;/p&gt;
&lt;p&gt;I've been having troubles with Twitter lately but this bug is just annoying!
Where on Earth is the "code below" ? I've already
&lt;a href="https://twitter.com/atodorov_/status/370833992074809345"&gt;reported it&lt;/a&gt;. Let's
see how long it takes for them to fix it!&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Tip: How to Find Your Red Hat Account Number</title><link href="http://atodorov.org/blog/2013/08/23/how-to-find-your-red-hat-account-number/" rel="alternate"></link><updated>2013-08-23T11:55:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-23:blog/2013/08/23/how-to-find-your-red-hat-account-number/</id><summary type="html">&lt;p&gt;&lt;img src="/images/redhat_account_number.png" style="float:left;display:inline-block;margin-right:10px;" /&gt;&lt;/p&gt;
&lt;p&gt;One thing you need to know when ordering Red Hat subscriptions is your
account number. It is available in the drop down menu at the top right
corner after you login at &lt;a href="https://access.redhat.com"&gt;https://access.redhat.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;New accounts don't have an account number. It will be generated after
the first subscription activation.&lt;/p&gt;
&lt;p&gt;If you need to know more about Red Hat's ordering process just ask me!&lt;/p&gt;</summary><category term="RHEL"></category><category term="tips"></category></entry><entry><title>The Rise of .io Domains for Well Crafted Web Services</title><link href="http://atodorov.org/blog/2013/08/13/the-rise-of-io-domains-for-well-crafted-web-services/" rel="alternate"></link><updated>2013-08-13T16:17:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-13:blog/2013/08/13/the-rise-of-io-domains-for-well-crafted-web-services/</id><summary type="html">&lt;p&gt;Back in February 2013 Russell Beattie has published an article on his blog
titled
&lt;a href="http://www.russellbeattie.com/blog/artisanal-websites-the-rise-of-io-domains-for-well-crafted-web-services"&gt;Artisanal Websites: The rise of .io domains for well crafted web services&lt;/a&gt;
. He has compiled a great deal of sites in the .io domain space with screenshots
and links to each individual service. There are lots of interesting ones, so 
go and check them out!&lt;/p&gt;
&lt;p&gt;I'm glad Russell has added &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; as well!&lt;/p&gt;</summary></entry><entry><title>Notes From Two Interesting GUADEC Talks</title><link href="http://atodorov.org/blog/2013/08/07/notes-from-two-interesting-guadec-talks/" rel="alternate"></link><updated>2013-08-07T14:33:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-07:blog/2013/08/07/notes-from-two-interesting-guadec-talks/</id><summary type="html">&lt;p&gt;As this year's &lt;a href="https://www.guadec.org/"&gt;GUADEC&lt;/a&gt; is coming to an end
I'm publishing an interesting update from 
&lt;a href="https://cz.linkedin.com/in/mullerpetr"&gt;Petr Muller&lt;/a&gt; for 
those who were not able to attend.
Petr is a Senior Quality Engineer at Red Hat. His notes were
sent to an internal QE mailing list and re-published with permission.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;As this year&amp;#39;s GUADEC happened in the same building where I have my
other office, I decided to attend. I&amp;#39;m sharing my notes from the two
sessions I consider to be especially interesting for the audience of
this mailing list:

== How to not report your UX bug ==
Speaker:    Fabiana Simões
Blog:       http://fabianapsimoes.wordpress.com/
Twitter:    https://twitter.com/fabianapsimoes

Do not do this stuff:
* Do not simply present a preferred solution, but describe a problem (a
difficulty you are having, etc.)
* Do not use &amp;quot;This sucks&amp;quot; idiom, not even hidden in false niceties like
&amp;quot;It&amp;#39;s not user friendly&amp;quot;
* Do not talk for majority, when you are not entitled to (&amp;quot;most users
would like&amp;quot;)
* Do not consider all UX issues as minor: an inability to do stuff is
not a minor issue

What is actually interesting for the designer in a report?
* What were you trying to do?
* Why did you want to do it?
* What did you do?
* What happened?
* What were your expectations?

More notes
* Write as much as needed
* Describe what you see, did and *how you felt*
* Print screen is your friend!
* *Give praise*

== Extreme containment measures: keeping bug reports under control ==
Speaker:  Jean-Francois Fortin Tam
Homepage: http://jeff.ecchi.ca
Twitter:  https://twitter.com/nekohayo

Discussed the problem lot of OS projects are having: lot of useless
(old, irrelevant, waiting for decision no one wants to make) bug/rfe
reports in their bug tracking systems. Lots of food for thought about
our own projects, internal or external. Clever applications of
principles from personal productivity systems such as GTD and Inbox Zero
for bug tracking.  

The talk was mostly an applied version of this blog post, which is worth
reading:
http://jeff.ecchi.ca/blog/2012/10/08/reducing-our-core-apps-software-inventory/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I particularly like the UX bug reporting guide lines. Need to take those into
account when reporting UI issues. &lt;/p&gt;
&lt;p&gt;I still haven't read the second blog post which also looks interesting although 
not very applicable to me. After all I'm the person reporting bugs not the one
who decides what and when gets fixed.&lt;/p&gt;</summary><category term="QA"></category><category term="events"></category></entry><entry><title>The 51st Annual Meeting of the Association for Computational Linguistics</title><link href="http://atodorov.org/blog/2013/08/07/the-51st-annual-meeting-of-the-association-for-computational-linguistics/" rel="alternate"></link><updated>2013-08-07T12:10:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-07:blog/2013/08/07/the-51st-annual-meeting-of-the-association-for-computational-linguistics/</id><summary type="html">&lt;p&gt;Two hours ago I've heard on the radio about
&lt;a href="http://acl2013.org/site/"&gt;the 51st Annual Meeting of the Association for Computational Linguistics&lt;/a&gt;
which is held at the moment in Sofia
According to the guest speaker (a professor from Bulgarian Academy of Science) the official
program will be over today but the next two days will feature workshops and tutorials.&lt;/p&gt;
&lt;p&gt;Definitely not to be missed if you are in Sofia. I'm not unfortunately :(.
If you can please visit and share what you saw with me. Thanks!&lt;/p&gt;</summary><category term="events"></category></entry><entry><title>Exploring BlackBerry 10 - Environment Variables</title><link href="http://atodorov.org/blog/2013/08/05/exploring-blackberry-10-environment-variables/" rel="alternate"></link><updated>2013-08-05T00:20:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-05:blog/2013/08/05/exploring-blackberry-10-environment-variables/</id><summary type="html">&lt;p&gt;Just a quick reference of environment variables as seen by the 
&lt;code&gt;BGshellPlusFree&lt;/code&gt; terminal app.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;APPCPU&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;AUTOORIENTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;portrait
&lt;span class="nv"&gt;BASEFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/base
&lt;span class="nv"&gt;BMETRICS_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;launcher
&lt;span class="nv"&gt;BOARDFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/base/board.tdf
&lt;span class="nv"&gt;BOARD_CONFIG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;factory_sfi
&lt;span class="nv"&gt;BOOT_LOADER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;RIMBOOT
&lt;span class="nv"&gt;BOOT_START_TIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1375381026
&lt;span class="nv"&gt;CELLULAR_NET_IF_PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;cellular
&lt;span class="nv"&gt;COVERHEIGHT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;396
&lt;span class="nv"&gt;COVERWIDTH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;334
&lt;span class="nv"&gt;CPU&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;armle-v7
&lt;span class="nv"&gt;DECKARD_DEBUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;DECKARD_DEBUG_SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;DISK_ALIMIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;65536
&lt;span class="nv"&gt;FLASHTMP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/tmp
&lt;span class="nv"&gt;FLASH_FONT_CFG_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/system/config/flash-font.cfg
&lt;span class="nv"&gt;FONTCONFIG_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/fontconfig/fonts.conf
&lt;span class="nv"&gt;GRAPHICS_ROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/graphics/omap4470
&lt;span class="nv"&gt;HEIGHT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1280
&lt;span class="nv"&gt;HMI_REMOTE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;FALSE
&lt;span class="nv"&gt;HMI_VOLUME_SCALE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;50
&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/accounts/1000/appdata/com.BGmot.BGshellPlusFree.gYABgHVtFpaI1Xhiaw0hMuCbPNk/data
&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;   &lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;IFS_BOOT_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes
&lt;span class="nv"&gt;KSH_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;@(#)PD KSH v5.2.14 99/07/13.2&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C
&lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/qt4/lib:app/native/lib:/usr/lib/appserv
&lt;span class="nv"&gt;LIBIMG_CFGFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/system/config/img.conf
&lt;span class="nv"&gt;LOCFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/locale/locale.file
&lt;span class="nv"&gt;LOGDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/log
&lt;span class="nv"&gt;MAILCHECK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;600
&lt;span class="nv"&gt;MHSDEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tiw_sap0
&lt;span class="nv"&gt;MIN_VALID_DATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;200905010000.00
&lt;span class="nv"&gt;MIN_VALID_DATE_SEC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1241136000
&lt;span class="nv"&gt;MM_INIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/base/lib/dll/mmedia
&lt;span class="nv"&gt;NET_PPS_ROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/pps/services/networking
&lt;span class="nv"&gt;OLDPWD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/accounts/1000
&lt;span class="nv"&gt;OPTIND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;ORIENTATION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;OS_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10.1.0.1720
&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;app/native:/base/bin:/base/usr/bin:/base/sbin:/base/usr/sbin:/base/usr/photon/bin:/base/scripts:/radio/bin:/radio/usr/bin:/radio/sbin:/radio/usr/sbin:/radio/scripts:/proc/boot:/base/bin:/base/sbin:/base/usr/bin:/base/usr/sbin
&lt;span class="nv"&gt;PERIMETER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;personal
&lt;span class="nv"&gt;PERIMETER_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/accounts/1000
&lt;span class="nv"&gt;PERSISTENCE_DATA&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/
&lt;span class="nv"&gt;PHFONT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/phfont
&lt;span class="nv"&gt;PHKSCOPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;PHOTON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/photon
&lt;span class="nv"&gt;PLATFORM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;London
&lt;span class="nv"&gt;PLATFORM_CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;phone
&lt;span class="nv"&gt;PLATFORM_FAMILY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;PLATFORM_FAMILY_LC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;PLATFORM_LOWERCASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;london
&lt;span class="nv"&gt;PLATFORM_REV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;08
&lt;span class="nv"&gt;PPID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;19493019
&lt;span class="nv"&gt;PPSDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/pps
&lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$ &amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;PS2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt; &amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;PS3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#? &amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;PS4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;+ &amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/accounts/1000/appdata/com.BGmot.BGshellPlusFree.gYABgHVtFpaI1Xhiaw0hMuCbPNk/data
&lt;span class="nv"&gt;QML_IMPORT_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/base/usr/lib/qt4/imports
&lt;span class="nv"&gt;QT_LIB_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/base/usr/lib/qt4/lib
&lt;span class="nv"&gt;QT_PLUGIN_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/base/usr/lib/qt4/plugins
&lt;span class="nv"&gt;QT_QPA_PLATFORM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;blackberry
&lt;span class="nv"&gt;RADIOBOARDFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/radio/radio.tdf
&lt;span class="nv"&gt;RADIOFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/radio
&lt;span class="nv"&gt;RADIO_BOARD_CONFIG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;m5730
&lt;span class="nv"&gt;RADIO_NET_IF_LIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; cellular0 cellular1 cellular2 cellular3 cellular4&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;RADIO_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10.1.0.1721
&lt;span class="nv"&gt;RAMSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1G
&lt;span class="nv"&gt;RANDOM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;18235
&lt;span class="nv"&gt;ROOTFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/
&lt;span class="nv"&gt;ROTATION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;top_up
&lt;span class="nv"&gt;RTC_CLOCK_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;RTC_CLOCK_TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;RTC_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;SANDBOX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/accounts/1000/appdata/com.BGmot.BGshellPlusFree.gYABgHVtFpaI1Xhiaw0hMuCbPNk
&lt;span class="nv"&gt;SECONDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2167
SHELL
&lt;span class="nv"&gt;STDIO_DEFAULT_BUFSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8192
&lt;span class="nv"&gt;SYSNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nto
&lt;span class="nv"&gt;TEMP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/accounts/1000/appdata/com.BGmot.BGshellPlusFree.gYABgHVtFpaI1Xhiaw0hMuCbPNk/tmp
&lt;span class="nv"&gt;TERM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ansi
&lt;span class="nv"&gt;TMOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;TMP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/accounts/1000/appdata/com.BGmot.BGshellPlusFree.gYABgHVtFpaI1Xhiaw0hMuCbPNk/tmp
&lt;span class="nv"&gt;TMPDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/accounts/1000/appdata/com.BGmot.BGshellPlusFree.gYABgHVtFpaI1Xhiaw0hMuCbPNk/tmp
&lt;span class="nv"&gt;WIDTH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;768
&lt;span class="nv"&gt;WIFIDEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tiw_sta0
&lt;span class="nv"&gt;WLANCHP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ti1283
&lt;span class="nv"&gt;WLANDEV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;london
&lt;span class="nv"&gt;WLANDRV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;mcp33
&lt;span class="nv"&gt;WLANSUPPVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;08
&lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;
&lt;span class="nv"&gt;uname_m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;OMAP4470_ES1.0_HS_London_Rev:08
&lt;/pre&gt;&lt;/div&gt;</summary><category term="BlackBerry"></category></entry><entry><title>Exploring BlackBerry 10 - Application Security Model</title><link href="http://atodorov.org/blog/2013/08/04/exploring-blackberry-10-application-security-model/" rel="alternate"></link><updated>2013-08-04T00:02:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-04:blog/2013/08/04/exploring-blackberry-10-application-security-model/</id><summary type="html">&lt;p&gt;BlackBerry 10 OS application security model is enforced by two major components:
&lt;a href="https://developer.blackberry.com/native/documentation/bb10/com.qnx.doc.native_sdk.devguide/com.qnx.doc.native_sdk.devguide/topic/c_appfund_accessing_restricted_functionality.html"&gt;app permissions&lt;/a&gt;
and
&lt;a href="https://developer.blackberry.com/native/documentation/bb10/com.qnx.doc.native_sdk.devguide/com.qnx.doc.native_sdk.devguide/topic/accessible_folders.html"&gt;filesystem access privileges&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also it looks like that each app is assigned a separate group id. Below is a listing
of my currently installed apps as seen from &lt;code&gt;devuser&lt;/code&gt;. An application can't execute
another apps (e.g. exec) as far as I can see. Not possible with the shell app either.&lt;/p&gt;
&lt;p&gt;I think I will have to
bundle all command line tools together with a shell into a single app so the shell
is able to invoke any of the commands that are not system standard. I'm not liking this
very much!&lt;/p&gt;
&lt;p&gt;$HOME is inside the app space too :(. See my other post about 
&lt;a href="/blog/2013/08/05/exploring-blackberry-10-environment-variables/"&gt;environment variables&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/accounts/1000

&lt;span class="nv"&gt;$ &lt;/span&gt;ls -l appdata/ appserv/

appdata/:
total 552
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10143&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;25&lt;/span&gt; 16:22 com.BGmot.BGshellPlusFree.gYABgHVtFpaI1Xhiaw0hMuCbPNk
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10141&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;20&lt;/span&gt; 21:34 com.catikkas.jenkins10.gYABgOZDFJiaJUObnHnYGyedaJE
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10134&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;17&lt;/span&gt; 09:02 com.example.Chat_1.gYABgLTE22iUbVEQqMQWh1h8qGw
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10003&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;13&lt;/span&gt; 01:56 com.foursquare.blackberry.gYABgBY3zYaCRi7CDRw5ChZRJ18
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10004&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:26 com.linkedin.gYABgPilB6lwL6lsxmVwDOfmbO8
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10145&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;27&lt;/span&gt; 22:05 com.mappau.SystemInformation.gYABgPYOA670hrzAeZ.Eg91JZFU
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100051000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:04 com.rim.bb.app.adobeReader.gYABgAxBqJsMx5M..e.RfW5WpTU
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10006&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;13&lt;/span&gt; 00:06 com.rim.bb.app.facebook.gYABgDLo0nc9AhDgv2JAPixdyvQ
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10123&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;23&lt;/span&gt; 13:32 com.rim.bb.app.newsstand.gYABgIYcPYRGuuoXUB7e7VfgiaA
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10116&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;13&lt;/span&gt; 01:16 com.savvysaurus.RssSavvy.gYABgCcU_QDmZyIEIHfBoxukmi4
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100021000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:39 com.tcs.maps.gYABgCxm2rf5o5xfFP8dPCQnlJY
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10009&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:18 com.twitter.gYABgMxtkHoH6S4G1_Ff5yu0E.I
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10138&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;18&lt;/span&gt; 21:27 helex.NativeFlash.gYABgHc51xjJK7eHzYQIH2y6hxA
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      air_services      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 21:57 sys.airservices
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100131000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;13&lt;/span&gt; 02:24 sys.airtunes.gYABgCWWhIycHhiFjXeIyW1Qvpo
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10014&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:26 sys.android.gYABgKAOw1czN6neiAT72SGO.ns
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10015&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:26 sys.android.shell.gYABgCWpLq.7ipa6NFYT0JaLpt8
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10016&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 21:58 sys.appworld.gYABgNSvaLtte_snIx7wjRsOcyM
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10017&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 21:58 sys.bbm.gYABgLOJBR2Vz7FzS.kdgJchuag
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100001000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:24 sys.browser.gYABgJYFHAzbeFMPCCpYWBtHAm0
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10032&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:00 sys.calculator.gYABgJidBvuZ89m_1j4PV2712.A
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10034&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:14 sys.camera.gYABgAvGHb4h9H5WeWdjQhXgeRM
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10124&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;17&lt;/span&gt; 10:45 sys.cfs.box.gYABgJKe3gZus2hhkRPM4zcarBU
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10125&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;17&lt;/span&gt; 10:45 sys.cfs.dropbox.gYABgKi0Cs_hMocaoCB7UgqkaIU
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10126&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;15&lt;/span&gt; 14:25 sys.cfs.webdav.todtm.gYABgGnToZvN4bqMB3xslfel.KU
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10037&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;14&lt;/span&gt; 22:21 sys.chat.gYABgADt.JeweQYFvYX28P5bwu0
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10038&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:07 sys.clock.gYABgKNXug.mDFoFoYHLmJofAts
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10039&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:53 sys.compass.gYABgM06vW4QuahSmSW7eBlHxb4
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100101000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:59 sys.dxtg.launcher.gYABgHFqGG632tetjwVL_egrHHc
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100121000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:59 sys.dxtg.sstg.gYABgLhf.C6ER6tWA.ObKMKalQU
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100111000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Aug &lt;span class="m"&gt;01&lt;/span&gt; 22:55 sys.dxtg.stg.gYABgKF.gjTVTclxOrZ0RRQcoTc
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100871000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;15&lt;/span&gt; 00:40 sys.dxtg.wtg.gYABgKH0JhT7tasXrfXUyNxNaew
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100431000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;14&lt;/span&gt; 23:30 sys.filepicker.gYABgBUOB4WQ4V0f7gH0kMCrcVA
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10001&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 21:58 sys.firstlaunch.gYABgE1L_lY.sjW85E1SCBQsrco
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10044&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:53 sys.games.gYABgCM5htxnRwx8VmvFMD0Hbj4
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100451000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:05 sys.help.gYABgPG.Su8AzxaqqONbaanIprc
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      keyboard       &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 21:57 sys.keyboard
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100471000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;27&lt;/span&gt; 21:36 sys.mediaplayer.gYABgHtLSIC4bjdb005eaW5ixzU
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10049&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:00 sys.mmagic.gYABgGN_jnGTnVoC_K.mfaBq87g
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      nto            &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 21:57 sys.navigator
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100511000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:24 sys.notification_card.gYABgLyFNMkTny6ihJLjaG02jUU
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10052&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;17&lt;/span&gt; 10:38 sys.paymentsystem.gYABgPLIJa_bijh7gGqV5LuyCK4
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100531000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:03 sys.perimeterbrowser.gYABgMgpl40MVrFkZvPEXRuQTGE
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10054&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:01 sys.phone.gYABgB3m3BHdGLR4aicCyzCVsYQ
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10055&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;15&lt;/span&gt; 00:42 sys.phone_settings.gYABgP8tnMCm3UDXaovgTHoEZB4
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100561000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;15&lt;/span&gt; 21:08 sys.pictureeditor.gYABgIRm37_owYKt4P0uCEhSj.o
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100571000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:01 sys.pictures.gYABgFZ.pCiYHqciL1zClEPjmps
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100581000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;15&lt;/span&gt; 16:29 sys.picturesviewer.gYABgFKlvDBH.tdV7sGqIDZHnNY
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10033&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:10 sys.pim.calendar.gYABgG0xvpxP1jARa6DD5o.VL8A
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10059&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;16&lt;/span&gt; 09:15 sys.pim.calendar.viewer.eventcreate.gYABgBtmuosCGVI3YO1ImfFgbgY
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100601000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:26 sys.pim.calendar.viewer.ics.gYABgMsLIpp41sIscDzLSeRZuIQ
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10040&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:14 sys.pim.contacts.gYABgGsAOuzqCT1fu5Zx4sqrJdY
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100621000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:23 sys.pim.email.card.gYABgHLnJMGjgoIAsdeYM2JzUsU
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10063&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;13&lt;/span&gt; 01:49 sys.pim.email.composer.card.gYABgGkBKIp75QI99dsGTdrb5IE
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10064&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 21:58 sys.pim.messages.gYABgJ8jn83Ok_NEWYplPYozt5w
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10065&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:00 sys.pim.remember.gYABgF9PcqaN7GRKPlDPuqOyda0
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100671000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:03 sys.printoutstogo.gYABgPMP3nxNZlNieZUDetUiQio
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10068&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;13&lt;/span&gt; 13:26 sys.search.gYABgPp5WMkB_07CE6wzbflslRQ
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10069&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:02 sys.settings.gYABgFXZghhSmuJ6oBTACT1DwpQ
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10070&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:01 sys.setupbuffet.gYABgCbSxd9WrFvFV8sJDoI7tlE
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10071&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;16&lt;/span&gt; 09:18 sys.simtoolkit_ui_app.gYABgNsM_6zxbmp668bBbRexQiA
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10072&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 23:05 sys.smarttags.gYABgNvWPl0Fpbeva2LkhFplXYY
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10073&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:04 sys.socialconnect.facebook.gYABgPNVFtmlTnTGF_U0dFfTvgQ
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10074&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:26 sys.socialconnect.linkedin.gYABgCUcHQzQnN9ZnpyVppfXHEQ
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10075&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:18 sys.socialconnect.twitter.gYABgB2cPvkIcyPxzQPSK9Jx89U
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10079&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;23&lt;/span&gt; 13:27 sys.vad.gYABgJPtEgEJTVKTkyq7_BalYto
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;100811000&lt;/span&gt;      &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:37 sys.videoplayer.gYABgEydozZr9q.ClZkrItC9LMM
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10085&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 22:47 sys.weather.gYABgKOf0EhVEWtCxrbBQ00sPSg
drwxr-x---   &lt;span class="m"&gt;6&lt;/span&gt; apps      &lt;span class="m"&gt;10086&lt;/span&gt;          &lt;span class="m"&gt;4096&lt;/span&gt; Jul &lt;span class="m"&gt;12&lt;/span&gt; 21:58 sys.zbbiocm.gYABgDZcy0Sq5cvKqkoZgR3qJps

appserv/:
total 0
dr-xr-xr-x   &lt;span class="m"&gt;2&lt;/span&gt; root      nto               &lt;span class="m"&gt;0&lt;/span&gt; Aug &lt;span class="m"&gt;04&lt;/span&gt; 00:03 sys.cfs.box.gYABgJKe3gZus2hhkRPM4zcarBU
dr-xr-xr-x   &lt;span class="m"&gt;2&lt;/span&gt; root      nto               &lt;span class="m"&gt;0&lt;/span&gt; Aug &lt;span class="m"&gt;04&lt;/span&gt; 00:03 sys.cfs.dropbox.gYABgKi0Cs_hMocaoCB7UgqkaIU
dr-xr-xr-x   &lt;span class="m"&gt;2&lt;/span&gt; root      nto               &lt;span class="m"&gt;0&lt;/span&gt; Aug &lt;span class="m"&gt;04&lt;/span&gt; 00:03 sys.cfs.webdav.todtm.gYABgGnToZvN4bqMB3xslfel.KU
&lt;/pre&gt;&lt;/div&gt;</summary><category term="BlackBerry"></category></entry><entry><title>Quick Update: Laptop vs Smartphone Updated</title><link href="http://atodorov.org/blog/2013/08/03/quick-update-laptop-vs-smartphone-updated/" rel="alternate"></link><updated>2013-08-03T23:58:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-03:blog/2013/08/03/quick-update-laptop-vs-smartphone-updated/</id><summary type="html">&lt;p&gt;&lt;a href="/blog/2013/08/01/laptop-vs-smartphone-part-one/"&gt;Smartphone hardware requirements&lt;/a&gt;
updated with USB host mode requirement.&lt;/p&gt;</summary></entry><entry><title>Summer Hackathon in Sofia</title><link href="http://atodorov.org/blog/2013/08/02/summer-hackathon-in-sofia/" rel="alternate"></link><updated>2013-08-02T14:45:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-02:blog/2013/08/02/summer-hackathon-in-sofia/</id><summary type="html">&lt;p&gt;&lt;img src="/images/hackfmi/Logo_SummerHackFMI.png" alt="Summer HackFMI" style="display:block;clear:both" /&gt;&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://hackfmi.com/spontanen-leten-hachathon/"&gt;summer hackathon&lt;/a&gt;
will be held in Sofia between 16th and 22nd of August. The week prior to the
event (12th to 15th) will be full of lectures and workshops to prepare the students
for their task.&lt;/p&gt;
&lt;p&gt;The goal this time is to create a new system for the Student Council organization
which will host their new website and also provide more transparency into the 
organization and the work they do. The idea is initiated by the chairman of the
council which is quite surprising for me to hear. You can read his motivation
(in Bulgarian) &lt;a href="https://github.com/Hackfmi/SummerHackathon/blob/master/motivation.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the moment it is agreed that the system will be written in Python and Django
and this is where I join. Together with Kiril Vladimirov I will be leading the
Python/Django lecture and workshop in one of the days, likely 14th of August.&lt;/p&gt;
&lt;p&gt;The program is not yet finalized so I can't share more info. Please watch this
space for more details when they are available. &lt;/p&gt;</summary><category term="events"></category><category term="hackathon"></category><category term="hackfmi"></category></entry><entry><title>Laptop vs Smartphone, Part 1, Requirements</title><link href="http://atodorov.org/blog/2013/08/01/laptop-vs-smartphone-part-one/" rel="alternate"></link><updated>2013-08-01T21:02:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-01:blog/2013/08/01/laptop-vs-smartphone-part-one/</id><summary type="html">&lt;p&gt;As some of you may know or have heard I'm in the process of  ditching my 
&lt;a href="http://amzn.to/12y5hwp"&gt;Lenovo X220&lt;/a&gt; in favor of a smartphone. The ultimate
goal is to not need a personal computer at all and use only one device for
all my processing needs. Everything else can be conveniently migrated to
the cloud. The current favorite device is &lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt;
but that may change as I explore the smartphone world and my requirements.&lt;/p&gt;
&lt;p&gt;This is my list of requirements, mainly for my own reference but you are welcome
to comment and give me suggestions how to migrate.&lt;/p&gt;
&lt;h2&gt;Hardware&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;+-----------------------+--------------------+-------------------+-------------------+
| Requirement           | Lenovo X220        | BlackBerry Z10    | Notes             |
+-----------------------+--------------------+-------------------+-------------------+
| Network Connectivity  | RJ-45, Wi-Fi,      | Wi-Fi, 3G         |                   |
|                       | 3G (optional)      |                   |                   |
|                       | or USB modem       |                   |                   |
+-----------------------+--------------------+-------------------+-------------------+
| Battery Life          | 8 hrs idle, 9 cell | 13 days standby   | TBC               |
|                       | 5-6 hrs networking | 10 hrs talk (3G)  |                   |
+-----------------------+--------------------+-------------------+-------------------+
| Display Size          | 1366x768, 96 DPI   | 1280x768, 356 PPI |                   |
+-----------------------+--------------------+-------------------+-------------------+
| Sunlight Readable     | Very hard even at  | Yes, even at      | TBC               |
|                       | full brightness    | medium brightness |                   |
+-----------------------+--------------------+-------------------+-------------------+
| Weight                | around 1,5 kg      | 136g              |                   |
+-----------------------+--------------------+-------------------+-------------------+
| Docking Capability    | Integrated or USB  | unknown, N/A      | for desk usage    |
+-----------------------+--------------------+-------------------+-------------------+
| External video/audio  | VGA,  3,5mm jack   | Micro HDMI, 3,5mm | presentation mode |
+-----------------------+--------------------+-------------------+-------------------+
| External Connectivity | USB 2.0 and 3.0,   | micro USB 2.0,    |                   |
|                       | Bluetooth          | Bluetooth, NFC    |                   |
+-----------------------+--------------------+-------------------+-------------------+
| Storage               | 320GB, ~ 50G used  | 16GB internal     | TODO: speed test  |
|                       |                    | 32GB microSD      |                   |
+-----------------------+--------------------+-------------------+-------------------+
| RAM                   | 8GB                | 2GB               | TBC               |
|                       |                    | 1GB on Dev device |                   |
+-----------------------+--------------------+-------------------+-------------------+
| CPU virtualization    | Yes, full virt     | No                | loading other OS  |
|                       |                    |                   | ** critical       |
+-----------------------+--------------------+-------------------+-------------------+
| UPDATE 2013-08-03     | Yes                | No,               |** essential       |
| USB host mode         |                    | ETA 10.2 Aug 2013 |                   |
+-----------------------+--------------------+-------------------+-------------------+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I need a test for the battery life of a smartphone in use and while traveling
and connected to the Internet. Data shown is as given by manufacturer. Talking
from experience the 10 hrs talk time are roughly equivalent to 10 hrs of Internet
and apps usage. I have to charge my Z10 almost every day and I still don't use it
that actively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The displays of all recent smartphones are far better than notebooks. I can read
my phone outside but haven't actually tried a direct sunlight exposure. Will do this
and update with more info.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speed storage may be an issue, although I don't use storage intensive applications.
Will test this and report with more info.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RAM is a &lt;strong&gt;BIG&lt;/strong&gt; issue. Currently my desktop utilizes around 4GB but on x86_64
objects are bigger (Python objects are 4x compared to i386). I've previously used
an old Lenovo T60 with only 2GB of RAM and i386 environment. Didn't have any issues.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Z10 the memory is not utilized in the best fashion. Something is eating away
RAM and I'm left with around 150MB of free memory after some phone use. For one
&lt;code&gt;/tmp&lt;/code&gt; is mounted directly into RAM and some apps are misbehaving. I've seen a low
cost Android tablets and phones running with 512MB of RAM. Need to investigate more.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Virtualization and most importantly USB pass-through is a critical issue. I have
a proprietary smart-card electronic signature device which needs to continue working.
I have no problems running a cloud instance but haven't figured out how to do USB
pass-through between local hardware and cloud instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;UPDATE 2013-08-03&lt;/strong&gt;: USB host mode is essential for some docking hardware. This means that the phone
will be able to connect to external USB devices such as USB drives or cameras.
For more info read
&lt;a href="http://forums.crackberry.com/news-rumors-f40/usb-host-mode-806937/"&gt;here&lt;/a&gt; and
&lt;a href="https://developer.blackberry.com/native/download/roadmap/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Software&lt;/h2&gt;
&lt;p&gt;Here things get hairy as I use quite a lot of software.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Linux&lt;/span&gt; &lt;span class="nx"&gt;Software&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;BlackBerry&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="nx"&gt;OS&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Notes&lt;/span&gt;                                          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;UPDATE&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Built&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;check&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;BB&lt;/span&gt; &lt;span class="nx"&gt;encryption&lt;/span&gt; &lt;span class="nx"&gt;meets&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;LUKS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;disk&lt;/span&gt; &lt;span class="nx"&gt;encryption&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;enterprise&lt;/span&gt; &lt;span class="nx"&gt;requirements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;                       &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Bash&lt;/span&gt; &lt;span class="nx"&gt;shell&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;v5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;2.14&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;13.2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;no&lt;/span&gt; &lt;span class="nx"&gt;idea&lt;/span&gt; &lt;span class="nx"&gt;how&lt;/span&gt; &lt;span class="nx"&gt;compatible&lt;/span&gt; &lt;span class="nx"&gt;PD&lt;/span&gt; &lt;span class="nx"&gt;KSH&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                      &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;serious&lt;/span&gt; &lt;span class="nx"&gt;scripting&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt; &lt;span class="nx"&gt;Bash&lt;/span&gt; &lt;span class="nx"&gt;anyway&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;GNU&lt;/span&gt; &lt;span class="nx"&gt;Coreutils&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Some&lt;/span&gt; &lt;span class="nx"&gt;tools&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;present&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                      &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;No&lt;/span&gt; &lt;span class="nx"&gt;idea&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;GNU&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;implementation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;BSD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;OpenSSH&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;some&lt;/span&gt; &lt;span class="nx"&gt;apps&lt;/span&gt; &lt;span class="nx"&gt;available&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="nx"&gt;UX&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Serial&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;several&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mostly&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;access&lt;/span&gt; &lt;span class="nx"&gt;tools&lt;/span&gt;         &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nx"&gt;conserver&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;                            &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Kerberos&lt;/span&gt; &lt;span class="nx"&gt;tools&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Internal&lt;/span&gt; &lt;span class="nx"&gt;apps&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;authenticate&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;Kerberos&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Cisco&lt;/span&gt; &lt;span class="nx"&gt;VPN&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Built&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Several&lt;/span&gt; &lt;span class="nx"&gt;GW&lt;/span&gt; &lt;span class="nx"&gt;types&lt;/span&gt; &lt;span class="nx"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Not&lt;/span&gt; &lt;span class="nx"&gt;tested&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;OpenVPN&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="nx"&gt;AFAIK&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;                                                &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.6&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.7&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="mf"&gt;3.2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nx"&gt;devuser&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="nx"&gt;has&lt;/span&gt; &lt;span class="nx"&gt;no&lt;/span&gt; &lt;span class="nx"&gt;permissions&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="nx"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.7&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Ruby&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Mostly&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;cloud&lt;/span&gt; &lt;span class="nx"&gt;related&lt;/span&gt; &lt;span class="nx"&gt;mgmt&lt;/span&gt; &lt;span class="nx"&gt;commands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Firefox&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;built&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;Browser&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Missing&lt;/span&gt; &lt;span class="nx"&gt;plugins&lt;/span&gt; &lt;span class="nx"&gt;functionality&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Thunderbird&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;BlackBerry&lt;/span&gt; &lt;span class="nx"&gt;Hub&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Messaging&lt;/span&gt; &lt;span class="nx"&gt;experience&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;BB&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;quite&lt;/span&gt; &lt;span class="nx"&gt;cool&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;RSS&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;RSS&lt;/span&gt; &lt;span class="nx"&gt;Savvy&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;missing&lt;/span&gt; &lt;span class="nx"&gt;multiple&lt;/span&gt; &lt;span class="nx"&gt;sender&lt;/span&gt; &lt;span class="nx"&gt;addresses&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;RSS&lt;/span&gt; &lt;span class="nx"&gt;does&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                      &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;integrate&lt;/span&gt; &lt;span class="nx"&gt;into&lt;/span&gt; &lt;span class="nx"&gt;BB&lt;/span&gt; &lt;span class="nx"&gt;Hub&lt;/span&gt;                      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Social&lt;/span&gt; &lt;span class="nx"&gt;Networks&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Stand&lt;/span&gt; &lt;span class="nx"&gt;alone&lt;/span&gt; &lt;span class="nx"&gt;apps&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Integrate&lt;/span&gt; &lt;span class="nx"&gt;well&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;BlackBerry&lt;/span&gt; &lt;span class="nx"&gt;Hub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Rhythmbox&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;built&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;player&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Not&lt;/span&gt; &lt;span class="nx"&gt;tested&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;bookmark&lt;/span&gt; &lt;span class="nx"&gt;online&lt;/span&gt; &lt;span class="nx"&gt;radio&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Totem&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;stations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;                                      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Totem&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;built&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;player&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Works&lt;/span&gt; &lt;span class="nx"&gt;fine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;already&lt;/span&gt; &lt;span class="nx"&gt;watched&lt;/span&gt; &lt;span class="nx"&gt;MPEG&lt;/span&gt; &lt;span class="nx"&gt;v4&lt;/span&gt; &lt;span class="nx"&gt;videos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Transmission&lt;/span&gt;         &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;No&lt;/span&gt; &lt;span class="nx"&gt;bittorrent&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="nx"&gt;apps&lt;/span&gt; &lt;span class="nx"&gt;available&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                      &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;BB&lt;/span&gt; &lt;span class="nx"&gt;fork&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;Transmission&lt;/span&gt; &lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;GitHub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Evince&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PDF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Adobe&lt;/span&gt; &lt;span class="nx"&gt;Reader&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Not&lt;/span&gt; &lt;span class="nx"&gt;tested&lt;/span&gt; &lt;span class="nx"&gt;yet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;                                &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;                    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Kindle&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;eBook&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Android&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Works&lt;/span&gt; &lt;span class="nx"&gt;fine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Libre&lt;/span&gt; &lt;span class="nx"&gt;Office&lt;/span&gt;         &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Docs&lt;/span&gt; &lt;span class="nx"&gt;To&lt;/span&gt; &lt;span class="nx"&gt;Go&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;MS&lt;/span&gt; &lt;span class="nx"&gt;office&lt;/span&gt; &lt;span class="nx"&gt;compatible&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;displays&lt;/span&gt; &lt;span class="nx"&gt;presentations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                      &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;limited&lt;/span&gt; &lt;span class="nx"&gt;editing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mostly&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;only&lt;/span&gt; &lt;span class="nx"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;Editor&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Several&lt;/span&gt;             &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;None&lt;/span&gt; &lt;span class="nx"&gt;tested&lt;/span&gt; &lt;span class="nx"&gt;yet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;                               &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Purple&lt;/span&gt;               &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Yaairc&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt; &lt;span class="nx"&gt;IRC&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;XMPP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Gtalk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;mostly&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Dodo&lt;/span&gt; &lt;span class="nx"&gt;seems&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Dodo&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;some&lt;/span&gt; &lt;span class="nx"&gt;issues&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;can&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="nx"&gt;receive&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Twinkle&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;SIP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Several&lt;/span&gt; &lt;span class="nx"&gt;available&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;tested&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;GIMP&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="nx"&gt;cropping&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;resizing&lt;/span&gt; &lt;span class="nx"&gt;mostly&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Inkscape&lt;/span&gt;             &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Simple&lt;/span&gt; &lt;span class="nx"&gt;drawings&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;graphics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;                  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;CUPS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;printing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Should&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;able&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;print&lt;/span&gt; &lt;span class="nx"&gt;stuff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;xSane&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scanner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Documents&lt;/span&gt; &lt;span class="nx"&gt;scanning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;can&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nx"&gt;pictures&lt;/span&gt; &lt;span class="nx"&gt;too&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+----------------------+---------------------+------------------------------------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I will describe my software use cases in details in a later update. Most important of all is
a nice text editor to write code and text (mainly this blog) and the shell tools.&lt;/p&gt;
&lt;h2&gt;Roll-out Plan&lt;/h2&gt;
&lt;p&gt;To make things easier I will first transition entertainment and personal
activities and later work related ones. &lt;/p&gt;
&lt;p&gt;In the next few days I will start
by exploring all the hardware requirements first and update this blog with
some of the findings. Along with this I will share the personal activities
progress.&lt;/p&gt;</summary><category term="BlackBerry"></category></entry><entry><title>Why Taking Orders By Phone Works for My Start-up</title><link href="http://atodorov.org/blog/2013/08/01/why-taking-orders-by-phone-works-for-my-start-up/" rel="alternate"></link><updated>2013-08-01T09:48:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-08-01:blog/2013/08/01/why-taking-orders-by-phone-works-for-my-start-up/</id><summary type="html">&lt;p&gt;Yesterday I've
&lt;a href="/blog/2013/07/31/how-i-created-a-website-in-two-days-without-coding/"&gt;mentioned&lt;/a&gt;
a start-up project called
&lt;a href="http://obuvki41plus.com"&gt;obuvki41plus.com&lt;/a&gt; and that it accepts phone orders
instead of online electronic orders like everyone else. I will tell you why.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/phone_order.jpg" alt="Taking phone orders" style="clear:both;display:block;" /&gt;
&lt;em&gt;Image CC-BY &lt;a href="http://www.flickr.com/photos/southernfoodwaysalliance/3291060837/"&gt;Southern Foodways Alliance&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://obuvki41plus.com/"&gt;obuvki41plus.com&lt;/a&gt; is a
re-seller business my spouse runs. It specializes in large size, elegant
ladies shoes - Europe size 41 plus, which are hard to find in Bulgaria.
There is a shopping cart component on the website which at the end redirects to
a simple page with instructions how to order via phone. Why not online
orders like everyone else? Several reasons!&lt;/p&gt;
&lt;p&gt;The business target group is very limited - women who wear large shoe size
and like the proposed shoe style and can afford the higher price (quality shoes
only, sorry). On top of
that the business model is &lt;strong&gt;online only&lt;/strong&gt;. The rule of thumb is to &lt;strong&gt;make
everything possible to lower barrier to entry for customers&lt;/strong&gt;!
Also don't make our lives harder in doing so.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Phone ordering is the easiest way for customers in Bulgaria.
I myself often prefer it because of the too many steps and too many fields
to fill-in when ordering online. The reality is that most local websites
are horribly made with respect to user experience and many users are not
that fluent with Internet as it may seem. No need to get people frustrated
if they are about to spend their money with you!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Phone ordering, especially in the early business stage lets you know
your customers. This is invaluable feedback for you as the owner and you
can't get that from an online ordering system. It just doesn't work,
I've tried!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A phone ordering system is just so easy to implement. Later that can
be scaled with some automated IVR system and a call center; Or just
migrate it to online ordering system;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The website in question is supposed to be no-maintenance as much
as possible. It is static HTML and no database at all. Introducing
online ordering is just too much of a technological overhead in this case;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Last but probably most important is customer care - not only we want to
make it easy for them to order but want to prevent frequent returns
caused by wrong product expectations or incorrect size. After all shoes
need to be tried first.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So to summarize - the orders are taken in person via phone
including objection handling and questions answering. An order may consist
of up to 3 pairs of shoes which are shipped to the customer with the option
to try them out upon delivery! Buy all or just a pair - it's a customer call!
Small return fee is imposed to prevent abuse!&lt;/p&gt;
&lt;p&gt;For that kind of business this seems to be the best solution so far.
I'd love to hear other owners experience and decision logic. Please use
the comments to tell us how you've organized the sales/ordering/delivery
process in your company and why so. Thanks!&lt;/p&gt;</summary><category term="start-up"></category></entry><entry><title>How I Created a Website In Two Days Without Coding</title><link href="http://atodorov.org/blog/2013/07/31/how-i-created-a-website-in-two-days-without-coding/" rel="alternate"></link><updated>2013-07-31T21:55:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-31:blog/2013/07/31/how-i-created-a-website-in-two-days-without-coding/</id><summary type="html">&lt;p&gt;&lt;img alt="header image" src="/images/logos/obuvki41plus_header.png" title="header image" /&gt;&lt;/p&gt;
&lt;p&gt;This is a simple story about a website I helped create without using any
programming at all. It took me two days because of the images and the logo
design which I've commissioned to a friend.&lt;/p&gt;
&lt;p&gt;The website is &lt;a href="http://obuvki41plus.com/"&gt;obuvki41plus.com&lt;/a&gt; which is a
re-seller business my spouse runs. It specializes in large size, elegant
ladies shoes - Europe size 41 plus (hard to find in Bulgaria),
hence the name.&lt;/p&gt;
&lt;h2&gt;Required Functionality&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Display a catalog of items for sale with detailed information about
each item;&lt;/li&gt;
&lt;li&gt;Make it possible for people to comment and share the items;&lt;/li&gt;
&lt;li&gt;Very basic shopping cart which stores the selected items and then
redirects to a page with order instructions. Actual order is made via
phone for several reasons which I will explain in
&lt;a href="/blog/2013/08/01/why-taking-orders-by-phone-works-for-my-start-up/"&gt;another post&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Add a feedback/contact form;&lt;/li&gt;
&lt;li&gt;Look nice on mobile devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Technology&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The website is static, all pages are simple HTML and is hosted in
Amazon S3;&lt;/li&gt;
&lt;li&gt;Comments are provided by Facebook's
&lt;a href="https://developers.facebook.com/docs/reference/plugins/comments/"&gt;Comments Box&lt;/a&gt;
plug-in;&lt;/li&gt;
&lt;li&gt;Social media buttons and tracking are provided by
&lt;a href="https://www.addthis.com/"&gt;AddThis&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Visitors analytics is standard and is from
&lt;a href="http://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Template is from &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; with slight
modifications; Works on mobile too;&lt;/li&gt;
&lt;li&gt;Logo is custom designed by my friend
&lt;a href="https://www.facebook.com/aluinpoli"&gt;Polina Valerieva&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Feedback/contact form is by &lt;a href="https://www.uservoice.com/"&gt;UserVoice&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Shopping cart is by &lt;a href="http://simplecartjs.org/"&gt;simpleCart(js)&lt;/a&gt;.
I've created a simple animation effect when pressing the "ADD TO CART"
link to visually alert the user. This is done with jQuery.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I could have used some JavaScript templating engine like
&lt;a href="http://handlebarsjs.com/"&gt;Handlebars&lt;/a&gt; but at the time I didn't know about
it and I prefer not to write JavaScript if possible :).&lt;/p&gt;
&lt;h2&gt;Colophon&lt;/h2&gt;
&lt;p&gt;I did some coding after the initial release eventually. 
I've transformed the website to a Django
based site which is exported as static HTML. &lt;/p&gt;
&lt;p&gt;This helps me with faster deployment/management as everything is stored
in git, allows templates inheritance and also makes the site ready to
add more functionality if required.&lt;/p&gt;</summary><category term="Amazon"></category><category term="S3"></category></entry><entry><title>UI Bug for OpenSource.com</title><link href="http://atodorov.org/blog/2013/07/31/ui-bug-for-opensource-dot-com/" rel="alternate"></link><updated>2013-07-31T21:39:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-31:blog/2013/07/31/ui-bug-for-opensource-dot-com/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;UI bug&amp;quot;" src="/images/opensource.com_ui_bug.png" title="UI bug" /&gt;&lt;/p&gt;
&lt;p&gt;A simple bug with the Facebook like and share widget. Looks familiar? 
Indeed it is! &lt;a href="http://sofiavalley.com"&gt;SofiaValley&lt;/a&gt; had the
&lt;a href="/blog/2013/06/02/sofiavalley-ui-bug/"&gt;same bug&lt;/a&gt; 2 months ago.&lt;/p&gt;
&lt;p&gt;Already reported and hopefully they fix it.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>What Runs Your Start-up - Imagga</title><link href="http://atodorov.org/blog/2013/07/29/what-runs-your-startup-imagga/" rel="alternate"></link><updated>2013-07-29T12:32:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-29:blog/2013/07/29/what-runs-your-startup-imagga/</id><summary type="html">&lt;p&gt;&lt;img src="/images/startup/imagga.png" alt="Imagga" style="float:left; margin-right:10px;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://imagga.com/"&gt;Imagga&lt;/a&gt; is a cloud platform that helps businesses and 
individuals organize their images in a fast and cost-effective way. They 
develop a range of advanced proprietary image recognition and image processing
technologies, which are built into several services such as smart image
cropping, color extraction and multi-color search, visual similarity search and
auto-tagging.&lt;/p&gt;
&lt;p&gt;During 
&lt;a href="/blog/2013/05/23/balkan-venture-forum-sofia-post-mortem/"&gt;Balkan Venture Forum&lt;/a&gt;
in Sofia I sat down with Georgi Kadrev to talk about technology.
Surprisingly this hi-tech service is built on top of standard low-tech components
and lots of hard work.&lt;/p&gt;
&lt;h2&gt;Main Technologies&lt;/h2&gt;
&lt;p&gt;Core functionality is developed in C and C++ with the OpenCV library. 
Imagga relies heavily on own image processing algorithms for their core
features. These were built as a combination of their own research activities
and publications from other researchers.&lt;/p&gt;
&lt;p&gt;Image processing is executed by worker nodes configured with their own
software stack. Nodes are distributed among Amazon EC2 and other data centers.&lt;/p&gt;
&lt;p&gt;Client libraries to access Imagga API are available in PHP, Ruby and Java.&lt;/p&gt;
&lt;p&gt;Imagga has built several websites to showcase their technology.
&lt;a href="http://cropp.me/"&gt;Cropp.me&lt;/a&gt;, &lt;a href="http://colorslike.me/"&gt;ColorsLike.me&lt;/a&gt;,
&lt;a href="http://www.stockpodium.com"&gt;StockPodium&lt;/a&gt; and &lt;a href="http://autotag.me/"&gt;AutoTag.me&lt;/a&gt;
were built with PHP, JavaScript and jQuery above a standard LAMP stack.&lt;/p&gt;
&lt;p&gt;Recently Imagga also started using GPU computing with nVidia Tesla cards.
They use C++ and Python bindings for
&lt;a href="https://developer.nvidia.com/what-cuda"&gt;CUDA&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Why Not Something Else?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;As an initially bootstrapping start-up we chose something that is basically free,
reliable and popular - that's why started with the LAMP stack. It proved to be
stable and convenient for our web needs and we preserved it.
The use of C++ is a natural choice for computational intensive tasks that we
need to perform for the purpose of our core expertise - image processing. 
Though we initially wrote the whole core technology code from scratch, we later
switched to OpenCV for some of the building blocks as it is very well optimized
and continuously extended image processing library.&lt;/p&gt;
&lt;p&gt;With the raise of affordable high-performance GPU processors and their availability
in server instances, we decided it's time to take advantage of this highly parallel
architecture, perfectly suitable for image processing tasks.&lt;/p&gt;
&lt;p&gt;Georgi Kadrev&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Want More Info?&lt;/h2&gt;
&lt;p&gt;If you’d like to hear more from Imagga please comment below.
I will ask them to follow this thread and reply to your questions.&lt;/p&gt;</summary><category term="what runs"></category><category term="start-up"></category><category term="Amazon"></category><category term="EC2"></category></entry><entry><title>What Runs Your Start-up - RETiDoc</title><link href="http://atodorov.org/blog/2013/07/29/what-runs-your-startup-retidoc/" rel="alternate"></link><updated>2013-07-29T12:13:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-29:blog/2013/07/29/what-runs-your-startup-retidoc/</id><summary type="html">&lt;p&gt;&lt;img src="/images/startup/retidoc.gif" alt="RETiDoc" style="float:left; margin-right: 15px;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://retidoc.com/"&gt;RETiDoc&lt;/a&gt; automates personal ID data entry, speeding up
customer service and eliminating costly errors. The product is based on OCR
algorithms and could be used on hardware devices scanning the ID card or
through a compact scanner box specially designed for the need. The main problem
tackled by RETiDoc is manual data entry at service providers, 
which is a time consuming, low-customer satisfaction process, filled with
expensive typos and low productivity at provider’s front offices.&lt;/p&gt;
&lt;p&gt;Co-founder Martin Kulov takes us behind the scenes.&lt;/p&gt;
&lt;h2&gt;Main Technologies&lt;/h2&gt;
&lt;p&gt;RETiDoc is the second start-up featured on this blog to rely heavily on
Microsoft technologies. Software development is done in C# using
Visual Studio and &lt;a href="https://tfs.visualstudio.com/"&gt;Team Foundation Service&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Microsoft Test Manager is used to organize the test process!&lt;/p&gt;
&lt;h2&gt;Why Not Something Else?&lt;/h2&gt;
&lt;p&gt;Unfortunately this section is missing. The original format of this blog
is for the start-up founders or head of IT to tell the readers what factors
led to selection of the named technologies. RETiDoc team is busy at the moment,
working on their product launch and don't have the time to fill-in the details.&lt;/p&gt;
&lt;p&gt;Hopefully they will do so in the future.&lt;/p&gt;
&lt;h2&gt;Want More Info?&lt;/h2&gt;
&lt;p&gt;If you’d like to hear more from &lt;em&gt;RETiDoc&lt;/em&gt; please comment below.&lt;/p&gt;</summary><category term="what runs"></category><category term="start-up"></category><category term="Microsoft"></category></entry><entry><title>Text To Speech for Bulgarian</title><link href="http://atodorov.org/blog/2013/07/20/text-to-speech-for-bulgarian/" rel="alternate"></link><updated>2013-07-20T14:06:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-20:blog/2013/07/20/text-to-speech-for-bulgarian/</id><summary type="html">&lt;p&gt;I've been exploring text-to-speech synthesizers for Bulgarian in the past
few weeks. I found only three. Here is my review and opinion about
two competitive companies, one of which lost me as a client.&lt;/p&gt;
&lt;h2&gt;eSpeak&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://espeak.sourceforge.net/"&gt;eSpeak&lt;/a&gt; is a compact open source software
speech synthesizer for English and other languages, for Linux and Windows.&lt;/p&gt;
&lt;p&gt;I'm using espeak-1.47.11-1, from Fedora - the src.rpm rebuilt on Red Hat
Enterprise Linux 6. Earlier versions do not support Bulgarian.&lt;/p&gt;
&lt;p&gt;There is only one available voice for Bulgarian, which seems to have reasonably
good pronunciation. There are some errors though, it's not perfect. The voice
however is horrible. It's the worst computer generated voice of all solutions
I've found so far. &lt;/p&gt;
&lt;p&gt;Good for initial testing since it requires virtually no setup and can be used
from the command line.&lt;/p&gt;
&lt;h2&gt;SpeechLab 2.0&lt;/h2&gt;
&lt;p&gt;SpeechLab is developed by the
&lt;a href="http://www.bacl.org/speechlab.html"&gt;Bulgarian Association for Computational Linguistics&lt;/a&gt;.
There's a sample of only one voice but I was told others can be added as well. Not sure about that.&lt;/p&gt;
&lt;p&gt;Listening to &lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=4s2UgwYgbkM"&gt;the sample&lt;/a&gt;
I think this is the most correct synthesizer of all. The voice still sounds computerized
but better compared to eSpeak. The same voice is used by local TV channels when showing
news related to &lt;a href="https://en.wikipedia.org/wiki/Anonymous_%28group%29"&gt;Anonymous&lt;/a&gt; and
one could probably say it will be accepted by the general public if used into
a software product.&lt;/p&gt;
&lt;p&gt;BACL has transferred the sales rights to a company called
&lt;a href="http://aquasyst-eco.com/speechlab_2_0_server.html"&gt;Aquasyst-Eco&lt;/a&gt; which claims to have
a desktop and a server product. The server version is supposed to work on Linux too.
There is also a &lt;a href="http://slideme.org/application/speechlab-2-0"&gt;version for Android&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Initially I thought to use SpeechLab but BACL and the trading vendor didn't make it
easy on me. There's virtually no documentation, all links to samples from the
official product pages are broken, they didn't reply to any of my emails
nor phone calls. &lt;/p&gt;
&lt;p&gt;As much as I prefer working/using locally developed products (not only software)
I will never use SpeechLab because its creators don't give a fuck about customers.
Why should I give a fuck about the product then? &lt;/p&gt;
&lt;h2&gt;Innoetics' SpeakVolumes&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.innoetics.com"&gt;Innoetics&lt;/a&gt; is a Greek company, a spin-off of the
Institute of Language &amp;amp; Speech Processing (ILSP) of ‘Athena’ Research Centre.
Something like BACL I suppose but a bit more commercially oriented. &lt;/p&gt;
&lt;p&gt;Initially I though to use their TTS Batch product to produce audio samples
and asked for a demo. They were very quick in their response and gave me
an FTP download of the software, plus demo activation key and documentation. 
Via email they've sent me tons of info plus pricing and additional proposals.
I didn't even try this demo because it runs on Windows which I don't have.&lt;/p&gt;
&lt;p&gt;It turned out Innoetics has built the &lt;a href="http://www.speakvolumes.eu/"&gt;SpeakVolumes&lt;/a&gt;
web service which has two modes of operation - on-the-fly audio generation 
using a SOAP based API and offline generation via the web site.
Pricing for SpeakVolumes (per words) was much more competitive than their Windows products
for my use case.&lt;/p&gt;
&lt;p&gt;I've created an account at SpeakVolumes and they've bumped up my initial words
credit so I can give it a try. Works like a charm. &lt;/p&gt;
&lt;p&gt;There is only one voice for Bulgarian called Irina
(&lt;a href="http://www.innoetics.com/media/tts_irinademo_bg.mp3"&gt;sample&lt;/a&gt;).
The voice is very soft, female voice, speaks slower compared to eSpeak
and SpeechLab and sounds very natural. It makes a few mistakes but
from a 250 words sample that I used only a couple were pronounced with
minor mistakes.&lt;/p&gt;
&lt;p&gt;The web service generates a Base64 encoded MP3 file and returns it as
response to the client.
&lt;a href="https://gist.github.com/atodorov/6044724"&gt;See example Python script here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The fact that Innoetics involved with me very quickly and provided me with
demo accounts and all sorts of information about their products and the
web API makes SpeakVolumes my choice for Text-To-Speech conversion for Bulgarian.&lt;/p&gt;
&lt;h2&gt;Ivona&lt;/h2&gt;
&lt;p&gt;Andre Polykanine from the eSpeak mailing list told me about
&lt;a href="http://www.ivona.com/en/"&gt;Ivona&lt;/a&gt;. It is a Polish company and seems to 
have been acquired by Amazon now. Andre told me Ivona had planned Bulgarian
support some time ago, but now rejected it for some reason. They didn't
reply to my email though. &lt;/p&gt;
&lt;p&gt;Have you seen other text-to-speech synthesizers for Bulgarian? Let me know
what are they and if you have tried them out.&lt;/p&gt;</summary><category term="start-up"></category></entry><entry><title>SSH from Linux to BlackBerry Z10</title><link href="http://atodorov.org/blog/2013/07/19/ssh-from-linux-to-blackberry-z10/" rel="alternate"></link><updated>2013-07-19T23:31:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-19:blog/2013/07/19/ssh-from-linux-to-blackberry-z10/</id><summary type="html">&lt;p&gt;You can SSH into a &lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt; device even on Linux.
I'm using Red Hat Enterprise Linux 6 and here is how to establish the connection.&lt;/p&gt;
&lt;p&gt;1) &lt;a href="/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/"&gt;Enable USB networking&lt;/a&gt;
between your Linux desktop and the Z10;&lt;/p&gt;
&lt;p&gt;2) Install the &lt;a href="https://developer.blackberry.com/develop/platform_choice/ndk.html"&gt;Momentics IDE&lt;/a&gt;.
You need it to create debug tokens and to start the SSH daemon on the device;&lt;/p&gt;
&lt;p&gt;3) Obtain &lt;a href="https://www.blackberry.com/SignedKeys/codesigning.html"&gt;signing keys&lt;/a&gt;
and create a debug token by following the wizard in the IDE.
I just started a new project and followed the instructions;&lt;/p&gt;
&lt;p&gt;4) Install debug token on device using the IDE. From &lt;code&gt;Window -&amp;gt; Preferences&lt;/code&gt; select
&lt;code&gt;Blackberry -&amp;gt; Signing&lt;/code&gt;. Just create and deploy the debug token on the device. Mine was
automatically discovered so I just had to follow the prompts;&lt;/p&gt;
&lt;p&gt;5) Reboot and re-enable development mode (I'm not sure if this was necessary);&lt;/p&gt;
&lt;p&gt;6) Generate a &lt;strong&gt;4096 bit&lt;/strong&gt; key for SSH. Smaller keys won't work. You can use your
current key if it is 4096 bit;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -t rsa -b 4096
Generating public/private rsa key pair.
Enter file in which to save the key &lt;span class="o"&gt;(&lt;/span&gt;/home/atodorov/.ssh/id_rsa&lt;span class="o"&gt;)&lt;/span&gt;: /home/atodorov/.rim/testKey_4096_rsa
/home/atodorov/.rim/testKey_4096_rsa already exists.
Overwrite &lt;span class="o"&gt;(&lt;/span&gt;y/n&lt;span class="o"&gt;)&lt;/span&gt;? y
Enter passphrase &lt;span class="o"&gt;(&lt;/span&gt;empty &lt;span class="k"&gt;for&lt;/span&gt; no passphrase&lt;span class="o"&gt;)&lt;/span&gt;:
Enter same passphrase again:
Your identification has been saved in /home/atodorov/.rim/testKey_4096_rsa.
Your public key has been saved in /home/atodorov/.rim/testKey_4096_rsa.pub.
The key fingerprint is:
77:73:55:03:e1:fc:5b:df:a6:e9:2c:b4:d4:1e:0c:b2 atodorov@redbull.mini
The key&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s randomart image is:
+--&lt;span class="o"&gt;[&lt;/span&gt; RSA 4096&lt;span class="o"&gt;]&lt;/span&gt;----+
&lt;span class="p"&gt;|&lt;/span&gt;             oo..&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;            o   o&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;             o  .&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;          . . .. &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;        S .oo+...&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;         .E.oo+ &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;           o o o+&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;            o..+ &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;             &lt;span class="nv"&gt;o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
+-----------------+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;7) Update key permissions, since ssh complains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ chmod 600 ~/.rim/testKey_4096_rsa.pub
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;8) By default SSH is not listening on your BlackBerry. Use the &lt;code&gt;blackberry-connect&lt;/code&gt;
command to start the SSH daemon on the device. It will upload your public SSH key
to the device and start the SSH daemon on the other side. &lt;code&gt;password&lt;/code&gt; is your device
password;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/home/atodorov/bbndk/host_10_1_0_231/linux/x86/usr/bin

&lt;span class="nv"&gt;$ &lt;/span&gt;./blackberry-connect 169.254.0.1 -password &lt;span class="m"&gt;123456&lt;/span&gt; -sshPublicKey ~/.rim/testKey_4096_rsa.pub
Info: Connecting to target 169.254.0.1:4455
Info: Authenticating with target 169.254.0.1:4455
Info: Encryption parameters verified
Info: Authenticating with target credentials.
Info: Successfully authenticated with target credentials.
Info: Sending ssh key to target 169.254.0.1:4455
Info: ssh key successfully transferred.
Info: Successfully connected. This application must remain running in order to use debug tools. Exiting the application will terminate this connection.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;9) Check if SSH is running on the device&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nmap 169.254.0.1

Starting Nmap 5.51 &lt;span class="o"&gt;(&lt;/span&gt; http://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2013-07-18 10:19 EEST
Stats: 0:00:01 elapsed&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; hosts completed &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; up&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;1&lt;/span&gt; undergoing Connect Scan
Connect Scan Timing: About 14.30% &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; ETC: 10:20 &lt;span class="o"&gt;(&lt;/span&gt;0:00:06 remaining&lt;span class="o"&gt;)&lt;/span&gt;
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; 169.254.0.1
Host is up &lt;span class="o"&gt;(&lt;/span&gt;0.00097s latency&lt;span class="o"&gt;)&lt;/span&gt;.
Not shown: &lt;span class="m"&gt;991&lt;/span&gt; closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
139/tcp  open  netbios-ssn
443/tcp  open  https
445/tcp  open  microsoft-ds
1111/tcp open  lmsocialserver
5555/tcp open  freeciv
8000/tcp open  http-alt
8443/tcp open  https-alt

Nmap &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="m"&gt;1&lt;/span&gt; IP address &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; host up&lt;span class="o"&gt;)&lt;/span&gt; scanned in 12.47 seconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;10)  Use SSH with the specified key to connect to the Z10. Username is &lt;code&gt;devuser&lt;/code&gt;.
Here's a simple session:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -i ~/.rim/testKey_4096_rsa devuser@169.254.0.1
&lt;span class="nv"&gt;$ &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
/accounts/devuser
&lt;span class="nv"&gt;$ &lt;/span&gt;uname -a 
QNX atodorovZ10 8.0.0 2013/05/02-08:42:48EDT OMAP4470_ES1.0_HS_London_Rev:08 armle
&lt;span class="nv"&gt;$ &lt;/span&gt;date
Fri Jul &lt;span class="m"&gt;19&lt;/span&gt; 23:39:19 EEST 2013
&lt;span class="nv"&gt;$ &lt;/span&gt;ifconfig 
lo0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8049&amp;lt;UP,LOOPBACK,RUNNING,MULTICAST&amp;gt; mtu 33192
    inet 127.0.0.1 netmask 0xff000000
    inet6 ::1 prefixlen 128
    inet6 fe80::1%lo0 prefixlen &lt;span class="m"&gt;64&lt;/span&gt; scopeid 0x1
tiw_drv0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
tiw_sta0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;40008c43&amp;lt;UP,BROADCAST,RUNNING,OACTIVE,SIMPLEX,MULTICAST,ACCEPTRTADV&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
    inet 192.168.0.100 netmask 0xffffff00 broadcast 192.168.0.255
    inet6 fe80::1e69:a5ff:fed0:10cd%tiw_sta0 prefixlen &lt;span class="m"&gt;64&lt;/span&gt; scopeid 0x12
tiw_p2pdev0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
tiw_p2pgrp0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
tiw_ibss0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8c02&amp;lt;BROADCAST,OACTIVE,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1c:69:a5:d0:10:cd
pflog0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; mtu 33192
lo2: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8048&amp;lt;LOOPBACK,RUNNING,MULTICAST&amp;gt; mtu 33192
cellular0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
cellular1: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
cellular2: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
cellular3: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
cellular4: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8810&amp;lt;POINTOPOINT,SIMPLEX,MULTICAST&amp;gt; mtu 1500
bptp0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8043&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt; mtu 1356
    inet6 fe80::1e69:a5ff:fed0:10cd%bptp0 prefixlen &lt;span class="m"&gt;64&lt;/span&gt; scopeid 0x2d
    inet6 fd02:42ac:77b2:d543:c158:fabb:6276:80e6 prefixlen 8
ecm0: &lt;span class="nv"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8a43&amp;lt;UP,BROADCAST,RUNNING,ALLMULTI,SIMPLEX,MULTICAST&amp;gt; mtu 1500
    address: 1e:69:a5:d0:10:cd
    inet 169.254.0.1 netmask 0xfffffffc broadcast 169.254.0.3
    inet6 fe80::1c69:a5ff:fed0:10cd%ecm0 prefixlen &lt;span class="m"&gt;64&lt;/span&gt; scopeid 0x2e
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; you can also use the WiFi address of the device to pass to
&lt;code&gt;backberry-connect&lt;/code&gt; and ssh. It works for me.&lt;/p&gt;
&lt;p&gt;I'm starting to explore the dark world of QNX in the next couple of days
and will keep you posted! Until then - happy hacking.&lt;/p&gt;</summary><category term="tips"></category><category term="BlackBerry"></category><category term="Z10"></category><category term="RHEL"></category></entry><entry><title>git History Stats and Project Cost Estimation</title><link href="http://atodorov.org/blog/2013/07/18/git-history-stats-and-project-cost-estimation/" rel="alternate"></link><updated>2013-07-18T23:40:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-18:blog/2013/07/18/git-history-stats-and-project-cost-estimation/</id><summary type="html">&lt;p&gt;How do you generate useful stats from a git repo? In particular how do you
calculate the monetary cost of development effort behind that git repo? 
I've found the &lt;a href="https://github.com/hoxu/gitstats"&gt;gitstats&lt;/a&gt; project which
helped me answer the above question. &lt;/p&gt;
&lt;p&gt;Git clone the repo and make sure you
have Python and Gnuplot installed. &lt;code&gt;gitstat&lt;/code&gt; will generate html files and
graphics from your git history. &lt;/p&gt;
&lt;p&gt;In my case I only needed to know how long it took for a project to be developed.
It turned out that around 56% of the days since day one were active and there were
an average of 8,5 commits per active day in the repo.&lt;/p&gt;
&lt;p&gt;I took the number of active days and multiplied by an average daily
wage to come up with a real number. This is what I consider to be the cost to
develop the software from scratch. This is overly simplified, but serves my 
needs to establish some base line.&lt;/p&gt;
&lt;p&gt;There's the &lt;a href="https://en.wikipedia.org/wiki/COCOMO"&gt;COCOMO&lt;/a&gt; method which is probably
more accurate but I didn't find any usable online COCOMO calculator.&lt;/p&gt;</summary></entry><entry><title>Exploring BlackBerry 10 - nmap</title><link href="http://atodorov.org/blog/2013/07/17/exploring-blackberry-10-nmap/" rel="alternate"></link><updated>2013-07-17T23:16:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-17:blog/2013/07/17/exploring-blackberry-10-nmap/</id><summary type="html">&lt;p&gt;This is the first post in upcoming series while I explore my
&lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt; device and figure out what's on it.&lt;/p&gt;
&lt;p&gt;First configure Z10 for
&lt;a href="/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/"&gt;USB networking&lt;/a&gt;.
Then from &lt;code&gt;Settings - Security and Privacey - Development Mode&lt;/code&gt; turn 
&lt;code&gt;Use Development Mode&lt;/code&gt; to &lt;code&gt;On&lt;/code&gt;.
From my Linux box I run nmap against the usb (169.254.0.1) and
wi-fi (192.168.0.100) addresses of Z10:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nmap 169.254.0.1

Starting Nmap 5.51 &lt;span class="o"&gt;(&lt;/span&gt; http://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2013-07-17 23:03 EEST
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; 169.254.0.1
Host is up &lt;span class="o"&gt;(&lt;/span&gt;0.00087s latency&lt;span class="o"&gt;)&lt;/span&gt;.
Not shown: &lt;span class="m"&gt;994&lt;/span&gt; closed ports
PORT     STATE    SERVICE
80/tcp   open     http
139/tcp  open     netbios-ssn
443/tcp  open     https
445/tcp  open     microsoft-ds
1111/tcp filtered lmsocialserver
8443/tcp open     https-alt

Nmap &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="m"&gt;1&lt;/span&gt; IP address &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; host up&lt;span class="o"&gt;)&lt;/span&gt; scanned in 21.41 seconds


&lt;span class="nv"&gt;$ &lt;/span&gt;nmap 192.168.0.100

Starting Nmap 5.51 &lt;span class="o"&gt;(&lt;/span&gt; http://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2013-07-17 23:04 EEST
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; 192.168.0.100
Host is up &lt;span class="o"&gt;(&lt;/span&gt;0.0035s latency&lt;span class="o"&gt;)&lt;/span&gt;.
Not shown: &lt;span class="m"&gt;998&lt;/span&gt; closed ports
PORT     STATE    SERVICE
443/tcp  open     https
1111/tcp filtered lmsocialserver

Nmap &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="m"&gt;1&lt;/span&gt; IP address &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; host up&lt;span class="o"&gt;)&lt;/span&gt; scanned in 15.64 seconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Firefox says the certificate used for https is invalid:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    The certificate is not trusted because it is self-signed.
    The certificate is only valid for PlayBook: 1c:69:a5:d0:10:cd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;1c:69:a5:d0:10:cd&lt;/code&gt; is the wi-fi interface MAC address.
All the http ports produce a 404 with &lt;code&gt;index.html&lt;/code&gt; not found!&lt;/p&gt;
&lt;p&gt;Trying some UDP scan:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# nmap -sU 169.254.0.1&lt;/span&gt;

Starting Nmap 5.51 &lt;span class="o"&gt;(&lt;/span&gt; http://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2013-07-17 23:32 EEST
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; 169.254.0.1
Host is up &lt;span class="o"&gt;(&lt;/span&gt;0.00075s latency&lt;span class="o"&gt;)&lt;/span&gt;.
Not shown: &lt;span class="m"&gt;995&lt;/span&gt; closed ports
PORT     STATE         SERVICE
67/udp   open&lt;span class="p"&gt;|&lt;/span&gt;filtered dhcps
68/udp   open&lt;span class="p"&gt;|&lt;/span&gt;filtered dhcpc
137/udp  open          netbios-ns
138/udp  open&lt;span class="p"&gt;|&lt;/span&gt;filtered netbios-dgm
5353/udp open          zeroconf
MAC Address: 1E:69:A5:D0:10:CD &lt;span class="o"&gt;(&lt;/span&gt;Unknown&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# nmap -sU 192.168.0.100&lt;/span&gt;

Starting Nmap 5.51 &lt;span class="o"&gt;(&lt;/span&gt; http://nmap.org &lt;span class="o"&gt;)&lt;/span&gt; at 2013-07-17 23:33 EEST
Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; 192.168.0.100
Host is up &lt;span class="o"&gt;(&lt;/span&gt;0.065s latency&lt;span class="o"&gt;)&lt;/span&gt;.
Not shown: &lt;span class="m"&gt;995&lt;/span&gt; closed ports
PORT     STATE         SERVICE
67/udp   open&lt;span class="p"&gt;|&lt;/span&gt;filtered dhcps
68/udp   open&lt;span class="p"&gt;|&lt;/span&gt;filtered dhcpc
137/udp  open&lt;span class="p"&gt;|&lt;/span&gt;filtered netbios-ns
138/udp  open&lt;span class="p"&gt;|&lt;/span&gt;filtered netbios-dgm
5353/udp open&lt;span class="p"&gt;|&lt;/span&gt;filtered zeroconf
MAC Address: 1C:69:A5:D0:10:CD &lt;span class="o"&gt;(&lt;/span&gt;Unknown&lt;span class="o"&gt;)&lt;/span&gt;

Nmap &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="m"&gt;1&lt;/span&gt; IP address &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; host up&lt;span class="o"&gt;)&lt;/span&gt; scanned in 143.65 seconds
&lt;/pre&gt;&lt;/div&gt;</summary><category term="BlackBerry"></category><category term="Z10"></category></entry><entry><title>Tip: How To Enable USB Networking Between BlackBerry Z10 and Red Hat Enterprise Linux 6</title><link href="http://atodorov.org/blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/" rel="alternate"></link><updated>2013-07-17T11:06:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-17:blog/2013/07/17/tip-how-to-enable-usb-networking-between-blackberry-z10-and-red-hat-enterprise-linux-6/</id><summary type="html">&lt;p&gt;On Linux there is a feature called USB networking which provides you with a 
TCP/IP connection to another device connected via USB cable. Here is how to
connect your &lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt;
to your Linux laptop over USB. I use Red Hat Enterprise Linux but should work
out of the box for other distros too.&lt;/p&gt;
&lt;p&gt;Connect the Z10 to your laptop:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ lsusb
    Bus 001 Device 005: ID 0fca:8020 Research In Motion, Ltd. Blackberry Playbook (CD-Rom mode)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default many USB devices will present a virtual CD-ROM with drivers for Windows.
This is the case here too. To change it go to &lt;code&gt;Settings - Storage and Access&lt;/code&gt; and
set &lt;code&gt;USB Connection&lt;/code&gt; to &lt;code&gt;Connect to Mac&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;If necessary plug out and back in the Z10. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ lsusb
    Bus 001 Device 007: ID 0fca:8013 Research In Motion, Ltd.

    $ ifconfig
    usb0      Link encap:Ethernet  HWaddr 1E:69:A5:D0:11:0A  
              inet addr:169.254.0.2  Bcast:169.254.0.3  Mask:255.255.255.252
              inet6 addr: fe80::1c69:a5ff:fed0:110a/64 Scope:Link
              UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
              RX packets:49 errors:0 dropped:0 overruns:0 frame:0
              TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
              collisions:0 txqueuelen:1000 
              RX bytes:16002 (15.6 KiB)  TX bytes:1152 (1.1 KiB)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; In the same &lt;code&gt;Storage and Access&lt;/code&gt; screen scroll down to
&lt;code&gt;USB Mass Storage&lt;/code&gt; and turn it &lt;code&gt;Off&lt;/code&gt;. If you don't do this your Z10 will appear
as USB flash drive and no USB networking will be available. This is how it looks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ lsusb
    Bus 001 Device 008: ID 0fca:8014 Research In Motion, Ltd.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; If you need your Z10 storage accessible together with USB networking
you can try accessing the device over Wi-Fi.
Configure it from the same &lt;code&gt;Storage and Access&lt;/code&gt; screen. Then your device will be
available through Samba on its wireless IP address. I've tried it, works for me!&lt;/p&gt;
&lt;p&gt;You don't need anything else to get this working. All set!&lt;/p&gt;
&lt;p&gt;My intention is to use either USB networking or Wi-Fi to
&lt;a href="http://supportforums.blackberry.com/t5/Testing-and-Deployment/How-to-use-blackberry-connect-to-Enable-SSH-Access/ta-p/1515447"&gt;connect to the Z10 shell&lt;/a&gt;
and explore it in more details.&lt;/p&gt;</summary><category term="tips"></category><category term="RHEL"></category><category term="BlackBerry"></category><category term="Z10"></category></entry><entry><title>Importing vCard Contacts To BlackBerry Z10 Sucks</title><link href="http://atodorov.org/blog/2013/07/14/importing-vcard-contacts-to-blackberry-z10-sucks/" rel="alternate"></link><updated>2013-07-14T21:09:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-14:blog/2013/07/14/importing-vcard-contacts-to-blackberry-z10-sucks/</id><summary type="html">&lt;p&gt;I can honestly state that &lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt; sucks big
time when it comes to importing your contacts from another non-BlackBerry
device. I've been struggling to transfer my contacts from
&lt;a href="http://amzn.to/10USRm2"&gt;Nokia 6303&lt;/a&gt; to the Z10 for one day.&lt;/p&gt;
&lt;p&gt;I tried a simple sync of the contacts from Nokia to Z10 over Bluetooth but
that failed miserably, telling me the Z10 doesn't support this functionality.
This is what to do: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On Nokia - &lt;code&gt;Settings - Sync and backup - Create backup&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Then navigate to &lt;code&gt;Apps - Extras - Memory card - Backup files&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Select the most recent backup file, e.g. &lt;code&gt;Backup000.NBF&lt;/code&gt; and 
transfer it via Bluetooth (or USB cable) to my laptop;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the record: this is a ZIP file with different extension. I've tried also
to transfer it to the Z10 and open from File manager but to no avail.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Just unzip the file on the computer;&lt;/li&gt;
&lt;li&gt;When extracted it will create multiple directories with meaningless names.
Just find whatever you need - in my case this was the &lt;code&gt;contacts/&lt;/code&gt; directory
containing hundreds of &lt;code&gt;.vcf&lt;/code&gt; files;&lt;/li&gt;
&lt;li&gt;Combine all the &lt;code&gt;.vcf&lt;/code&gt; files into one. On Linux this is done with&lt;div class="highlight"&gt;&lt;pre&gt;cat *.vcf &amp;gt; ../all.vcf
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the record: I've tried also sending all of these files to Z10. Via the 
File manager individual vCards open just fine but you need to &lt;code&gt;Save&lt;/code&gt; them one
by one. The combined vCard file didn't display correctly at all. Showed only one
contact.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Then go to Gmail (or any other CardDAV service) and import all your vCards.
Go to &lt;code&gt;Contacts - More - Import&lt;/code&gt; - and select the combined vCard file since Gmail
doesn't support multi-file uploads;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On your BlackBerry go to &lt;code&gt;Settings - Accounts&lt;/code&gt; and add your Gmail account.
By default this will create profiles for mail, calendar and contacts which will
be synchronized with the device.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt; I had my Gmail previously configured on the Z10. Despite the account
was configured to re-sync every 15 minutes it took around 2 hours for phone numbers
to sync. And to make it worse there is no button for manual re-sync.&lt;/p&gt;
&lt;p&gt;All of this done I have thousands of contacts on my Z10 spread across phone numbers,
emails, vCards and contacts from social networks. I've noticed some of them (my guess
those that had the same email or name) combined auto-magically. The rest can easily be
linked together using the Contacts app Link functionality.&lt;/p&gt;
&lt;p&gt;For the record: It is also possible to send vCards one by one directly from Nokia to
Z10 via Bluetooth. The trouble is that for every entry you need to go through several
layers of menu options and confirmations. This makes it impractical.&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Importing hundreds of contacts from Nokia to BlackBerry Z10 is MIA;&lt;/li&gt;
&lt;li&gt;BB Contacts app (and BB Hub) is cool but has some bugs;&lt;/li&gt;
&lt;li&gt;Needs manual contact re-sync button;&lt;/li&gt;
&lt;li&gt;Gmail re-sync took longer than expected;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contacts Link feature can be improved and made more easy to use, e.g.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grid style display&lt;/li&gt;
&lt;li&gt;multiple select and link&lt;/li&gt;
&lt;li&gt;swipe and link, etc;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The current Link interface is sub-optimal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;select a contact&lt;/li&gt;
&lt;li&gt;tap Links&lt;/li&gt;
&lt;li&gt;tap Add Link&lt;/li&gt;
&lt;li&gt;tap Search&lt;/li&gt;
&lt;li&gt;type and find the entries you'd like to link;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The current Link interface is buggy - when searching contacts to add
as links it shows the currently opened contact too. Luckily it doesn't
crash when the same entry is selected :). I've tried.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is with OS Version 10.0.10.261.&lt;/p&gt;</summary><category term="BlackBerry"></category><category term="Z10"></category><category term="Nokia"></category></entry><entry><title>How to Get a Free BlackBerry Z10</title><link href="http://atodorov.org/blog/2013/07/13/how-to-get-a-free-blackberry-z10/" rel="alternate"></link><updated>2013-07-13T11:30:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-13:blog/2013/07/13/how-to-get-a-free-blackberry-z10/</id><summary type="html">&lt;p&gt;Do you want to have the latest and greatest devices on the market? For free?
No problem if you are a software developer! Over the years I've got several
devices for free and I will tell you how I did it. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Find a hardware vendor that has
launched new products, is behind competitors in terms of software eco-system
and present them with a great application which you will code on their device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="/images/bbz10_tshirt.jpg" alt="BlackBerry Z10 T-Shirt" style="display:block;clear:both;" /&gt;&lt;/p&gt;
&lt;p&gt;This week I've been at the BlackBerry 10 Mini Jam in Sofia and I got a
&lt;a href="http://amzn.to/12y4ewJ"&gt;BlackBerry Z10&lt;/a&gt; Dev Alpha B smart-phone.&lt;/p&gt;
&lt;p&gt;BlackBerry 10 OS is different from previous versions. It has a QNX kernel and is
largely incompatible with previous software. This means all apps need to be rewritten.&lt;/p&gt;
&lt;p&gt;Another thing to note is that BlackBerry is behind Android, iPhone and probably Windows Phone
in terms of applications. It is in their interest to lower the barrier to entry for developers
and boost their software eco-system. Which in turn makes customers happy because they can
find all sorts of applications. It's that simple.&lt;/p&gt;
&lt;p&gt;Being a Linux guy
my idea is to trade my &lt;a href="http://amzn.to/12y5hwp"&gt;Lenovo X220&lt;/a&gt; for a smart-phone.
The only thing(s) I need is all the command line tools which I use: bash, vim, coreutils
and most notably Python. So I've decided to try and port all of these to the BlackBerry 10 OS.
It should be doable because QNX is POSIX compliant and the OS itself comes with C/C++ and
Qt/QML native development stack.&lt;/p&gt;
&lt;p&gt;I have a few other ideas which are still taking shape in my head and are mostly towards
mobile development. &lt;/p&gt;
&lt;p&gt;I've heard &lt;a href="http://www.bbdevbalkan.com"&gt;BlackBerry Developer Group Balkan&lt;/a&gt; may
have some devices to give away to developers so I simply asked. They liked my ideas and
agreed to give me a developer device.&lt;/p&gt;
&lt;p&gt;In addition
they've given away the real product (not dev alpha devices) for free at Twitter contests
held during couple of events so far. Several guys I know were lucky enough to win the prizes.&lt;/p&gt;
&lt;h2&gt;The OLPC XO laptop&lt;/h2&gt;
&lt;p&gt;&lt;img src="/images/olpc_xo.jpg" alt="OLPC XO laptop" style="float:left;margin-right:10px" /&gt;&lt;/p&gt;
&lt;p&gt;In the past I've taken part in testing &lt;a href="http://fedoraproject.org"&gt;Fedora&lt;/a&gt; onto
the XO laptop produced by the &lt;a href="http://laptop.org"&gt;One Laptop Per Child&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;It is cool and innovative device with its software especially adapted to
child education. The general public wanted to have a standard Linux distro
running on the same hardware. Fedora being the original foundation on which the XO
Linux distro was built was a good choice (among others). &lt;/p&gt;
&lt;p&gt;I have received for free the XO laptop shown here and mainly tested networking
related stuff. After the test initiative was completed (and also the upstream OLPC
project ceased to exist closely after that) I got to keep the device for myself.&lt;/p&gt;
&lt;h2&gt;Which device to get ?&lt;/h2&gt;
&lt;p&gt;I'll keep my eyes open for a Firefox OS or Ubuntu Phone devices. As they come into stores
they will have to compete with already established vendors.&lt;/p&gt;
&lt;p&gt;Let me and everyone else know if you got a device for free being a developer! Share your
story and tips into the comments below.&lt;/p&gt;</summary><category term="BlackBerry"></category><category term="Z10"></category></entry><entry><title>Tip: Setting Secure ENV variables on Red Hat OpenShift</title><link href="http://atodorov.org/blog/2013/07/08/tip-setting-secure-env-variables-on-red-hat-openshift/" rel="alternate"></link><updated>2013-07-08T21:39:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-08:blog/2013/07/08/tip-setting-secure-env-variables-on-red-hat-openshift/</id><summary type="html">&lt;p&gt;OpenShift is
&lt;a href="https://www.openshift.com/content/custom-environment-variables"&gt;still missing&lt;/a&gt;
the client side tools to set environment variables without exposing the values
in source code but there is a way to do it. Here is how.&lt;/p&gt;
&lt;p&gt;First ssh into your application and navigate to the &lt;code&gt;$OPENSHIFT_DATA_DIR&lt;/code&gt;.
Create a file to define your environment. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rhc ssh -a difio
Password: ***

&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com 51d32a854382ecf7a9000116&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; vi myenv.sh
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; cat myenv.sh
&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;MYENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; chmod a+x myenv.sh 
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
Connection to difio-otb.rhcloud.com closed.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now modify your code and git push to OpenShift. Then ssh into the app once
again to verify that your configuration is still in place. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;atodorov@redbull difio&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rhc ssh -a difio
Password: ***

&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com 51d32a854382ecf7a9000116&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; ls -l
total 4
-rwxr-xr-x. &lt;span class="m"&gt;1&lt;/span&gt; 51d32a854382ecf7a9000116 51d32a854382ecf7a9000116 &lt;span class="m"&gt;34&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt; jul 14,33 myenv.sh
&lt;span class="o"&gt;[&lt;/span&gt;difio-otb.rhcloud.com data&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Use the defined variables as you wish.&lt;/p&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Give a Book, Get a Laptop With Discount</title><link href="http://atodorov.org/blog/2013/07/04/give-a-book-get-a-laptop-with-discount/" rel="alternate"></link><updated>2013-07-04T11:44:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-04:blog/2013/07/04/give-a-book-get-a-laptop-with-discount/</id><summary type="html">&lt;p&gt;&lt;img src="/images/startup/timeheroes.png" alt="Time Heroes" style="float:left; margin-right:10px;"/&gt;&lt;/p&gt;
&lt;p&gt;Bulgarian start-up TimeHeroes.org is helping a non-profit organization to
&lt;a href="http://timeheroes.org/podaretekniga/264"&gt;collect used computers and books for children in foster care&lt;/a&gt;.
They are helping more children get access to the Internet.&lt;/p&gt;
&lt;p&gt;I will donate an 
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=asus&amp;linkCode=ur2&amp;sprefix=asus%2Caps%2C398&amp;tag=atodorovorg-20&amp;url=search-alias%3Dcomputers"&gt;Asus&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
eeePC and a
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;keywords=fujitsu%20laptop&amp;linkCode=ur2&amp;qid=1372944368&amp;rh=i%3Acomputers%2Ck%3Afujitsu%20laptop&amp;tag=atodorovorg-20"&gt;Fujitsu&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
laptop plus all books
from my &lt;a href="/blog/2013/04/05/give-away-list/"&gt;Give Away List&lt;/a&gt;, which are not currently taken.
Because this is not much I have an offer for everyone else, who would like to help. &lt;/p&gt;
&lt;div style="clear:both"&gt;&lt;/div&gt;

&lt;h2&gt;What is the offer&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Give a book or your old laptop and get a new one with discount!&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;My company 
&lt;a href="http://otb.bg"&gt;Open Technologies Bulgaria, Ltd.&lt;/a&gt; is an authorized reseller of Vali Computers and
Fujitsu. Hardware reselling is not the main company activity but a backup in case a customer
wants to purchase entire solution from one vendor. &lt;/p&gt;
&lt;p&gt;I will not charge the standard reseller's discount (between 5% and 10%) if you drop-off your books
or old laptops with me and agree to donated them to children.
The offer is valid as long as the donation campaign is (I don't know how long but looks like ongoing). &lt;/p&gt;
&lt;p&gt;You can select anything from &lt;a href="http://www.vali.bg"&gt;http://www.vali.bg&lt;/a&gt; with the reseller's discount off! 
Delivery or pick-up is on you though.&lt;/p&gt;
&lt;p&gt;If you want to participate use the comments below and I will get in touch with you.&lt;/p&gt;</summary><category term="start-up"></category></entry><entry><title>July Events - BlackBerry Mini Jam and Devel Conference</title><link href="http://atodorov.org/blog/2013/07/01/july-events-blackberry-mini-jam-and-devel-conference/" rel="alternate"></link><updated>2013-07-01T11:06:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-07-01:blog/2013/07/01/july-events-blackberry-mini-jam-and-devel-conference/</id><summary type="html">&lt;p&gt;If you happen to be on holiday in Bulgaria but would still like to meet
some hackers there are three events this month that I find interesting:
Plovdiv Conf, BlackBerry Mini Developer Jam and Varna Conf.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/code.jpg" alt="source code" style="display:block;clear:both;"/&gt;
Image: source code from a game development course held at Sofia University couple of years ago.
Own work.&lt;/p&gt;
&lt;h2&gt;Plovdiv Conf&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://plovdivconf.com/"&gt;Plovdiv Conf&lt;/a&gt; will be held at the Plovdiv Fair
on July 6th 2013. There isn't an official program but the speaker profiles are
interesting. Among them are guys well known for their Ruby and Linux skills.&lt;/p&gt;
&lt;p&gt;From the given list I recognize only half the names. One speaker that sounds
interesting to me claims experience with programming assembler for the mainframe.&lt;/p&gt;
&lt;p&gt;My friend &lt;a href="http://akurtakov.blogspot.com/"&gt;Alexander Kurtakov&lt;/a&gt; from Red Hat/Eclipse
will be there as well so I'm planning to attend this event.&lt;/p&gt;
&lt;h2&gt;BlackBerry 10 Mini Jam Sofia&lt;/h2&gt;
&lt;p&gt;Organized by BlackBerry Developer Group Balkan the 
&lt;a href="http://bb10jamsofia2013.eventbrite.com/"&gt;BlackBerry 10 Mini Jam Sofia&lt;/a&gt; will be held
on July 11th 2013 at &lt;a href="http://betahaus.bg"&gt;betahaus Sofia&lt;/a&gt;. Last time I visited
a &lt;a href="/blog/2013/05/23/balkan-venture-forum-sofia-post-mortem/"&gt;BlackBerry developers session&lt;/a&gt; it
was very interesting. &lt;/p&gt;
&lt;p&gt;My personal interest at the moment is not developing mobile applications but I'd like to hear
more about the possibilities. My understanding is that BlackBerry 10 is much more flexible
as a development platform compared to Android and iOS. &lt;/p&gt;
&lt;p&gt;I will definitely attend this event because there will be a shiny new &lt;strong&gt;BlackBerry Z 10&lt;/strong&gt;
waiting for me there :). I will tell you how to secure one after I get it. &lt;/p&gt;
&lt;h2&gt;Varna Conf&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://varnaconf.com/"&gt;Varna Conf&lt;/a&gt; is organized by the same people who do Plovdiv Conf.
It will be held on July 20th 2013 at Cherno More hotel in Varna.&lt;/p&gt;
&lt;p&gt;Most of the speakers I don't know but there are couple of topics about testing and refactoring
which look interesting. However I will be more likely to socialize with the local development
groups rather than listening to all talks.&lt;/p&gt;
&lt;p&gt;I'm not sure if I will attend though. My initial plan was to attend but there are other personal
errands that are popping up. Given that it is not near Sofia I will probably skip it.&lt;/p&gt;
&lt;p&gt;If you happen
to be on holiday at the Bulgarian sea side however, you should definitely check it out. And Varna is
a very nice city too.&lt;/p&gt;
&lt;p&gt;Let me know if there are other interesting events in the vicinity! Use the comments and tell me where
are you going this month.&lt;/p&gt;</summary><category term="events"></category></entry><entry><title>Performance test: Amazon ElastiCache vs Amazon S3</title><link href="http://atodorov.org/blog/2013/06/26/performance-test-amazon-elasticache-vs-amazon-s3/" rel="alternate"></link><updated>2013-06-26T21:22:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-26:blog/2013/06/26/performance-test-amazon-elasticache-vs-amazon-s3/</id><summary type="html">&lt;p&gt;Which Django cache backend is faster? Amazon ElastiCache or Amazon S3 ?&lt;/p&gt;
&lt;p&gt;Previously I've mentioned about
&lt;a href="/blog/2013/06/19/django-tips-using-cache-for-stateful-http/"&gt;using Django's cache to keep state between HTTP requests&lt;/a&gt;.
In my demo described there I was using &lt;a href="http://github.com/atodorov/django-s3-cache"&gt;django-s3-cache&lt;/a&gt;.
It is time to move to production so I decided to measure the performance difference between the two
cache options available at Amazon Web Services.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 2013-07-01&lt;/strong&gt;: my initial test may have been false since I had not configured
ElastiCache access properly. I saw no errors but discovered the issue today on another
system which was failing to store the cache keys but didn't show any errors either. 
I've re-run the tests and updated times are shown below.&lt;/p&gt;
&lt;h2&gt;Test infrastructure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;One Amazon S3 bucket, located in US Standard (aka US East) region;&lt;/li&gt;
&lt;li&gt;One Amazon ElastiCache cluster with one Small Cache Node (cache.m1.small) with Moderate I/O capacity;&lt;/li&gt;
&lt;li&gt;One Amazon Elasticache cluster with one Large Cache Node (cache.m1.large) with High I/O Capacity;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Update:&lt;/strong&gt; I've tested both &lt;code&gt;python-memcached&lt;/code&gt; and &lt;code&gt;pylibmc&lt;/code&gt; client libraries for Django;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Update:&lt;/strong&gt; Test is executed from an EC2 node in the us-east-1a availability zone;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Update:&lt;/strong&gt; Cache clusters are in the us-east-1a availability zone.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Test Scenario&lt;/h2&gt;
&lt;p&gt;The test platform is Django. I've created a
&lt;a href="https://github.com/atodorov/Amazon-ElastiCache-vs-Amazon-S3-Django"&gt;skeleton project&lt;/a&gt;
with only &lt;code&gt;CACHES&lt;/code&gt; settings
defined and necessary dependencies installed. A file called &lt;code&gt;test.py&lt;/code&gt; holds the
test cases, which use the standard timeit module. The object which is stored in cache
is very small - it holds a phone/address identifiers and couple of user made selections.
The code looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;timeit&lt;/span&gt;

&lt;span class="n"&gt;s3_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;for i in range(1000):&lt;/span&gt;
&lt;span class="sd"&gt;    my_cache.set(i, MyObject)&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;from django.core import cache&lt;/span&gt;

&lt;span class="sd"&gt;my_cache = cache.get_cache(&amp;#39;default&amp;#39;)&lt;/span&gt;

&lt;span class="sd"&gt;MyObject = {&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;from&amp;#39; : &amp;#39;359123456789&amp;#39;,&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;address&amp;#39; : &amp;#39;6afce9f7-acff-49c5-9fbe-14e238f73190&amp;#39;,&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;hour&amp;#39; : &amp;#39;12:30&amp;#39;,&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;weight&amp;#39; : 5,&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;type&amp;#39; : 1,&lt;/span&gt;
&lt;span class="sd"&gt;}&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s3_get&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;for i in range(1000):&lt;/span&gt;
&lt;span class="sd"&gt;    MyObject = my_cache.get(i)&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;from django.core import cache&lt;/span&gt;

&lt;span class="sd"&gt;my_cache = cache.get_cache(&amp;#39;default&amp;#39;)&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Tests were executed from the Django shell &lt;del&gt;on my laptop&lt;/del&gt;
on an EC2 instance in the us-east-1a availability zone. ElastiCache nodes
were freshly created/rebooted before test execution. S3 bucket had no objects.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mar&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;20111027&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Red&lt;/span&gt; &lt;span class="n"&gt;Hat&lt;/span&gt; &lt;span class="mf"&gt;4.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux2&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InteractiveConsole&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;test&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s3_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;68.089607000350952&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;70.806712865829468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;72.49261999130249&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s3_get&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;43.778793096542358&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;43.054368019104004&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;36.19232702255249&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pymc_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.40637087821960449&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.3568730354309082&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.35815882682800293&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pymc_get&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.35759496688842773&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.35180497169494629&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.39198613166809082&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libmc_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.3902890682220459&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.30157709121704102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.30596804618835449&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libmc_get&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.28874802589416504&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.30520200729370117&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.29050207138061523&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libmc_large_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.0291709899902344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.31709098815917969&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.32010698318481445&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libmc_large_get&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.2957158088684082&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.29067802429199219&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.29692888259887695&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;As expected ElastiCache is much faster (10x) compared to S3. However the difference
between the two ElastiCache node types is subtle. I will stay with the smallest
possible node to minimize costs. Also as seen, pylibmc is a bit faster compared to
the pure Python implementation. &lt;/p&gt;
&lt;p&gt;Depending on your objects size or how many set/get operations you perform per
second you may need to go with the larger nodes. Just test it!&lt;/p&gt;
&lt;p&gt;&lt;del&gt;It surprised me how slow django-s3-cache is.&lt;/del&gt;
The false test showed django-s3-cache to be 100x slower but new results are better.
10x decrease in performance sounds about right for a filesystem backed cache.&lt;/p&gt;
&lt;p&gt;A quick look at the code
of the two backends shows some differences. The one I immediately see is that
for every cache key django-s3-cache creates an sha1 hash which is used as the
storage file name. This was modeled after the filesystem backend but I think the
design is wrong - the memcached backends don't do this.&lt;/p&gt;
&lt;p&gt;Another one is that django-s3-cache time-stamps all objects and uses pickle to serialize them. 
I wonder if it can't just write them as binary blobs directly. There's definitely lots
of room for improvement of django-s3-cache. I will let you know my findings once I
get to it. &lt;/p&gt;</summary><category term="Amazon"></category><category term="S3"></category><category term="ElastiCache"></category><category term="QA"></category><category term="performance testing"></category><category term="cloud"></category></entry><entry><title>Twilio is Located in Amazon Web Services US East</title><link href="http://atodorov.org/blog/2013/06/24/twilio-is-located-in-amazon-web-services-us-east/" rel="alternate"></link><updated>2013-06-24T23:43:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-24:blog/2013/06/24/twilio-is-located-in-amazon-web-services-us-east/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Where do I store my audio files in order to minimize download and call wait time?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Twilio is a cloud vendor that provides telephony services. 
It can download and &lt;code&gt;&amp;lt;Play&amp;gt;&lt;/code&gt; arbitrary audio files and will cache the files
for better performance.&lt;/p&gt;
&lt;p&gt;Twilio support told me they are not disclosing the location of their servers,
so from my web application hosted in AWS US East:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;ivr-otb.rhcloud.com logs&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt; grep TwilioProxy access_log-* &lt;span class="p"&gt;|&lt;/span&gt; cut -f &lt;span class="m"&gt;1&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq 
10.125.90.172 
10.214.183.239 
10.215.187.220 
10.245.155.18 
10.255.119.159 
10.31.197.102
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let's map these addresses to host names. From another EC2 system, also in Amazon US East:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;ec2-user@ip-10-29-206-86 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dig -x 10.125.90.172 -x 10.214.183.239 -x 10.215.187.220 -x 10.245.155.18 -x 10.255.119.159 -x 10.31.197.102

&lt;span class="p"&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.29.amzn1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; -x 10.125.90.172 -x 10.214.183.239 -x 10.215.187.220 -x 10.245.155.18 -x 10.255.119.159 -x 10.31.197.102
&lt;span class="p"&gt;;;&lt;/span&gt; global options: +cmd
&lt;span class="p"&gt;;;&lt;/span&gt; Got answer:
&lt;span class="p"&gt;;;&lt;/span&gt; -&amp;gt;&amp;gt;HEADER&lt;span class="s"&gt;&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 43245&lt;/span&gt;
&lt;span class="s"&gt;;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/span&gt;

&lt;span class="s"&gt;;; QUESTION SECTION:&lt;/span&gt;
&lt;span class="s"&gt;;172.90.125.10.in-addr.arpa.    IN      PTR&lt;/span&gt;

&lt;span class="s"&gt;;; ANSWER SECTION:&lt;/span&gt;
&lt;span class="s"&gt;172.90.125.10.in-addr.arpa. 113 IN      PTR     ip-10-125-90-172.ec2.internal.&lt;/span&gt;

&lt;span class="s"&gt;;; Query time: 1 msec&lt;/span&gt;
&lt;span class="s"&gt;;; SERVER: 172.16.0.23#53(172.16.0.23)&lt;/span&gt;
&lt;span class="s"&gt;;; WHEN: Mon Jun 24 20:48:21 2013&lt;/span&gt;
&lt;span class="s"&gt;;; MSG SIZE  rcvd: 87&lt;/span&gt;

&lt;span class="s"&gt;;; Got answer:&lt;/span&gt;
&lt;span class="s"&gt;;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode&lt;/span&gt;: QUERY, status: NOERROR, id: 52693
&lt;span class="p"&gt;;;&lt;/span&gt; flags: qr rd ra&lt;span class="p"&gt;;&lt;/span&gt; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

&lt;span class="p"&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class="p"&gt;;&lt;/span&gt;239.183.214.10.in-addr.arpa.   IN      PTR

&lt;span class="p"&gt;;;&lt;/span&gt; ANSWER SECTION:
239.183.214.10.in-addr.arpa. &lt;span class="m"&gt;42619&lt;/span&gt; IN   PTR     domU-12-31-39-0B-B0-01.compute-1.internal.

&lt;span class="p"&gt;;;&lt;/span&gt; Query &lt;span class="nb"&gt;time&lt;/span&gt;: &lt;span class="m"&gt;0&lt;/span&gt; msec
&lt;span class="p"&gt;;;&lt;/span&gt; SERVER: 172.16.0.23#53&lt;span class="o"&gt;(&lt;/span&gt;172.16.0.23&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; WHEN: Mon Jun &lt;span class="m"&gt;24&lt;/span&gt; 20:48:21 2013
&lt;span class="p"&gt;;;&lt;/span&gt; MSG SIZE  rcvd: 100

&lt;span class="p"&gt;;;&lt;/span&gt; Got answer:
&lt;span class="p"&gt;;;&lt;/span&gt; -&amp;gt;&amp;gt;HEADER&lt;span class="s"&gt;&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 25255&lt;/span&gt;
&lt;span class="s"&gt;;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/span&gt;

&lt;span class="s"&gt;;; QUESTION SECTION:&lt;/span&gt;
&lt;span class="s"&gt;;220.187.215.10.in-addr.arpa.   IN      PTR&lt;/span&gt;

&lt;span class="s"&gt;;; ANSWER SECTION:&lt;/span&gt;
&lt;span class="s"&gt;220.187.215.10.in-addr.arpa. 43140 IN   PTR     domU-12-31-39-0C-B8-2E.compute-1.internal.&lt;/span&gt;

&lt;span class="s"&gt;;; Query time: 0 msec&lt;/span&gt;
&lt;span class="s"&gt;;; SERVER: 172.16.0.23#53(172.16.0.23)&lt;/span&gt;
&lt;span class="s"&gt;;; WHEN: Mon Jun 24 20:48:21 2013&lt;/span&gt;
&lt;span class="s"&gt;;; MSG SIZE  rcvd: 100&lt;/span&gt;

&lt;span class="s"&gt;;; Got answer:&lt;/span&gt;
&lt;span class="s"&gt;;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode&lt;/span&gt;: QUERY, status: NOERROR, id: 15099
&lt;span class="p"&gt;;;&lt;/span&gt; flags: qr rd ra&lt;span class="p"&gt;;&lt;/span&gt; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

&lt;span class="p"&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class="p"&gt;;&lt;/span&gt;18.155.245.10.in-addr.arpa.    IN      PTR

&lt;span class="p"&gt;;;&lt;/span&gt; ANSWER SECTION:
18.155.245.10.in-addr.arpa. &lt;span class="m"&gt;840&lt;/span&gt; IN      PTR     ip-10-245-155-18.ec2.internal.

&lt;span class="p"&gt;;;&lt;/span&gt; Query &lt;span class="nb"&gt;time&lt;/span&gt;: &lt;span class="m"&gt;0&lt;/span&gt; msec
&lt;span class="p"&gt;;;&lt;/span&gt; SERVER: 172.16.0.23#53&lt;span class="o"&gt;(&lt;/span&gt;172.16.0.23&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; WHEN: Mon Jun &lt;span class="m"&gt;24&lt;/span&gt; 20:48:21 2013
&lt;span class="p"&gt;;;&lt;/span&gt; MSG SIZE  rcvd: 87

&lt;span class="p"&gt;;;&lt;/span&gt; Got answer:
&lt;span class="p"&gt;;;&lt;/span&gt; -&amp;gt;&amp;gt;HEADER&lt;span class="s"&gt;&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 28878&lt;/span&gt;
&lt;span class="s"&gt;;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/span&gt;

&lt;span class="s"&gt;;; QUESTION SECTION:&lt;/span&gt;
&lt;span class="s"&gt;;159.119.255.10.in-addr.arpa.   IN      PTR&lt;/span&gt;

&lt;span class="s"&gt;;; ANSWER SECTION:&lt;/span&gt;
&lt;span class="s"&gt;159.119.255.10.in-addr.arpa. 43140 IN   PTR     domU-12-31-39-01-70-51.compute-1.internal.&lt;/span&gt;

&lt;span class="s"&gt;;; Query time: 0 msec&lt;/span&gt;
&lt;span class="s"&gt;;; SERVER: 172.16.0.23#53(172.16.0.23)&lt;/span&gt;
&lt;span class="s"&gt;;; WHEN: Mon Jun 24 20:48:21 2013&lt;/span&gt;
&lt;span class="s"&gt;;; MSG SIZE  rcvd: 100&lt;/span&gt;

&lt;span class="s"&gt;;; Got answer:&lt;/span&gt;
&lt;span class="s"&gt;;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode&lt;/span&gt;: QUERY, status: NOERROR, id: 28727
&lt;span class="p"&gt;;;&lt;/span&gt; flags: qr rd ra&lt;span class="p"&gt;;&lt;/span&gt; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

&lt;span class="p"&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class="p"&gt;;&lt;/span&gt;102.197.31.10.in-addr.arpa.    IN      PTR

&lt;span class="p"&gt;;;&lt;/span&gt; ANSWER SECTION:
102.197.31.10.in-addr.arpa. &lt;span class="m"&gt;840&lt;/span&gt; IN      PTR     ip-10-31-197-102.ec2.internal.

&lt;span class="p"&gt;;;&lt;/span&gt; Query &lt;span class="nb"&gt;time&lt;/span&gt;: &lt;span class="m"&gt;0&lt;/span&gt; msec
&lt;span class="p"&gt;;;&lt;/span&gt; SERVER: 172.16.0.23#53&lt;span class="o"&gt;(&lt;/span&gt;172.16.0.23&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; WHEN: Mon Jun &lt;span class="m"&gt;24&lt;/span&gt; 20:48:21 2013
&lt;span class="p"&gt;;;&lt;/span&gt; MSG SIZE  rcvd: 87
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In short:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ip-10-125-90-172.ec2.internal.
ip-10-245-155-18.ec2.internal.
ip-10-31-197-102.ec2.internal.
domU-12-31-39-01-70-51.compute-1.internal.
domU-12-31-39-0B-B0-01.compute-1.internal.
domU-12-31-39-0C-B8-2E.compute-1.internal.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;ip-*.ec2.internal&lt;/code&gt; are clearly in US East. The &lt;code&gt;domU-*.computer-1.internal&lt;/code&gt; also
look like US East although I'm not 100% sure what is the difference between the two.
The later ones look like HVM guests while the former ones are para-virtualized.&lt;/p&gt;
&lt;p&gt;For comparison here are some internal addresses from my own EC2 systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ip-10-228-237-207.eu-west-1.compute.internal - EU Ireland&lt;/li&gt;
&lt;li&gt;ip-10-248-19-46.us-west-2.compute.internal - US West Oregon&lt;/li&gt;
&lt;li&gt;ip-10-160-58-141.us-west-1.compute.internal - US West N. California&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After relocating my audio files to an S3 bucket in US East the average call length
dropped from 2:30 min to 2:00 min for the same IVR choices. This also minimizes
the costs since Twilio charges per minute of incoming/outgoing calls.
I think the audio quality has improved as well.&lt;/p&gt;</summary><category term="Twilio"></category><category term="Amazon"></category><category term="cloud"></category></entry><entry><title>Even Facebook has Bugs</title><link href="http://atodorov.org/blog/2013/06/20/even-facebook-has-bugs/" rel="alternate"></link><updated>2013-06-20T10:17:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-20:blog/2013/06/20/even-facebook-has-bugs/</id><summary type="html">&lt;p&gt;&lt;img src="/images/facebook_ui_bug.png" alt="Faceook bug" style="float:left; margin-right: 10px;"/&gt;&lt;/p&gt;
&lt;p&gt;Here's a small but very visible UI bug in Facebook. While selecting for which
applications to receive or not notifications there is a small progress bar image
that appears left of the checkbox element. The trouble is this image displaces the
checkbox and it appears to float right and left during the AJAX call. This is annoying.&lt;/p&gt;
&lt;p&gt;There's an easy fix - either fix the progress image and checkbox positions so they don't move
or place the image to the right.&lt;/p&gt;
&lt;p&gt;In my practice these types of bugs are common. I usually classify them with High priority,
because they tend to annoy the user and generate support calls or just look unprofessional.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Tip: Caching Large Objects for Celery and Amazon SQS</title><link href="http://atodorov.org/blog/2013/06/19/tip-caching-large-objects-for-celery-and-amazon-sqs/" rel="alternate"></link><updated>2013-06-19T14:29:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-19:blog/2013/06/19/tip-caching-large-objects-for-celery-and-amazon-sqs/</id><summary type="html">&lt;p&gt;Some time ago a guy called Matt
&lt;a href="https://groups.google.com/forum/?fromgroups=#!topic/celery-users/RFAuGjZwtmg"&gt;asked&lt;/a&gt;
about passing large objects through their messaging queue. They were switching from
RabbitMQ to Amazon SQS which has a limit of 64K total message size.&lt;/p&gt;
&lt;p&gt;Recently I've made some changes in &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; which require passing
larger objects as parameters to a Celery task. Since Difio is also using SQS I faced the
same problem. Here is the solution using a cache back-end: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery.task&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;cache_module&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;some_method&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;skip&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

    &lt;span class="n"&gt;task_cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache_module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_cache&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;taskq&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;task_cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;handle_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;skip&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="nd"&gt;@task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;task_cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache_module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_cache&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;taskq&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;task_cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;stuff&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Objects are persisted in a secondary cache back-end, not the default one, to avoid
accidental destruction. &lt;code&gt;uuid&lt;/code&gt; parameter is a string.&lt;/p&gt;
&lt;p&gt;Although the objects passed are smaller than 64K I haven't seen any issues
with this solution so far. Let me know if you are using something similar in your code
and how it works for you. &lt;/p&gt;</summary><category term="tips"></category><category term="Amazon"></category><category term="SQS"></category><category term="cloud"></category></entry><entry><title>Django Tips: Using Cache for Stateful HTTP</title><link href="http://atodorov.org/blog/2013/06/19/django-tips-using-cache-for-stateful-http/" rel="alternate"></link><updated>2013-06-19T13:50:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-19:blog/2013/06/19/django-tips-using-cache-for-stateful-http/</id><summary type="html">&lt;p&gt;How do you keep state when working with a stateless protocol like HTTP? 
One possible answer is to use a cache back-end. &lt;/p&gt;
&lt;p&gt;I'm working on an IVR application demo with Django and Twilio. The caller
will make multiple choices using the phone keyboard. All of this needs to be
put together and sent back to another server for processing. In my views
I've added a simple cache get/set lines to preserve the selection.&lt;/p&gt;
&lt;p&gt;Here's how it looks with actual application logic omitted&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;incoming_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;call_sid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;CallSid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;caller_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;From&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;from&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;caller_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_sid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;step2.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;step2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;call_sid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;CallSid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;selection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Digits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_sid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;step2_selection&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;
    &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_sid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;final_step.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;final_step&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;call_sid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;CallSid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;selection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Digits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call_sid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;final_step_selection&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;

    &lt;span class="n"&gt;Backend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;process_user_selections&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;thank_you.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At each step Django will update the current state associated with this call and return
a &lt;a href="https://www.twilio.com/docs/api/twiml"&gt;TwiML&lt;/a&gt; XML response. &lt;code&gt;CallSid&lt;/code&gt; is a handy unique
identifier provided by Twilio.&lt;/p&gt;
&lt;p&gt;I am using the latest &lt;a href="http://github.com/atodorov/django-s3-cache"&gt;django-s3-cache&lt;/a&gt; version
which properly works with directories. When going to production that will likely switch to
Amazon ElastiCache.&lt;/p&gt;</summary><category term="Django"></category><category term="tips"></category><category term="Twilio"></category><category term="cloud"></category></entry><entry><title>Nibbler - W3C Validator on Steroids</title><link href="http://atodorov.org/blog/2013/06/18/nibbler-w3c-validator-on-steroids/" rel="alternate"></link><updated>2013-06-18T23:59:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-18:blog/2013/06/18/nibbler-w3c-validator-on-steroids/</id><summary type="html">&lt;p&gt;I've recently found Nibbler which gives you a report scoring the website out of
10 for various important criteria including accessibility, SEO, social media
and technology.&lt;/p&gt;
&lt;p&gt;The produced report is very interesting. Here is the
&lt;a href="http://nibbler.silktide.com/reports/atodorov.org"&gt;report for this blog&lt;/a&gt;. 
There are things I definitely need to work on!&lt;/p&gt;
&lt;p&gt;For comparison &lt;a href="http://nibbler.silktide.com/reports/sofiavalley.com"&gt;SofiaValley&lt;/a&gt;
scores far beyond this blog. It is stronger in marketing and popularity but
apparently weaker on the technology section. This is interesting!&lt;/p&gt;
&lt;p&gt;PS: sorry for not producing technical content lately. I've been very busy
with some current projects however I've got lots of ideas and topics to blog about. 
I hope to make it up to speed in the next few weeks. -- Alex&lt;/p&gt;</summary><category term="tips"></category></entry><entry><title>Personal Experience With Credit Card Fraud, Part 2</title><link href="http://atodorov.org/blog/2013/06/14/personal-experience-with-credit-card-fraud-pt2/" rel="alternate"></link><updated>2013-06-14T10:09:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-14:blog/2013/06/14/personal-experience-with-credit-card-fraud-pt2/</id><summary type="html">&lt;p&gt;Earlier I wrote about my
&lt;a href="/blog/2013/04/26/personal-experience-with-credit-card-fraud/"&gt;personal experience with credit card fraud&lt;/a&gt;.
Now this issue is back again! Bad luck!&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/creditcard.jpg" alt="Credit Card Of The Future" style="display:block;clear:both;"/&gt;
Image CC-BY, &lt;a href="http://www.flickr.com/photos/scobleizer/5451075743/in/photostream/"&gt;Robert Scoble&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since my last card was re-issued I've used it &lt;strong&gt;only&lt;/strong&gt; at Amazon Web Services, Google Apps and Globul. Nowhere else.
According to the bank representative, who woke me up this morning,
VISA has sent them a list of card numbers which need to be blocked immediately. The bank was vague about
it but briefly mentioned some kind of a leak of VISA's card database.&lt;/p&gt;
&lt;p&gt;Knowing how negligent payment operators can be I can easily accept this version. I'm wondering if there
will be an official press release from VISA. Let me know if you hear about this!&lt;/p&gt;</summary></entry><entry><title>Another Day At The Office</title><link href="http://atodorov.org/blog/2013/06/09/another-day-at-the-office/" rel="alternate"></link><updated>2013-06-09T00:08:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-09:blog/2013/06/09/another-day-at-the-office/</id><summary type="html">&lt;p&gt;I just found &lt;a href="http://officesnapshots.com/"&gt;Office Snapshots&lt;/a&gt; and they don't have
any submissions from Bulgarian companies. No coincidence given the fact that many Bulgarian
offices are years behind contemporary work space design and architecture.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/troopers_skyscraper.jpg" alt="Troopers atop a Skyscraper" /&gt;
Image by &lt;a href="http://www.flickr.com/photos/egerbver/6196391731/lightbox/"&gt;egerbver&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So I got an idea - 
start my own blog section on this topic. It would be interesting to see the spaces
Bulgarian IT operates in. If the place is good - embrace it, if it sucks - despise it!
What do you think?  &lt;/p&gt;
&lt;p&gt;Selection rules are as follow: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Needs to be local Bulgarian company or a local branch of a foreign company;&lt;/li&gt;
&lt;li&gt;Can also be a start-up, an NGO or other organization;&lt;/li&gt;
&lt;li&gt;Business is in the field of IT and technology; Co-working spaces are exception;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let me know which companies you want to see featured here! Can you arrange a visit for me - let me know!&lt;/p&gt;</summary></entry><entry><title>Software Developer - Employee vs. Contractor, Part 1</title><link href="http://atodorov.org/blog/2013/06/07/software-developer-employee-vs-contractor-part-1/" rel="alternate"></link><updated>2013-06-07T10:00:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-07:blog/2013/06/07/software-developer-employee-vs-contractor-part-1/</id><summary type="html">&lt;p&gt;&lt;img src="/images/goldrush.jpg" alt="Gold prospectors" style="clear:both;display:block;"/&gt;
Image from &lt;a href="http://www.flickr.com/photos/powerhouse_museum/2376051109/sizes/o/in/photostream/"&gt;Flickr&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;People tend to think I have a dream job, when I tell them I don't go to the office. 
I will tell you a story about working from home, being a remotee and not having a
regular job. Welcome to the world of contracting and freelancing!&lt;/p&gt;
&lt;h2&gt;Terminology&lt;/h2&gt;
&lt;p&gt;Definitions taken from Wikipedia:&lt;/p&gt;
&lt;p&gt;An &lt;strong&gt;employee&lt;/strong&gt; contributes labor and expertise to an endeavor of an employer and is usually hired 
to perform specific duties which are packaged into a job. In most modern economies, the term 
"employee" refers to a specific defined relationship between an individual and a corporation, 
which differs from those of customer or client.&lt;/p&gt;
&lt;p&gt;An &lt;strong&gt;independent contractor&lt;/strong&gt; is a natural person, business, or corporation that provides goods
or services to another entity under terms specified in a contract or within a verbal agreement.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;freelancer&lt;/strong&gt; is somebody who is self-employed and is not committed to a particular employer long term.
For the purpose of this article this is more or less the same as independent contractor but for
a short-term project.&lt;/p&gt;
&lt;p&gt;Most important of all is that a contractor or freelancer is a separate entity from the organization they work for.&lt;/p&gt;
&lt;h2&gt;How I became a contractor&lt;/h2&gt;
&lt;p&gt;5+ years ago I was an employee for Red Hat in Czech Republic, but didn't want to
permanently live there for many reasons. During my time abroad I was a frequent
traveler. I became comfortable working on the go and quite often my bosses didn't
know where I was. Most importantly I made sure that location didn't matter!&lt;/p&gt;
&lt;p&gt;After 1.5 years I left the company with an option to continue working for
Red Hat Switzerland as a contractor. This is how I started working from home.&lt;/p&gt;
&lt;h2&gt;The dark side&lt;/h2&gt;
&lt;p&gt;Many people think working from home is easy. Many think being a contractor
is better than being an employee. Many think being away from the office means
you will work less. Many think you will make more money. &lt;strong&gt;Most people are wrong!&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;I will highlight the bad side of
being a contractor before exposing you to the goodies. Read the next parts before
even thinking to quit your job.&lt;/p&gt;
&lt;h2&gt;Payment&lt;/h2&gt;
&lt;p&gt;Contracting or freelancing is much more different than having a regular job.
If you are lucky you will have a long-term project and have a somewhat regular
income. On the other hand freelancing is usually the term used when working on
smaller short-term projects. They are irregular, so is your income. &lt;/p&gt;
&lt;p&gt;You need to plan in advance your expenses and make sure your income will cover them.
This is a lot easier with long-term projects. &lt;/p&gt;
&lt;p&gt;Also have in mind that contracts and projects can be delayed, terminated and postponed
relatively easy on behalf of the customer and there isn't much you can do. At best they have
already paid you for the job done until now and you are out looking for the next customer.&lt;/p&gt;
&lt;p&gt;Longer-term contracts I've been working on had the option to terminate without any explanation
given in two to four weeks. This is a risk you have to accept and have a contingency plan
if your income depends on a single long-term project.&lt;/p&gt;
&lt;p&gt;You either get paid by the hour or a lump sum on predefined milestone (e.g. half before, half after delivery).
Either way you trade time for money which isn't optimal (same thing do employees btw).
The best thing you can do is become an expert in your field and begin consulting.
This is trading less time plus expertise for more money - much better.&lt;/p&gt;
&lt;p&gt;I've been doing QA consulting for other smaller clients as odd jobs since forever.
Some of the companies include &lt;a href="http://obecto.com"&gt;Obecto&lt;/a&gt; and
&lt;a href="http://opencode.com"&gt;Opencode Systems&lt;/a&gt;. I also consult start-ups in the
field of software testing and quality assurance.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; at the end of 2015 I've been engaged more frequently with the
engineering team at &lt;a href="http://tradeo.com"&gt;Tradeo&lt;/a&gt;, bringing them my QA expertise.&lt;/p&gt;
&lt;h2&gt;Employee benefits&lt;/h2&gt;
&lt;p&gt;Employees do get a lot of benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Christmas bonus&lt;/li&gt;
&lt;li&gt;Quarterly bonus if the company is doing well&lt;/li&gt;
&lt;li&gt;Performance oriented bonuses&lt;/li&gt;
&lt;li&gt;25 days of paid vacation which increase the longer you work&lt;/li&gt;
&lt;li&gt;Extra health care&lt;/li&gt;
&lt;li&gt;Unemployment insurance, social securities, etc.&lt;/li&gt;
&lt;li&gt;Gym or other sport activities in the office&lt;/li&gt;
&lt;li&gt;Lunch or some snacks at the office&lt;/li&gt;
&lt;li&gt;Free car/cell phone/laptop, whatever&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The bigger and more people oriented the company the more the benefits.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contractors get nothing!&lt;/strong&gt; Your contract payment is the only thing you get.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you want a vacation - you don't get paid!&lt;/li&gt;
&lt;li&gt;If you are sick - you don't get paid!&lt;/li&gt;
&lt;li&gt;If you need equipment - you have to buy it!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get used to it and plan accordingly! That said I do use company sponsored
&lt;a class="wikilink" href="http://amzn.to/1RdviyD"&gt;MacBook Air&lt;/a&gt; and have a small budget for visiting some conferences
abroad. In addition I attend lot more &lt;a href="/blog/category/events/"&gt;events&lt;/a&gt;
on my own either by helping as volunteer or being a speaker at the event.
I also have a personal unemployment and extra health care insurance, in fact
several of them, just in case!&lt;/p&gt;
&lt;h2&gt;Taxes&lt;/h2&gt;
&lt;p&gt;In every country dealing with tax authorities is a hell. If you are a sole proprietor in
Bulgaria chances are you will pay more taxes and social securities compared to being a
company for the same revenue. If you can, always incorporate a company and contract through it.
As of late &lt;strong&gt;all&lt;/strong&gt; of my income goes through the company entity, I don't receive
a single cent on my personal account. At the end of the year I pay myself a divident
and use the money during the next year.&lt;/p&gt;
&lt;p&gt;Find a good accountant (as much as you can afford though) and make sure they know everything
about your income and activities. It's always better to hire an accounting company which
can grant you some protection and liability against prosecution from tax authorities - for example
if they get their calculation wrong. The extent of this should be written in a contract. &lt;/p&gt;
&lt;p&gt;If necessary also hire a lawyer. If you deal with lots of paperwork and contracts (or NDAs)
this is definitely a wise thing to do. Don't spare your money, spare yourself going to jail.&lt;/p&gt;
&lt;h2&gt;Work environment&lt;/h2&gt;
&lt;p&gt;Working from your bedroom sounds cool but it isn't. You need a quiet and comfortable
place to work. Every-day house distractions are your worst enemy. You need much greater
discipline compared to working in an office. &lt;/p&gt;
&lt;p&gt;My own work environment has evolved to having the best 
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=computer%20chairs&amp;linkCode=ur2&amp;sprefix=computer%20chairs%2Caps%2C318&amp;tag=atodorovorg-20&amp;url=search-alias%3Doffice-products"&gt;office chair&lt;/a&gt;&lt;img src="https://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
from Sweden, custom designed furniture to make my life easier
and access stuff more quickly, maximum usage of storage space at home,
SOHO network designed by myself so that every device has its place and plug,
backup Internet connections, etc. &lt;strong&gt;You need to invest in your work space to reap the benefits later&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I also follow a strict regime and have some fixed hours for work and no-work related activities.
I split them between regular 9-5 business hours and evening/early morning to have more
flexibility. Whatever the case you have to plan your activities and stick to your plan.&lt;/p&gt;
&lt;p&gt;In the office there's always time for a coffee or some chit-chat.
At home there is not. Every hour counts to your bonus so it is in your interest to log
as many hours as possible and perform actual work during them. There are some freelance websites
such as oDesk (which sucks btw) that require you to install software to monitor your screen,
camera and keyboard in order the customer to see you were actually working. &lt;/p&gt;
&lt;p&gt;Beware that there are physical limits which you can't break without putting your health
at risk. I've tried working 200+ hours a month. It is doable once or twice a year when you
have lot of things to do. But you can't do it all the time. I've tried, trust me.&lt;/p&gt;
&lt;p&gt;Another important thing is the social element. Being out of the office minimizes the opportunities
to socialize with co-workers or simply ask for help. A contractor needs some other way to
compensate for this - being part of special interest groups, attending events and the like. &lt;/p&gt;
&lt;h2&gt;No customers risk&lt;/h2&gt;
&lt;p&gt;As with every business there is a risk of not having the right customers or not having them
at all. There are several things you can do to minimize this risk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be an expert in at least one field - this is your primary focus; For example: 
I'm an expert in Quality Engineering and Red Hat Enterprise Linux;&lt;/li&gt;
&lt;li&gt;Become very good professional in few more fields - mine are cloud computing,
Python and Django and general open source programming;&lt;/li&gt;
&lt;li&gt;Grow your network of friends, co-workers, IT professionals and possible customers -
you never know where the next customer will come from;&lt;/li&gt;
&lt;li&gt;Stay current with popular technologies (no need to be expert) so you can learn quickly if
the need arises;&lt;/li&gt;
&lt;li&gt;Have some backup skills where there isn't much competition and customers will have a hard time
finding the right guy. Also make sure you know where to find these customers. My skill is
Pascal - its an old language but there are lots of legacy software which still needs to be
maintained. Did you know you can even run COBOL in the cloud these days? &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Diversify and be flexible - you have the opportunity to generate income from
various sources - use it. I will tell you about mine in the next part of this article.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt;
I also strongly recommend the
&lt;a rel="nofollow" href="http://www.amazon.com/gp/product/0307465357/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0307465357&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=KOFI4CUL5C4ZM5Y2"&gt;The 4-Hour Workweek: Escape 9-5, Live Anywhere, and Join the New Rich&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0307465357" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;
book by Tim Ferris. It is one of my all time favorite books and I try
to live by its rules as much as I can. I've also done a
&lt;a href="/blog/2014/08/03/book-review-4-hour-workweek/"&gt;book review here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TO BE CONTINUED ...&lt;/strong&gt; meanwhile use the comments below to ask me things you are curious about.&lt;/p&gt;</summary><category term="start-up"></category></entry><entry><title>SofiaValley UI bug</title><link href="http://atodorov.org/blog/2013/06/02/sofiavalley-ui-bug/" rel="alternate"></link><updated>2013-06-02T21:04:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-06-02:blog/2013/06/02/sofiavalley-ui-bug/</id><summary type="html">&lt;p&gt;&lt;img src="/images/bugs/sv-bug.png" alt="SV bug" style="clear:both;display:block;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://sofiavalley.com"&gt;SofiaValley&lt;/a&gt; recently had a bug in their UI.
As seen above when clicking the Like button the widget would overlap with
other visual elements. At first this doesn't look like a big deal but it blocks
the user from sharing the page via Facebook which is important for a blog.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/bugs/sv-bug-fixed.png" alt="SV bug fixed" style="clear:both;display:block;"/&gt;&lt;/p&gt;
&lt;p&gt;I have reported the error and it was fixed very quickly. +1 for SofiaValley.&lt;/p&gt;
&lt;p&gt;Have you spotted any other interesting bugs? Let me know and they will be published
here.&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>Call of the Open Source Guru</title><link href="http://atodorov.org/blog/2013/05/31/call-of-the-open-source-guru/" rel="alternate"></link><updated>2013-05-31T12:12:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-05-31:blog/2013/05/31/call-of-the-open-source-guru/</id><summary type="html">&lt;p&gt;This week (28.05.2013) I've attended an interesting
&lt;a href="https://www.facebook.com/events/244624942345762/248165165325073/"&gt;event&lt;/a&gt;, called 
“Call of the Guru”, that was held at the Faculty of Mathematics and Informatics at
Sofia University. The idea was to get a group of IT professionals (gurus) to talk to
young students on topics related to work, academia, start-up and open source.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/students_listening_to_gurus.jpg" alt="Students" style="float:left; display:block;margin-right:50px"/&gt;
&lt;img src="/images/gurus_talking.jpg" alt="Gurus" style="float:left;display:block;clear:right;"/&gt;
Images from &lt;a href="http://radorado.me/call-of-the-guru-materials/"&gt;RadoRado's Place&lt;/a&gt; and
&lt;a href="http://sofiavalley.com/students-professionals-meetup/"&gt;SofiaValley&lt;/a&gt;.
Check their event reviews as well.&lt;/p&gt;
&lt;p&gt;In &lt;a href="/blog/2013/05/27/it-jobs-prediction-quality-engineering-devops-augmented-reality/"&gt;another post&lt;/a&gt;
I've already shared my thoughts on future IT jobs. Here I will talk about what open source
means for students.&lt;/p&gt;
&lt;h2&gt;Why hack open source&lt;/h2&gt;
&lt;p&gt;That's the number one question students will ask. The answer is simple&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It gives you experience and you become a hacker!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is absolutely no way one could graduate in their early 20s, not work
during study and have 3-5 years of experience as required by many job offers.
Unless one hacks open source. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open source is real world, not a play project. There are many interesting problems
to be solved; There's always work to be done;&lt;/li&gt;
&lt;li&gt;Complex software teaches you software design/architecture patterns;&lt;/li&gt;
&lt;li&gt;Larger projects like Linux distributions can also teach you about software release
cycle and release processes;&lt;/li&gt;
&lt;li&gt;You work with a team, which drives you forward and you gain experience;&lt;/li&gt;
&lt;li&gt;You learn to be patient as your work is reviewed by others and mistakes pointed out;&lt;/li&gt;
&lt;li&gt;Larger projects use several different languages so you learn them; or alternatively
hack on different projects;&lt;/li&gt;
&lt;li&gt;You communicate - via email and IRC mostly but that teaches you communication
skills. To see the difference between how educated people talk and how politicians
talk listen to &lt;a href="http://www.youtube.com/watch?v=VVJldn_MmMY"&gt;this video&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;You make friends and connections which may benefit you later in your career;&lt;/li&gt;
&lt;li&gt;Many open source companies recruit right from the community. I know lots of
people who landed their dream job by hacking for fun.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a student, if you can afford not getting a job it's better to use your time on
open source projects. This is what I did as a young student and a junior developer.
The rest is history!&lt;/p&gt;
&lt;h2&gt;What to do&lt;/h2&gt;
&lt;p&gt;There are many things one can do in open source - write code, test software and
find bugs, write automated test cases, translate to local languages,
design user interfaces and project websites,
maintain wiki articles, provide help to users on forums or IRC channels, help organize
events, etc. All of this is respected in the community and gives credibility. &lt;/p&gt;
&lt;h2&gt;Where to start&lt;/h2&gt;
&lt;p&gt;If you haven't already read &lt;a href="http://www.catb.org/~esr/faqs/hacker-howto.html"&gt;How To Become A Hacker&lt;/a&gt; by
Eric Raymond you should do so right away. Then come back and finish this article.&lt;/p&gt;
&lt;p&gt;For those who'd like to start coding but have no idea where to start take a look at
&lt;a href="http://openhatch.org/"&gt;OpenHatch&lt;/a&gt;. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OpenHatch is a non-profit dedicated to matching prospective free software contributors with communities, tools, and education. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you still like to be a developer but don't feel confident enough to hack on the core of
the project I'd recommend you start by writing automated test cases. Writing test cases doesn't
require much previous experience in programming and lets you explore and learn the internals
of the software you're testing. With that knowledge you will become more confident and start
writing on the core features if you like. I am myself a QA but regularly contribute patches to
software I test because I know how it works or why it doesn't and it's easy for me to fix it.&lt;/p&gt;
&lt;p&gt;If you'd better start as a translator check &lt;a href="https://www.transifex.com"&gt;Transifex&lt;/a&gt;.
It's used by both commercial and open source entities and has become the de-facto standard in
open source translation tools. Btw the entire Transifex company was build after trying to
solve a particular problem in the Fedora Project and they are an open source company.&lt;/p&gt;
&lt;p&gt;For general news about open source check &lt;a href="http://opensource.com/"&gt;OpenSource.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Have questions? I have answers&lt;/h2&gt;
&lt;p&gt;Don't hesitate to ask me anything about open source and/or how to get involved with it.
I will gladly share my experience (learned the hard-way in the old days) or point you
to other folks who may know more on the topic.&lt;/p&gt;</summary></entry><entry><title>Why VMware Multi-Hypervisor Manager Architecture Is Wrong</title><link href="http://atodorov.org/blog/2013/05/30/why-vmware-multi-hypervisor-manager-architecture-is-wrong/" rel="alternate"></link><updated>2013-05-30T23:36:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-05-30:blog/2013/05/30/why-vmware-multi-hypervisor-manager-architecture-is-wrong/</id><summary type="html">&lt;p&gt;Today I've visited the annual 
&lt;a href="http://www.openhouse.vmware-bulgaria.com/"&gt;VMware Open House Event&lt;/a&gt; in Sofia.
One of the sessions discussed their product 
&lt;a href="http://www.vmware.com/support/mhm/doc/vcenter-multi-hypervisor-manager-10-release-notes.html"&gt;vCenter Multi-Hypervisor Manager&lt;/a&gt;
and the developers explained their architecture and technology behind it. 
I think they are wrong.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/vmware_mhm_architecture.png" alt="MHM Architecture" style="clear:both;display:block;"/&gt;
Image taken from product release notes.&lt;/p&gt;
&lt;p&gt;As shown above the purple-orange components are the MHM ones. They are designed as
plug-ins to the vCenter product and can not function as stand alone products.
vCenter MHM Server is responsible for communicating with 3rd party hypervisors
and then talks back to the MHM Extension in vCenter which feeds the MHM Plug-In (the UI).
I see three bad design decisions here: &lt;/p&gt;
&lt;p&gt;1) The plugin architecture makes both the management layer and the UI a separate module.
As was shown in a demo session the user can not manage/visualize ESX and Hyper-V hosts/VMs
at the same time. They are managed and visualized in separate views. 
This leads to non uniform user experience. Not to mention both UIs are different because the
supported hypervisor capabilities are different. -1 for user experience. &lt;/p&gt;
&lt;p&gt;2) From what I understand both vCenter and MHM Extension provide API access. MHM one is not public yet.
Customers are using this API to build their own scripts around the infrastructure. For a customer
this means duplicating effort and maintaining scripts that talk to two separate APIs, although they
will be very similar to one another. -1 for making it easy on the customer.&lt;/p&gt;
&lt;p&gt;3) From development point of view the top two components are not necessary. They introduce
extra development and management costs to the product. -1 for product maintainability.&lt;/p&gt;
&lt;h2&gt;The Alternative&lt;/h2&gt;
&lt;p&gt;One could design the same product in the fashion that &lt;a href="http://libvirt.org"&gt;libvirt&lt;/a&gt; does - 
abstract all hypervisor details and provide a common API to build applications against.
In this case vCenter Server will be the application on top.
This interface will also report hypervisor capabilities so that the UI will be disabled
where appropriate. &lt;/p&gt;
&lt;p&gt;&lt;img src="/images/libvirt-driver-arch.png" alt="Libvirt Driver Architecture" style="clear:both;display:block;"/&gt;
Image taken from &lt;a href="http://libvirt.org/api.html"&gt;http://libvirt.org/api.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I think libvirt's approach is much cleaner and easier to maintain in the long term.&lt;/p&gt;
&lt;p&gt;Indeed I've asked the question why not use libvirt - 
it already supports ESX and Hyper-V as well as bunch of other hypervisors. I didn't get a clear
answer on that, just that the team was looking at it, evaluated libvirt but opted to go
another way. &lt;/p&gt;
&lt;p&gt;I still feel VMware has not learned how to do the open source dance as well as others do.
What do you think? &lt;/p&gt;</summary></entry><entry><title>Configuring Anonymous FTP Uploads On Red Hat Enterprise Linux 6</title><link href="http://atodorov.org/blog/2013/05/30/configuring-anonymous-ftp-uploads-on-red-hat-enterprise-linux-6/" rel="alternate"></link><updated>2013-05-30T13:07:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-05-30:blog/2013/05/30/configuring-anonymous-ftp-uploads-on-red-hat-enterprise-linux-6/</id><summary type="html">&lt;p&gt;Install related packages and make configuration changes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum -y install vsftp policycoreutils-python
sed -i &amp;quot;s/#anon_upload_enable=YES/anon_upload_enable=YES/&amp;quot; /etc/vsftpd/vsftpd.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configure writable directory for uploads:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /var/ftp/pub/upload
chgrp ftp /var/ftp/pub/upload
chmod 730 /var/ftp/pub/upload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configure SELinux - this is &lt;strong&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=968935"&gt;MISSING&lt;/a&gt;&lt;/strong&gt;
from Red Hat's official docs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;setsebool -P allow_ftpd_anon_write=1
semanage fcontext -a -t public_content_rw_t &amp;#39;/var/ftp/pub/upload(/.*)&amp;#39;
chcon -t public_content_rw_t /var/ftp/pub/upload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Start the service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chkconfig vsftpd on
service vsftpd start
&lt;/pre&gt;&lt;/div&gt;</summary><category term="RHEL"></category><category term="tips"></category></entry><entry><title>IT Jobs Prediction: Quality Engineering, DevOps, Augmented Reality</title><link href="http://atodorov.org/blog/2013/05/27/it-jobs-prediction-quality-engineering-devops-augmented-reality/" rel="alternate"></link><updated>2013-05-27T21:14:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-05-27:blog/2013/05/27/it-jobs-prediction-quality-engineering-devops-augmented-reality/</id><summary type="html">&lt;p&gt;Tomorrow I'm taking part in a discussion at Sofia University targeted towards
young students. Speakers are well-known IT professionals and I'm honored to be invited.&lt;/p&gt;
&lt;p&gt;One of the preliminary questions posted from students is&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In which field to expect saturation of junior specialists in the next 5 years?
Which technologies will see higher demand and which will not?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While I don't have a clear answer here are my favorites and comments. If I was a 20 year old
student I would definitely be paying attention to these. &lt;/p&gt;
&lt;h2&gt;Quality Engineering, Quality Assurance, Test Automation&lt;/h2&gt;
&lt;p&gt;The more software gets written, the more critical the need to test it.
In the past 6+ years I've been working in the field of QA and saw 5x rise in
the workload and number of team members I've been working with. Traditionally
Bulgaria is strong on the development side but lacks trained QA engineers.
In the past I have also been approached by several foreign companies to train
their QA staff and organize their QA processes. The situation here is not very
different even today. &lt;/p&gt;
&lt;p&gt;If you want a secure job become a top-notch QA with experience ranging from
test automation, QA management, bug finding and all between. Strongly recommended
is to get some industry recognized certificates (I don't have such for QA). &lt;/p&gt;
&lt;h2&gt;DevOps&lt;/h2&gt;
&lt;p&gt;Looks like &lt;a href="http://en.wikipedia.org/wiki/DevOps"&gt;DevOps&lt;/a&gt; is the new mantra.
With advancement of cloud technologies and everything becoming as-a-service
my gut is telling me that more and more organization will be switching to DevOps
types of operations in an attempt to be faster, more cost effective and more agile.
I myself am looking into this field. &lt;/p&gt;
&lt;p&gt;While I haven't done a formal research to back-up my words I think DevOps will be
a hot topic in the next 5 years until it becomes the norm. Acquire DevOps skills
if you are particularly interested in working for start-ups or small engineering
organizations serving large customer bases (e.g Disqus, GitHub, The Guardian).&lt;/p&gt;
&lt;h2&gt;Augmented Reality&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Augmented_reality"&gt;AR&lt;/a&gt; is not a fiction anymore. 
We have everything we need to make use of it in everyday life and it's slowly 
&lt;a href="http://en.wikipedia.org/wiki/Google_Glass"&gt;becoming mainstream&lt;/a&gt;.
If you are into maths, algorithms and research then this is your field. Couple
with mobile devices, social networks, big data and cloud and you have a job
for a life time. &lt;/p&gt;
&lt;h2&gt;What else?&lt;/h2&gt;
&lt;p&gt;I don't have a crystal ball to predict the future. It could be that my IT jobs
predictions are totally wrong. Let me know what do you think. If you were in the
beginning of your career which fields will you bet on? &lt;/p&gt;</summary></entry><entry><title>Balkan Venture Forum Sofia Post-mortem</title><link href="http://atodorov.org/blog/2013/05/23/balkan-venture-forum-sofia-post-mortem/" rel="alternate"></link><updated>2013-05-23T13:29:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-05-23:blog/2013/05/23/balkan-venture-forum-sofia-post-mortem/</id><summary type="html">&lt;p&gt;&lt;img src="/images/bkvf_sofia.png" alt="BkVF Sofia" style="float:left;margin-right:10px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.balkanventureforum.org/"&gt;Balkan Venture Forum&lt;/a&gt; in Sofia is over. It's been two
very exciting days, full of many interesting talks both on stage and off stage.&lt;/p&gt;
&lt;p&gt;There were so many things that happened and so many new people I met that it will be hard
to mention all of that in a single blog post. I just want to highlight the things I enjoyed
the most.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt;Networking &amp;amp; pitching at the bar&lt;/h2&gt;
&lt;p&gt;I've been invited to BkVF long ago. However my initial intention was not to attend because
this month proved to be very busy. I've changed my mind after Boyan Benev, one of the organizers
invited me 10 days ago with an interesting proposal - distribute &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt;'s beer mats at the bar!&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/difio_beermats.jpg" alt="Difio beer mats" style="float:left;clear:both;display:inline-block;"/&gt;&lt;/p&gt;
&lt;p&gt;So I was there for the networking. As I used to say when people asked me if I was pitching&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am pitching at the bar!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Networking was very intensive both during the coffee breaks and cocktail and during the sessions.
I've now got close to 50 new business cards in my pocket. I've met very cool guys and gals both
developers and non-tech. &lt;/p&gt;
&lt;p&gt;From the companies that were pitching in the main hall I particularly liked
&lt;a href="http://imagga.com/"&gt;Imagga&lt;/a&gt;, &lt;a href="http://transmetrics.eu/"&gt;Transmetrics&lt;/a&gt; and &lt;a href="http://kimola.com/"&gt;Kimola&lt;/a&gt;.
Imagga was probably the most deep-tech/science oriented company at BkVF while Transmetrics
and Kimola focus on cloud and big data solutions.&lt;/p&gt;
&lt;h2&gt;BlackBerry development session&lt;/h2&gt;
&lt;p&gt;OK, I'm not into mobile technology nor smart phones but that may change soon. 
BlackBerry had a strong presence and I was able to talk to some of their developer
support folks.
The OS of BlackBerry 10 is based on QNX kernel with multiple SDKs available to write apps.
Most of all I like the fact that it is POSIX compliant with C/C++ native SDK available.
Qt/QML is also available. &lt;/p&gt;
&lt;p&gt;I'm particularly interested in how hard it will be to port
some existing open source tools to BlackBerry. I'm talking Bash, Python and the
command line tools I currently use on Linux. I'll be contacting them in the near future
to get a device for testing and hacking and will keep you posted.&lt;/p&gt;</summary><category term="start-up"></category><category term="events"></category></entry><entry><title>Linux and Python Tools To Compare Images</title><link href="http://atodorov.org/blog/2013/05/17/linux-and-python-tools-to-compare-images/" rel="alternate"></link><updated>2013-05-17T21:13:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-05-17:blog/2013/05/17/linux-and-python-tools-to-compare-images/</id><summary type="html">&lt;p&gt;How to compare two images in Python? A tricky question with quite a few answers.
Since my needs are simple, my solution is simpler!&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/difio_compare.png" alt="Difio Google +1 changes" style="clear:both;display:block"/&gt;
&lt;a href="http://www.dif.io"&gt;dif.io&lt;/a&gt; homepage before and after it got a G+1.&lt;/p&gt;
&lt;h2&gt;ImageMagic is magic&lt;/h2&gt;
&lt;p&gt;If you haven't heard of &lt;a href="http://www.imagemagick.org/"&gt;ImageMagic&lt;/a&gt; then you've been
living in a cave on a deserted island! The suite contains the &lt;code&gt;compare&lt;/code&gt; command
which mathematically and visually annotates the difference between two images.&lt;/p&gt;
&lt;p&gt;The third image above was produced with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;compare difio_10.png difio_11.png difio_diff.png
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Differences are displayed in red (default) and the original image is seen in the
background. As shown, the Google +1 button and count has changed between the two
images. &lt;code&gt;compare&lt;/code&gt; is a nice tool for manual inspection and debugging.
It works well in this case because the images are lossless PNGs and are regions of
screen shots where most objects are the same.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/chestnut_compare.jpg" alt="JPEG quality reduction" style="clear:both;display:block"/&gt;
Chestnuts I had in Rome. 100% to 99% quality reduction.&lt;/p&gt;
&lt;p&gt;As seen on the second image set only 1% of JPEG quality change leads to many small
differences in the image, which are invisible to the naked eye.&lt;/p&gt;
&lt;h2&gt;Python Imaging Library aka PIL&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.pythonware.com/products/pil/"&gt;PIL&lt;/a&gt; is another powerful tool for
image manipulation. I googled around and found some answers to my original
questions
&lt;a href="http://stackoverflow.com/questions/1927660/compare-two-images-the-python-linux-way"&gt;here&lt;/a&gt;.
The proposed solution is to calculate
&lt;a href="https://en.wikipedia.org/wiki/Root_mean_square"&gt;RMS&lt;/a&gt; of the two images
and compare that with some threshold to establish the level of certainty that
two images are identical.&lt;/p&gt;
&lt;h2&gt;Simple solution&lt;/h2&gt;
&lt;p&gt;I've been working on a script lately which needs to know what is displayed on
the screen and recognize some of the objects. Calculating image similarity is
quite complex but comparing if two images are &lt;strong&gt;exactly&lt;/strong&gt; identical is not.
Given my environment and the fact
that I'm comparing screen shots where only few areas changed
(see first image above for example) led to the following solution: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Take a screen shot;&lt;/li&gt;
&lt;li&gt;Crop a particular area of the image which needs to be examined;&lt;/li&gt;
&lt;li&gt;Compare to a baseline image of the same area created manually;&lt;/li&gt;
&lt;li&gt;Don't use RMS, use the image histogram only to speed up calculation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've prepared the baseline images with GIMP and tested couple of scenarios
using &lt;code&gt;compare&lt;/code&gt;. Here's how it looks in code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dogtail.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;screenshot&lt;/span&gt;

&lt;span class="n"&gt;baseline_histogram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/home/atodorov/baseline.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;histogram&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;region&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crop&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;860&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;950&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;320&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;histogram&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;baseline_histogram&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;The presented solution was easy to program, works fast and reliably for my use case.
In fact after several iterations I've added a second baseline image to account for some
unidentified noise which appears randomly in the first region. As far as I can tell
the two checks combined are 100% accurate. &lt;/p&gt;
&lt;h2&gt;Field of application&lt;/h2&gt;
&lt;p&gt;I'm working on QA automation where this comes handy. However you may try some
lame CAPTCHA recognition by comparing regions to a pre-defined baseline. Let me know
if you come up with a cool idea or actually used this in code. &lt;/p&gt;
&lt;p&gt;I'd love to hear
about interesting projects which didn't get too complicated because of image
recognition.&lt;/p&gt;</summary><category term="Python"></category><category term="QA"></category></entry><entry><title>Dual Password Encryption With EncFS On Red Hat Enterprise Linux 6</title><link href="http://atodorov.org/blog/2013/05/14/dual-password-encryption-with-encfs-on-red-hat-enterprise-linux-6/" rel="alternate"></link><updated>2013-05-14T21:26:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-05-14:blog/2013/05/14/dual-password-encryption-with-encfs-on-red-hat-enterprise-linux-6/</id><summary type="html">&lt;p&gt;This article is a step-by-step guide to using two passwords with &lt;a href="http://www.arg0.net/encfs"&gt;EncFS&lt;/a&gt;.
The primary password is required and may be used to secure all data;
the secondary password is optional and may be stored on USB stick or
other removable media and used to secure more sensitive data. &lt;/p&gt;
&lt;p&gt;&lt;img src="/images/encfs_raleigh.jpg" alt="Article in Raleigh" style="clear:both;display:block;"/&gt;
The original article in Red Hat's Raleigh HQ!&lt;/p&gt;
&lt;p&gt;This article has been originally written for and published by
&lt;a href="http://magazine.redhat.com/2007/06/13/dual-password-encryption-with-encfs/"&gt;Red Hat Magazine&lt;/a&gt;.
Here is a shortened version with updated commands for Red Hat Enterprise Linux 6.&lt;/p&gt;
&lt;h2&gt;Technical Information&lt;/h2&gt;
&lt;p&gt;EncFS provides an encrypted filesystem in user-space. EncFS provides security
against offline attacks like a stolen notebook.
EncFS works on files and directories, not an entire block device.
It modifies file names and contents.
The data is stored on the underlying filesystem and meta-data is preserved.
File attributes such as ownership, modification date and permission bits are not encrypted
and are visible to anybody. EncFS is acting like a translator between the user and
the filesystem, encrypting and decrypting on the fly.&lt;/p&gt;
&lt;p&gt;EncFS is easy to use and requires no special setup. A local user has to be in the ‘fuse’
group to use EncFS. It does not require ‘root’ privileges.
EncFS can be used with secondary passwords. This could be used to store a separate set of files on the same encrypted filesystem. 
EncFS ignores files which do not decode properly, so files created with separate passwords will 
only be visible when the filesystem is mounted with the associated password.
There is the option to read passwords from an external program or stdin (standard input). 
This option combined with custom scripting makes EncFS very flexible.
By default, all FUSE based filesystems are visible only to the user who mounted them. 
No other users (including root) can view the filesystem contents.&lt;/p&gt;
&lt;h2&gt;Installing EncFS&lt;/h2&gt;
&lt;p&gt;Install fuse-encfs from &lt;a href="https://fedoraproject.org/wiki/EPEL"&gt;EPEL&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# yum install fuse-encfs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Load the FUSE module:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# /sbin/modprobe fuse
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And, finally, add any users that will use EncFS to group ‘fuse’:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# usermod -Gfuse jdoe
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Using EncFS&lt;/h2&gt;
&lt;p&gt;Using EncFS does not differ from using any other filesystem.
The only thing you need to do is to mount it somewhere and start creating 
files and directories under the mount point.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Use only absolute path names with EncFS!&lt;/p&gt;
&lt;p&gt;Create working directories:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p ~/encrypted ~/plain
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;plain/&lt;/code&gt; – looks like a normal directory. All files stored here look like normal
files for the user who mounted this directory with EncFS. This acts like a virtual
directory performing encryption and decryption.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;encrypted/&lt;/code&gt; – looks garbled. The actual data is stored here and is encrypted.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now you can mount the new EncFS volume for the first time. This assumes a default configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;encfs /home/jdoe/encrypted /home/jdoe/plain
Creating new encrypted volume.
Please choose from one of the following options:
 enter &lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; expert configuration mode,
 enter &lt;span class="s2"&gt;&amp;quot;p&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; pre-configured paranoia mode,
 anything &lt;span class="k"&gt;else&lt;/span&gt;, or an empty line will &lt;span class="k"&gt;select&lt;/span&gt; standard mode.
?&amp;gt; 

Standard configuration selected.

Configuration finished.  The filesystem to be created has
the following properties:
Filesystem cipher: &lt;span class="s2"&gt;&amp;quot;ssl/aes&amp;quot;&lt;/span&gt;, version 3:0:2
Filename encoding: &lt;span class="s2"&gt;&amp;quot;nameio/block&amp;quot;&lt;/span&gt;, version 3:0:1
Key Size: &lt;span class="m"&gt;192&lt;/span&gt; bits
Block Size: &lt;span class="m"&gt;1024&lt;/span&gt; bytes
Each file contains &lt;span class="m"&gt;8&lt;/span&gt; byte header with unique IV data.
Filenames encoded using IV chaining mode.
File holes passed through to ciphertext.

Now you will need to enter a password &lt;span class="k"&gt;for&lt;/span&gt; your filesystem.
You will need to remember this password, as there is absolutely
no recovery mechanism.  However, the password can be changed
later using encfsctl.

New Encfs Password: **********
Verify Encfs Password: **********
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;some content&amp;quot;&lt;/span&gt; &amp;gt; ~/plain/file.one
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check contents in &lt;code&gt;plain/&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls -la ~/plain/
total 12
drwxrwxr-x. &lt;span class="m"&gt;2&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:31 .
drwx------. &lt;span class="m"&gt;6&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:29 ..
-rw-rw-r--. &lt;span class="m"&gt;1&lt;/span&gt; jdoe jdoe   &lt;span class="m"&gt;13&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:31 file.one

&lt;span class="nv"&gt;$ &lt;/span&gt;cat ~/plain/file.one 
some content
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check what’s in &lt;code&gt;encrypted/&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls -la ~/encrypted/
total 16
drwxrwxr-x. &lt;span class="m"&gt;2&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:31 .
drwx------. &lt;span class="m"&gt;6&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:29 ..
-rw-rw-r--. &lt;span class="m"&gt;1&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;1083&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:30 .encfs6.xml
-rw-rw-r--. &lt;span class="m"&gt;1&lt;/span&gt; jdoe jdoe   &lt;span class="m"&gt;21&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:31 Wq5NZ6q-yP-fYNWYsjzFhHf9
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; &lt;code&gt;.encfs6.xml&lt;/code&gt; is a special file. When performing backups or restoring data,
make sure to keep this file!&lt;/p&gt;
&lt;p&gt;Inspect the contents of encrypted file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat ~/encrypted/Wq5NZ6q-yP-fYNWYsjzFhHf9 
���r�N�M���&lt;span class="s2"&gt;&amp;quot;p��&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unmount the filesystem and mount it again with another password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;fusermount -u ~/plain/
&lt;span class="nv"&gt;$ &lt;/span&gt;encfs --anykey /home/jdoe/encrypted /home/jdoe/plain
EncFS Password: *****
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Caution:&lt;/strong&gt; We are using the --anykey option to allow secondary passwords.&lt;/p&gt;
&lt;p&gt;Check &lt;code&gt;plain/&lt;/code&gt; again. The directory is empty. Previous files were not decoded with the new password.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls -la ~/plain/
total 8
drwxrwxr-x. &lt;span class="m"&gt;2&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:31 .
drwx------. &lt;span class="m"&gt;6&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:29 ..
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now create another file that will be in “hidden” mode:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hidden contents&amp;quot;&lt;/span&gt; &amp;gt; ~/plain/file.two
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check again what’s in &lt;code&gt;encrypted/&lt;/code&gt;. Both files are stored in the same directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls -la ~/encrypted/
total 20
drwxrwxr-x. &lt;span class="m"&gt;2&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:35 .
drwx------. &lt;span class="m"&gt;6&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:29 ..
-rw-rw-r--. &lt;span class="m"&gt;1&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;1083&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:30 .encfs6.xml
-rw-rw-r--. &lt;span class="m"&gt;1&lt;/span&gt; jdoe jdoe   &lt;span class="m"&gt;24&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:35 PfkZHs16YsKkznnTujaVsOuS
-rw-rw-r--. &lt;span class="m"&gt;1&lt;/span&gt; jdoe jdoe   &lt;span class="m"&gt;21&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:31 Wq5NZ6q-yP-fYNWYsjzFhHf9
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unmount and mount again using the first password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;fusermount -u ~/plain/
&lt;span class="nv"&gt;$ &lt;/span&gt;encfs --anykey /home/jdoe/encrypted /home/jdoe/plain
EncFS Password: **********
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Inspect the contents of &lt;code&gt;plain/&lt;/code&gt; again. The second file was not decoded properly and is not shown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls -la ~/plain/
total 12
drwxrwxr-x. &lt;span class="m"&gt;2&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:35 .
drwx------. &lt;span class="m"&gt;6&lt;/span&gt; jdoe jdoe &lt;span class="m"&gt;4096&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:29 ..
-rw-rw-r--. &lt;span class="m"&gt;1&lt;/span&gt; jdoe jdoe   &lt;span class="m"&gt;13&lt;/span&gt; May &lt;span class="m"&gt;14&lt;/span&gt; 21:31 file.one
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;You have learned how to use encryption to protect your data.
There is also a nice graphical application 
for using EncFS with KDE called &lt;a href="http://kde-apps.org/content/show.php?content=54078"&gt;K-EncFS&lt;/a&gt;.
I'll be happy to answer any questions or comments.&lt;/p&gt;</summary><category term="RHEL"></category></entry><entry><title>Why Instagram Could Not Be Founded In Europe</title><link href="http://atodorov.org/blog/2013/05/02/why-instagram-could-not-be-founded-in-europe/" rel="alternate"></link><updated>2013-05-02T08:07:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-05-02:blog/2013/05/02/why-instagram-could-not-be-founded-in-europe/</id><summary type="html">&lt;p&gt;&lt;em&gt;Can a company like Instagram be founded in Europe and successfully exit for
$ 1 billion?&lt;/em&gt; What do you think ?&lt;/p&gt;
&lt;p&gt;This is precisely the question &lt;a href="http://speedupgroup.com/about-us/"&gt;Bartłomiej Gola&lt;/a&gt;
asked at WebIT BG last week. Here are his answers.&lt;/p&gt;
&lt;h2&gt;Theory says yes&lt;/h2&gt;
&lt;p&gt;In theory Europe is well suited for successful companies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We have talented software engineers and hackers;&lt;/li&gt;
&lt;li&gt;Great ideas are available everywhere;&lt;/li&gt;
&lt;li&gt;Funding is available - both early stage seed funding as well
as VCs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Forget about it&lt;/h2&gt;
&lt;p&gt;The short answer though is "forget about it"! There are several
major differences between Europe and Silicon Valley which
could break your start-up easily.&lt;/p&gt;
&lt;p&gt;1) Europe doesn't have a strong branding with respect to technology.
We are not perceived as a strong tech community which produces great things.
Not to mention individual countries like Bulgaria.
This means foreign investors are
less likely to invest in European companies because they haven't heard
about other successful companies coming from the region.&lt;/p&gt;
&lt;p&gt;We as a community should work together and popularize the region
(especially South Eastern Europe). I've seen this already in action.
German cloud provider &lt;a href="http://cloudcontrol.de"&gt;cloudControl&lt;/a&gt; has
branded their website as "Proudly Made In Berlin".&lt;/p&gt;
&lt;p&gt;2) The lack of reputation leads to the second issue - less followers
on social media. Think about it! How many people in the US or Silicon Valley
do you follow on Twitter? How many follow you back? How many of those who
do, actually engage with what you share? &lt;/p&gt;
&lt;p&gt;With some exceptions like my friend &lt;a href="http://batsov.com"&gt;Bozhidar Batsov&lt;/a&gt; your
social reach is quite limited when it comes to hi-tech users.&lt;/p&gt;
&lt;p&gt;3) Less reputation plus less social reach means less buzz and less early
adopters. Silicon Valley is a great place to generate buzz and find
early adopters. Because of the software industry and many start-ups
located in the area people generally have more open mindset and
will try out new ideas, share valuable feedback, engage in social media
and spread the word.&lt;/p&gt;
&lt;p&gt;Early adopters are crucial for every start-up. And we don't have this 
mindset in Europe. I have seen it myself. From 400 friends and co-workers
whom I've contacted via LinkedIn, half or more of them in Europe,
only a few, not even a dozen have tried &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt;.
And we are talking about service from developers about developers. Nada.&lt;/p&gt;
&lt;p&gt;I've tried another experiment as well. This time about non IT business.
From around 100 female friends on Facebook around 10 followed a 
&lt;a href="http://facebook.com/obuvki41plus"&gt;Facebook page&lt;/a&gt;
which I've invited them to. The page is 
&lt;a href="http://obuvki41plus.com"&gt;online ladies shoes shop&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;What to do about it?&lt;/h2&gt;
&lt;p&gt;I don't have a clear answer here. We need to work hard and
make Europe and Bulgaria well known in the software industry
and start-up community. I encourage everyone to try, fail, try, fail
and try until they succeed. And brag about what you do all the time.&lt;/p&gt;
&lt;p&gt;This also prompted me another question. "How do companies in the Bulgarian
start-up eco-system find their early adopters?" I think I'm gonna start
a new blog category  dedicated to this topic.&lt;/p&gt;
&lt;p&gt;Is your company the next Instagram? Please use the comments and tell me.&lt;/p&gt;</summary><category term="start-up"></category></entry><entry><title>The Best IT School in Bulgaria</title><link href="http://atodorov.org/blog/2013/04/27/the-best-it-school-in-bulgaria/" rel="alternate"></link><updated>2013-04-27T22:28:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-27:blog/2013/04/27/the-best-it-school-in-bulgaria/</id><summary type="html">&lt;p&gt;&lt;img src="/images/tues/9gag_test_robots.jpg" alt="How TUES tests robots" style="clear:both;display:block;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;Quadcopter&amp;quot;" src="/images/tues/quadcopter.jpg" title="Quadcopter" /&gt;&lt;/p&gt;
&lt;h2&gt;What is Elsys?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://www.elsys-bg.org/"&gt;Elsys&lt;/a&gt;&lt;/strong&gt; (in Bulgarian TUES) is a technology school in Sofia.
It is a subsidiary of Technical University of Sofia and this week they've celebrated their 25th anniversary.
Elsys is not an ordinary school, they teach computer science to these young kids. 
And they do it pretty damn well. At the moment it's the best
school to study IT (software, hardware, networks) in the country, contrary to what TU Sofia has
become :(. &lt;/p&gt;
&lt;p&gt;As one of the school &lt;a href="http://www.youtube.com/watch?v=7GYbCDGTz-4"&gt;sponsors&lt;/a&gt; I met lots of the students
and want to show everyone else what they are doing. I have no doubts we will be hearing more about
them in the future. &lt;/p&gt;
&lt;h2&gt;Robots first&lt;/h2&gt;
&lt;p&gt;So these boys and girls make robots. I was there when the first image was taken.
It was this week in Thursday, April 25th at an educational fair. All visitors were
fascinated by the robots and stopped by to watch and play with them. I personally
wanted to see and play with the quadcopter shown above but it was not available that
day. &lt;/p&gt;
&lt;p&gt;While I was there, a guy approached the kids and said his
company wants to fund development of another quadcopter. He wanted a bigger one, which
is able to carry equipment for aerial photographs. &lt;/p&gt;
&lt;p&gt;What shook me was that
this is a rare occasion where a local business wants to fund R&amp;amp;D activities.
Not to mentions these are school boys, not university students or research fellows
where this is more
common. And this happened days after the news about the quadcopter has been released 
in the social media. &lt;/p&gt;
&lt;p&gt;&lt;object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0" width="450" height="403"&gt;&lt;param name="movie" value="http://i47.vbox7.com/player/ext.swf?vid=cecb1d1ca4"/&gt;&lt;param name="quality" value="high"/&gt;&lt;embed src="http://i48.vbox7.com/player/ext.swf?vid=cecb1d1ca4" quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" width="450" height="403"/&gt;&lt;/object&gt;&lt;/p&gt;
&lt;p&gt;Elsys also teaches Arduino classes where students play with home made robots. I personally
have attended a robots competition held in the school where these small robots compete
and sometimes fight with one another. &lt;/p&gt;
&lt;p&gt;Did I mention they take part in First Lego League too? Just see the
&lt;a href="http://www.elsys-bg.org/blog/article/fll-2012-new-teams-better-robots-lots-of-emotions/"&gt;photos&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Open source&lt;/h2&gt;
&lt;p&gt;When not making robots students from Elsys hack open source and as it happened,
one of them won the grand prize in Google Code-In 2012
(&lt;a href="http://www.elsys-bg.org/blog/article/elsys-student-won-the-grand-prize-in-the-google-code-in-2012/"&gt;article in Bulgarian&lt;/a&gt;).
For the last few years kids from Elsys are taking part in Google Code-In and according
to the &lt;a href="http://www.elsys-bg.org/blog/article/7300-from-google/"&gt;school website&lt;/a&gt;
they've made $7300 from Google :). &lt;a href="http://www.elsys-bg.org/blog/article/google-code-in-2011/"&gt;Over 40&lt;/a&gt;
boys and girls took part in the first
edition of Google Code-In. That's 10% of all participants.&lt;/p&gt;
&lt;p&gt;I'm sure Google and others were impressed by the fact so many good developers
are coming from a single school. Aren't you?&lt;/p&gt;
&lt;h2&gt;Cisco Networking Academy&lt;/h2&gt;
&lt;p&gt;Yup, they have this too! Elsys teams have won top honors at 6 of the last 8
BANA-sponsored
&lt;a href="http://www.elsys-bg.org/blog/article/national-networking-competition-2012/"&gt;National Networking Competitions&lt;/a&gt;.
Cisco themselves wrote an &lt;a href="http://csr.cisco.com/pages/impact-bulgaria"&gt;article about Elsys&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Want to help&lt;/h2&gt;
&lt;p&gt;As I said I'm a school sponsor. Probably the smallest one. If you want to help
these kids and their school just let me know. I will put you in touch with the
principal.&lt;/p&gt;
&lt;p&gt;Alternatively you can donate your time and knowledge and start teaching an interesting
class at school! &lt;/p&gt;
&lt;p&gt;Or you can donate high quality IT books if you have such. Anything helps.&lt;/p&gt;</summary></entry><entry><title>Personal Experience With Credit Card Fraud</title><link href="http://atodorov.org/blog/2013/04/26/personal-experience-with-credit-card-fraud/" rel="alternate"></link><updated>2013-04-26T23:39:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-26:blog/2013/04/26/personal-experience-with-credit-card-fraud/</id><summary type="html">&lt;p&gt;&lt;img src="/images/creditcard.jpg" alt="Credit Card Of The Future" style="display:block;clear:both;"/&gt;
Image CC-BY, &lt;a href="http://www.flickr.com/photos/scobleizer/5451075743/in/photostream/"&gt;Robert Scoble&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have you ever been a victim of
&lt;a href="http://en.wikipedia.org/wiki/Credit_card_fraud"&gt;credit card fraud&lt;/a&gt;? Meet yours truly!
Achievement unlocked! As a hacker I'm more careful when shopping online compared to ordinary
people and still my card was misused. &lt;/p&gt;
&lt;h2&gt;What happened?&lt;/h2&gt;
&lt;p&gt;Right after opening business hours I was awaken by a phone call from my bank. They alerted
me about a 6$ payment for a hotel reservation, which obviously I didn't make. 
The payment in question was made yesterday, April 25th.
Ten minutes later I got another call telling me about more transactions, some successful ones.
One in particular - a train ticket for nearly 250 EUR. My card was blocked
immediately! The nice thing is that the bank clerk agreed to
express issue a new card. Not without some help from my internal connections at the central office
I got my fresh card before closing hours this evening. The ink on the paper slip was still wet,
literary. &lt;/p&gt;
&lt;p&gt;What will happen next is that they will charge me the successful transactions (not big amount) and later I have to
file a claim for refund. That will take around a week I suppose. I've filed such claims before and
things usually work well for the customer (the case was incorrect merchant though).&lt;/p&gt;
&lt;h2&gt;How did this happen?&lt;/h2&gt;
&lt;p&gt;Honestly I have no idea and will probably never find out.
But as I said I take precautions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I have additional account with small amount in it just for online shopping
to minimize risk;&lt;/li&gt;
&lt;li&gt;I use strong passwords with above average length of symbols (no I'm not going to tell you how much);&lt;/li&gt;
&lt;li&gt;I enter my card number &lt;strong&gt;ONLY&lt;/strong&gt; over trusted SSL connections;&lt;/li&gt;
&lt;li&gt;I avoid smaller merchants and tend to shop from one or two places only;&lt;/li&gt;
&lt;li&gt;If I remember correctly I've never purchased anything online where the card verification
code and additional information like expiration date and billing address is not required.
If I did, I've been drunk then.&lt;/li&gt;
&lt;li&gt;I monitor all my accounts activity as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition the card in question was mostly used for cloud service subscriptions like
Amazon Web Services and Google Apps. I have used it a few times for other things
like plane tickets or travel reservations but nothing fishy.&lt;/p&gt;
&lt;p&gt;The same card I've used rarely at physical ATM or POS terminal (once a year probably).&lt;/p&gt;
&lt;h2&gt;What's your story?&lt;/h2&gt;
&lt;p&gt;I'd like to use this unfortunate event to raise the topic and awareness among
my readers. I wish you never experience this. Forget the money side of things,
it's a pain in the ass to deal with this.&lt;/p&gt;
&lt;p&gt;If you happen to on the victim side please share your story. Have things
worked in your favor or not? &lt;/p&gt;
&lt;p&gt;The picture above shows a new credit card concept. Per the author:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Kudelski and Mastercard are showing me the credit card of the future.
This model can generate a new passcode on the fly, so if your card's number
gets copied it won't be able to generate the right passcode.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you have more insight on the credit card industry please share with us!&lt;/p&gt;</summary></entry><entry><title>How to Deploy Python Hotfix on RedHat OpenShift Cloud</title><link href="http://atodorov.org/blog/2013/04/24/how-to-deploy-python-hotfix-on-redhat-openshift-cloud/" rel="alternate"></link><updated>2013-04-24T11:58:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-24:blog/2013/04/24/how-to-deploy-python-hotfix-on-redhat-openshift-cloud/</id><summary type="html">&lt;p&gt;In this article I will show you how to deploy hotfix versions for
Python packages on the RedHat &lt;a href="http://openshift.com"&gt;OpenShift&lt;/a&gt; PaaS cloud.&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;You are already running a Python application on your OpenShift instance.
You are using some 3rd party dependencies when you find a bug in one of them.
You go forward, fix the bug and submit a
&lt;a href="https://github.com/ahupp/python-magic/pull/31"&gt;pull request&lt;/a&gt;.
You don't want to wait for upstream to release a new version but rather
build a hotfix package yourself and deploy to production immediately.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;There are two basic approaches to solving this problem: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Include the hotfix package source code in your application, i.e.
add it to your git tree or;&lt;/li&gt;
&lt;li&gt;Build the hotfix separately and deploy as a dependency. Don't
include it in your git tree, just add a requirement on the hotfix version. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I will talk about the later. The tricky part here is to instruct the cloud environment
to use your package (including the proper location) and not upstream or their local
mirror.&lt;/p&gt;
&lt;p&gt;Python applications hosted at &lt;a href="http://openshift.com"&gt;OpenShift&lt;/a&gt; don't support
&lt;code&gt;requirements.txt&lt;/code&gt; which can point to various package sources and even install
packages directly from GitHub. They support &lt;code&gt;setup.py&lt;/code&gt; which fetches packages
from &lt;a href="http://pypi.python.org"&gt;http://pypi.python.org&lt;/a&gt; but it is flexible enough to support other locations.&lt;/p&gt;
&lt;h2&gt;Building the hotfix&lt;/h2&gt;
&lt;p&gt;First of all we'd like to build a hotfix package. This will be the upstream
version that we are currently using plus the patch for our critical issue:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://pypi.python.org/packages/source/p/python-magic/python-magic-0.4.3.tar.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;tar -xzvf python-magic-0.4.3.tar.gz 
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;python-magic-0.4.3
&lt;span class="nv"&gt;$ &lt;/span&gt;curl https://github.com/ahupp/python-magic/pull/31.patch &lt;span class="p"&gt;|&lt;/span&gt; patch
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Verify the patch has been applied correctly and then modify &lt;code&gt;setup.py&lt;/code&gt; to
increase the version string. In this case I will set it to &lt;code&gt;version='0.4.3.1'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then build the new package using &lt;code&gt;python setup.py sdist&lt;/code&gt; and upload it to a web server.&lt;/p&gt;
&lt;h2&gt;Deploying to OpenShift&lt;/h2&gt;
&lt;p&gt;Modify &lt;code&gt;setup.py&lt;/code&gt; and specify the hotfix version. Because this version is not on PyPI
and will not be on OpenShift's local mirror you need to provide the location where it can
be found. This is done with the &lt;code&gt;dependency_links&lt;/code&gt; parameter to &lt;code&gt;setup()&lt;/code&gt;. Here's how it looks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff --git a/setup.py b/setup.py&lt;/span&gt;
&lt;span class="gh"&gt;index c6e837c..2daa2a9 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/setup.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/setup.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -6,5 +6,6 @@ setup(name=&amp;#39;YourAppName&amp;#39;,&lt;/span&gt;
       author=&amp;#39;Your Name&amp;#39;,
       author_email=&amp;#39;example@example.com&amp;#39;,
       url=&amp;#39;http://www.python.org/sigs/distutils-sig/&amp;#39;,
&lt;span class="gd"&gt;-      install_requires=[&amp;#39;python-magic==0.4.3&amp;#39;],&lt;/span&gt;
&lt;span class="gi"&gt;+      dependency_links=[&amp;#39;https://s3.amazonaws.com/atodorov/blog/python-magic-0.4.3.1.tar.gz&amp;#39;],&lt;/span&gt;
&lt;span class="gi"&gt;+      install_requires=[&amp;#39;python-magic==0.4.3.1&amp;#39;],&lt;/span&gt;
      )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now just git push to OpenShift and observe the console output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;YourAppName&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Searching&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Best&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Downloading&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;amazonaws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="sr"&gt;/atodorov/blog/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="sr"&gt;/setup.py -q bdist_egg --dist-dir /tmp/easy_install-ZRVMBg/python-magic-0.4.3.1/&lt;/span&gt;&lt;span class="n"&gt;egg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R_Nxie&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;zip_safe&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;analyzing&lt;/span&gt; &lt;span class="n"&gt;archive&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Removing&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;easy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pth&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Adding&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;easy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pth&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Congratulations! Your hotfix package has just been deployed.&lt;/p&gt;
&lt;p&gt;This approach should work for other cloud providers and other programming languages
as well. Let me know if you have any experience with that.&lt;/p&gt;</summary><category term="tips"></category><category term="Python"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>What Runs Your Start-up - Deed</title><link href="http://atodorov.org/blog/2013/04/23/what-runs-your-startup-deed/" rel="alternate"></link><updated>2013-04-23T10:56:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-23:blog/2013/04/23/what-runs-your-startup-deed/</id><summary type="html">&lt;p&gt;&lt;img src="/images/startup/deed.jpg" alt="Deed" style="float:left; margin-right: 15px;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ideedit.com/"&gt;Deed&lt;/a&gt; is an action-provoking platform for challenging
yourself and others and also a business solution for improved engagement by the
corresponding communities. It solves the problem of passivity by converting people
who “Like” to people who “Act. The challenge format gives businesses an effective,
fresh and low-cost solution to maintain active connection with their communities
and measure engagement.&lt;/p&gt;
&lt;p&gt;Emil Stoychev explains their technical background.&lt;/p&gt;
&lt;h2&gt;Main Technologies&lt;/h2&gt;
&lt;p&gt;Deed is built around Microsoft technologies plus some open source libraries.&lt;/p&gt;
&lt;p&gt;Their web application and API is built with ASP.NET MVC 3 using MS SQL 2008 database engine.
Deed is hosted on a single cloud server at Rackspace and uses Akamai CDN for static files
distribution. At the moment the team is testing Windows Azure cloud platform and plans
migrating there.&lt;/p&gt;
&lt;p&gt;A native Windows Phone application also exists.&lt;/p&gt;
&lt;p&gt;Lots of JavaScript and CSS frameworks come to play at the  web interface layer like
jQuery, &lt;a href="http://handlebarsjs.com/"&gt;Handlebars&lt;/a&gt; for templates and &lt;a href="http://lesscss.org/"&gt;Less CSS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;IDE of choice is Microsoft Visual Studio 2012 for C# and Vim for everything else.
Source code revision control is managed with Mercurial and build scripts are written in Python.&lt;/p&gt;
&lt;h2&gt;Why Not Something Else?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The Deed team had experience with Microsoft technologies initially so it was natural
for us to choose this stack. While not perfect and costly in terms of hosting fees,
it serves its purpose for the moment. When you start a new project and you want to get
up and running fast your best choice is to use what you already mastered.
That in our case was the Microsoft stack.&lt;/p&gt;
&lt;p&gt;Emil Stoychev&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Indeed I strongly support this! Always use technologies you are a master at and change and
adapt along the way if necessary.&lt;/p&gt;
&lt;h2&gt;Want More Info?&lt;/h2&gt;
&lt;p&gt;If you’d like to hear more from &lt;em&gt;Deed&lt;/em&gt; please comment below.
I will ask them to follow this thread and reply to your questions.&lt;/p&gt;</summary><category term="what runs"></category><category term="start-up"></category><category term="Microsoft"></category><category term="Windows"></category><category term="Azure"></category></entry><entry><title>HackFMI Code Stats</title><link href="http://atodorov.org/blog/2013/04/19/hackfmi-code-stats/" rel="alternate"></link><updated>2013-04-19T10:00:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-19:blog/2013/04/19/hackfmi-code-stats/</id><summary type="html">&lt;p&gt;It's Friday - five days after the first &lt;a href="http://hackfmi.com"&gt;HackFMI&lt;/a&gt;
event was held. I have some interesting statistics derived from the
source code of all projects. Read on!&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;HackFMI stats&amp;quot;" src="/images/hackfmi/hackfmi2013_cocomo.png" title="HackFMI stats" /&gt;&lt;/p&gt;
&lt;h2&gt;How The Stats Were Calculated&lt;/h2&gt;
&lt;p&gt;I've used &lt;a href="http://ohloh.net"&gt;Ohloh&lt;/a&gt; to analyze the source code of all projects.
A simple Ohloh project called &lt;a href="https://www.ohloh.net/p/hackfmi2013"&gt;HackFMI 2013&lt;/a&gt;
enlists and tracks &lt;a href="https://www.ohloh.net/p/hackfmi2013/enlistments"&gt;18&lt;/a&gt;
different repositories as if they were one big project.
Not all teams had repositories and some didn't sent information back to me although
I asked them. Two projects sent me tarballs with their code, which I've pushed to GitHub
for the purpose of tracking stats.&lt;/p&gt;
&lt;p&gt;Be aware however that Ohloh is known to produce inaccurate statistics for projects
with lots of code and short development history. Furthermore its
&lt;a href="https://www.ohloh.net/p/hackfmi2013/estimated_cost"&gt;COCOMO&lt;/a&gt; calculations
are wrong as well due to duplicate code,
not written during the hackathon such as jQuery or PHP libraries.&lt;/p&gt;
&lt;h2&gt;The Stats&lt;/h2&gt;
&lt;p&gt;During the weekend sprint &lt;strong&gt;759,453 lines of code&lt;/strong&gt; were written by
&lt;strong&gt;56 contributors&lt;/strong&gt; spread across &lt;strong&gt;768 commits&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;HackFMI top contributors&amp;quot;" src="/images/hackfmi/hackfmi2013_top_contributors.png" title="HackFMI top contributors" /&gt;&lt;/p&gt;
&lt;p&gt;From the top 10 contributors 5 had Python as their primary language.
Which is to say Python developers have good development practices with Git.&lt;/p&gt;
&lt;p&gt;None of the contributors (excluding myself) were recognized by Ohloh,
meaning either they have not contributed to any other open source project
or their contributors were not under their name or
they've used a different name/email combination. Whatever the case go
claim your contributions and track your kudos rank across the open source community. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;19 different&lt;/strong&gt; programming languages 
&lt;a href="https://www.ohloh.net/p/hackfmi2013/analyses/latest/languages_summary#dingus-row"&gt;were used&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;HackFMI top languages&amp;quot;" src="/images/hackfmi/hackfmi2013_languages.png" title="HackFMI top languages" /&gt;&lt;/p&gt;
&lt;p&gt;The most popular ones are XML, JavaScript, HTML, PHP, CSS and ActionScript. This is nearly 97%
of the source code. All the rest languages have been used under 1% per language.
The languages used are pretty standard and expected.&lt;/p&gt;
&lt;h2&gt;Estimated Cost&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://www.ohloh.net/p/hackfmi2013/estimated_cost"&gt;estimated development cost&lt;/a&gt;
is 205 person-years valued at $ 11,251,680. This is too high because of all duplicated
libraries and extra files tracked.&lt;/p&gt;
&lt;p&gt;Ohloh allows files and directories to be excluded on per-repository basis.
I'd appreciate your help if you preview the projects and create the exclusion rules. Thanks!&lt;/p&gt;
&lt;p&gt;The stats and repositories are public. If you manage to extract other interesting details
don't hesitate to share them in the comments.&lt;/p&gt;</summary><category term="hackfmi"></category></entry><entry><title>Quick Script for Khan Academy - Looking for Contributors</title><link href="http://atodorov.org/blog/2013/04/16/quick-script-for-khan-academy/" rel="alternate"></link><updated>2013-04-16T22:20:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-16:blog/2013/04/16/quick-script-for-khan-academy/</id><summary type="html">&lt;p&gt;The Bulgarian translators team behind
&lt;a href="https://www.khanacademy.org/"&gt;Khan Academy&lt;/a&gt; asked for help some time ago 
on a local mailing list. I promised to help but had nearly forgotten about that.
The guys are no developers, they simply wanted a script which will give them information
if a particular video has Bulgarian subtitles and the completion percentage.&lt;/p&gt;
&lt;p&gt;They gave me a spread sheet file with a list of video URLs (3000 + of them).
Using Python's &lt;em&gt;BeautifulSoup&lt;/em&gt; module I hacked a small script to produce the
desired output. 
Everything can be found at &lt;a href="https://github.com/atodorov/Khan-Academy-Find-Subtitles"&gt;https://github.com/atodorov/Khan-Academy-Find-Subtitles&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The script is very fresh, just run it today against the given input and produced
some results. Lots of the URLs were skipped, around 500 entries produced results,
100 more failed. I have no idea what happened to the rest.&lt;/p&gt;
&lt;p&gt;This is an ideal side project for students (I'm looking at you #HackFMI participants)
which will teach you something about screen scraping and extracting data from
the web. It will also boost your karma by helping a project which
lacks developers but is open source in nature.&lt;/p&gt;
&lt;p&gt;If you have some Python skills and would like to help please ping me as I
may not have the time to maintain this project in the long term.&lt;/p&gt;</summary></entry><entry><title>HackFMI Post-mortem</title><link href="http://atodorov.org/blog/2013/04/15/hackfmi-post-mortem/" rel="alternate"></link><updated>2013-04-15T10:27:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-15:blog/2013/04/15/hackfmi-post-mortem/</id><summary type="html">&lt;p&gt;&lt;img src="/images/hackfmi/hackfmi_beer.jpg" alt="HackFMI" style="float:left;margin-right:10px;" /&gt;&lt;/p&gt;
&lt;p&gt;The first &lt;a href="http://hackfmi.com"&gt;HackFMI&lt;/a&gt; event is now over :(. It was HUGE!
Kudos to the organizers, sponsors, mentors and all teams who took part and worked hard during
the weekend.&lt;/p&gt;
&lt;p&gt;More than 100 people participated. There were 22 different teams presenting at the
finale yesterday evening. That in my opinion counts as a BIG success. I was surprised
to see so many people, lots of them first and second year at the university. There were
a good number of female hackers too, which I also didn't expect.
&lt;em&gt;DISCLAIMER: I've graduated a different university where the culture and male/female ratio
was different so my expectations were biased.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;People had interesting ideas and were passionate about them. They set off hacking
on a big scale. At times they wanted to create too big of an application and had to
cut off some features due to time constraints.&lt;/p&gt;
&lt;p&gt;Congrats to all of them and hopefully they continue hacking!&lt;/p&gt;
&lt;h2&gt;What Happened&lt;/h2&gt;
&lt;p&gt;I wasn't able to talk to all the teams nor stay at the event full time but here is
how I saw things. &lt;/p&gt;
&lt;p&gt;Organization was perfect. The best organized non-commercial local event I've seen in years.
There was food, beverages, T-shirts, even beer :). There were six big IT companies
&lt;a href="http://hackfmi.com/sponsors-and-partners/"&gt;sponsoring&lt;/a&gt; the
event. All of these are successful Bulgarian born companies.
Let that serve as an example!&lt;/p&gt;
&lt;p&gt;The faculty was supporting the event too.
There were API and SQL dump for the teams to use. The entire building was open
during the weekend and during the night. Teams were able to make use of many rooms. 
From what I know some of the successful ideas will be implemented into the faculty
administration as well. All of this is a first time and quite unexpected for a 
Bulgarian university. I smell the wind of change already. &lt;/p&gt;
&lt;h2&gt;Technology&lt;/h2&gt;
&lt;p&gt;My technology view of the event is limited to the teams I've mentored explicitly and the ones
I happened to walk by and interfere with. Naturally I gravitated around 4 teams using
Django and found two teams using PHP.&lt;/p&gt;
&lt;p&gt;Django guys were doing well despite one of the teams not having any experience with it. 
Most of the applications were such that didn't require extensive knowledge of Django internals
but require mere programming of all features they wanted to implement. &lt;/p&gt;
&lt;p&gt;What stroked me is that folks were making their database models too complicated. 
I stumbled across two use cases in different teams where they wanted to have 
one to many or many to many relationships. I strongly advised against this.
Hopefully they will remember.&lt;/p&gt;
&lt;p&gt;Django makes schema design a child's play and probably this is why lots of people
abuse and misuse that. My advise is keep the database as simple as possible
and move everything up the application layer. It's easier to change and to maintain
that way. Not to mention experienced DBAs are hard to find. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keep the DB simple and know your tools well! &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With PHP the case was pretty much the same. Guys had some extra fields in their DB schema
which were unnecessary. They also wanted to abuse the data types of the DB and not use native types.&lt;/p&gt;
&lt;p&gt;All of these technological misunderstandings are coming from inexperience, I know.
To get a closer look at why it is important to have a simple schema look at:
&lt;a href="http://ontwik.com/python/disqus-scaling-the-world%E2%80%99s-largest-django-application/"&gt;Disqus: Scaling the World’s Largest Django Application&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;The Hackers&lt;/h2&gt;
&lt;p&gt;During one of the breaks I was outside and one of the mentors complained that
ideas were pretty much standard. No screen scraping for additional information, 
no mashing up, no revolutionary ideas. Everybody was using the provided API and
SQL dumps. Well almost.&lt;/p&gt;
&lt;p&gt;One of my favorite &lt;a href="https://github.com/vcrazy/project-6"&gt;teams&lt;/a&gt; set off to
write a PHP robot which will automatically login and extract information from
SUSI (the faculty information system). Unfortunately that didn't work so they
had to abandon it. They didn't known &lt;a href="http://docs.seleniumhq.org/"&gt;Selenium&lt;/a&gt;
and there was not enough time to
try and hack some browser side extension which will do the trick but they promised
to try it.&lt;/p&gt;
&lt;p&gt;Because of their unorthodox approach from the start they became my personal favorites
and received Red Hat swag from me.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Team Six" src="/images/hackfmi/hackfmi2013_team_six_rh_swag.jpg" title="Team Six" /&gt;
Adrian and Vihren are Team Six!&lt;/p&gt;
&lt;h2&gt;What I didn't like&lt;/h2&gt;
&lt;p&gt;I didn't like the fact that there was lots of duplicate work and ideas. Only one team
built a mobile application based on API and services provided by another team.&lt;/p&gt;
&lt;p&gt;I suggest there's a #hackfmi IRC channel next time so that people can communicate
with each other and focus on building great apps not reinventing the wheel. 
&lt;strong&gt;Use IRC, you are hackers!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What I was missing is that nobody proposed a pure cloud or big data application.
I don't know if there was enough data provided by the faculty for such kind of
ideas, probably there wasn't. Maybe next time there will be.&lt;/p&gt;
&lt;h2&gt;Ohloh Stats&lt;/h2&gt;
&lt;p&gt;While not participating actively except for a few hours of mentoring I found a
way to contribute. Many of the projects repositories are listed under
&lt;a href="https://www.ohloh.net/p/hackfmi2013"&gt;https://www.ohloh.net/p/hackfmi2013&lt;/a&gt; which provides some interesting insight
and stats.&lt;/p&gt;
&lt;p&gt;The list is incomplete. Lots of teams didn't have any GitHub repos
or didn't push the code recently. I will be contacting all of them in the next few days
and hopefully we will have a more accurate statistics by the end of the week.
Expect a separate blog post about it.&lt;/p&gt;
&lt;p&gt;If you missed this event you should be sorry. &lt;a href="/blog/2013/03/24/upcoming-hackathons-in-sofia/"&gt;You were warned&lt;/a&gt;!
If you attended please share your experience with me. What you liked, what you didn't. &lt;/p&gt;</summary><category term="hackathon"></category><category term="hackfmi"></category><category term="events"></category></entry><entry><title>HackFMI Post-mortem</title><link href="http://atodorov.org/blog/2013/04/15/hackfmi-post-mortem/" rel="alternate"></link><updated>2013-04-15T10:27:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-15:blog/2013/04/15/hackfmi-post-mortem/</id><summary type="html">&lt;p&gt;&lt;img src="/images/hackfmi/hackfmi_beer.jpg" alt="HackFMI" style="float:left;margin-right:10px;" /&gt;&lt;/p&gt;
&lt;p&gt;The first &lt;a href="http://hackfmi.com"&gt;HackFMI&lt;/a&gt; event is now over :(. It was HUGE!
Kudos to the organizers, sponsors, mentors and all teams who took part and worked hard during
the weekend.&lt;/p&gt;
&lt;p&gt;More than 100 people participated. There were 22 different teams presenting at the
finale yesterday evening. That in my opinion counts as a BIG success. I was surprised
to see so many people, lots of them first and second year at the university. There were
a good number of female hackers too, which I also didn't expect.
&lt;em&gt;DISCLAIMER: I've graduated a different university where the culture and male/female ratio
was different so my expectations were biased.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;People had interesting ideas and were passionate about them. They set off hacking
on a big scale. At times they wanted to create too big of an application and had to
cut off some features due to time constraints.&lt;/p&gt;
&lt;p&gt;Congrats to all of them and hopefully they continue hacking!&lt;/p&gt;
&lt;h2&gt;What Happened&lt;/h2&gt;
&lt;p&gt;I wasn't able to talk to all the teams nor stay at the event full time but here is
how I saw things. &lt;/p&gt;
&lt;p&gt;Organization was perfect. The best organized non-commercial local event I've seen in years.
There was food, beverages, T-shirts, even beer :). There were six big IT companies
&lt;a href="http://hackfmi.com/sponsors-and-partners/"&gt;sponsoring&lt;/a&gt; the
event. All of these are successful Bulgarian born companies.
Let that serve as an example!&lt;/p&gt;
&lt;p&gt;The faculty was supporting the event too.
There were API and SQL dump for the teams to use. The entire building was open
during the weekend and during the night. Teams were able to make use of many rooms. 
From what I know some of the successful ideas will be implemented into the faculty
administration as well. All of this is a first time and quite unexpected for a 
Bulgarian university. I smell the wind of change already. &lt;/p&gt;
&lt;h2&gt;Technology&lt;/h2&gt;
&lt;p&gt;My technology view of the event is limited to the teams I've mentored explicitly and the ones
I happened to walk by and interfere with. Naturally I gravitated around 4 teams using
Django and found two teams using PHP.&lt;/p&gt;
&lt;p&gt;Django guys were doing well despite one of the teams not having any experience with it. 
Most of the applications were such that didn't require extensive knowledge of Django internals
but require mere programming of all features they wanted to implement. &lt;/p&gt;
&lt;p&gt;What stroked me is that folks were making their database models too complicated. 
I stumbled across two use cases in different teams where they wanted to have 
one to many or many to many relationships. I strongly advised against this.
Hopefully they will remember.&lt;/p&gt;
&lt;p&gt;Django makes schema design a child's play and probably this is why lots of people
abuse and misuse that. My advise is keep the database as simple as possible
and move everything up the application layer. It's easier to change and to maintain
that way. Not to mention experienced DBAs are hard to find. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keep the DB simple and know your tools well! &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With PHP the case was pretty much the same. Guys had some extra fields in their DB schema
which were unnecessary. They also wanted to abuse the data types of the DB and not use native types.&lt;/p&gt;
&lt;p&gt;All of these technological misunderstandings are coming from inexperience, I know.
To get a closer look at why it is important to have a simple schema look at:
&lt;a href="http://ontwik.com/python/disqus-scaling-the-world%E2%80%99s-largest-django-application/"&gt;Disqus: Scaling the World’s Largest Django Application&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;The Hackers&lt;/h2&gt;
&lt;p&gt;During one of the breaks I was outside and one of the mentors complained that
ideas were pretty much standard. No screen scraping for additional information, 
no mashing up, no revolutionary ideas. Everybody was using the provided API and
SQL dumps. Well almost.&lt;/p&gt;
&lt;p&gt;One of my favorite &lt;a href="https://github.com/vcrazy/project-6"&gt;teams&lt;/a&gt; set off to
write a PHP robot which will automatically login and extract information from
SUSI (the faculty information system). Unfortunately that didn't work so they
had to abandon it. They didn't known &lt;a href="http://docs.seleniumhq.org/"&gt;Selenium&lt;/a&gt;
and there was not enough time to
try and hack some browser side extension which will do the trick but they promised
to try it.&lt;/p&gt;
&lt;p&gt;Because of their unorthodox approach from the start they became my personal favorites
and received Red Hat swag from me.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Team Six" src="/images/hackfmi/hackfmi2013_team_six_rh_swag.jpg" title="Team Six" /&gt;
Adrian and Vihren are Team Six!&lt;/p&gt;
&lt;h2&gt;What I didn't like&lt;/h2&gt;
&lt;p&gt;I didn't like the fact that there was lots of duplicate work and ideas. Only one team
built a mobile application based on API and services provided by another team.&lt;/p&gt;
&lt;p&gt;I suggest there's a #hackfmi IRC channel next time so that people can communicate
with each other and focus on building great apps not reinventing the wheel. 
&lt;strong&gt;Use IRC, you are hackers!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What I was missing is that nobody proposed a pure cloud or big data application.
I don't know if there was enough data provided by the faculty for such kind of
ideas, probably there wasn't. Maybe next time there will be.&lt;/p&gt;
&lt;h2&gt;Ohloh Stats&lt;/h2&gt;
&lt;p&gt;While not participating actively except for a few hours of mentoring I found a
way to contribute. Many of the projects repositories are listed under
&lt;a href="https://www.ohloh.net/p/hackfmi2013"&gt;https://www.ohloh.net/p/hackfmi2013&lt;/a&gt; which provides some interesting insight
and stats.&lt;/p&gt;
&lt;p&gt;The list is incomplete. Lots of teams didn't have any GitHub repos
or didn't push the code recently. I will be contacting all of them in the next few days
and hopefully we will have a more accurate statistics by the end of the week.
Expect a separate blog post about it.&lt;/p&gt;
&lt;p&gt;If you missed this event you should be sorry. &lt;a href="/blog/2013/03/24/upcoming-hackathons-in-sofia/"&gt;You were warned&lt;/a&gt;!
If you attended please share your experience with me. What you liked, what you didn't. &lt;/p&gt;</summary><category term="hackathon"></category><category term="hackfmi"></category><category term="events"></category></entry><entry><title>Creating RPM .spec Files From Scratch Using Vim</title><link href="http://atodorov.org/blog/2013/04/09/creating-rpm-spec-files-from-scratch-using-vim/" rel="alternate"></link><updated>2013-04-09T15:24:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-09:blog/2013/04/09/creating-rpm-spec-files-from-scratch-using-vim/</id><summary type="html">&lt;p&gt;On a Red Hat Enterprise Linux or Fedora (or compatible) system execute&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vim example.spec
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will create a new file with all the important sections and fields
already there. The template used is &lt;code&gt;/usr/share/vim/vimfiles/template.spec&lt;/code&gt;
and is part of the &lt;em&gt;vim-common&lt;/em&gt; RPM package.&lt;/p&gt;
&lt;p&gt;This is very useful trick which I didn't know. Until now I always used the spec files
from previously built packages when creating new RPMs. This wasn't as fast as
creating a template and filling in the blanks.&lt;/p&gt;
&lt;p&gt;For a detailed description about recommended RPM build practices see
the &lt;a href="https://fedoraproject.org/wiki/Packaging:Guidelines"&gt;Fedora Packaging Guidelines&lt;/a&gt;.&lt;/p&gt;</summary><category term="tips"></category><category term="RPM"></category></entry><entry><title>What Runs Your Start-up - MaistorPlus</title><link href="http://atodorov.org/blog/2013/04/08/what-runs-your-startup-maistorplus/" rel="alternate"></link><updated>2013-04-08T12:52:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-08:blog/2013/04/08/what-runs-your-startup-maistorplus/</id><summary type="html">&lt;p&gt;&lt;img src="/images/startup/maistorplus.jpg" alt="MaistorPlus logo" style="float:left; margin-right: 15px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.meisterplus.com/%D0%BC%D0%B0%D0%B9%D1%81%D1%82%D0%BE%D1%80%D0%B8"&gt;MaistorPlus&lt;/a&gt;
solves the common problem of finding a reliable builder or handyman.
An online platform that brings master craftsmen and homeowners together.&lt;/p&gt;
&lt;p&gt;The process is really easy. Homeowners post jobs on the website and receive
offers from relevant tradesmen. After the job is done homeowners leave feedback
and recommendations. With this feature homeowners can compare tradesmen profiles,
offers and ratings and confidently choose who they want to hire.&lt;/p&gt;
&lt;p&gt;The team is also runner up at the Start IT Smart
&lt;a href="http://www.3challenge.com/startups/season-3/"&gt;3Challenge&lt;/a&gt;.
&lt;a href="http://meisterplus.com/about/team"&gt;Boris Sanchez&lt;/a&gt; shared their technical mojo.&lt;/p&gt;
&lt;h2&gt;Main Technologies&lt;/h2&gt;
&lt;p&gt;Main technologies used are PHP, Symfony 2.1 and PostgreSQL.&lt;/p&gt;
&lt;p&gt;MaistorPlus is a traditional web platform developed with the
&lt;a href="http://symfony.com/"&gt;Symfony framework&lt;/a&gt;. Web pages are rendered by Twig -
a straightforward, flexible and easy to extend templating engine, which is 
integrated into the Symfony framework by default and works server-side with PHP
in order to generate dynamic content, based on data stored in the database.
Web pages also use jQuery and &lt;a href="http://sizzlejs.com/"&gt;Sizzle.js&lt;/a&gt; and feature modern graphics.
Everything is beautifully styled with CSS.&lt;/p&gt;
&lt;h2&gt;Why Not Something Else&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The original development team already had experience with Symfony, Zend, Spring and
some other web application development frameworks. We opted for Symfony for two
main reasons. First, Symfony is constantly improving, and has a strong and
continuously growing community that offers 3rd party add-on components for free.
Second, PHP is a bit easier to "learn as you go" then Java. The members of our
design team didn't have a lot of prior programming experience, so we wanted to
make sure we set a low barrier of entry for them, as we didn't have the enough
development staff to have a distinct separation between design creation and design
integration in our team.&lt;/p&gt;
&lt;p&gt;For the initial prototype we used the MySQL database management system. After a
while we wanted to add spatial features to the business logic, and discovered that
MySQL does not have proper support for spatial indexing. We therefore decided to
migrate to PostgreSQL, which supports spatial data with add-ons like PostGIS.&lt;/p&gt;
&lt;p&gt;Boris Sanchez&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Want More Info?&lt;/h2&gt;
&lt;p&gt;MaistorPlus is going to organize a Beta Testing next month. You are welcome to
&lt;a href="http://meisterplus.com/blog"&gt;subscribe&lt;/a&gt; to their monthly newsletter or follow them on
&lt;a href="https://www.facebook.com/MaistorPlus"&gt;Facebook&lt;/a&gt; / &lt;a href="https://twitter.com/MaistorPlus"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you’d like to hear more from &lt;em&gt;MaistorPlus&lt;/em&gt; please comment below.
I will ask them to follow this thread and reply to your questions.&lt;/p&gt;</summary><category term="what runs"></category><category term="start-up"></category><category term="PHP"></category><category term="Symfony"></category><category term="PostgreSQL"></category><category term="jQuery"></category></entry><entry><title>Using Django built-in template tags and filters in code</title><link href="http://atodorov.org/blog/2013/04/06/using-django-built-in-template-tags-and-filters-in-code/" rel="alternate"></link><updated>2013-04-06T22:26:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-06:blog/2013/04/06/using-django-built-in-template-tags-and-filters-in-code/</id><summary type="html">&lt;p&gt;In case you are wondering how to use Django's
&lt;a href="https://docs.djangoproject.com/en/dev/ref/templates/builtins/"&gt;built-in template tags and filters&lt;/a&gt;
in your source code, not inside a template here is how:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template.defaultfilters&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filesizeformat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;1.0 KB&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filesizeformat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1020&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;1020 bytes&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filesizeformat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;102412354&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;97.7 MB&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All built-ins live in &lt;code&gt;pythonX.Y/site-packages/django/template/defaultfilters.py&lt;/code&gt;.&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category><category term="Python"></category></entry><entry><title>Tip: Renaming Model Fields in Django</title><link href="http://atodorov.org/blog/2013/04/06/tip-renaming-model-fields-in-django/" rel="alternate"></link><updated>2013-04-06T01:18:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-06:blog/2013/04/06/tip-renaming-model-fields-in-django/</id><summary type="html">&lt;p&gt;Did you ever have to re-purpose a column in your database schema? 
Here's a quick and easy way to do this if you happen to be using Django.&lt;/p&gt;
&lt;h2&gt;Scenario&lt;/h2&gt;
&lt;p&gt;I had an integer field in my model called &lt;code&gt;lines&lt;/code&gt; which counted the lines of 
code in a particular tar.gz package. I figured the file size is a better indicator
so decided to start using it. I was not planning to use the old field anymore and
I didn't care about the data it was holding. So I decided to re-purpose it
as the &lt;code&gt;size&lt;/code&gt; field.&lt;/p&gt;
&lt;h2&gt;Possible methods&lt;/h2&gt;
&lt;p&gt;Looking around I figured several different ways to do this: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Continue using the existing &lt;code&gt;lines&lt;/code&gt; field and keep referencing the old name in the code.
This is no-brainer but feels awkward and is a disaster waiting to happen;&lt;/li&gt;
&lt;li&gt;Add new &lt;code&gt;size&lt;/code&gt; field and remove the old &lt;code&gt;lines&lt;/code&gt; field. This involves modification to
the DB schema and requires at least a backup with possible down time. Not something
I will jump at right away;&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;size&lt;/code&gt; property in the model class which will persist to &lt;code&gt;self.lines&lt;/code&gt;.
This is a quick way to go but I'm not sure if one can use the property with the
Django QuerySet API (objects.filter(), objects.update(), etc.) I suspect not.
If you don't filter by the property or use it in bulk operations this method is fine though;&lt;/li&gt;
&lt;li&gt;Change the field name to &lt;code&gt;size&lt;/code&gt; but continue to use the &lt;code&gt;lines&lt;/code&gt; DB column;
Mind my wording here :);&lt;/li&gt;
&lt;li&gt;Rename the column in the DB schema and then update the model class field.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;How I did it&lt;/h2&gt;
&lt;p&gt;I decided to go for option 4 above: 
change the field name to &lt;code&gt;size&lt;/code&gt; but continue to use the &lt;code&gt;lines&lt;/code&gt; DB column.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff --git a/models.py b/models.py&lt;/span&gt;
&lt;span class="gh"&gt;index e06d2b2..18cad6f 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/models.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/models.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -667,7 +667,7 @@ class Package(models.Model):&lt;/span&gt;
&lt;span class="gd"&gt;-    lines = models.IntegerField(default=None, null=True, blank=True)&lt;/span&gt;
&lt;span class="gi"&gt;+    size  = models.IntegerField(default=None, null=True, blank=True, db_column=&amp;#39;lines&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Removed all references to &lt;code&gt;lines&lt;/code&gt; from the code except the model class. This served as clean up as well. &lt;/li&gt;
&lt;li&gt;Renamed the model field to &lt;code&gt;size&lt;/code&gt; but continued using the &lt;code&gt;lines&lt;/code&gt; DB column as shown above.
Django's &lt;em&gt;db_column&lt;/em&gt; option makes this possible.&lt;/li&gt;
&lt;li&gt;From the Django shell (./manage.py shell) reset &lt;code&gt;size&lt;/code&gt; to None (NULL) for all objects;&lt;/li&gt;
&lt;li&gt;Finally implement my new code and functionality behind the &lt;code&gt;size&lt;/code&gt; field.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The entire process happened for under 10 minutes. I will also opt for renaming the DB column at a later time.
This is to sync the naming used in Python code and in MySQL in case I ever need to use raw SQL or anything but Django.&lt;/p&gt;
&lt;p&gt;If you were me, how would you do this? Please share in the comments below.&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category></entry><entry><title>Give Away List</title><link href="http://atodorov.org/blog/2013/04/05/give-away-list/" rel="alternate"></link><updated>2013-04-05T14:53:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-05:blog/2013/04/05/give-away-list/</id><summary type="html">&lt;p&gt;I have accumulated some items which I don't need or will not use anymore.
Some of them I am willing to give away while others can be borrowed for a while.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rules Of Engagement&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Items are tagged with a &lt;code&gt;prefix&lt;/code&gt;. It is self explanatory;&lt;/li&gt;
&lt;li&gt;Requests are served in a &lt;a href="https://en.wikipedia.org/wiki/FIFO"&gt;FIFO&lt;/a&gt; fashion;
If some items are returned back to me the next one in the queue will be served then;&lt;/li&gt;
&lt;li&gt;If you'd like to have an item comment below! Requests via other platforms
such as Facebook will &lt;strong&gt;NOT&lt;/strong&gt; be taken into account although I may reply there occasionally.
This is both for easier tracking of requests and for transparency sake! You are warned!&lt;/li&gt;
&lt;li&gt;Your name (and possibly a link to you) will be published on this page upon request of an item;&lt;/li&gt;
&lt;li&gt;You can give me something in exchange if you like but this is not necessary!&lt;/li&gt;
&lt;li&gt;Feel free to share this page with your friends!&lt;/li&gt;
&lt;li&gt;Scroll down to the bottom of the page and
&lt;img src="/images/subscribe.png" alt="subscribe via email" style="display:inline;border:none;margin:0;padding:0;vertical-align:text-bottom;"/&gt;
to get notified when I add new items!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Free e-Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://amzn.to/19Ctnk8"&gt;Accelerando (Singularity)&lt;/a&gt; by Charles Stross - Creative Commons version available&lt;/li&gt;
&lt;li&gt;&lt;a href="http://amzn.to/1eXk3JN"&gt;What Is DevOps?&lt;/a&gt; by Mike Loukide&lt;/li&gt;
&lt;li&gt;&lt;a href="http://amzn.to/19KobFn"&gt;Building a DevOps Culture&lt;/a&gt; by Mandi Walls&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Books in English&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;taken by Geno Rouspky&lt;/code&gt;, &lt;code&gt;give-away&lt;/code&gt; - The Art of Community: Building the New Age of Participation
(
&lt;a href="http://www.amazon.com/gp/product/1449312063/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449312063&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Amazon&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1449312063" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; |
&lt;a href="http://www.dpbolvw.net/click-7040110-11260198?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F0636920021995.do%3Fcmp%3Daf-npa-book-product_cj_9781449312060_%25zp&amp;cjsku=0636920021995" target="_top"&gt;O'Reilly&lt;/a&gt;&lt;img src="http://www.ftjcfx.com/image-7040110-11260198" width="0" height="0" border="0" style="display:none;"/&gt;
)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taken by Стилиян Стефанов&lt;/code&gt;, &lt;code&gt;give-away&lt;/code&gt; - 97 Things Every Software Architect Should Know
(
&lt;a href="http://www.amazon.com/gp/product/059652269X/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=059652269X&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Amazon&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=059652269X" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; |
&lt;a href="http://www.kqzyfj.com/click-7040110-11260198?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F9780596522704.do%3Fcmp%3Daf-code-book-product_cj_9780596522698_%25zp&amp;cjsku=9780596522704" target="_top"&gt;O'Reilly&lt;/a&gt;&lt;img src="http://www.tqlkg.com/image-7040110-11260198" width="0" height="0" border="0" style="display:none"/&gt;
)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taken by Стилиян Стефанов&lt;/code&gt;, &lt;code&gt;give-away&lt;/code&gt; - 97 Things Every Project Manager Should Know 
(
&lt;a href="http://www.amazon.com/gp/product/0596804164/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0596804164&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Amazon&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0596804164" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; |
&lt;a href="http://www.kqzyfj.com/click-7040110-11260198?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F9780596804152.do%3Fcmp%3Daf-npa-book-product_cj_9780596804169_%25zp&amp;cjsku=9780596804152" target="_top"&gt;O'Reilly&lt;/a&gt;&lt;img src="http://www.tqlkg.com/image-7040110-11260198" width="0" height="0" border="0" style="display:none"/&gt;
) - Barbee Davis&lt;/li&gt;
&lt;li&gt;&lt;code&gt;borrow&lt;/code&gt; - &lt;a href="http://www.amazon.com/gp/product/1933988274/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1933988274&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The Art of Unit Testing: With Examples in .Net&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1933988274" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; - Roy Osherove&lt;/li&gt;
&lt;li&gt;&lt;code&gt;borrow&lt;/code&gt; - &lt;a href="http://www.amazon.com/gp/product/190676820X/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=190676820X&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The Gentlemen's Clubs of London&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=190676820X" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; - Anthony Lejeune, 1984 edition&lt;/li&gt;
&lt;li&gt;&lt;code&gt;given to Lyubomir Petkov&lt;/code&gt;, &lt;code&gt;borrow&lt;/code&gt; - Technical Blogging: Turn Your Expertise into a Remarkable Online Presence
(
&lt;a href="http://www.amazon.com/gp/product/1934356883/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1934356883&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Amazon&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1934356883" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; |
&lt;a href="http://www.tkqlhce.com/click-7040110-11260198?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F9781934356883.do%3Fcmp%3Daf-npa-book-product_cj_9781934356883_%7BPID%7D&amp;cjsku=9781934356883" target="_top"&gt;O'Reilly&lt;/a&gt;&lt;img src="http://www.ftjcfx.com/image-7040110-11260198" width="0" height="0" border="0" style="margin:0;padding:0;display:none;"/&gt;
)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;borrow&lt;/code&gt; -  Open Government: Collaboration, Transparency, and Participation in Practice
(
&lt;a href="http://www.amazon.com/gp/product/0596804350/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0596804350&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Amazon&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0596804350" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
|
&lt;a href="http://www.anrdoezrs.net/click-7040110-11260198?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F9780596804367.do%3Fcmp%3Daf-npa-book-product_cj_9780596804350_%25zp&amp;cjsku=9780596804367" target="_top"&gt;O'Reilly&lt;/a&gt;&lt;img src="http://www.awltovhc.com/image-7040110-11260198" width="0" height="0" border="0" style="display:none;"/&gt;
) - Daniel Lathrop&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Books about living small&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;borrow&lt;/code&gt; - &lt;a href="http://www.amazon.com/gp/product/4770029993/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=4770029993&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The Very Small Home: Japanese Ideas for Living Well in Limited Space&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=4770029993" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; - Azby Brown&lt;/li&gt;
&lt;li&gt;&lt;code&gt;borrow&lt;/code&gt; - &lt;a href="http://www.amazon.com/gp/product/1554072425/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1554072425&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;How to Live in Small Spaces: Design, Furnishing, Decoration and Detail for the Smaller Home&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1554072425" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt; - Terrence Conran&lt;/li&gt;
&lt;li&gt;&lt;code&gt;borrow&lt;/code&gt; - &lt;a href="http://www.amazon.com/gp/product/3822841781/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=3822841781&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Small Apartments&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=3822841781" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;borrow&lt;/code&gt; - &lt;a href="http://www.amazon.com/gp/product/3822827932/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=3822827932&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;500 Ideas for Small Spaces&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=3822827932" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;donated to&lt;/code&gt; &lt;a href="http://podaretekniga.org"&gt;http://podaretekniga.org&lt;/a&gt;, &lt;code&gt;borrow&lt;/code&gt; - &lt;a href="http://www.amazon.com/gp/product/3822841765/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=3822841765&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Small Houses&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=3822841765" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;donated to&lt;/code&gt; &lt;a href="http://podaretekniga.org"&gt;http://podaretekniga.org&lt;/a&gt;, &lt;code&gt;borrow&lt;/code&gt; - &lt;a href="http://www.amazon.com/gp/product/B001TJEJ9O/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B001TJEJ9O&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Small Eco-Houses&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B001TJEJ9O" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Books in Bulgarian&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;taken by&lt;/code&gt; &lt;a href="http://initlab.org"&gt;Vladimir Vassilev&lt;/a&gt;, &lt;code&gt;reserved by Живко Георгиев&lt;/code&gt;, &lt;code&gt;give-away&lt;/code&gt; - &lt;a href="http://www.mobilis.bg/mobilis/izkustvoto-na-izmamata.html"&gt;Изкуството на измамата&lt;/a&gt; - Кевин Митник&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reserved by Симеон&lt;/code&gt;, &lt;code&gt;give-away&lt;/code&gt; -
&lt;a href="http://www.mobilis.bg/mobilis/nacijata-novator-razkaz-za-izraelskoto-ikonomichesko-chudo.html"&gt;Нацията новатор - разказ за израелското икономическо чудо&lt;/a&gt; -
Дан Сенор, Сол Сингър&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taken by Даниела Бояджиева&lt;/code&gt;, &lt;code&gt;give-away&lt;/code&gt; -
&lt;a href="http://www.mobilis.bg/mobilis/tr-mp-misli-kato-miliarder.html"&gt;Тръмп: Мисли като милиардер&lt;/a&gt; - Доналд Тръмп, Мередит Макайвър&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taken by unknown&lt;/code&gt;@ &lt;a href="http://www.usetogether.com/"&gt;UseTogether event&lt;/a&gt;, &lt;code&gt;give-away&lt;/code&gt; - &lt;a href="http://www.mobilis.bg/mobilis/stichaneto-p-tjat-k-m-vsichki-kulturi.html"&gt;Стичането. Пътят към всички култури&lt;/a&gt; - Илия Троянов, Ранджит Хоскоте&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taken by&lt;/code&gt; &lt;a href="http://initlab.org"&gt;Vladimir Vassilev&lt;/a&gt;, &lt;code&gt;give-away&lt;/code&gt; -
&lt;a href="http://www.mobilis.bg/mobilis/kak-da-manipulirame-horata-tehniki-za-manipulacija-i-zaschita-ot-tjah.html"&gt;Как да манипулираме хората - техники за манипулaция и защита от тях&lt;/a&gt; -
Игор Зорин&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taken by Даниела Бояджиева&lt;/code&gt;, &lt;code&gt;give-away&lt;/code&gt; - &lt;a href="http://www.mobilis.bg/mobilis/kak-da-ubezhdavame.html"&gt;Как да убеждаваме&lt;/a&gt; - Хари Майлс&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taken by Даниела Бояджиева&lt;/code&gt;, &lt;code&gt;give-away&lt;/code&gt; - &lt;a href="http://www.mobilis.bg/mobilis/uspeshnite-prezentacii.html"&gt;Успешните презентации&lt;/a&gt; - изд. Мениджър&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taken by Даниела Бояджиева&lt;/code&gt;, &lt;code&gt;give-away&lt;/code&gt; - &lt;a href="http://www.mobilis.bg/mobilis/uspeshnite-pregovori-1.html"&gt;Успешните преговори&lt;/a&gt; - изд. Мениджър&lt;/li&gt;
&lt;li&gt;&lt;code&gt;taken by unknown&lt;/code&gt;@ &lt;a href="http://www.usetogether.com/"&gt;UseTogether event&lt;/a&gt;, &lt;code&gt;give-away&lt;/code&gt; - &lt;a href="http://www.mobilis.bg/mobilis/metro-2033.html"&gt;Метро 2033&lt;/a&gt; - Дмитрий Глуховски&lt;/li&gt;
&lt;li&gt;&lt;code&gt;donated to&lt;/code&gt; &lt;a href="http://podaretekniga.org"&gt;http://podaretekniga.org&lt;/a&gt;, &lt;code&gt;give-away&lt;/code&gt; - &lt;a href="http://www.mobilis.bg/mobilis/da-nauchim-sami-japonski-ezik.html"&gt;Да научим сами японски език&lt;/a&gt; - Братислав Иванов&lt;/li&gt;
&lt;li&gt;&lt;code&gt;borrow&lt;/code&gt; - &lt;a href="http://www.mobilis.bg/mobilis/degustacijata-ili-kak-da-opoznaem-vinoto-1.html"&gt;Дегустацията, или как да опознаем виното&lt;/a&gt; - Неда Проданова&lt;/li&gt;
&lt;li&gt;&lt;code&gt;give-away&lt;/code&gt; - &lt;a href="https://www.goodreads.com/book/show/13398350"&gt;Първите в българския интернет&lt;/a&gt; - Горица Белогушева, Жюстин Томс&lt;/li&gt;
&lt;/ul&gt;</summary><category term="books"></category></entry><entry><title>What Runs Your Start-up - Ucha.se</title><link href="http://atodorov.org/blog/2013/04/03/what-runs-your-startup-ucha.se/" rel="alternate"></link><updated>2013-04-03T10:57:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-04-03:blog/2013/04/03/what-runs-your-startup-ucha.se/</id><summary type="html">&lt;p&gt;&lt;img src="/images/startup/uchase.jpg" alt="Ucha.se logo" style="float:left;margin-right:10px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ucha.se/"&gt;Ucha.se&lt;/a&gt; makes learning fun. It is an online platform,
on which pupils and students learn and prepare for school. Pupils learn faster,
improve their results and get inspired. The platform allows students to watch
videos, take tests, ask questions and share comments. Learning is represented
with gamification components like drawings, playful narration, dashboards with
the best students, etc. It is available on the web and is extending to mobile.
Ucha.se is well recognized by the parents and teachers in Bulgaria.
In November 2012 Ucha.se was awarded as the best website in Bulgaria in the
field of Education and Science.&lt;/p&gt;
&lt;p&gt;Nikolay Zheynov is leading the IT team which maintains and expands the web platform.
He shared with me some of the internals.&lt;/p&gt;
&lt;h2&gt;Main Technologies&lt;/h2&gt;
&lt;p&gt;Main technologies used are PHP, MySQL, Nginx, jQuery and jQueryUI.&lt;/p&gt;
&lt;p&gt;Server-side development is done with PHP 5. The main reason for choosing PHP is
that the IT team working on the platform had long experience with the language.
Ucha.se has developed their own PHP framework which is constantly expanding.
This allows flexible programming and easier application maintenance.
Nginx is the web server of choice.&lt;/p&gt;
&lt;p&gt;MySQL 5 is used for the database because PHP + MySQL is like bread and butter.
While the site usage was growing the team had to optimize their DB layer and switched
from MyISAM storage engine to InnoDB.&lt;/p&gt;
&lt;p&gt;On the client-side standard web technologies are used - HTML5, CSS3 and JavaScript.
The main goal when doing the website design was to match expectation from different
user groups - pupils, teachers, parents and students.
jQuery and jQueryUI are widely used on the client side.&lt;/p&gt;
&lt;h2&gt;Why Not Something Else?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;True to our agile approach to incrementally enhance the product and the technology
that goes along with it, we strongly believe in the scaling on demand practices.
Ucha.se's own framework reflects exactly to that. It allows us to meet our growing
user demands and provides at the same time, the dev-team with enough flexibility to
quickly react on new business opportunities and technological (r)evolutions.&lt;/p&gt;
&lt;p&gt;Nikolay Zheynov&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Want More Info?&lt;/h2&gt;
&lt;p&gt;If you’d like to hear more from &lt;em&gt;Ucha.se&lt;/em&gt; please comment below.
I will ask them to follow this thread and reply to your questions.&lt;/p&gt;</summary><category term="what runs"></category><category term="start-up"></category><category term="PHP"></category><category term="MySQL"></category><category term="jQuery"></category><category term="Nginx"></category></entry><entry><title>Bug in the Fridge</title><link href="http://atodorov.org/blog/2013/03/29/bug-in-the-fridge/" rel="alternate"></link><updated>2013-03-29T15:09:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-29:blog/2013/03/29/bug-in-the-fridge/</id><summary type="html">&lt;p&gt;&lt;img src="/images/liebherr_kbgb_3864.jpg" alt="Liebherr KBGB 3864" style="float:left; margin-right: 20px;" /&gt;&lt;/p&gt;
&lt;p&gt;Once you've been into
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=quality%20assurance&amp;linkCode=ur2&amp;rh=i%3Aaps%2Ck%3Aquality%20assurance&amp;sprefix=quality%20ass%2Caps%2C273&amp;tag=atodorovorg-20&amp;url=search-alias%3Daps"&gt;Quality Assurance&lt;/a&gt;&lt;img src="https://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
for 5+ years you start to notice &lt;a href="/blog/categories/qa/"&gt;bugs everywhere&lt;/a&gt;
and develop a sixth sense for it. Today I found a bug in my
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=liebherr&amp;linkCode=ur2&amp;rh=n%3A2619525011%2Ck%3Aliebherr&amp;sprefix=Liebherr%2Caps%2C273&amp;tag=atodorovorg-20&amp;url=search-alias%3Dappliances"&gt;Liebherr&lt;/a&gt;&lt;img src="https://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
KBGB 3864 refrigerator, caused by what looks like a race-condition.&lt;/p&gt;
&lt;p&gt;This appliance starts beeping in case the door is left open for more than 60 seconds.
The alarm stops if door is closed or can be muted manually while the door is still open.&lt;/p&gt;
&lt;h2&gt;The Bug&lt;/h2&gt;
&lt;p&gt;It happened so that I had the door open for nearly one minute and as it was closing 
I heard a beep. This time however the beeping didn't stop after the door had closed.
The alarm continued beeping with the door closed so I tried to re-open and close it again.
It didn't stop! I had to open the door and manually mute the alarm for it to stop. &lt;/p&gt;
&lt;div style="display:block; clear:both;"&gt;&amp;nbsp;&lt;/div&gt;

&lt;h2&gt;The Root Cause&lt;/h2&gt;
&lt;p&gt;While not entirely sure, I think the reason for this malfunction
was a race-condition. The alarm went on at nearly the same time when the 
controlling timer should have gone off (when closing the door).&lt;/p&gt;
&lt;h2&gt;Steps To Reproduce&lt;/h2&gt;
&lt;p&gt;I tried reproducing several times afterwards by opening and closing the door
at the last possible moment. I used a stop-watch to time my actions. However
I wasn't able to reproduce twice. Every time I tried, there was only one single
beep as the door was closing and no more.&lt;/p&gt;
&lt;p&gt;I guess then, like we say in QE, &lt;em&gt;WORKS FOR ME&lt;/em&gt;!&lt;/p&gt;</summary><category term="QA"></category></entry><entry><title>What Runs Your Start-up</title><link href="http://atodorov.org/blog/2013/03/27/what-runs-your-startup/" rel="alternate"></link><updated>2013-03-27T12:00:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-27:blog/2013/03/27/what-runs-your-startup/</id><summary type="html">&lt;p&gt;I am starting a new section called 
&lt;a href="/blog/categories/what-runs/"&gt;What Runs Your Start-up&lt;/a&gt; where I will
write about the technologies running behind some interesting
start-up companies and why they made their technological choices.
The articles will be short and to the point. Interested readers
can engage in discussion with start-up owners in the comments later.&lt;/p&gt;
&lt;p&gt;I am starting with a dozen companies from the Bulgarian start-up eco-system
and will present one or two start-ups per week.
If you'd like to read about a company which is not listed here or want to
promote your own just let me know.&lt;/p&gt;</summary><category term="what runs"></category><category term="start-up"></category></entry><entry><title>What Runs Your Start-up - Useful at Night</title><link href="http://atodorov.org/blog/2013/03/27/what-runs-your-startup-useful-at-night/" rel="alternate"></link><updated>2013-03-27T12:00:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-27:blog/2013/03/27/what-runs-your-startup-useful-at-night/</id><summary type="html">&lt;p&gt;&lt;img style="float: left; margin-right: 10px;" src="/images/startup/usefulatnight.png" alt="Useful at Night logo" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://usefulatnight.com/"&gt;Useful at Night&lt;/a&gt; is a mobile guide for nightlife
empowering real time discovery of cool locations, allowing nightlife players
to identify opinion leaders. Through geo-location and data aggregation
capabilities, the application allows useful exploration of cities, places and
parties.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://about.me/velev"&gt;Evelin Velev&lt;/a&gt; was kind enough to share what technologies
his team uses to run their star-up.&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Main Technologies&lt;/h2&gt;
&lt;p&gt;Main technologies used are Node.js, HTML 5 and NoSQL.&lt;/p&gt;
&lt;p&gt;Back-end application servers are written in Node.js and hosted at Heroku,
coupled with &lt;a href="http://www.redistogo.com/"&gt;RedisToGo&lt;/a&gt; for caching and
CouchDB served by &lt;a href="https://cloudant.com/"&gt;Cloudant&lt;/a&gt; for storage.&lt;/p&gt;
&lt;p&gt;Their mobile front-end supports both iOS and Android platforms and is built using
HTML5 and a homemade UI framework called RAPID. There are some native parts developed
in Objective-C and Java respectively.&lt;/p&gt;
&lt;p&gt;In addition &lt;em&gt;Useful at Night&lt;/em&gt; uses MongoDB for metrics data with a custom metrics solution
written in Node.js; Amazon S3 for storing different assets; and a custom storage solution
called Divan (simple CouchDB like).&lt;/p&gt;
&lt;h2&gt;Why Not Something Else?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;We chose Node.js for our application servers, because it enables us to build efficient
distributed systems while sharing significant amounts of code between client and server.
Things get really interesting when you couple Node.js with Redis for data structure
sharing and message passing, as the two technologies play very well together.&lt;/p&gt;
&lt;p&gt;We chose CouchDB as our main back-end because it is the most schema-less data-store that
supports secondary indexing. Once you get fluent with its map-reduce views, you can
compute an index out of practically anything. For comparison, even MongoDB requires
that you design your documents as to enable certain indexing patterns. Put otherwise,
we'd say CouchDB is a data-store that enables truly lean engineering - we have never had
to re-bake or migrate our data since day one, while we're constantly experimenting with
new ways to index, aggregate and query it.&lt;/p&gt;
&lt;p&gt;We chose HTML5 as our front-end technology, because it's cross-platform and because we
believe it's ... almost ready. Things are still really problematic on Android, but iOS
boasts a gorgeous web presentation platform, and Windows 8 is also joining the game with
a very good web engine. Obviously we're constantly running into issues and limitations,
mostly related to the unfortunate fact that in spite of some recent developments,
a web app is still mostly single threaded. However, we're getting there, and we're proud
to say we're running a pretty graphically complex hybrid app with near-native GUI performance
on the iPhone 4S and above.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Want More Info?&lt;/h2&gt;
&lt;p&gt;If you'd like to hear more from &lt;em&gt;Useful at Night&lt;/em&gt; please comment below. I will ask them
to follow this thread and reply to your questions.&lt;/p&gt;</summary><category term="start-up"></category><category term="what runs"></category><category term="Node.js"></category><category term="HTML5"></category><category term="CouchDB"></category><category term="Redis"></category><category term="MongoDB"></category><category term="Amazon"></category><category term="S3"></category><category term="Heroku"></category><category term="iOS"></category><category term="Android"></category></entry><entry><title>To fork or not to fork - the MATE story</title><link href="http://atodorov.org/blog/2013/03/26/to-fork-or-not-to-fork-the-mate-story/" rel="alternate"></link><updated>2013-03-26T10:46:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-26:blog/2013/03/26/to-fork-or-not-to-fork-the-mate-story/</id><summary type="html">&lt;p&gt;&lt;img alt="&amp;quot;MATE Desktop&amp;quot;" src="/images/MATE.png" title="MATE Desktop" /&gt;&lt;/p&gt;
&lt;p&gt;In the open source world
&lt;a href="https://en.wikipedia.org/wiki/Fork_%28software_development%29"&gt;forking&lt;/a&gt;
is a common concept, largely endorsed by GitHub's fork &amp;amp; pull requests work-flow.
Forking a large and successful project and creating a new one, with its own
eco-system is rare though.&lt;/p&gt;
&lt;p&gt;Recently I came across the &lt;a href="http://mate-desktop.org"&gt;MATE&lt;/a&gt; desktop environment
which is a fork of GNOME 2. Even more interesting is that they forked lots of
standard GNOME &lt;a href="http://mate-desktop.org/applications/"&gt;applications&lt;/a&gt; as well.
Being behind the &lt;a href="http://www.redhat.com/products/enterprise-linux/"&gt;world's leading enterprise OS&lt;/a&gt;
where maintaining a private fork is sometimes necessary I wondered why MATE had to do this.&lt;/p&gt;
&lt;p&gt;Here are some interesting responses from
&lt;a href="http://ml.mate-desktop.org/pipermail/mate-dev/2013-March/000090.html"&gt;mate-dev&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, MATE is born in a time of fear, so Perberos forked almost all 
GNOME 2 applications. Currently, we are dropping a lot of packages to 
focus our effort on what we need really.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;The main reason of this is to have a base set of apps in GTK 2. Another 
reason, most GNOME apps (like Evince) are suffering mockups that dont 
follow the traditional idea of MATE.&lt;/p&gt;
&lt;p&gt;When MATE will be GTK3, we'll consider again if keeping or not such 
applications.&lt;/p&gt;
&lt;p&gt;Stefano Karapetsas http://ml.mate-desktop.org/pipermail/mate-dev/2013-March/000091.html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A similar question was also asked not long after the MATE forum was 
created, which was probably somewhere early in 2012. Steve Zesch 
answered that we would be sure that we wouldn't be affected by 
feature/UI choices of the GNOME developers, which we would have been if 
MATE relied on GNOME 3 applications. He used Caja as an example. Caja 
looked -of course- similar to Nautilus. It had some features Nautilus 3 
didn't, but the reverse was true as well. Nautilus 3 looked better, 
though, so it was not very surprising that we got (and get) this 
question. But Steve's example of Caja turned out to be pretty much spot 
on, when Nautilus 3.6 was released, and almost all of the changes were 
removed features (it was even described by a former GNOME developer as 
'vandalism'). Canonical decided to use 3.4 for Ubuntu 12.10, although 
the original plan was to include 3.6. Linux Mint forked 3.4 as Nemo.&lt;/p&gt;
&lt;p&gt;And there's no good reason for this, as far as I can see. The interfaces 
of Gnome have always been simple enough not to be overwhelming for 
novice users, but at the same time powerful enough for the power users. 
Which is a fine - and rare - balance. They completely messed it up in 
Gnome 3. &lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;So although Gedit, Evince and GNOME Terminal are fine now, I doubt it's 
safe to assume they will stay that way. Especially since we've already 
seen what happened to the fallback mode of Gnome 3 (completely removed, 
although many people use it and Ubuntu's Unity depends on it) and 
Nautilus (vandalised).&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Well, ok, that was a big rant. But to summarise my post (and Stefano's): 
it was a decision that had to be taken quickly, and from the integration 
and control viewpoint, it seems like was a good idea after all. 
Especially now many deprecated underlying technologies have been replaced.&lt;/p&gt;
&lt;p&gt;Michael Steenbeek http://ml.mate-desktop.org/pipermail/mate-dev/2013-March/000092.html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, when two teams are maintaining applications with very little 
differences, that can be considered a waste of time and effort. It was 
very easy to say about the MATE applications as well, before we knew 
what GNOME would do to its applications. Now GNOME is removing more and 
more features from its applications and changing their GUI to a tablet 
interface, it turned to be the right decision.&lt;/p&gt;
&lt;p&gt;Michael Steenbeek http://ml.mate-desktop.org/pipermail/mate-dev/2013-March/000095.html&lt;/p&gt;
&lt;/blockquote&gt;</summary></entry><entry><title>The Silicon Prairie Movie</title><link href="http://atodorov.org/blog/2013/03/25/the-silicon-prairie-movie/" rel="alternate"></link><updated>2013-03-25T11:44:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-25:blog/2013/03/25/the-silicon-prairie-movie/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Not all innovation needs to come out of Silicon Valley!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've just watched &lt;a href="http://www.siliconprairiefilm.com/"&gt;Silicon Prairie&lt;/a&gt;
(download for free or as much as you can afford).
Last fall, a team of journalists and activists joined reddit's Internet 2012 Bus Tour
and traveled from Denver, CO to Danville, KY to capture the Internet’s role in the 
US Midwest's growing Silicon Prairie. Nimblebot, a digital agency, shot and produced a
mini-documentary showcasing the journey. I particularly liked several companies listed
below.&lt;/p&gt;
&lt;h2&gt;AgLocal&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.aglocal.com/"&gt;AgLocal&lt;/a&gt; connects quality meat producers with high-margin
buyers. This can work very well in Bulgaria. Most food and agriculture producers in 
the country are small and mid-sized farms who struggle to sell their produce or work with
middlemen for a low margin. On the other hand there are more and more people, especially in
big cities who would like to pay for locally produced food but don't know where to buy it from
or don't have the time to visit a farm to buy it (like myself). Last but not least what big supermarket
chains sell is simply too expensive and crappy.&lt;/p&gt;
&lt;p&gt;As far as I know there are several attempts at such kind of companies/organizations here
but they are small and not widely popular.&lt;/p&gt;
&lt;h2&gt;Homes For Hackers&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.homesforhackers.com/"&gt;Homes For Hackers&lt;/a&gt; in Kansas City is offering 3 months
of rent-free, Google Fiber-connected start-up space to entrepreneurs. I have already heard
several people discussing similar ideas in Bulgaria, mostly because cost of living here,
hence cost of failure is very low. I wish them good luck.&lt;/p&gt;
&lt;h2&gt;SparkFun Electronics&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.sparkfun.com/"&gt;SparkFun&lt;/a&gt; is an online retail store that sells the bits and
pieces to make your electronics projects possible. According to the movie they create
open source hardware and even shipped to Antarctica which is cool.&lt;/p&gt;
&lt;p&gt;Once again this business model can work in Bulgaria. We had lots of electronics produce back in the
past and still have. There is still talented people in this area
who will be looking for a job if their companies close shop due to Chinese competition.&lt;/p&gt;
&lt;p&gt;Watch the movie and tell me which ones you like ? Do you think Bulgaria can have its
Silicon areas outside &lt;a href="http://sofiavalley.com"&gt;Sofia Valley&lt;/a&gt; ?&lt;/p&gt;</summary><category term="start-up"></category></entry><entry><title>Upcoming Hackathons in Sofia</title><link href="http://atodorov.org/blog/2013/03/24/upcoming-hackatons-in-sofia/" rel="alternate"></link><updated>2013-03-24T22:02:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-24:blog/2013/03/24/upcoming-hackatons-in-sofia/</id><summary type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Hackathon"&gt;Hackathons&lt;/a&gt;
have been organized in Sofia and generally through Bulgaria for the
past several years but as far as I know they were mostly underground events.
There are two upcoming events which are somewhat different. &lt;/p&gt;
&lt;h2&gt;"Record Voting" Hackathon&lt;/h2&gt;
&lt;p&gt;&lt;img alt="hackathon logo" src="/images/opengov.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Organized by &lt;a href="http://iped.bg/en"&gt;INSTITUTE FOR PUBLIC ENVIRONMENT DEVELOPMENT&lt;/a&gt;
this hackathon is the first I know of, which will focus on government provided data.
The objective is to process data
(&lt;a href="http://results.cik.bg/el2011_t1.zip"&gt;sample&lt;/a&gt;) from the 2011 elections
and find persons who were able to vote in the last minute, between 20:00-21:00 hours thus
changing the election results by 20% in their voting section.&lt;/p&gt;
&lt;p&gt;The event starts at 09:29 on 30th Mar 2013 @ &lt;a href="http://www.betahaus.bg"&gt;betahaus Sofia&lt;/a&gt;.
More info in Bulgarian &lt;a href="http://bogomil.info/4805"&gt;here&lt;/a&gt; and
&lt;a href="http://iped.bg/bg/news-read/news1c"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'd love to attend but will be visiting a conference about mobile devices in
another town at the same time :(. If you do attend, let me know how fun it was.&lt;/p&gt;
&lt;p&gt;Dare to read more on the topic about open government? I recommend starting with
&lt;em&gt;Open Government: Collaboration, Transparency, and Participation in Practice by
Daniel Lathrop and Laurel Ruma&lt;/em&gt; (
&lt;a href="http://www.amazon.com/gp/product/0596804350/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0596804350&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Amazon&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0596804350" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
|
&lt;a href="http://www.dpbolvw.net/click-7040110-11260198?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F9780596804367.do%3Fcmp%3Daf-none-book-product_cj_9780596804350_%25zp&amp;cjsku=9780596804367" target="_top"&gt;O'Reilly&lt;/a&gt;&lt;img src="http://www.tqlkg.com/image-7040110-11260198" width="0" height="0" border="0" style="display:none; margin:0;padding:0"/&gt;
). This is an excellent book with tons of examples and easy to read.&lt;/p&gt;
&lt;h2&gt;HackFMI&lt;/h2&gt;
&lt;p&gt;&lt;img alt="HackFMI" src="/images/hackfmi/cropped-hackfmi.png" title="HackFMI" /&gt;&lt;/p&gt;
&lt;p&gt;FMI stands for &lt;em&gt;Faculty of Mathematics and Informatics at the Sofia University&lt;/em&gt; 
(not where I graduated). It's one of the
best, arguably the best, places to study for an IT career. Like most other universities in Bulgaria
its administration and processes suck big time!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://hackfmi.com/"&gt;HackFMI&lt;/a&gt; is the first ever hackathon which will focus on students
improving faculty/university systems and processes. This is HUGE! As far as I know it is also the first
hackathon which is supported by academia. &lt;/p&gt;
&lt;p&gt;I have already &lt;a href="https://github.com/Hackfmi/Organization-Details/pull/2"&gt;volunteered&lt;/a&gt; to be
a mentor at HackFMI. I am looking forward to this. It will be fun. See you there!&lt;/p&gt;</summary><category term="hackathon"></category><category term="open government"></category><category term="hackfmi"></category><category term="events"></category></entry><entry><title>Django QuerySet tip - Search and Order By Exact Match</title><link href="http://atodorov.org/blog/2013/03/21/django-queryset-tip-search-and-order-by-exact-match/" rel="alternate"></link><updated>2013-03-21T22:56:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-21:blog/2013/03/21/django-queryset-tip-search-and-order-by-exact-match/</id><summary type="html">&lt;p&gt;How do you order Django QuerySet results so that first item is the
exact match if using &lt;code&gt;contains&lt;/code&gt; or &lt;code&gt;icontains&lt;/code&gt; ? Both solutions were proposed on the
&lt;a href="https://groups.google.com/d/topic/django-users/OCNmIXrRgag/discussion"&gt;django-users&lt;/a&gt;
mailing list.&lt;/p&gt;
&lt;p&gt;Solution by Tom Evans, example is mine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Django&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Django&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;match&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;name = &amp;quot;Django&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-match&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Django&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appomatic_django_cms&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appomatic_django_filer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appomatic_django_vcs&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BabelDjango&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BDD4Django&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blanc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;skin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bootstrap&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;capistrano&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ccnmtldjango&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;collective&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;csdjango&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contactform&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cykooz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;djangopaste&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cykooz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;djangorecipe&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;d51&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;virtualenv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test_runner&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;503&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;absolute&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;abstract&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;templates&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;...(remaining elements truncated)...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another one:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm not sure this is the right way, but you could drop the Q objects, use
only icontains and sort by the length of 'name'&lt;/p&gt;
&lt;p&gt;Gabriel https://groups.google.com/d/topic/django-users/OCNmIXrRgag/discussion&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;packages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Dancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;u&amp;#39;Dancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;breakdancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Task::Dancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;App::Dancer2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer::Routes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;DancerX::Routes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;DancerX::Config&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Task::DWIM::Dancer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer::Plugin::CDN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;u&amp;#39;Dancer::Plugin::Feed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer::Plugin::LDAP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Dancer::Plugin::Lucy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="s"&gt;&amp;#39;...(remaining elements truncated)...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's all folks. If you have other more interesting sorting needs please comment below.
Thanks!&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category></entry><entry><title>Virtualization Platforms Supported by Red Hat Enterprise Linux</title><link href="http://atodorov.org/blog/2013/03/20/virtualization-platforms-supported-by-red-hat-enterprise-linux/" rel="alternate"></link><updated>2013-03-20T15:04:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-20:blog/2013/03/20/virtualization-platforms-supported-by-red-hat-enterprise-linux/</id><summary type="html">&lt;p&gt;This is mostly for my own reference, to have a handy list
of supported virtualization platforms by Red Hat Enterprise Linux.&lt;/p&gt;
&lt;h2&gt;Software virtualization solutions&lt;/h2&gt;
&lt;p&gt;A guest RHEL operating system is supported if it runs on the following
platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xen shipped with RHEL Server&lt;/li&gt;
&lt;li&gt;KVM shipped with RHEL Server or RHEV for Servers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/VMware"&gt;VMware&lt;/a&gt; ESX/vSphere&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/Microsoft"&gt;Microsoft Hyper-V&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Red Hat does not support Citrix XenServer. However, customers can
&lt;a href="http://otb.bg"&gt;buy RHEL Server&lt;/a&gt; and use it with Citrix XenServer
with the understanding that Red Hat will only support technical
issues that can be reproduced on bare metal.&lt;/p&gt;
&lt;p&gt;The 
&lt;a href="http://www.redhat.com/resourcelibrary/articles/enterprise-linux-virtualization-support"&gt;official virtualization support matrix&lt;/a&gt;
shows which host/guest operating systems combinations are supported.&lt;/p&gt;
&lt;h2&gt;Hardware partitioning&lt;/h2&gt;
&lt;p&gt;Red Hat supports RHEL on hardware partitioning and virtualization solutions such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;amp;quicksearch=IBM+System+Z"&gt;IBM System Z&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;amp;quicksearch=IBM+POWER"&gt;IBM Power&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;amp;quicksearch=PRIMEQUEST"&gt;Fujitsu PRIMEQUEST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hardware.redhat.com/list.cgi?product=Red+Hat+Hardware+Certification&amp;amp;quicksearch=Virtage"&gt;Hitachi Virtage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfortunately the &lt;a href="https://access.redhat.com/knowledge/articles/263573"&gt;recently updated&lt;/a&gt;
hardware catalog
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=923802"&gt;doesn't allow to filter by hardware partitioning vs. virtualization platform&lt;/a&gt;
so you need to know what you are looking for to find it :(.&lt;/p&gt;
&lt;h2&gt;Red Hat Enterprise Linux as a guest on the Cloud&lt;/h2&gt;
&lt;p&gt;Multiple public cloud providers are supported. Comprehensive list can be found here:
http://www.redhat.com/solutions/cloud-computing/public-cloud/find-partner/&lt;/p&gt;
&lt;p&gt;You can also try &lt;a href="http://redhat.force.com/finder/"&gt;Red Hat Partner Locator's&lt;/a&gt;
advanced search. However at the time of this writing there are no partners
listed in the Cloud / Virtualization category.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; It is known that Amazon uses Xen with custom
modifications (not sure what version) and HP Cloud uses KVM but there
is not much public record about hypervisor technology used by most cloud providers.
Red Hat has partner agreements with these vendors and will commercially support 
only their platforms. This means that if you decide to use upstream Xen or anything
else not listed above, you are on your own. &lt;strong&gt;You have been warned!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Unsupported but works&lt;/h2&gt;
&lt;p&gt;I'm not a big fan of running on top of unsupported environments
and I don't have the need to do so.
I've heard about people running CentOS (RHEL compatible) on VirtualBox
but I have no idea how well it works.&lt;/p&gt;
&lt;p&gt;If you are using a different virtualization platform
(like LXC, OpenVZ, UML, 
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-brandtextbin=Parallels%20Software&amp;linkCode=ur2&amp;node=229534&amp;tag=atodorovorg-20"&gt;Parallels&lt;/a&gt;&lt;img src="https://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
or other) let me know if CentOS/Fedora works on it.
Alternatively I can give it a try if you can provide me with ssh/VNC access to the machine.&lt;/p&gt;</summary><category term="RHEL"></category><category term="virtualization"></category><category term="tips"></category></entry><entry><title>Bug in Nokia software shows wrong caller ID</title><link href="http://atodorov.org/blog/2013/03/19/bug-in-nokia-software-shows-wrong-caller-id/" rel="alternate"></link><updated>2013-03-19T09:57:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-19:blog/2013/03/19/bug-in-nokia-software-shows-wrong-caller-id/</id><summary type="html">&lt;p&gt;During the past month one of my cell phones,
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=Nokia&amp;linkCode=ur2&amp;tag=atodorovorg-20&amp;url=search-alias%3Daps"&gt;Nokia&lt;/a&gt;&lt;img src="https://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
&lt;a href="http://www.amazon.com/gp/product/B001SEAOC6/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B001SEAOC6&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;5800 XpressMusic&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B001SEAOC6" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
, was not showing the caller name when a friend was calling.
The number in the contacts list was correct but the name wasn't showing,
nor the custom assigned ringing tone. It turned out to be a bug!&lt;/p&gt;
&lt;p&gt;The story behind this is that accidentally the same number was saved again
in the contacts list, but without a name assigned to it.
The software was matching the later one, so no custom ringing tone,
no name shown. Removing the duplicate entry fixed the issue. Software version of this
phone is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;v 21.0.025
RM-356
02-04-09
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I wondered what will happen with multiple duplicates and if this was fixed in a later
software version so I tested with another phone,
&lt;a href="http://www.amazon.com/gp/product/B002RXEI6U/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B002RXEI6U&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Nokia 6303&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B002RXEI6U" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;.
Software version is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;V 07.10
25-03-10
RM-638
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Step 0 - add the number to the contacts list, with name &lt;code&gt;Buddy 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Step 1 - add the same number to the contacts, with &lt;strong&gt;empty name&lt;/strong&gt;.
&lt;strong&gt;Result&lt;/strong&gt;: You get a warning this number is already present for &lt;code&gt;Buddy 1&lt;/code&gt;!
When receiving a call, &lt;code&gt;Buddy 1&lt;/code&gt; is displayed.&lt;/li&gt;
&lt;li&gt;Step 2 - edit the empty name contact and change the name to &lt;code&gt;Buddy 2&lt;/code&gt;.
&lt;strong&gt;Result&lt;/strong&gt;: when receiving a call &lt;code&gt;Buddy 2&lt;/code&gt; is displayed.&lt;/li&gt;
&lt;li&gt;Step 3 - add the same number again, with name &lt;code&gt;Buddy 0&lt;/code&gt;. This is the latest entry
but it is sorted before the previous two (this is important).
&lt;strong&gt;Result&lt;/strong&gt;: You get a warning that this number is already present for &lt;code&gt;Buddy 1&lt;/code&gt; and &lt;code&gt;Buddy 2&lt;/code&gt;.
When receiving a call &lt;code&gt;Buddy 0&lt;/code&gt; is displayed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;: so it looks like Nokia fixed the issue with empty names, by simply ignoring them
but when multiple duplicate contacts are available it displays the name of the last entered in the
contact list, independent of name sort order.&lt;/p&gt;
&lt;p&gt;&lt;del&gt;
Later today or tomorrow I will test on 
&lt;a href="http://www.amazon.com/gp/product/B005MOW7S2/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B005MOW7S2&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Nokia 700&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B005MOW7S2" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
which runs Symbian OS and update this post with more results.
&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updated on 2013-03-19 23:50&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Finally managed to test on
&lt;a href="http://www.amazon.com/gp/product/B005MOW7S2/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B005MOW7S2&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Nokia 700&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B005MOW7S2" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;.
Software version is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Release
Nokia Belle Feature pack 1
Software version
112.010.1404
Software version date
2012-03-30
Type
RM-670
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: If a duplicate contact entry is present it doesn't matter if the name is empty or not.
Both times no name was displayed when receiving a call. Looks like Nokia is not paying attention to
regressions at all.&lt;/p&gt;
&lt;h2&gt;Android and iPhone&lt;/h2&gt;
&lt;p&gt;I don't own any
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=Android&amp;linkCode=ur2&amp;tag=atodorovorg-20&amp;url=search-alias%3Delectronics"&gt;Android&lt;/a&gt;&lt;img src="https://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
or
&lt;a target="_blank" href="http://www.amazon.com/s/?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=iPhone&amp;linkCode=ur2&amp;rh=n%3A172282%2Ck%3AiPhone&amp;tag=atodorovorg-20&amp;url=search-alias%3Delectronics"&gt;iPhone&lt;/a&gt;&lt;img src="https://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
devices so I'm not able to test on them. If you have one, please let me know if this bug is still present
and how does the software behave when multiple contacts share the same number or have empty names! Thanks!&lt;/p&gt;</summary><category term="Nokia"></category><category term="QA"></category></entry><entry><title>django-social-auth tip: Reminder of Login Provider</title><link href="http://atodorov.org/blog/2013/03/14/django-social-auth-tip-reminder-of-login-provider/" rel="alternate"></link><updated>2013-03-14T12:04:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-14:blog/2013/03/14/django-social-auth-tip-reminder-of-login-provider/</id><summary type="html">&lt;p&gt;Every now and then users forget their passwords. This is why I prefer using
OAuth and social network accounts like GitHub or Twitter. But what do you do
when somebody forgets which OAuth provider they used to login to your site?
Your website needs a reminder. This is how to implement one if using
django-social-auth.&lt;/p&gt;
&lt;h2&gt;Back-end&lt;/h2&gt;
&lt;p&gt;Create a similar view on your Django back-end&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ajax_social_auth_provider_reminder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Remind the user which social auth provider they used to login.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Not a POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Invalid address!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;No user with address &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; found!&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;providers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;UserSocialAuth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;provider&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;providers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;send_templated_mail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;social_provider_reminder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;from_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Difio &amp;lt;reminder@dif.io&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;recipient_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;providers&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Reminder sent to &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;User found but no social providers found!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This example assumes it is called via POST request which contains the email address.
All responses are handled at the front-end via JavaScript. If a user with the specified
email address exists this address will receive a reminder listing all social auth providers
associated with the user account.&lt;/p&gt;
&lt;h2&gt;Front-end&lt;/h2&gt;
&lt;p&gt;On the browser side I like to use &lt;a href="http://dojotoolkit.org"&gt;Dojo&lt;/a&gt;.
Here is a simple script which connects to a form and POSTs the data
back to the server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dojo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dijit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sendReminderForm&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;byId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;reminderForm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;onsubmit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stopEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;dijit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;byId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dlgForgot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xhrArgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;handleAs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);},&lt;/span&gt;
            &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ioargs&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ioargs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;);}&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;deferred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;xhrPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xhrArgs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;dojo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sendReminderForm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can try this out at &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; and let me know how it works for you!&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category><category term="django-social-auth"></category></entry><entry><title>Python Twitter + django-social-auth == Hello New User</title><link href="http://atodorov.org/blog/2013/03/07/python-twitter-django-social-auth-hello-new-user/" rel="alternate"></link><updated>2013-03-07T21:47:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-07:blog/2013/03/07/python-twitter-django-social-auth-hello-new-user/</id><summary type="html">&lt;p&gt;I have been experimenting with the &lt;a href="https://pypi.python.org/pypi/twitter"&gt;twitter&lt;/a&gt;
module for Python and decided to combine it with 
&lt;a href="https://github.com/omab/django-social-auth"&gt;django-social-auth&lt;/a&gt; to welcome new
users who join &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt;. In this post I will show you how to
tweet on behalf of the user when they join your site and send them a welcome email.&lt;/p&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;In django-social-auth the authentication workflow is handled by an operations
pipeline where custom functions can be added or default items can be removed to
provide custom behavior. This is how our pipeline looks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;settings.py&lt;/span&gt;&lt;pre&gt;&lt;span class="n"&gt;SOCIAL_AUTH_PIPELINE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.social.social_auth_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c"&gt;#&amp;#39;social_auth.backends.pipeline.associate.associate_by_email&amp;#39;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.user.get_username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.user.create_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.social.associate_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.social.load_extra_data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;social_auth.backends.pipeline.user.update_user_details&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;myproject.tasks.welcome_new_user&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is the default plus an additional method at the end to welcome new users.&lt;/p&gt;
&lt;p&gt;You also have to create and configure a Twitter application so that users
can login with Twitter OAuth to your site.
&lt;a href="http://django-social-auth.readthedocs.org/en/latest/backends/index.html"&gt;RTFM&lt;/a&gt;
for more information on how to do this.&lt;/p&gt;
&lt;h2&gt;Custom pipeline actions&lt;/h2&gt;
&lt;p&gt;This is how the custom pipeline action should look:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;myproject/tasks.py&lt;/span&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urlparse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;parse_qs&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;welcome_new_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;social_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_new&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_association&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Part of SOCIAL_AUTH_PIPELINE. Works with django-social-auth==0.7.21 or newer&lt;/span&gt;
&lt;span class="sd"&gt;        @backend - social_auth.backends.twitter.TwitterBackend (or other) object&lt;/span&gt;
&lt;span class="sd"&gt;        @user - User (if is_new) or django.utils.functional.SimpleLazyObject (if new_association)&lt;/span&gt;
&lt;span class="sd"&gt;        @social_user - UserSocialAuth object&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;send_welcome_email&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_new&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;new_association&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;social_user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extra_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;access_token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;parsed_tokens&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse_qs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;oauth_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_tokens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;oauth_token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;oauth_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_tokens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;oauth_token_secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;tweet_on_join&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oauth_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oauth_secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This code works with django-social-auth==0.7.21 or newer. In older versions the
&lt;code&gt;new_association&lt;/code&gt; parameter is missing as 
&lt;a href="https://groups.google.com/forum/?fromgroups=#!topic/django-social-auth/Nxf-0iRD27Y"&gt;I discovered&lt;/a&gt;.
If you use an older version you won't be able to distinguish between newly created
accounts and ones which have associated another OAuth backend. You are warned!&lt;/p&gt;
&lt;h2&gt;Tweet &amp;amp; email&lt;/h2&gt;
&lt;p&gt;Sending the welcome email is out of the scope of this post. I am using
&lt;a href="https://github.com/bradwhittington/django-templated-email"&gt;django-templated-email&lt;/a&gt;
to define how emails look and sending them via Amazon SES. See 
&lt;a href="/blog/2013/02/28/email-logging-django-redhat-openshift-amazon-ses/"&gt;Email Logging for Django on RedHat OpenShift With Amazon SES&lt;/a&gt;
for more information on how to configure emailing with SES.&lt;/p&gt;
&lt;p&gt;Here is how the Twitter code looks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;myproject/tasks.py&lt;/span&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;twitter&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery.task&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;settings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TWITTER_CONSUMER_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TWITTER_CONSUMER_SECRET&lt;/span&gt;

&lt;span class="nd"&gt;@task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tweet_on_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oauth_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oauth_secret&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Tweet when the user is logged in for the first time or&lt;/span&gt;
&lt;span class="sd"&gt;        when new Twitter account is associated.&lt;/span&gt;

&lt;span class="sd"&gt;        @oauth_token - string&lt;/span&gt;
&lt;span class="sd"&gt;        @oauth_secret - string&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;twitter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Twitter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;twitter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;oauth_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oauth_secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;TWITTER_CONSUMER_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TWITTER_CONSUMER_SECRET&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;statuses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Started following open source changes at http://www.dif.io!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will post a new tweet on behalf of the user, telling everyone they joined
your website!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
&lt;code&gt;tweet_on_join&lt;/code&gt; and &lt;code&gt;send_welcome_email&lt;/code&gt; are Celery tasks, not ordinary Python
functions. This has the advantage of being able to execute these actions async
and not slow down the user interface.&lt;/p&gt;
&lt;p&gt;Are you doing something special when a user joins your website? Please share
your comments below. Thanks!&lt;/p&gt;</summary><category term="Django"></category><category term="django-social-auth"></category><category term="Twitter"></category><category term="tips"></category></entry><entry><title>Tip: Delete User Profiles with django-social-auth</title><link href="http://atodorov.org/blog/2013/03/06/tip-delete-user-profiles-django-social-auth/" rel="alternate"></link><updated>2013-03-06T21:02:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-03-06:blog/2013/03/06/tip-delete-user-profiles-django-social-auth/</id><summary type="html">&lt;p&gt;Common functionality for websites is the 'DELETE ACCOUNT' or 'DISABLE ACCOUNT'
button. This is how to implement it if using 
&lt;a href="https://github.com/omab/django-social-auth"&gt;django-social-auth&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;views.py&lt;/span&gt;&lt;pre&gt;&lt;span class="n"&gt;delete_objects_for_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# optional&lt;/span&gt;
&lt;span class="n"&gt;UserSocialAuth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;django.contrib.auth.views.logout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This snippet does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Delete (or archive) all objects for the current user;&lt;/li&gt;
&lt;li&gt;Delete the social auth profile(s) because there is no way to disable them.
DSA will create new objects if the user logs in again;&lt;/li&gt;
&lt;li&gt;Disable the &lt;code&gt;User&lt;/code&gt; object. You could also delete it but mind foreign keys;&lt;/li&gt;
&lt;li&gt;Clear the email for the &lt;code&gt;User&lt;/code&gt; object - if a new user is created after deletion
we don't want duplicated email addresses in the database;&lt;/li&gt;
&lt;li&gt;Finally redirect the user to the logout view.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="tips"></category><category term="Django"></category><category term="django-social-auth"></category></entry><entry><title>Email Logging for Django on RedHat OpenShift with Amazon SES</title><link href="http://atodorov.org/blog/2013/02/28/email-logging-django-redhat-openshift-amazon-ses/" rel="alternate"></link><updated>2013-02-28T23:19:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-28:blog/2013/02/28/email-logging-django-redhat-openshift-amazon-ses/</id><summary type="html">&lt;p&gt;Sending email in the cloud can be tricky. IPs of cloud providers are blacklisted
because of frequent abuse. For that reason I use
&lt;a href="http://aws.amazon.com/ses/"&gt;Amazon SES&lt;/a&gt; as my email backend. Here is how to
configure &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; to send emails to site admins
when something goes wrong.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;settings.py&lt;/span&gt;&lt;pre&gt;&lt;span class="c"&gt;# Valid addresses only.&lt;/span&gt;
&lt;span class="n"&gt;ADMINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Alexander Todorov&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;atodorov@example.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;LOGGING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;disable_existing_loggers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;handlers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;mail_admins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ERROR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django.utils.log.AdminEmailHandler&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;loggers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;django.request&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;handlers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mail_admins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ERROR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;propagate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
 
&lt;span class="c"&gt;# Used as the From: address when reporting errors to admins&lt;/span&gt;
&lt;span class="c"&gt;# Needs to be verified in Amazon SES as a valid sender&lt;/span&gt;
&lt;span class="n"&gt;SERVER_EMAIL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django@example.com&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Amazon Simple Email Service settings&lt;/span&gt;
&lt;span class="n"&gt;AWS_SES_ACCESS_KEY_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xxxxxxxxxxxx&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;AWS_SES_SECRET_ACCESS_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xxxxxxxx&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_BACKEND&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django_ses.SESBackend&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You also need the &lt;a href="https://github.com/hmarr/django-ses"&gt;django-ses&lt;/a&gt;
dependency.&lt;/p&gt;
&lt;p&gt;See &lt;a href="http://docs.djangoproject.com/en/dev/topics/logging"&gt;http://docs.djangoproject.com/en/dev/topics/logging&lt;/a&gt; for
more details on how to customize your logging configuration.&lt;/p&gt;
&lt;p&gt;I am using this configuration successfully at RedHat's OpenShift PaaS environment.
Other users have
&lt;a href="https://openshift.redhat.com/community/forums/express/missing-email-on-500-ise-w-django"&gt;reported&lt;/a&gt;
it works for them too. Should work with any other PaaS provider.&lt;/p&gt;</summary><category term="tips"></category><category term="Django"></category><category term="Amazon"></category><category term="SES"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Performance Test: Amazon EBS vs. Instance Storage, Pt.1</title><link href="http://atodorov.org/blog/2013/02/26/performance-test-amazon-ebs-vs-instance-storage-pt1/" rel="alternate"></link><updated>2013-02-26T23:02:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-26:blog/2013/02/26/performance-test-amazon-ebs-vs-instance-storage-pt1/</id><summary type="html">&lt;p&gt;I'm exploring the possibility to speed-up my cloud database so I've run some
basic tests against storage options available to Amazon EC2 instances.
The instance was &lt;a href="http://aws.amazon.com/ec2/instance-types/"&gt;m1.large&lt;/a&gt;
with High I/O performance and two additional disks with the same size:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/dev/xvdb - type EBS&lt;/li&gt;
&lt;li&gt;/dev/xvdc - type instance storage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both are Xen para-virtual disks. The difference is that EBS is persistent
across reboots while instance storage is ephemeral.&lt;/p&gt;
&lt;h2&gt;hdparm&lt;/h2&gt;
&lt;p&gt;For a quick test I used &lt;code&gt;hdparm&lt;/code&gt;. The manual says:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;-T  Perform timings of cache reads for benchmark and comparison purposes.
    This displays the speed of reading directly from the Linux buffer cache
    without disk access. This measurement is essentially an indication of
    the throughput of the processor, cache, and memory of the system under test.

-t  Perform timings of device reads for benchmark and comparison purposes.
    This displays the speed of reading through the buffer cache to the disk
    without any prior caching of data. This measurement is an indication of how
    fast the drive can sustain sequential data reads under Linux, without any
    filesystem overhead.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The results of 3 runs of hdparm are shown below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# hdparm -tT /dev/xvdb /dev/xvdc

/dev/xvdb:
 Timing cached reads:   11984 MB in  1.98 seconds = 6038.36 MB/sec
 Timing buffered disk reads:  158 MB in  3.01 seconds =  52.52 MB/sec

/dev/xvdc:
 Timing cached reads:   11988 MB in  1.98 seconds = 6040.01 MB/sec
 Timing buffered disk reads:  1810 MB in  3.00 seconds = 603.12 MB/sec


# hdparm -tT /dev/xvdb /dev/xvdc

/dev/xvdb:
 Timing cached reads:   11892 MB in  1.98 seconds = 5991.51 MB/sec
 Timing buffered disk reads:  172 MB in  3.00 seconds =  57.33 MB/sec

/dev/xvdc:
 Timing cached reads:   12056 MB in  1.98 seconds = 6075.29 MB/sec
 Timing buffered disk reads:  1972 MB in  3.00 seconds = 657.11 MB/sec


# hdparm -tT /dev/xvdb /dev/xvdc

/dev/xvdb:
 Timing cached reads:   11994 MB in  1.98 seconds = 6042.39 MB/sec
 Timing buffered disk reads:  254 MB in  3.02 seconds =  84.14 MB/sec

/dev/xvdc:
 Timing cached reads:   11890 MB in  1.99 seconds = 5989.70 MB/sec
 Timing buffered disk reads:  1962 MB in  3.00 seconds = 653.65 MB/sec
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;
Sequential reads from instance storage are 10x faster compared to EBS on average.&lt;/p&gt;
&lt;h2&gt;IOzone&lt;/h2&gt;
&lt;p&gt;I'm running MySQL and sequential data reads are probably over idealistic scenario.
So I found another benchmark suite, called &lt;a href="http://iozone.org"&gt;IOzone&lt;/a&gt;.
I used the 3-414 version built from the official SRPM.&lt;/p&gt;
&lt;p&gt;IOzone performs multiple tests. I'm interested in read/re-read, random-read/write,
read-backwards and stride-read.&lt;/p&gt;
&lt;p&gt;For this round of testing I've tested with ext4 filesystem with and without journal
on both types of disks. I also experimented running Iozone inside a ramfs mounted
directory. However I didn't have the time to run the test suite multiple times.&lt;/p&gt;
&lt;p&gt;Then I used
&lt;a href="http://code.google.com/p/iozone-results-comparator/"&gt;iozone-results-comparator&lt;/a&gt; to
visualize the results. (I had to do a minor fix to the code to run inside virtualenv
and install all missing dependencies).&lt;/p&gt;
&lt;p&gt;Raw IOzone output, data visualization and the modified tools are available in the
&lt;a href="http://s3.amazonaws.com/atodorov/blog/aws_disk_benchmark_w_iozone.tar.bz2"&gt;aws_disk_benchmark_w_iozone.tar.bz2&lt;/a&gt;
file (size 51M).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Graphics&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;EBS without journal(Baseline) vs. Instance Storage without journal(Set1)
&lt;img alt="EBS vs. Instance Storage" src="/images/aws_iozone/ebs_woj_vs_is_woj.png" title="EBS vs. Instance Storage" /&gt;&lt;/p&gt;
&lt;p&gt;Instance Storage without journal(Baseline) vs. Ramfs(Set1)
&lt;img alt="IS vs. Ramfs" src="/images/aws_iozone/ebs_woj_vs_is_woj.png" title="IS vs. Ramfs" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Results&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ext4 journal has no effect on reads, causes slow down when writing to disk. This
is expected;&lt;/li&gt;
&lt;li&gt;Instance storage is faster compared to EBS but not much.
If I understand the results correctly, read performance is similar in some cases;&lt;/li&gt;
&lt;li&gt;Ramfs is definitely the fastest but read performance compared to instance storage
is not two-fold (or more) as I expected;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Instance storage appears to be faster (and this is expected) but I'm still not sure if
my application will gain any speed improvement or how much if migrated to read from
instance storage (or ramfs) instead of EBS. I will be performing more real-world
test next time, by comparing execution time for some of my largest SQL queries.&lt;/p&gt;
&lt;p&gt;If you have other ideas how to adequately measure I/O performance in the AWS cloud,
please use the comments below.&lt;/p&gt;</summary><category term="performance testing"></category><category term="QA"></category><category term="Amazon"></category><category term="EC2"></category><category term="cloud"></category></entry><entry><title>Tip: Generating Directory Listings with wget</title><link href="http://atodorov.org/blog/2013/02/21/tip-generating-directory-listings-with-wget/" rel="alternate"></link><updated>2013-02-21T12:12:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-21:blog/2013/02/21/tip-generating-directory-listings-with-wget/</id><summary type="html">&lt;p&gt;Today I was looking to generate a list of all files under remote site directory,
including sub directories. I found no built-in options for this in
&lt;a href="https://www.gnu.org/software/wget/"&gt;wget&lt;/a&gt;. This is how I did it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget http://example.com/dir/ --spider -r -np 2&amp;gt;&amp;amp;1 | grep http:// | tr -s &amp;#39; &amp;#39; | cut -f3 -d&amp;#39; &amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I managed to retrieve 12212 entries from the URL I was exploring.&lt;/p&gt;</summary><category term="tips"></category></entry><entry><title>How Large Are My MySQL Tables</title><link href="http://atodorov.org/blog/2013/02/20/how-large-are-my-mysql-tables/" rel="alternate"></link><updated>2013-02-20T12:03:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-20:blog/2013/02/20/how-large-are-my-mysql-tables/</id><summary type="html">&lt;p&gt;&lt;img src="/images/database.jpg" alt="database" style="display:block;clear:both;"/&gt;
Image CC-BY-SA, &lt;a href="http://www.flickr.com/photos/theredproject/3332644561/"&gt;Michael Mandiberg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I found two good blog posts about investigating MySQL internals: 
&lt;a href="http://www.mysqlperformanceblog.com/2008/03/17/researching-your-mysql-table-sizes/"&gt;Researching your MySQL table sizes&lt;/a&gt; and
&lt;a href="http://www.mysqlperformanceblog.com/2008/02/04/finding-out-largest-tables-on-mysql-server/"&gt;Finding out largest tables on MySQL Server&lt;/a&gt;.
Using the queries against my site &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; showed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;        &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_rows&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                    &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;        &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                    &lt;span class="k"&gt;DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;        &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index_length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;        &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;index_length&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;total_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;        &lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index_length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data_length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                           &lt;span class="n"&gt;idxfrac&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt;   &lt;span class="n"&gt;information_schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TABLES&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt;  &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;index_length&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----------------------------------------+-------+-------+-------+------------+---------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;DATA&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;total_size&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;idxfrac&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----------------------------------------+-------+-------+-------+------------+---------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;difio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;difio_advisory&lt;/span&gt;                   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="k"&gt;G&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="k"&gt;G&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="k"&gt;G&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----------------------------------------+-------+-------+-------+------------+---------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The table of interest is &lt;code&gt;difio_advisory&lt;/code&gt; which had 5 &lt;code&gt;longtext&lt;/code&gt; fields. Those fields were
not used for filtering or indexing the rest of the information.
They were just storage fields - a `nice' side effect of using Django's ORM.&lt;/p&gt;
&lt;p&gt;I have migrated the data to Amazon S3 and stored it in JSON format there. After dropping these
fields the table was considerably smaller:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----------------------------------------+-------+-------+-------+------------+---------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;DATA&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;total_size&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;idxfrac&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----------------------------------------+-------+-------+-------+------------+---------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;difio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;difio_advisory&lt;/span&gt;                   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="k"&gt;G&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="k"&gt;G&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="k"&gt;G&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----------------------------------------+-------+-------+-------+------------+---------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For those interested I'm using &lt;a href="https://github.com/e-loue/django-storages"&gt;django-storages&lt;/a&gt;
on the back-end to save the data in S3 when generated. On the front-end I'm using
&lt;a href="http://dojotoolkit.com"&gt;dojo.xhrGet&lt;/a&gt; to load the information directly into the browser.&lt;/p&gt;
&lt;p&gt;I'd love to hear your feedback in the comments section below. Let me know 
what you found for your own databases. Were there any issues? How did you deal
with them? &lt;/p&gt;</summary><category term="MySQL"></category><category term="Amazon"></category><category term="S3"></category></entry><entry><title>Secure VNC Installation of Red Hat Enterprise Linux 6</title><link href="http://atodorov.org/blog/2013/02/13/secure-vnc-installation-red-hat-enterprise-linux/" rel="alternate"></link><updated>2013-02-13T15:40:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-13:blog/2013/02/13/secure-vnc-installation-red-hat-enterprise-linux/</id><summary type="html">&lt;p&gt;&lt;img src="/images/rhel6_welcome.png" alt="RHEL 6 welcome screen" /&gt;
Image CC-BY-SA,
&lt;a href="https://access.redhat.com/knowledge/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Installation_Guide/sn-welcome-s390.html"&gt;Red Hat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;From time to time I happen to remotely
&lt;a href="http://otb.bg"&gt;install Red Hat Enterprise Linux&lt;/a&gt;
servers via the Internet.
When the system configuration is not decided upfront you need
to use interactive mode. This means VNC in my case.&lt;/p&gt;
&lt;p&gt;In this tutorial I will show you how to make VNC installations more secure
when using public networks to connect to the server.&lt;/p&gt;
&lt;h2&gt;Meet your tools&lt;/h2&gt;
&lt;p&gt;Starting with Red Hat Enterprise Linux 6 and all the latest Fedora releases, the
installer supports SSH connections during install.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that by default, root has a blank password.&lt;/p&gt;
&lt;p&gt;If you don't want any user to be able to ssh in and have full access to your hardware, 
you must specify sshpw for username root. Also note that if Anaconda fails to parse the 
kickstart file, it will allow anyone to login as root and have full access to your hardware.&lt;/p&gt;
&lt;p&gt;Fedora Kickstart manual https://fedoraproject.org/wiki/Anaconda/Kickstart#sshpw&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Preparation&lt;/h2&gt;
&lt;p&gt;We are going to use SSH port forwarding and tunnel VNC traffic through it.
Create a kickstart file as shown below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;install
url --url http://example.com/path/to/rhel6
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp
vnc --password=s3cr3t
sshpw --user=root s3cr3t
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first 5 lines configure the loader portion of the installer. They will setup
networking and fetch the installer image called stage2. This is completely automated.
&lt;strong&gt;NB:&lt;/strong&gt; If you miss some of the lines or have a syntax error the installer will prompt for
values. You either need a remote console access or somebody present at the server console!&lt;/p&gt;
&lt;p&gt;The last 2 lines configure passwords for VNC and SSH respectively.&lt;/p&gt;
&lt;p&gt;Make this file
&lt;a href="https://fedoraproject.org/wiki/Anaconda/Kickstart#Chapter_6._Making_the_Kickstart_File_Available"&gt;available&lt;/a&gt;
over HTTP(S), FTP or NFS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; Make sure that the file is available on the same network where your server is,
or use HTTPS if on public networks.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Now, using your favorite installation media start the
installation process like this: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linux&lt;/span&gt; &lt;span class="n"&gt;sshd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cfg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After a minute or more the installer will load stage2, with the
interactive VNC session. You need to know the IP address or hostname
of the server. Either look into DHCP logs, have somebody look at the
server console and tell you that (it's printed on tty1) or script it in
a &lt;a href="https://fedoraproject.org/wiki/Anaconda/Kickstart#Chapter_4._Pre-installation_Script"&gt;%pre&lt;/a&gt;
script which will send you an email for example.&lt;/p&gt;
&lt;p&gt;When ready, redirect one of your local ports through SSH to the VNC port on the server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -L 5902:localhost:5901 -N root@server.example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now connect to DISPLAY :2 on your system to begin the installation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vncviewer localhost:2 &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Warning Bugs Present&lt;/h2&gt;
&lt;p&gt;As it happens, I find bugs everywhere. This is no exception.
Depending on your network/DHCP configuration IP address during install may 
change mid-air and cause VNC client connection to freeze.&lt;/p&gt;
&lt;p&gt;The reason for this bug is evident from the code (rhel6-branch):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;iw/timezone_gui.py&lt;/span&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isKickstart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcCheckbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_active&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;hasWindows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bootloader&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;span class="filename"&gt;textw/timezone_text.py&lt;/span&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isKickstart&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;hasWindows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bootloader&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;asUtc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Because we are using a kickstart file Anaconda will assume the system clock &lt;strong&gt;DOES NOT&lt;/strong&gt;
use UTC. If you forget to configure it manually you may see time on the server shifting
back or forward (depending on your timezone) while installing. If your DHCP is configured
for short lease time the address will expire before the installation completes. When new
address is requested from DHCP it may be different and this will cause your VNC connection
to freeze.&lt;/p&gt;
&lt;p&gt;To workaround this issue select the appropriate value for the system clock settings during install
and possibly use static IP address during the installation.&lt;/p&gt;
&lt;h2&gt;Feedback&lt;/h2&gt;
&lt;p&gt;As always I'd love to hear your feedback in the comments section below. Let me know 
your tips and tricks to perform secure remote installations using public networks.&lt;/p&gt;</summary><category term="RHEL"></category><category term="tips"></category></entry><entry><title>The shoes start-up</title><link href="http://atodorov.org/blog/2013/02/08/the-shoes-start-up/" rel="alternate"></link><updated>2013-02-08T23:50:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-08:blog/2013/02/08/the-shoes-start-up/</id><summary type="html">&lt;p&gt;Did you know there is a start-up company producing men's shoes? Me neither,
and I love good quality shoes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Beckett Simonon launched in 2012, and slashed prices by working with local manufacturers and
selling directly to customers online.&lt;/p&gt;
&lt;p&gt;The company, which currently operates out of Bogota, Colombia, says it has 
generated $80,000 in revenue after two months in operation, and has five employees.&lt;/p&gt;
&lt;p&gt;Julie Strickland http://www.inc.com/julie-strickland/mens-fashion-startups.html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="/images/Bailey_Chukka_Boot.jpg" style="float: left; margin-right: 10px;"/&gt;&lt;/p&gt;
&lt;p&gt;From what I can tell &lt;a href="http://www.beckettsimonon.com"&gt;Beckett Simonon&lt;/a&gt; produce nice shoes.
I would rate them between very good and high quality, just looking at the pictures.
All designs are very classy and stylish, which is rare these days. Leather looks
high quality, soles too.&lt;/p&gt;
&lt;p&gt;The ones I loved right away are the Bailey Chukka Boot model, shown here.
So far my gut feeling about shoes has never been wrong, even on the Internet, so
I'm thinking to pre-order a pair.&lt;/p&gt;
&lt;p&gt;Anybody wants to team up for a joint order?&lt;/p&gt;</summary><category term="start-up"></category></entry><entry><title>Performance test of MD5, SHA1, SHA256 and SHA512</title><link href="http://atodorov.org/blog/2013/02/05/performance-test-md5-sha1-sha256-sha512/" rel="alternate"></link><updated>2013-02-05T10:33:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-02-05:blog/2013/02/05/performance-test-md5-sha1-sha256-sha512/</id><summary type="html">&lt;p&gt;A few months ago I wrote
&lt;a href="https://github.com/atodorov/django-s3-cache"&gt;django-s3-cache&lt;/a&gt;.
This is Amazon Simple Storage Service (S3) cache backend for Django
which uses hashed file names.
django-s3-cache uses &lt;code&gt;sha1&lt;/code&gt; instead of &lt;code&gt;md5&lt;/code&gt; which appeared to be
faster at the time. I recall that my testing wasn't very robust so I did another
round.&lt;/p&gt;
&lt;h2&gt;Test Data&lt;/h2&gt;
&lt;p&gt;The file &lt;a href="http://s3.amazonaws.com/atodorov/blog/urls.txt.gz"&gt;urls.txt&lt;/a&gt;
contains 10000 unique paths from the &lt;a href="http://www.dif.io"&gt;dif.io&lt;/a&gt;
website and looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/updates/Django-1.3.1/Django-1.3.4/7858/
/updates/delayed_paperclip-2.4.5.2 c23a537/delayed_paperclip-2.4.5.2/8085/
/updates/libv8-3.3.10.4 x86_64-darwin-10/libv8-3.3.10.4/8087/
/updates/Data::Compare-1.22/Data::Compare-Type/8313/
/updates/Fabric-1.4.0/Fabric-1.4.4/8652/
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Test Automation&lt;/h2&gt;
&lt;p&gt;I used the standard &lt;a href="http://docs.python.org/2/library/timeit.html"&gt;timeit&lt;/a&gt;
module in Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;test.py&lt;/span&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;timeit&lt;/span&gt;

&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;import hashlib&lt;/span&gt;
&lt;span class="sd"&gt;for line in url_paths:&lt;/span&gt;
&lt;span class="sd"&gt;    h = hashlib.md5(line).hexdigest()&lt;/span&gt;
&lt;span class="sd"&gt;#    h = hashlib.sha1(line).hexdigest()&lt;/span&gt;
&lt;span class="sd"&gt;#    h = hashlib.sha256(line).hexdigest()&lt;/span&gt;
&lt;span class="sd"&gt;#    h = hashlib.sha512(line).hexdigest()&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;url_paths = []&lt;/span&gt;
&lt;span class="sd"&gt;f = open(&amp;#39;urls.txt&amp;#39;, &amp;#39;r&amp;#39;)&lt;/span&gt;
&lt;span class="sd"&gt;for l in f.readlines():&lt;/span&gt;
&lt;span class="sd"&gt;    url_paths.append(l)&lt;/span&gt;
&lt;span class="sd"&gt;f.close()&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Test Results&lt;/h2&gt;
&lt;p&gt;The main statement hashes all 10000 entries one by one. This statement is
executed 1000 times in a loop, which is repeated 3 times. I have Python 2.6.6
on my system. After every test run the system was rebooted.
Execution time in seconds is available below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;MD5     10.275190830230713, 10.155328989028931, 10.250311136245728
SHA1    11.985718965530396, 11.976419925689697, 11.86873197555542
SHA256  16.662450075149536, 21.551337003707886, 17.016510963439941
SHA512  18.339390993118286, 18.11187481880188,  18.085782051086426
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Looks like I was wrong the first time! MD5 is still faster but not that much.
I will stick with SHA1 for the time being.&lt;/p&gt;
&lt;p&gt;If you are interested in Performance Testing checkout the
&lt;a target="_blank" href="http://www.amazon.com/s/ref=as_li_ss_tl?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=performance%20testing&amp;linkCode=ur2&amp;rh=n%3A283155%2Ck%3Aperformance%20testing&amp;sprefix=performance%20testing%2Caps%2C270&amp;tag=atodorovorg-20&amp;url=search-alias%3Dstripbooks&amp;linkId=UVEZLZJOVYOCVGOT"&gt;performance testing books on Amazon&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;.&lt;/p&gt;
&lt;p&gt;As always I’d love to hear your thoughts and feedback. Please use the comment form below.&lt;/p&gt;</summary><category term="Python"></category><category term="performance testing"></category><category term="QA"></category></entry><entry><title>Tip: Save Money on Amazon - Buy Used Books</title><link href="http://atodorov.org/blog/2013/01/31/tip-save-money-on-amazon-buy-used-books/" rel="alternate"></link><updated>2013-01-31T22:41:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-01-31:blog/2013/01/31/tip-save-money-on-amazon-buy-used-books/</id><summary type="html">&lt;p&gt;I like to buy books, the real ones, printed on paper. This however comes at
a certain price when buying from Amazon. The book price itself is
usually bearable but many times shipping costs to Bulgaria
will double the price. Especially if you are making a single book order.&lt;/p&gt;
&lt;p&gt;To save money I started buying used books when available. For books that are
not so popular I look for items that have been owned by a library.&lt;/p&gt;
&lt;p&gt;This is how I got a hardcover 1984 edition of
&lt;a href="http://www.amazon.com/gp/product/190676820X/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=190676820X&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The Gentlemen's Clubs of London&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=190676820X" width="1" height="1" border="0"  style="border:none !important; margin:0px !important;" /&gt;
by Anthony Lejeune for $10. This is my best deal so far.
The book was brand new I dare to say. There was no edge wear, no damaged pages,
with nice and vibrant colors. The second page had the library sign and no other marks.&lt;/p&gt;
&lt;p&gt;Let me know if you had an experience buying used books online? Did you score a great
deal like I did?&lt;/p&gt;</summary><category term="tips"></category><category term="Amazon"></category><category term="books"></category></entry><entry><title>Click Tracking without MailChimp</title><link href="http://atodorov.org/blog/2013/01/31/click-tracking-without-mailchimp/" rel="alternate"></link><updated>2013-01-31T21:23:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-01-31:blog/2013/01/31/click-tracking-without-mailchimp/</id><summary type="html">&lt;p&gt;Here is a standard notification message that users at &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt;
receive. It is plain text, no HTML crap, short and URLs are clean and
descriptive. As the project lead developer I wanted to track when people click on
these links and visit the website but also keep existing functionality.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;Email with links&amp;quot;" src="/images/email_w_links.png" title="Email with links" /&gt;&lt;/p&gt;
&lt;h2&gt;Standard approach&lt;/h2&gt;
&lt;p&gt;A pretty common approach when sending huge volumes of email is to use an external
service, such as MailChimp. This is one of many email
marketing services which comes with a lot of features. The most important to me
was analytics and reports.&lt;/p&gt;
&lt;p&gt;The downside is that MailChimp (and I guess others) use HTML formatted emails
extensively. I don't like that and I'm sure my users will not like it as well. 
They are all developers. Not to mention that MailChimp is much more expensive
than &lt;a href="http://aws.amazon.com/ses/"&gt;Amazon SES&lt;/a&gt; which I use currently.
No MailChimp for me!&lt;/p&gt;
&lt;p&gt;Another common approach, used by Feedburner by the way,
is to use shortened URLs which redirect to the original ones and measure clicks
in between. I also didn't like this for two reasons: 1) the shortened URLs look
ugly and they are not at all descriptive and 2) I need to generate them automatically
and maintain all the mappings. Why bother ?&lt;/p&gt;
&lt;h2&gt;How I did it?&lt;/h2&gt;
&lt;p&gt;So I needed something which will do a redirect to a predefined URL, measure how many
redirects were there (essentially clicks on the link) and look nice. The solution is
very simple, if you have not recognized it by now from the picture above. &lt;/p&gt;
&lt;p&gt;I opted for a custom redirect engine, which will add tracking information to the
destination URL so I can track it in Google Analytics.&lt;/p&gt;
&lt;p&gt;Previous URLs were of the form &lt;code&gt;http://www.dif.io/updates/haml-3.1.2/haml-3.2.0.rc.3/11765/&lt;/code&gt;.
I've added the humble &lt;code&gt;/daily/?&lt;/code&gt; prefix before the URL path so it becomes
&lt;code&gt;http://www.dif.io/daily/?/updates/haml-3.1.2/haml-3.2.0.rc.3/11765/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now &lt;code&gt;/updates/haml-3.1.2/haml-3.2.0.rc.3/11765/&lt;/code&gt; becomes a query string parameter which
the &lt;code&gt;/daily/index.html&lt;/code&gt; page uses as its destination. Before doing the redirect
a script adds tracking parameters so that Google Analytics will properly
report this visit. Here is the code: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;question&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?utm_source=email&amp;amp;utm_medium=email&amp;amp;utm_campaign=Daily_Notification&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Previously Google Analytics was reporting these visits as direct hits while now it lists them under
campaigns like so:&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;Difio Analytics&amp;quot;" src="/images/analytics_difio_campaigns.png" title="Difio Analytics" /&gt;&lt;/p&gt;
&lt;p&gt;Because all visitors of &lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; use JavaScript enabled browsers
I combined this approach with another one, to
&lt;a href="/blog/2013/01/28/remove-query-string-with-javascript-and-html5/"&gt;remove query string with JavaScript&lt;/a&gt;
and present clean URLs to the visitor.&lt;/p&gt;
&lt;h2&gt;Why JavaScript?&lt;/h2&gt;
&lt;p&gt;You may be asking why the hell I am using JavaScript and not Apache's wonderful mod_rewrite module? 
This is because the destination URLs are hosted in &lt;a href="http://aws.amazon.com/s3/"&gt;Amazon S3&lt;/a&gt; and I'm
planning to integrate with &lt;a href="http://aws.amazon.com/cloudfront/"&gt;Amazon CloudFront&lt;/a&gt;. Both of them
don't support .htaccess rules nor anything else similar to mod_rewrite.&lt;/p&gt;
&lt;p&gt;As always I'd love to hear your thoughts and feedback. Please use the comment form below.&lt;/p&gt;</summary><category term="JavaScript"></category><category term="Amazon"></category><category term="S3"></category><category term="SES"></category><category term="cloud"></category></entry><entry><title>StartUP Talk#5 - book list</title><link href="http://atodorov.org/blog/2013/01/30/startup-talk-5-book-list/" rel="alternate"></link><updated>2013-01-30T16:14:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-01-30:blog/2013/01/30/startup-talk-5-book-list/</id><summary type="html">&lt;p&gt;Yesterday I have visited an interesting talk by
&lt;a href="http://www.linkedin.com/in/tpanayotov"&gt;Teodor Panayotov&lt;/a&gt; held at
&lt;a href="http://www.betahaus.bg/"&gt;betahaus Sofia&lt;/a&gt;. He was talking about his
path to success and all the companies he had worked in or founded.&lt;/p&gt;
&lt;p&gt;I'm writing this post as a personal note to not forget all the good books
Teodor mentioned in his presentation.&lt;/p&gt;
&lt;p&gt;I intend to read the these four as a start:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/0307465357/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0307465357&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The 4-Hour Workweek: Escape 9-5, Live Anywhere, and Join the New Rich (Expanded and Updated)&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0307465357" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/0887307280/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0887307280&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The E-Myth Revisited: Why Most Small Businesses Don't Work and What to Do About It&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0887307280" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/1422121100/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1422121100&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Mastering the Hype Cycle: How to Choose the Right Innovation at the Right Time (Gartner)&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1422121100" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/1599180413/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1599180413&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Business Models Made Easy&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1599180413" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;
&lt;p&gt;The rest he recommended are:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/1591842719/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1591842719&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;How to Get Rich: One of the World's Greatest Entrepreneurs Shares His Secrets&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1591842719" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/1451614217/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1451614217&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Abundance: The Future Is Better Than You Think&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1451614217" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/0143037889/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0143037889&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The Singularity Is Near: When Humans Transcend Biology&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=0143037889" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/1440428433/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1440428433&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;The Law Of Success: Napoleon Hill&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1440428433" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;
&lt;p&gt;If you happen to read any of these &lt;a href="http://www.goodreads.com/review/list/16191345-alexander-todorov?shelf=to-read"&gt;before me&lt;/a&gt;,
please share your thoughts on the book.&lt;/p&gt;</summary><category term="start-up"></category><category term="books"></category></entry><entry><title>Remove Query String with JavaScript and HTML5</title><link href="http://atodorov.org/blog/2013/01/28/remove-query-string-with-javascript-and-html5/" rel="alternate"></link><updated>2013-01-28T15:52:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-01-28:blog/2013/01/28/remove-query-string-with-javascript-and-html5/</id><summary type="html">&lt;p&gt;A &lt;a href="http://en.wikipedia.org/wiki/Query_string"&gt;query string&lt;/a&gt; is the stuff after
the question mark in URLs.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;URL with query string&amp;quot;" src="/images/url_w_qs.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Why remove query strings?&lt;/h2&gt;
&lt;p&gt;Two reasons: clean URLs and social media.&lt;/p&gt;
&lt;p&gt;Clean URLs not only look better but they prevent users to see if you are tracking
where they came from. The picture above shows what the address bar
looks like after the user clicks a link in Feedburner. The high-lightened part is
what Google Analytics uses to distinguish Feedburner traffic from other types of
traffic. I don't want my users to see this.&lt;/p&gt;
&lt;p&gt;As you know, social media sites give URLs a score, whether it is based on number of
bookmarks, reviews, comments, likes or whatever. Higher scores usually result in
increased traffic to your site. Query strings mess things up because &lt;a href="http://www.dif.io"&gt;http://www.dif.io&lt;/a&gt;
and &lt;a href="http://www.dif.io/?query"&gt;http://www.dif.io/?query&lt;/a&gt; are usually considered two different URLs. So instead
of having a high number of likes for your page you get several scores and never
make it to the headlines.&lt;/p&gt;
&lt;h2&gt;JavaScript and HTML5 to the rescue&lt;/h2&gt;
&lt;p&gt;Place this JavaScript code in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of your pages. Preferably near the top.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;clean_uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceState&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;clean_uri&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This code will clean the URL in the browser address bar without reloading the page.
It works for HTML5 enabled browsers.&lt;/p&gt;
&lt;p&gt;This works for me with 
Firefox 10.0.12, Opera 12.02.1578 and Chrome 24.0.1312.56 under Linux.
&lt;strike&gt;In fact I'm using this snippet on this very own blog as well.&lt;/strike&gt;
&lt;strong&gt;UPDATE:&lt;/strong&gt; I've
&lt;a href="/blog/2015/11/25/blog-migration-from-octopress-to-pelican/"&gt;migrated to Pelican&lt;/a&gt;
and haven't enabled this script on the blog!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updated on 2013-01-30&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is another approach proposed by reader Kamen Mazdrashki: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;clean_uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;protocol&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;//&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;var hash_pos = location.href.indexOf(&amp;quot;#&amp;quot;);&lt;/span&gt;
&lt;span class="cm"&gt;if (hash_pos &amp;gt; 0) {&lt;/span&gt;
&lt;span class="cm"&gt;    var hash = location.href.substring(hash_pos, location.href.length);&lt;/span&gt;
&lt;span class="cm"&gt;    clean_uri += hash;&lt;/span&gt;
&lt;span class="cm"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceState&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;clean_uri&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you'd like to keep the hash tag aka named anchor aka fragment identifier at the end of the URL
then uncomment the commented section.&lt;/p&gt;
&lt;p&gt;I've tested removing the hashtag from the URL. Firefox doesn't seem to scroll the page
to where I wanted but your experience may vary. I didn't try hard enough to
verify the results.&lt;/p&gt;
&lt;p&gt;One question still remains though: Why would someone point the users to an URL which contains
named anchors and then remove them? I don't see a valid use case for this scenario.&lt;/p&gt;
&lt;p&gt;You may want to take a look at the many
&lt;a target="_blank" href="http://www.amazon.com/s/ref=as_li_ss_tl?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;field-keywords=HTML5%20and%20JavaScript&amp;linkCode=ur2&amp;rh=i%3Aaps%2Ck%3AHTML5%20and%20JavaScript&amp;tag=atodorovorg-20&amp;url=search-alias%3Daps&amp;linkId=5JHZNZC3Q5R3RB3L"&gt;HTML5 and JavaScript books&lt;/a&gt;&lt;img src="https://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;
if you don't have enough experience with the subject. For those of you who
are looking into Node.js I can recommend two book by my friend Krasi Tsonev:
&lt;a rel="nofollow" href="http://www.amazon.com/gp/product/1783287330/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1783287330&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=ZBA3EYC4PZGKASAF"&gt;Node.js Blueprints - Practical Projects to Help You Unlock the Full Potential of Node.js&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1783287330" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;
and
&lt;a rel="nofollow" href="http://www.amazon.com/gp/product/B00XJRN9S6/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00XJRN9S6&amp;linkCode=as2&amp;tag=atodorovorg-20&amp;linkId=OLBCPLXOAILZTJR5"&gt;Node.js By Example&lt;/a&gt;&lt;img src="http://ir-na.amazon-adsystem.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=B00XJRN9S6" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;
.&lt;/p&gt;</summary><category term="JavaScript"></category><category term="HTML5"></category></entry><entry><title>Hello World</title><link href="http://atodorov.org/blog/2013/01/28/hello-world/" rel="alternate"></link><updated>2013-01-28T15:12:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-01-28:blog/2013/01/28/hello-world/</id><summary type="html">&lt;p&gt;Hi everyone and welcome to my blog! My name is Alex and you can read more &lt;a href="/blog/2013/01/25/about-me/"&gt;about me&lt;/a&gt;
if you like.&lt;/p&gt;
&lt;p&gt;After several years of rather unsuccessful blogging I decided to revamp my blog,
influenced by the book
&lt;em&gt;Technical Blogging: Turn Your Expertise into a Remarkable Online Presence&lt;/em&gt;
(
&lt;a href="http://www.amazon.com/gp/product/1934356883/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1934356883&amp;linkCode=as2&amp;tag=atodorovorg-20"&gt;Amazon&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=atodorovorg-20&amp;l=as2&amp;o=1&amp;a=1934356883" width="1" height="1" border="0" style="border:none !important; margin:0px !important;" /&gt;
|
&lt;a href="http://www.tkqlhce.com/click-7040110-11260198?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F9781934356883.do%3Fcmp%3Daf-npa-book-product_cj_9781934356883_%7BPID%7D&amp;cjsku=9781934356883" target="_top"&gt;O'Reilly&lt;/a&gt;&lt;img src="http://www.ftjcfx.com/image-7040110-11260198" width="0" height="0" border="0" style="margin:0;padding:0;display:none;"/&gt;
).&lt;/p&gt;
&lt;p&gt;I'm starting fresh with new domain name and a big list of topics to write about. This blog will
be the place to share my thoughts on open source software, QA and cloud. From time to time
I intend to write about start-ups and being a start-up owner as well.&lt;/p&gt;
&lt;p&gt;All content is published under
&lt;a href="http://creativecommons.org/licenses/by-sa/3.0/deed.en_US"&gt;Creative Commons Attribution-ShareAlike 3.0&lt;/a&gt;
license and all source code is under the &lt;a href="http://opensource.org/licenses/MIT"&gt;MIT&lt;/a&gt; license if not stated
otherwise.&lt;/p&gt;
&lt;p&gt;I hope you find it interesting and helpful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 2013-09-22:&lt;/strong&gt;
I have migrated some older blog posts and materials scattered around various places
to this site as well. So this isn't the very first post anymore!&lt;/p&gt;</summary></entry><entry><title>About Me</title><link href="http://atodorov.org/blog/2013/01/25/about-me/" rel="alternate"></link><updated>2013-01-25T21:47:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2013-01-25:blog/2013/01/25/about-me/</id><summary type="html">&lt;p&gt;&lt;img style="float:left; margin-right: 25px;" src="/images/aboutme2.jpg" alt="This is how I look" title="This is how I look"/&gt;&lt;/p&gt;
&lt;p&gt;My name is Alexander Todorov and this is how I look. It's pretty close!&lt;/p&gt;
&lt;p&gt;I'm currently a contractor operating in the field of open source software and
quality engineering and a start-up owner with many ideas.
I also have some hard-earned certificates including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RHCE - Red Hat Certified Engineer - Oct 2008&lt;/li&gt;
&lt;li&gt;RHCI - Red Hat Certified Instructor - Oct 2009&lt;/li&gt;
&lt;li&gt;RHCVA - Red Hat Certified Virtualization Administrator - Sep 2010&lt;/li&gt;
&lt;li&gt;Red Hat Partner Platform Certified Salesperson - Oct 2011&lt;/li&gt;
&lt;li&gt;Red Hat Partner Virtualization Certified Salesperson - Oct 2011&lt;/li&gt;
&lt;li&gt;Red Hat Partner Middleware Certified Salesperson - Oct 2011&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My professional interests cover vast amount of topics including but not limited
to Linux and open source, quality engineering, DevOps, cloud and
platform-as-a-service, programming with Python and Django.&lt;/p&gt;
&lt;p&gt;I used to teach to students at Technical University Of Sofia with my friends
&lt;a href="http://batsov.com"&gt;Bozhidar Batsov&lt;/a&gt; and &lt;a href="http://uk.linkedin.com/in/kirilkamburov"&gt;Kiril Kamburov&lt;/a&gt;
but I don't have the time for this anymore. &lt;/p&gt;
&lt;p&gt;You can always ping me if you'd like to chat or have a beer. See &lt;a href="http://about.me/atodorov"&gt;http://about.me/atodorov&lt;/a&gt;
or execute this command to see my email:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="mi"&gt;17535658&lt;/span&gt;&lt;span class="mf"&gt;@572.24&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12345678&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;abdgortv&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I am usually working on several things at a time or affiliated with more than one
organization. This list contains current ventures and some of the more interesting
previous ones.&lt;/p&gt;
&lt;p&gt;&lt;img style="float: left; margin-right: 10px;" src="/images/logos/obuvki41plus.png" alt="obuvki41plus" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://obuvki41plus.com"&gt;Shoes 41 Plus&lt;/a&gt; is niche oriented business selling ladies shoes with
sizes EU 41 and up, which are very hard to find in Bulgaria. We're also not shy to sell to men
who prefer ladies shoes!
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;OTB&amp;quot;" src="/images/logos/otb.png" title="OTB" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://otb.bg"&gt;Open Technologies Bulgaria, Ltd&lt;/a&gt; is a company I founded in 2009 which
mainly does open source consulting for some local clients and QA services to Red Hat, Inc. It's
also an authorized
&lt;a href="http://redhat.force.com/finder/PFPartnerDetail?id=0016000000LxykhAAB"&gt;Red Hat re-seller in Bulgaria&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img style="float: left; margin-right: 10px;" src="/images/logos/redhat.png" alt="RedHat" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://redhat.com"&gt;Red Hat, Inc.&lt;/a&gt; is the largest enterprise Linux vendor as you probably know.
I used to work for them as an employee and still continue to do so as a contractor. My main responsibility
is making sure Red Hat Enterprise Linux (and some other products) get to customers without too
many bugs and behave as quality software. I'm highly biased towards all Red Hat products but
a) they didn't fail me once and b) I know how much hard work is done into making these products
kick ass.&lt;/p&gt;
&lt;p&gt;&lt;img style="float: left; margin-right: 10px;" src="/images/logos/difio.png" alt="Difio" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; was a service targeted at developers
who use open source packages and libraries. It shut down on Sept 10th 2014.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style="float: left; margin-right: 10px;" src="/images/logos/olpcbg.png" alt="OLPC.bg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://laptop.org"&gt;OLPC&lt;/a&gt; was a project to build an entirely new laptop device and software for the children
in developing countries. I was a co-founder of the Bulgarian chapter of this project.
While the upstream project delivered a hardware and a software platform it failed rather miserably.
Our local chapter didn't get much support and gradually ceased operations.&lt;/p&gt;
&lt;p&gt;I also own some domains. If you are interested just ask!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://atodorov.org"&gt;atodorov.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dif.io"&gt;dif.io&lt;/a&gt; - not in use anymore&lt;/li&gt;
&lt;li&gt;&lt;a href="http://obuvki41plus.com"&gt;obuvki41plus.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://otb.bg"&gt;otb.bg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;redhat.tips&lt;/li&gt;
&lt;li&gt;rhca.guru&lt;/li&gt;
&lt;li&gt;rhca.tips&lt;/li&gt;
&lt;li&gt;rhce.guru&lt;/li&gt;
&lt;li&gt;rhce.tips&lt;/li&gt;
&lt;li&gt;rhel.tips&lt;/li&gt;
&lt;li&gt;qecloud.com&lt;/li&gt;
&lt;li&gt;qecloud.net&lt;/li&gt;
&lt;li&gt;qecloud.org&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Mission Impossible - ABRT Bugzilla Plugin on RHEL6</title><link href="http://atodorov.org/blog/2012/07/13/mission-impossible-abrt-bugzilla-plugin-on-rhel6/" rel="alternate"></link><updated>2012-07-13T13:21:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-07-13:blog/2012/07/13/mission-impossible-abrt-bugzilla-plugin-on-rhel6/</id><summary type="html">&lt;p&gt;Some time ago Red Hat introduced Automatic Bug Reporting Tool to their Red Hat Enterprise Linux
platform. This is a nice tool which lets users report bugs easily to Red Hat.
However one of the plugins in the latest version doesn't seem usable at all.&lt;/p&gt;
&lt;p&gt;First make sure you have &lt;code&gt;libreport-plugin-bugzilla&lt;/code&gt; package installed. This is the plugin to
report bugs directly to &lt;a href="https://bugzilla.redhat.com"&gt;Bugzilla&lt;/a&gt;. It may not be installed by default
because customers are supposed to report issues to Support first - this is why they pay anyway.
If you are a tech savvy user though, you may want to skip Support and go straight to the developers.&lt;/p&gt;
&lt;p&gt;To enable Bugzilla plugin: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edit the file &lt;code&gt;/etc/libreport/events.d/bugzilla_event.conf&lt;/code&gt; change the line&lt;div class="highlight"&gt;&lt;pre&gt;EVENT=report_Bugzilla analyzer=libreport reporter-bugzilla -b
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    EVENT=report_Bugzilla reporter-bugzilla -b
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make sure ABRT will collect meaningful backtrace. If debuginfo is missing it will not let you continue.
Edit the file &lt;code&gt;/etc/libreport/events.d/ccpp_event.conf&lt;/code&gt;. There should be something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;EVENT=analyze_LocalGDB analyzer=CCpp&lt;/span&gt;
&lt;span class="x"&gt;        abrt-action-analyze-core --core=coredump -o build_ids &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="x"&gt;        abrt-action-generate-backtrace &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="x"&gt;        abrt-action-analyze-backtrace&lt;/span&gt;
&lt;span class="x"&gt;        (&lt;/span&gt;
&lt;span class="x"&gt;            bug_id=&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="err"&gt;reporter-bugzilla&lt;/span&gt; &lt;span class="err"&gt;-h&lt;/span&gt; &lt;span class="err"&gt;`cat&lt;/span&gt; &lt;span class="err"&gt;duphash`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt; &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="x"&gt;            if test -n &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bug_id&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;; then&lt;/span&gt;
&lt;span class="x"&gt;                abrt-bodhi -r -b &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bug_id&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;            fi&lt;/span&gt;
&lt;span class="x"&gt;        )&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change it to look like this - i.e. add the missing &lt;code&gt;/usr/libexec/&lt;/code&gt; line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;EVENT=analyze_LocalGDB analyzer=CCpp&lt;/span&gt;
&lt;span class="x"&gt;        abrt-action-analyze-core --core=coredump -o build_ids &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="x"&gt;        /usr/libexec/abrt-action-install-debuginfo-to-abrt-cache --size_mb=4096 &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="x"&gt;        abrt-action-generate-backtrace &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="x"&gt;        abrt-action-analyze-backtrace &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="x"&gt;        (&lt;/span&gt;
&lt;span class="x"&gt;            bug_id=&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="err"&gt;reporter-bugzilla&lt;/span&gt; &lt;span class="err"&gt;-h&lt;/span&gt; &lt;span class="err"&gt;`cat&lt;/span&gt; &lt;span class="err"&gt;duphash`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt; &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="x"&gt;            if test -n &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bug_id&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;; then&lt;/span&gt;
&lt;span class="x"&gt;                abrt-bodhi -r -b &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bug_id&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;            fi&lt;/span&gt;
&lt;span class="x"&gt;        )&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Supposedly after everything is configured properly ABRT will install missing debuginfo packages,
generate the backtrace and let you report it to Bugzilla. Because of
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=759443"&gt;bug 759443&lt;/a&gt; this will not happen.&lt;/p&gt;
&lt;p&gt;To work around the problem you can try to manually install the missing debuginfo packages.
Go to your system profile in RHN and subscribe the system to all appropriate debuginfo channels.
Then install the packages. In my case:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    # debuginfo-install firefox
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And finally - &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=800754"&gt;bug 800754&lt;/a&gt; which was already reported!&lt;/p&gt;</summary><category term="QA"></category><category term="RHEL"></category></entry><entry><title>Combining PDF Files On The Command Line</title><link href="http://atodorov.org/blog/2012/07/12/combining-pdf-files-on-the-command-line/" rel="alternate"></link><updated>2012-07-12T11:06:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-07-12:blog/2012/07/12/combining-pdf-files-on-the-command-line/</id><summary type="html">&lt;p&gt;&lt;strong&gt;VERSION&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Red Hat Enterprise Linux 6&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PROBLEM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You have to create a single PDF file by combining multiple files -
for example individually scanned pages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ASSUMPTIONS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You know how to start a shell and havigate to the directory containing the files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If individual PDF files are named, for example, &lt;code&gt;doc_01.pdf&lt;/code&gt;, &lt;code&gt;doc_02.pdf&lt;/code&gt;, &lt;code&gt;doc_03.pdf&lt;/code&gt;,
&lt;code&gt;doc_04.pdf&lt;/code&gt;, then you can combine them with the &lt;code&gt;gs&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ gs -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile=mydocument.pdf doc_*.pdf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The resulting PDF file will contain all pages from the individual files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MORE INFO&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;gs&lt;/code&gt; command is part of the &lt;a href="http://www.ghostscript.com/"&gt;ghostscript&lt;/a&gt; rpm package.
You can find more about it using &lt;code&gt;man gs&lt;/code&gt;, the documentation file &lt;code&gt;/usr/share/doc/ghostscript-*/index.html&lt;/code&gt;
or &lt;a href="http://www.ghostscript.com"&gt;http://www.ghostscript.com&lt;/a&gt;.&lt;/p&gt;</summary><category term="tips"></category><category term="RHEL"></category></entry><entry><title>Cross-domain AJAX Served From CDN</title><link href="http://atodorov.org/blog/2012/05/19/cross-domain-ajax-served-from-cdn/" rel="alternate"></link><updated>2012-05-19T16:58:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-05-19:blog/2012/05/19/cross-domain-ajax-served-from-cdn/</id><summary type="html">&lt;p&gt;This week Amazon &lt;a href="http://aws.typepad.com/aws/2012/05/amazon-cloudfront-support-for-dynamic-content.html"&gt;announced&lt;/a&gt;
support for dynamic content in their CDN solution &lt;a href="http://aws.amazon.com/cloudfront/"&gt;&lt;em&gt;Amazon CloudFront&lt;/em&gt;&lt;/a&gt;.
The announce coincided with my efforts to migrate more pieces of &lt;em&gt;Difio&lt;/em&gt;'s &lt;a href="http://www.dif.io"&gt;website&lt;/a&gt; to &lt;em&gt;CloudFront&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In this article I will not talk about hosting static files on CDN. This is easy and I've already written
about it &lt;a href="/blog/2012/04/17/using-openshift-as-amazon-cloudfront-origin-server/"&gt;here&lt;/a&gt;. I will show how to
cache AJAX(JSONP actually) responses and serve them directly from &lt;em&gt;Amazon CloudFront&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;For those of you who may not be familiar (are there any) CDN stands for
&lt;a href="https://en.wikipedia.org/wiki/Content_delivery_network"&gt;Content Delivery Network&lt;/a&gt;. In short
this employs numerous servers with identical content. The requests from the browser are served
from the location which gives best performance for the user. This is used by all major websites
to speed-up static content like images, video, CSS and JavaScript files.&lt;/p&gt;
&lt;p&gt;AJAX means &lt;a href="https://en.wikipedia.org/wiki/Ajax_%28programming%29"&gt;Asynchronous JavaScript and XML&lt;/a&gt;.
This is what Google uses to create dynamic user interface which doesn't require to reload the page.&lt;/p&gt;
&lt;h2&gt;Architecture&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Difio&lt;/em&gt; has two web interfaces. The primary one is a static HTML website
which employs JavaScript for the dynamic areas. It is hosted on the dif.io domain.
The other one is powered by Django and provides the same interface plus the
&lt;a href="https://difio-otb.rhcloud.com/dashboard/"&gt;applications dashboard&lt;/a&gt; and several API functions
which don't have a visible user interface. This is under the *.rhcloud.com domain b/c it is hosted on
&lt;a href="http://openshift.redhat.com"&gt;&lt;em&gt;OpenShift&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The present state of the website is the result of rapid development using conventional methods - 
HTML templates and server-side processing. This is migrating to modern web technology like static HTML
and JavaScript while the server side will remain pure API service.&lt;/p&gt;
&lt;p&gt;For this migration to happen I need the HTML pages at dif.io to execute JavaScript and load information
which comes from the rhcloud.com domain. Unfortunately this is not easily doable with AJAX because
of the &lt;a href="https://en.wikipedia.org/wiki/Same_origin_policy"&gt;Same origin policy&lt;/a&gt; in browsers.&lt;/p&gt;
&lt;p&gt;I'm using the &lt;a href="http://dojotoolkit.org/"&gt;&lt;em&gt;Dojo Toolkit&lt;/em&gt;&lt;/a&gt; JavaScript framework which has a solution.
It's called &lt;a href="https://en.wikipedia.org/wiki/JSONP"&gt;JSONP&lt;/a&gt;. Here's how it works:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;     dif.io ------ JSONP request --&amp;gt; abc.rhcloud.com --v
        ^                                              |
        |                                              |
    JavaScript processing                              |
        |                                              |
        +------------------ JSONP response ------------+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is pretty standard configuration for a web service.&lt;/p&gt;
&lt;h2&gt;Going to the clouds&lt;/h2&gt;
&lt;p&gt;The way &lt;em&gt;Dojo&lt;/em&gt; implements JSONP is through the
&lt;a href="http://dojotoolkit.org/reference-guide/1.7/dojo/io/script.html"&gt;dojo.io.script&lt;/a&gt; module.
It works by appending a query string parameter of the form &lt;em&gt;?callback=funcName&lt;/em&gt; which the server uses
to generate the JSONP response. This callback name is dynamically generated by &lt;em&gt;Dojo&lt;/em&gt; based on the order
in which your call to &lt;em&gt;dojo.io.script&lt;/em&gt; is executed.&lt;/p&gt;
&lt;p&gt;Until recently &lt;em&gt;Amazon CloudFront&lt;/em&gt; ignored all query string parameters when requesting the content from
the origin server. Without the query string it was not possible to generate the JSONP response.
Luckily Amazon resolved the issue only one day after I asked about it on their forums.&lt;/p&gt;
&lt;p&gt;Now &lt;em&gt;Amazon CloudFront&lt;/em&gt; will use the URL path and the query string parameters to identify the objects in cache.
To enable this edit the CloudFront distribution &lt;em&gt;behavior(s)&lt;/em&gt; and set &lt;em&gt;Forward Query Strings&lt;/em&gt; to Yes.&lt;/p&gt;
&lt;p&gt;When a visitor of the website requests the data &lt;em&gt;Amazon CloudFront&lt;/em&gt; will use exactly the same url path and query strings
to fetch the content from the origin server. All that I had to do is switch the domain of the JSONP service
to point to the cloudfront.net domain. It became like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;                                                        | Everything on this side is handled by Amazon.
                                                        | No code required!
                                                        |
     dif.io ------ JSONP request --&amp;gt; xyz.cloudfront.net -- JSONP request if cache miss --&amp;gt; abc.rhcloud.com --v
        ^                              |                ^                                                    |
        |                              |                |                                                    |
    JavaScript processing              |                +---------- JSONP response --------------------------+
        |                              |
        +---- cached JSONP response ---+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see the website structure and code didn't change at all. All that changed was a single domain name.&lt;/p&gt;
&lt;h2&gt;Controlling the cache&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Amazon CloudFront&lt;/em&gt; will keep the contents in cache based on the origin headers if present or the manual configuration
from the AWS Console. To work around frequent requests to the origin server it is considered best practice to set the
Expires header to a value far in the future, like 1 year.
However if the content changes you need some way to tell &lt;em&gt;CloudFront&lt;/em&gt; about it. The most commonly used method is through
using different URLs to access the same content. This will cause &lt;em&gt;CloudFront&lt;/em&gt; to cache the content under the new location
while keeping the old content until it expires.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Dojo&lt;/em&gt; makes this very easy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dojo/io/script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://xyz.cloudfront.net/api/json/updates/1234&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;callbackParamName&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;callback&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;timeStamp&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jsonData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="p"&gt;....&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;content&lt;/em&gt; property allows additional key/value pairs to be sent in the query string. The
&lt;em&gt;timeStamp&lt;/em&gt; parameter serves only to control &lt;em&gt;Amazon CloudFront&lt;/em&gt; cache. It's not processed server side.&lt;/p&gt;
&lt;p&gt;On the server-side we have:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Cache-Control&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;max-age=31536000&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Expires&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;31536000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%a, &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %b %Y %H:%M:%S GMT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Benefits&lt;/h2&gt;
&lt;p&gt;There were two immediate benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reduced page load time. Combined with serving static files from CDN this greatly improves the user experience;&lt;/li&gt;
&lt;li&gt;Reduced server load. Content is requested only once if it is missing from the cache and then served from CloudFront.
The server isn't so busy serving content so it can be used to do more computations or simply reduce the bill.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The presented method works well for &lt;em&gt;Difio&lt;/em&gt; because of two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The content which &lt;em&gt;Difio&lt;/em&gt; serves usually doesn't change at all once made public. In rare occasions, for example an error
has been published, we have to regenerate new content and publish it under the same URL.&lt;/li&gt;
&lt;li&gt;Before content is made public it is inspected for errors and this also preseeds the cache.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Amazon"></category><category term="CloudFront"></category><category term="cloud"></category></entry><entry><title>Using OpenShift as Amazon CloudFront Origin Server</title><link href="http://atodorov.org/blog/2012/04/17/using-openshift-as-amazon-cloudfront-origin-server/" rel="alternate"></link><updated>2012-04-17T17:30:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-04-17:blog/2012/04/17/using-openshift-as-amazon-cloudfront-origin-server/</id><summary type="html">&lt;p&gt;It's been several months after the start of &lt;a href="http://www.dif.io"&gt;&lt;em&gt;Difio&lt;/em&gt;&lt;/a&gt; and I started
migrating various parts of the platform to CDN. The first to go are static files like
CSS, JavaScript, images and such. In this article I will show you how to get started with 
&lt;em&gt;Amazon CloudFront&lt;/em&gt; and &lt;em&gt;OpenShift&lt;/em&gt;. It is very easy once you understand how it works.&lt;/p&gt;
&lt;h2&gt;Why CloudFront and OpenShift&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Amazon CloudFront&lt;/em&gt; is cheap and easy to setup with virtually no maintenance.
The most important feature is that it can fetch content from any public website.
Integrating it together with &lt;em&gt;OpenShift&lt;/em&gt; gives some nice benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All static assets are managed with Git and stored in the same place where the application
code and HTML is - easy to develop and deploy;&lt;/li&gt;
&lt;li&gt;No need for external service to host the static files;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;CloudFront&lt;/em&gt; will be serving the files so network load on &lt;em&gt;OpenShift&lt;/em&gt; is minimal;&lt;/li&gt;
&lt;li&gt;Easy to manage versioned URLs because HTML and static assets are in the same repo - more on this later;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Object expiration&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;CloudFront&lt;/em&gt; will cache your objects for a certain period and then expire them. Frequently
used objects are expired less often. Depending on the content you may want to update the cache
more or less frequently. In my case CSS and JavaScript files change rarely so I wanted to tell
CloudFront to not expire the files quickly. I did this by telling &lt;em&gt;Apache&lt;/em&gt; to send a custom value for
the Expires header.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ curl http://d71ktrt2emu2j.cloudfront.net/static/v1/css/style.css -D headers.txt
    $ cat headers.txt 
    HTTP/1.0 200 OK
    Date: Mon, 16 Apr 2012 19:02:16 GMT
    Server: Apache/2.2.15 (Red Hat)
    Last-Modified: Mon, 16 Apr 2012 19:00:33 GMT
    ETag: &amp;quot;120577-1b2d-4bdd06fc6f640&amp;quot;
    Accept-Ranges: bytes
    Content-Length: 6957
    Cache-Control: max-age=31536000
    Expires: Tue, 16 Apr 2013 19:02:16 GMT
    Content-Type: text/css
    Strict-Transport-Security: max-age=15768000, includeSubDomains
    Age: 73090
    X-Cache: Hit from cloudfront
    X-Amz-Cf-Id: X558vcEOsQkVQn5V9fbrWNTdo543v8VStxdb7LXIcUWAIbLKuIvp-w==,e8Dipk5FSNej3e0Y7c5ro-9mmn7OK8kWfbaRGwi1ww8ihwVzSab24A==
    Via: 1.0 d6343f267c91f2f0e78ef0a7d0b7921d.cloudfront.net (CloudFront)
    Connection: close
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All headers before Strict-Transport-Security come from the origin server.&lt;/p&gt;
&lt;h2&gt;Versioning&lt;/h2&gt;
&lt;p&gt;Sometimes however you need to update the files and force &lt;em&gt;CloudFront&lt;/em&gt; to update the content. 
The recommended way to do this is to use URL versioning and update the path to the files
which changed. This will force &lt;em&gt;CloudFront&lt;/em&gt; to cache and serve the content under the new path
while keeping the old content available until it expires. This way your visitors will not be
viewing your site with the new CSS and old JavaScript. &lt;/p&gt;
&lt;p&gt;There are many ways to do this and there are some nice frameworks as well. For Python there is &lt;em&gt;webassets&lt;/em&gt;.
I don't have many static files so I opted for no additional dependencies. Instead I will be updating the
versions by hand.&lt;/p&gt;
&lt;p&gt;What comes to mind is using &lt;em&gt;mod_rewrite&lt;/em&gt; to redirect the versioned URLs back to non versioned ones.
However there's a catch. If you do this &lt;em&gt;CloudFront&lt;/em&gt; will cache the redirect itself, not the content.
The next time visitors hit &lt;em&gt;CloudFront&lt;/em&gt; they will receive the cached redirect and follow it back to your
origin server, which is defeating the purpose of having CDN.&lt;/p&gt;
&lt;p&gt;To do it properly you have to rewrite the URLs but still return a 200 response code and the
content which needs to be cached. This is done with &lt;em&gt;mod_proxy&lt;/em&gt;: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    RewriteEngine on
    RewriteRule ^VERSION-(\d+)/(.*)$ http://%{ENV:OPENSHIFT_INTERNAL_IP}:%{ENV:OPENSHIFT_INTERNAL_PORT}/static/$2 [P,L]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This .htaccess trick doesn't work on &lt;em&gt;OpenShift&lt;/em&gt; though. &lt;em&gt;mod_proxy&lt;/em&gt; is not enabled at the moment.
See &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=812389"&gt;bug 812389&lt;/a&gt; for more info.&lt;/p&gt;
&lt;p&gt;Luckily I was able to use symlinks to point to the content. Here's how it looks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;    $ pwd&lt;/span&gt;
&lt;span class="x"&gt;    /home/atodorov/difio/wsgi/static&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;
&lt;span class="x"&gt;    $ cat .htaccess&lt;/span&gt;
&lt;span class="x"&gt;    ExpiresActive On&lt;/span&gt;
&lt;span class="x"&gt;    ExpiresDefault &amp;quot;access plus 1 year&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;
&lt;span class="x"&gt;    $ ls -l&lt;/span&gt;
&lt;span class="x"&gt;    drwxrwxr-x. 6 atodorov atodorov 4096 16 Apr 21,31 o&lt;/span&gt;
&lt;span class="x"&gt;    lrwxrwxrwx. 1 atodorov atodorov    1 16 Apr 21,47 v1 -&amp;gt; o&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;
&lt;span class="x"&gt;    settings.py:&lt;/span&gt;
&lt;span class="x"&gt;    STATIC_URL = &amp;#39;//d71ktrt2emu2j.cloudfront.net/static/v1/&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;
&lt;span class="x"&gt;    HTML template:&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;link type=&amp;quot;text/css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; media=&amp;quot;screen&amp;quot; href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;STATIC_URL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;css/style.css&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;How to implement it&lt;/h2&gt;
&lt;p&gt;First you need to split all CSS and JavaScript from your HTML if you haven't done so already. &lt;/p&gt;
&lt;p&gt;Then place everything under your git repo so that &lt;em&gt;OpenShift&lt;/em&gt; will serve the files. For Python applications
place the files under wsgi/static/ directory in your git repo.&lt;/p&gt;
&lt;p&gt;Point all of your HTML templates to the static location on &lt;em&gt;OpenShift&lt;/em&gt; and test if everything works as expected. 
This is best done if you're using some sort of template language and store the location
in a single variable which you can change later.
&lt;em&gt;Difio&lt;/em&gt; uses &lt;em&gt;Django&lt;/em&gt; and the &lt;em&gt;STATIC_URL&lt;/em&gt; variable of course.&lt;/p&gt;
&lt;p&gt;Create your &lt;em&gt;CloudFront&lt;/em&gt; distribution - don't use &lt;em&gt;Amazon S3&lt;/em&gt;, instead configure a custom origin server. Write down
your &lt;em&gt;CloudFront&lt;/em&gt; URL. It will be something like &lt;strong&gt;1234xyz.cludfront.net&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Every time a request hits &lt;em&gt;CloudFront&lt;/em&gt; it will check if the object is present in the cache. If not present
&lt;em&gt;CloudFront&lt;/em&gt; will fetch the object from the origin server and populate the cache. Then the object is sent
to the user.&lt;/p&gt;
&lt;p&gt;Update your templates to point to the new cloudfront.net URL and redeploy your website!&lt;/p&gt;</summary><category term="OpenShift"></category><category term="Amazon"></category><category term="cloud"></category></entry><entry><title>OpenShift Cron Takes Over Celerybeat</title><link href="http://atodorov.org/blog/2012/03/14/openshift-cron-takes-over-celerybeat/" rel="alternate"></link><updated>2012-03-14T20:48:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-03-14:blog/2012/03/14/openshift-cron-takes-over-celerybeat/</id><summary type="html">&lt;p&gt;&lt;a href="http://celeryproject.org/"&gt;&lt;em&gt;Celery&lt;/em&gt;&lt;/a&gt; is an asynchronous task queue/job queue
based on distributed message passing. You can define tasks as Python functions,
execute them in the background and in a periodic fashion.
&lt;a href="http://www.dif.io"&gt;&lt;em&gt;Difio&lt;/em&gt;&lt;/a&gt; uses &lt;em&gt;Celery&lt;/em&gt; for virtually everything.
Some of the tasks are scheduled after some event takes place (like user pressed a button)
or scheduled periodically.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Celery&lt;/em&gt; provides several components of which &lt;em&gt;celerybeat&lt;/em&gt; is the periodic task scheduler.
When combined with &lt;a href="http://djangoproject.com"&gt;&lt;em&gt;Django&lt;/em&gt;&lt;/a&gt; it gives you a very nice admin interface
which allows periodic tasks to be added to the scheduler.&lt;/p&gt;
&lt;h2&gt;Why change&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Difio&lt;/em&gt; has relied on &lt;em&gt;celerybeat&lt;/em&gt; for a couple of months. Back then, when &lt;em&gt;Difio&lt;/em&gt; launched,
there was no cron support for OpenShift so running &lt;em&gt;celerybeat&lt;/em&gt; sounded reasonable.
It used to run on a dedicated virtual server and for most of the time that was fine. &lt;/p&gt;
&lt;p&gt;There were a number of issues which &lt;em&gt;Difio&lt;/em&gt; faced during its first months:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;celerybeat&lt;/em&gt; would sometime die due to no free memory on the virtual instance.
When that happened no new tasks were scheduled and data was left unprocessed.
Let alone that higher memory instance and the processing power which comes with it
cost extra money.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Difio&lt;/em&gt; is split into several components which need to have the same code base
locally - the most important are database settings and the periodic tasks
code. At least in one occasion &lt;em&gt;celerybeat&lt;/em&gt; failed to start because of a buggy 
task code. The offending code was fixed in the application server on OpenShift but
not properly synced to the &lt;em&gt;celerybeat&lt;/em&gt; instance. Keeping code in sync is a priority
for distributed projects which rely on &lt;em&gt;Celery&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Celery&lt;/em&gt; and &lt;em&gt;django-celery&lt;/em&gt; seem to be updated quite often. This poses a significant risk
of ending up with different versions on the scheduler, worker nodes and the app server. This will
bring the whole application to a halt if at some point a backward incompatible change is introduced
and not properly tested and updated. Keeping infrastructure components in sync can be a big challenge
and I try to minimize this effort as much as possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Having to navigate to the admin pages every time I add a new task or want to change the execution
frequency doesn't feel very natural for a console user like myself and IMHO is less productive.
For the record I primarily use &lt;em&gt;mcedit&lt;/em&gt;. I wanted to have something more close to the
write, commit and push work-flow.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The take over&lt;/h2&gt;
&lt;p&gt;It's been some time since OpenShift
&lt;a href="https://www.redhat.com/openshift/community/blogs/getting-started-with-cron-jobs-on-openshift"&gt;introduced&lt;/a&gt;
the cron cartridge and I decided to give it a try.&lt;/p&gt;
&lt;p&gt;The first thing I did is to write a simple script which can execute any task from the difio.tasks module
by piping it to the Django shell (a Python shell actually).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;span class="filename"&gt;run_celery_task&lt;/span&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Copyright (c) 2012, Alexander Todorov &amp;lt;atodorov@nospam.otb.bg&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# This script is symlinked to from the hourly/minutely, etc. directories&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# SYNOPSIS&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# ./run_celery_task cron_search_dates&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# OR&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# ln -s run_celery_task cron_search_dates&lt;/span&gt;
&lt;span class="c"&gt;# ./cron_search_dates&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;

&lt;span class="nv"&gt;TASK_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$TASK_NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;TASK_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$OPENSHIFT_APP_DIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_APP_DIR&lt;/span&gt;/virtenv/bin/activate
    &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PYTHON_EGG_CACHE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;/.python-eggs
    &lt;span class="nv"&gt;REPO_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$OPENSHIFT_REPO_DIR&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;REPO_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/../../..&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;import difio.tasks; difio.tasks.&lt;/span&gt;&lt;span class="nv"&gt;$TASK_NAME&lt;/span&gt;&lt;span class="s2"&gt;.delay()&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;$REPO_DIR&lt;/span&gt;/wsgi/difio/manage.py shell
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a multicall script which allows symlinks with different names to point to it. 
Thus to add a new task to cron I just need to make a symlink to the script from one of the
hourly/, minutely/, daily/, etc. directories under cron/.&lt;/p&gt;
&lt;p&gt;The script accepts a parameter as well which allows me to execute it locally for debugging purposes
or to schedule some tasks out of band.
This is how it looks like on the file system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls -l .openshift/cron/hourly/
some_task_name -&amp;gt; ../tasks/run_celery_task
another_task -&amp;gt; ../tasks/run_celery_task
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After having done these preparations I only had to embed the cron cartridge and git push to OpenShift:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rhc-ctl-app -a difio -e add-cron-1.4 &amp;amp;&amp;amp; git push
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;What's next&lt;/h2&gt;
&lt;p&gt;At present OpenShift can schedule your jobs every minute, hour, day, week or month and does so using the
&lt;em&gt;run-parts&lt;/em&gt; script. You can't schedule a script to execute at 4:30 every Monday or every 45 minutes for example.
See &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=803485"&gt;rhbz #803485&lt;/a&gt; if you want to follow the
progress. Luckily &lt;em&gt;Difio&lt;/em&gt; doesn't use this sort of job scheduling for the moment.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Difio&lt;/em&gt; is scheduling periodic tasks from OpenShift cron for a few days already. 
It seems to work reliably and with no issues. One less component to maintain and worry about.
More time to write code.&lt;/p&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Tip: How to Get to the OpenShift Shell</title><link href="http://atodorov.org/blog/2012/03/09/how-to-get-to-the-openshift-shell/" rel="alternate"></link><updated>2012-03-09T21:43:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-03-09:blog/2012/03/09/how-to-get-to-the-openshift-shell/</id><summary type="html">&lt;p&gt;I wanted to examine the Perl environment on OpenShift and got tired of making snapshots,
unzipping the archive and poking through the files. I wanted a shell. Here's how to get one.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get the application info first&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rhc-domain-info 
Password: 
Application &lt;span class="nv"&gt;Info&lt;/span&gt;
&lt;span class="o"&gt;================&lt;/span&gt;
myapp
    Framework: perl-5.10
     Creation: 2012-03-08T13:34:46-04:00
         UUID: 8946b976ad284cf5b2401caf736186bd
      Git URL: ssh://8946b976ad284cf5b2401caf736186bd@myapp-mydomain.rhcloud.com/~/git/myapp.git/
   Public URL: http://myapp-mydomain.rhcloud.com/

 Embedded: 
      None
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Git URL has your username and host&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now just ssh into the application&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh 8946b976ad284cf5b2401caf736186bd@myapp-mydomain.rhcloud.com

    Welcome to OpenShift shell

    This shell will assist you in managing OpenShift applications.

    !!! IMPORTANT !!! IMPORTANT !!! IMPORTANT !!!
    Shell access is quite powerful and it is possible &lt;span class="k"&gt;for&lt;/span&gt; you to
    accidentally damage your application.  Proceed with care!
    If worse comes to worst, destroy your application with &lt;span class="s1"&gt;&amp;#39;rhc app destroy&amp;#39;&lt;/span&gt;
    and recreate it
    !!! IMPORTANT !!! IMPORTANT !!! IMPORTANT !!!

    Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more info.

&lt;span class="o"&gt;[&lt;/span&gt;myapp-mydomain.rhcloud.com ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Voila!&lt;/strong&gt;&lt;/p&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>How to Update Dependencies on OpenShift</title><link href="http://atodorov.org/blog/2012/02/18/how-to-update-dependencies-on-openshift/" rel="alternate"></link><updated>2012-02-18T01:00:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-02-18:blog/2012/02/18/how-to-update-dependencies-on-openshift/</id><summary type="html">&lt;p&gt;If you are already running some cool application on &lt;a href="http://openshift.redhat.com"&gt;OpenShift&lt;/a&gt;
it could be the case that you have to update some of the packages installed as dependencies.
Here is an example for an application using the python-2.6 cartridge.&lt;/p&gt;
&lt;h2&gt;Pull latest upstream packages&lt;/h2&gt;
&lt;p&gt;The most simple method is to update everything to the latest upstream versions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Backup! Backup! Backup!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rhc-snapshot -a mycoolapp
mv mycoolapp.tar.gz mycoolapp-backup-before-update.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you haven't specified any particular version in &lt;code&gt;setup.py&lt;/code&gt; it will
look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;difio-openshift-python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;MySQL-python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;Markdown&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To update simply push to OpenShift instructing it to rebuild your virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd mycoolapp/
touch .openshift/markers/force_clean_build
git add .openshift/markers/force_clean_build
git commit -m &amp;quot;update to latest upstream&amp;quot;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Voila! The environment hosting your application is rebuilt from scratch.&lt;/p&gt;
&lt;h2&gt;Keeping some packages unchanged&lt;/h2&gt;
&lt;p&gt;Suppose that before the update you have &lt;code&gt;Markdown-2.0.1&lt;/code&gt; and you want to keep it!
This is easily solved by adding versioned dependency to &lt;code&gt;setup.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gd"&gt;-       &amp;#39;Markdown&amp;#39;,&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;#39;Markdown==2.0.1&amp;#39;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you do that OpenShift will install the same &lt;code&gt;Markdown&lt;/code&gt; version when rebuilding your
application. Everything else will use the latest available versions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; after the update it's recommended that you remove the 
&lt;code&gt;.openshift/markers/force_clean_build&lt;/code&gt; file. This will speed up the push/build process
and will not surprise you with unwanted changes.&lt;/p&gt;
&lt;h2&gt;Update only selected packages&lt;/h2&gt;
&lt;p&gt;Unless your application is really simple or you have tested the updates, I suspect that
you want to update only selected packages. This can be done without rebuilding the whole
virtualenv. Use versioned dependencies in &lt;code&gt;setup.py&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gd"&gt;-       &amp;#39;Markdown==2.0.1&amp;#39;,&lt;/span&gt;
&lt;span class="gd"&gt;-       &amp;#39;django-countries&amp;#39;,&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;#39;Markdown&amp;gt;=2.1&amp;#39;,&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;#39;django-countries&amp;gt;=1.1.2&amp;#39;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No need for &lt;code&gt;force_clean_build&lt;/code&gt; this time. Just&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    git commit &amp;amp;&amp;amp; git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At the time of writing my application was using &lt;code&gt;Markdown-2.0.1&lt;/code&gt; and &lt;code&gt;django-countries-1.0.5&lt;/code&gt;.
Then it updated to &lt;code&gt;Markdown-2.1.1&lt;/code&gt; and &lt;code&gt;django-countires-1.1.2&lt;/code&gt; which also happened to be
the latest versions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this will not work without &lt;code&gt;force_clean_build&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gd"&gt;-       &amp;#39;django-countries==1.0.5&amp;#39;,&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;#39;django-countries&amp;#39;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Warning&lt;/h2&gt;
&lt;p&gt;OpenShift uses a local mirror of &lt;a href="http://pypi.python.org"&gt;Python Package Index&lt;/a&gt;.
It seems to be updated every 24 hours or so. Have this in mind if you want to update
to a package that was just released. It will not work! See
&lt;a href="/blog/2013/04/24/how-to-deploy-python-hotfix-on-redhat-openshift-cloud/"&gt;How to Deploy Python Hotfix on OpenShift&lt;/a&gt;
if you wish to work around this limitation.&lt;/p&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Spinning-up a Development Instance on OpenShift</title><link href="http://atodorov.org/blog/2012/02/10/spinning-up-a-development-instance-on-openshift/" rel="alternate"></link><updated>2012-02-10T21:19:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2012-02-10:blog/2012/02/10/spinning-up-a-development-instance-on-openshift/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.dif.io"&gt;Difio&lt;/a&gt; is hosted on &lt;a href="http://openshift.redhat.com"&gt;OpenShift&lt;/a&gt;.
During development I often need to spin-up another copy of Difio to use for testing and development.
With OpenShift this is easy and fast. Here's how:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create another application on OpenShift. This will be your development instance.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rhc-create-app -a myappdevel -t python-2.6
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find out the git URL for the production application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rhc-user-info
Application &lt;span class="nv"&gt;Info&lt;/span&gt;
&lt;span class="o"&gt;================&lt;/span&gt;
myapp
    Framework: python-2.6
     Creation: 2012-02-10T12:39:53-05:00
         UUID: 723f0331e17041e8b34228f87a6cf1f5
      Git URL: ssh://723f0331e17041e8b34228f87a6cf1f5@myapp-mydomain.rhcloud.com/~/git/myapp.git/
   Public URL: http://myapp-mydomain.rhcloud.com/
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push the current code base from the production instance to devel instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd myappdevel
git remote add production -m master ssh://723f0331e17041e8b34228f87a6cf1f5@myapp-mydomain.rhcloud.com/~/git/myapp.git/
git pull -s recursive -X theirs production master
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now your &lt;code&gt;myappdevel&lt;/code&gt; is the same as your production instance. You will probably want to
modify your database connection settings at this point and start adding new features.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="tips"></category><category term="OpenShift"></category><category term="cloud"></category></entry><entry><title>Protected RPM repositories with yum and SSL</title><link href="http://atodorov.org/blog/2011/09/15/protected-rpm-repositories-with-yum-and-ssl/" rel="alternate"></link><updated>2011-09-15T19:40:00+03:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2011-09-15:blog/2011/09/15/protected-rpm-repositories-with-yum-and-ssl/</id><summary type="html">&lt;p&gt;In this article I'm going to describe a simple way to set-up RPM repositories with access control using only standard tools such as yum, SSL and Apache.
I've been talking about this at one of the monthly conferences of Linux for Bulgarians!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Objective:&lt;/strong&gt;&lt;br /&gt;
Create RPM repository with access control. Access is allowed only for some systems and forbidden for the rest. This is a similar to what Red Hat Network does. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;br /&gt;
We're going to use yum and Apache capabilities to work with SSL certificates. The client side (yum) will identify itself using SSL certificate and the server (Apache) will use this information to control the access.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Client side set-up:&lt;/strong&gt;&lt;br /&gt;
&lt;ol&gt;
  &lt;li&gt;
Yum version 3.2.27 or newer supports SSL certificates for client authentication. This version is available in Red Hat Enterprise Linux 6. 
  &lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
First you need to generate a private key and certificate using OpenSSL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# openssl genrsa -out /var/lib/yum/client.key 1024&lt;/span&gt;
&lt;span class="n"&gt;Generating&lt;/span&gt; &lt;span class="n"&gt;RSA&lt;/span&gt; &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="n"&gt;bit&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;modulus&lt;/span&gt;
&lt;span class="p"&gt;....&lt;/span&gt;&lt;span class="o"&gt;++++++&lt;/span&gt;
&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="o"&gt;++++++&lt;/span&gt;
&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;65537&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0x10001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="cp"&gt;# openssl req -new -x509 -text -key /var/lib/yum/client.key -out /var/lib/yum/client.cert&lt;/span&gt;
&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;asked&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;incorporated&lt;/span&gt;
&lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;called&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;Distinguished&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;DN&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;There&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;quite&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;few&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;leave&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;
&lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;-----&lt;/span&gt;
&lt;span class="n"&gt;Country&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;BG&lt;/span&gt;
&lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;Province&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;full&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Sofia&lt;/span&gt;
&lt;span class="n"&gt;Locality&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt; &lt;span class="n"&gt;City&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Sofia&lt;/span&gt;
&lt;span class="n"&gt;Organization&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;company&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt; &lt;span class="n"&gt;Company&lt;/span&gt; &lt;span class="n"&gt;Ltd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt; &lt;span class="n"&gt;Technologies&lt;/span&gt; &lt;span class="n"&gt;Bulgaria&lt;/span&gt;
&lt;span class="n"&gt;Organizational&lt;/span&gt; &lt;span class="n"&gt;Unit&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;section&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;IT&lt;/span&gt;
&lt;span class="n"&gt;Common&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;otb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;

&lt;p&gt;&lt;li&gt;
For better security you can change file permissions of &lt;em&gt;client.key&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# chmod 600 /var/lib/yum/client.key
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;

&lt;p&gt;&lt;li&gt;
You need to define the protected repository in a .repo file. It needs to look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# cat /etc/yum.repos.d/protected.repo
[protected]
name=SSL protected repository
baseurl=https://repos.example.com/protected
enabled=1
gpgcheck=1
gpgkey=https://repos.example.com/RPM-GPG-KEY

sslverify=1
sslclientcert=/var/lib/yum/client.cert
sslclientkey=/var/lib/yum/client.key
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;

&lt;p&gt;&lt;li&gt;
If you use self-signed server certificate you can specify  &lt;em&gt;sslverify=0&lt;/em&gt;, but this is not recommended.
  &lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;p&gt;Whenever yum tries to reach the URL of the repository it will identify itself using the specified certificate.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Server side set-up:&lt;/strong&gt;&lt;br /&gt;
&lt;ol&gt;
  &lt;li&gt;
Install and configure the &lt;em&gt;mod_ssl&lt;/em&gt; module for Apache.
  &lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
Create a directory for the repository which will be available over HTTPS.
  &lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
In the repository directory add &lt;em&gt;.htaccess&lt;/em&gt;, which looks something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Action rpm-protected /cgi-bin/rpm.cgi
AddHandler rpm-protected .rpm .drpm
SSLVerifyClient optional_no_ca
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;

&lt;p&gt;&lt;li&gt;
The &lt;em&gt;Action&lt;/em&gt; and &lt;em&gt;AddHandler&lt;/em&gt; directives instruct Apache to run the &lt;em&gt;rpm.cgi&lt;/em&gt; CGI script every time someone tries to access files with extension .rpm and .drpm.
  &lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
The &lt;em&gt;SSLVerifyClient&lt;/em&gt; directive tells Apache that the http client may present a valid certificate but it has not to be (successfully) verifyable.
For more information on this configuration please see
&lt;a href="http://www.modssl.org/docs/2.1/ssl_reference.html#ToC13"&gt;http://www.modssl.org/docs/2.1/ssl_reference.html#ToC13&lt;/a&gt;.
  &lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;
The simplest form of &lt;em&gt;rpm.cgi&lt;/em&gt; script may look like this:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$SSL_CLIENT_M_SERIAL&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9F938211B53B4F44&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Content-type: application/x-rpm&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Content-length: &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;stat --printf&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%s&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$PATH_TRANSLATED&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;

&lt;span class="nb"&gt;    &lt;/span&gt;cat &lt;span class="nv"&gt;$PATH_TRANSLATED&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Status: 403&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/li&gt;

&lt;p&gt;&lt;li&gt;
The script will allow access to a client which uses a certificate with serial number &lt;em&gt;9F938211B53B4F44&lt;/em&gt;. Other clients will be denied access and the server will return standard 403 error code.
  &lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In practice:&lt;/strong&gt;&lt;br /&gt;
The above set-up is very basic and only demonstrates the technology behind this. In a real world configuration you will need some more tools to make this really usable. &lt;/p&gt;
&lt;p&gt;My company &lt;a href="http://otb.bg"&gt;Open Technologies Bulgaria, Ltd.&lt;/a&gt; has developed a custom solution for our customers based on the above example called Voyager. It features a Drupal module, a CGI script and a client side yum plugin. &lt;/p&gt;
&lt;p&gt;The Drupal module acts as web interface to the system and allows some basic tasks. Administrators can define software channels and subscription expiration. Customers can register and entitle their systems to particular channels. The functionality is similar to Red Hat Network but without all the extra features which we don't need.&lt;/p&gt;
&lt;p&gt;The CGI script acts as a glue between the client side and the Drupal backend. It will read information about client credentials and act as first line of defence against non-authorized access. Then it will communicate with the Drupal database and get more information about this customer. If everything is OK then access will be allowed. &lt;/p&gt;
&lt;p&gt;The yum plugin has the task to communicate with the Drupal backend and dynamically update repository definitions based on available subscriptions. Then it will send a request for the RPM file back to the Apache server where the CGI script will handle it.&lt;/p&gt;
&lt;p&gt;The client side also features a tool to generate the client certificate and register the system to the server. &lt;/p&gt;
&lt;p&gt;All communications are entirely over HTTPS. &lt;/p&gt;
&lt;p&gt;This custom solution has the advantage that it is simple and easy to maintain as well as easy to use. It integrates well with other plugins (e.g. yum-presto for delta rpm support and yum-rhnplugin) and can be used via yum or PackageKit which are the standard package management tools on Red Hat Enterprise Linux 6.&lt;/p&gt;</summary><category term="RHEL"></category></entry><entry><title>USB multi-seat on Red Hat Enterprise Linux 6</title><link href="http://atodorov.org/blog/2011/03/14/usb-multi-seat-on-red-hat-enterprise-linux-6/" rel="alternate"></link><updated>2011-03-14T20:10:00+02:00</updated><author><name>Alexander Todorov</name></author><id>tag:atodorov.org,2011-03-14:blog/2011/03/14/usb-multi-seat-on-red-hat-enterprise-linux-6/</id><summary type="html">&lt;p&gt;Multiseat configurations are well known in the Linux community and have been used for a number of years now. In the last few years USB docking stations emerged on the market and are becoming popular among multiseat enthusiasts. &lt;/p&gt;
&lt;p&gt;My company &lt;a href="http://otb.bg"&gt;Open Technologies Bulgaria, Ltd.&lt;/a&gt; offers full support of USB multiseat for Red Hat Enterprise Linux 6 as a downstream vendor. We use the name SUMU (simple usb multi user) to refer to the entire multiseat bundle and in this article I'm going to describe the current state of technologies surrounding multiseat, how that works on RHEL 6 and some practical observations.&lt;/p&gt;
&lt;h2&gt;COMPONENTS&lt;/h2&gt;
&lt;p&gt;To build a multiseat system you need a number of individual components:&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/plugable_docking_station.png" alt="UD-160-A" style="float: right;"/&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    USB docking station like Plugable's &lt;a href="http://plugable.com/products/UD-160-A"&gt;UD-160-A&lt;/a&gt; or a combination of &lt;a href="http://plugable.com/products/"&gt;USB video card&lt;/a&gt; and stand alone USB hub. It is also possible to use USB docking stations from other vendors but I'm not aware of anyone who did it.
  &lt;/li&gt;

  &lt;li&gt;
&lt;em&gt;udlfb&lt;/em&gt; - a kernel driver for USB graphics adapters which use DisplayLink based chips. As of January 2011 udlfb.c is part of the mainline kernel tree and is on track for 2.6.38. On RHEL6 this can easily be built as a stand alone module. There are no issues with this package.

We also use a custom patch that will draw the string "fbX" onto the green screen. This is useful for easier identification of the display. The patch can be found &lt;a href="http://otb-sources.googlecode.com/svn/trunk/sumu/udlfb-kmod/fbX-numbering.patch"&gt;here&lt;/a&gt;.
  &lt;/li&gt;

  &lt;li&gt;
&lt;em&gt;Xorg&lt;/em&gt; - this is the standard graphics server on Linux. In RHEL 6 we have xorg-x11-server-Xorg-1.7.7-26 which works perfectly in a multiseat environment.
  &lt;/li&gt;

  &lt;li&gt;
&lt;em&gt;xorg-x11-drv-fbdev&lt;/em&gt; with extensions - Xorg driver based on the &lt;em&gt;fbdev&lt;/em&gt; driver. The extensions add support for the X DAMAGE protocol. This is a temporary solution until Xorg adds support for the damage protocol. Our package is called &lt;em&gt;xorg-x11-drv-fbdev-displaylink&lt;/em&gt; to avoid conflict with the stock package provided by the distribution and it installs the files in &lt;em&gt;/usr/local&lt;/em&gt;. You can also change the compiler flags and produce a binary under a different name (say &lt;em&gt;displaylink_drv.so&lt;/em&gt; instead of &lt;em&gt;fbdev_drv.so&lt;/em&gt;).
  &lt;/li&gt;

  &lt;li&gt;
&lt;em&gt;GDM&lt;/em&gt; with multiseat support - GDM will manage multiple local displays and has the ability to add/remove displays dynamically. This functionality is present in versions up to 2.20 and since RHEL6 includes gdm-2.30.4-21.el6 this is a tough choice. There are several possibilities:
&lt;ol&gt;
  &lt;li&gt;
Use older &lt;em&gt;GDM&lt;/em&gt;, preferably from a previous RHEL release. This gives you a tested piece of software and as long as the previous release is maintained you have (at least some) opportunity of fixing bugs in this code base. However this conflicts with current &lt;em&gt;GDM&lt;/em&gt; in the distro which is also integrated with &lt;em&gt;ConsoleKit&lt;/em&gt;, &lt;em&gt;Plymouth&lt;/em&gt; and &lt;em&gt;PulseAudio&lt;/em&gt;.
  &lt;/li&gt;

  &lt;li&gt;
Use &lt;em&gt;GDM&lt;/em&gt; and &lt;em&gt;ConsoleKit&lt;/em&gt; that are available in RHEL6 and apply the multiseat patches available at
https://bugs.freedesktop.org/show_bug.cgi?id=19333 and http://bugzilla.gnome.org/show_bug.cgi?id=536355.

Those patches are quite big (around 3000 lines each) and are not yet fully integrated upstream. They also conflict with custom patches that Red Hat is shipping into these packages. Your patched packages will also conflict with the stock distro packages and you will not receive any support for that. Since &lt;em&gt;ConsoleKit&lt;/em&gt; seems like fairly important application I'd not recommend modifying it.
  &lt;/li&gt;

  &lt;li&gt;
Use another display manager that can handle multiple displays. https://help.ubuntu.com/community/MultiseatX suggests to use &lt;em&gt;KDM&lt;/em&gt; instead of &lt;em&gt;GDM&lt;/em&gt;. As far as I can tell the configuration is only static and this can break any time due to the fact that USB device discovery is unpredictable and unreliable. It also lacks an alternative for &lt;em&gt;gdmdynamic&lt;/em&gt; according to http://lists.kde.org/?l=kde-devel&amp;m=129898381127854&amp;w=2 which makes it a no-go for plug-and-play multiseat support.

There are other less popular display managers but I haven't spend much time in research.
  &lt;/li&gt;

  &lt;li&gt;
Just for the record it is also possible that one writes a custom display manager for multiseat operations. This sounds like an overkill and there are many factors which need to be taken into account. If you have enough resources and knowledge to write a display manager you'd better give upstream a hand instead of reinventing the wheel. 
  &lt;/li&gt;
&lt;/ol&gt;

We've decided to use &lt;em&gt;GDM 2.16&lt;/em&gt; from RHEL5 due to the above factors. In practice it turns out that there aren't many issues with this version.
  &lt;/li&gt;

  &lt;li&gt;
&lt;em&gt;A GDM theme&lt;/em&gt; - since the GDM version we're using requires a theme which is missing in RHEL6 this is also provided as a separate package. A GDM theme is an XML file plus some images.
  &lt;/li&gt;

  &lt;li&gt;
&lt;em&gt;udev rules, scripts and config files&lt;/em&gt; - this is the glue between all the other components. Their primary job is to group the display-mouse-keyboard pairs for a given seat and start the display with the appropriate configuration settings. We also have support for &lt;em&gt;PulseAudio&lt;/em&gt;.
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;RHEL6 SPECIFICS&lt;/h2&gt;
&lt;p&gt;For detailed description of multiseat configuration take a look at http://plugable.com/2009/11/16/setting-up-usb-multiseat-with-displaylink-on-linux-gdm-up-to-2-20/ or at our &lt;a href="http://otb-sources.googlecode.com/svn/trunk/sumu/"&gt;source code&lt;/a&gt;. I'm going to describe only the differences in RHEL6.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;GDM&lt;/em&gt;, &lt;em&gt;udlfb&lt;/em&gt; and &lt;em&gt;xorg-x11-drv-fbdev-displaylink&lt;/em&gt; need to be compiled and installed on the system. &lt;/p&gt;
&lt;p&gt;To build an older &lt;em&gt;GDM&lt;/em&gt; on RHEL6 you will need to adjust some of the patches in the src.rpm package to apply cleanly and tweak the .spec file to your needs. This also includes using the appropriate version of &lt;em&gt;ltmain.sh&lt;/em&gt; from the distro.&lt;/p&gt;
&lt;p&gt;The udev rules and scripts are slightly different due to the different device paths in RHEL6:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SYSFS&lt;span class="o"&gt;{&lt;/span&gt;idVendor&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;17e9&amp;quot;&lt;/span&gt;, SYSFS&lt;span class="o"&gt;{&lt;/span&gt;bConfigurationValue&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;RUN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/echo 1 &amp;gt; /sys%p/bConfigurationValue&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;,    &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fb*&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;graphics&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEMS&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usb&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;PROGRAM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/bin/sumu-hub-id /sys/%p/device/../&amp;quot;&lt;/span&gt;, SYMLINK+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usbseat/%c/display&amp;quot;&lt;/span&gt;,  RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/udev/scripts/start-seat %c&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;remove&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fb*&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;graphics&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/udev/scripts/stop-seat %k&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;control*&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sound&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;BUS&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usb&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;PROGRAM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/bin/sumu-hub-id /sys/%p/device/../../../../&amp;quot;&lt;/span&gt;, SYMLINK+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usbseat/%c/sound&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;event*&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;BUS&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usb&amp;quot;&lt;/span&gt;, SYSFS&lt;span class="o"&gt;{&lt;/span&gt;bInterfaceClass&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;03&amp;quot;&lt;/span&gt;, SYSFS&lt;span class="o"&gt;{&lt;/span&gt;bInterfaceProtocol&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;01&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;PROGRAM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/bin/sumu-hub-id /sys/%p/device/../../../../&amp;quot;&lt;/span&gt;, SYMLINK+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usbseat/%c/keyboard&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/udev/scripts/start-seat %c&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;event*&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;BUS&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usb&amp;quot;&lt;/span&gt;, SYSFS&lt;span class="o"&gt;{&lt;/span&gt;bInterfaceClass&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;03&amp;quot;&lt;/span&gt;, SYSFS&lt;span class="o"&gt;{&lt;/span&gt;bInterfaceProtocol&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;02&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;PROGRAM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/bin/sumu-hub-id /sys/%p/device/../../../../&amp;quot;&lt;/span&gt;, SYMLINK+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usbseat/%c/mouse&amp;quot;&lt;/span&gt;,    RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/udev/scripts/start-seat %c&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We also use only &lt;em&gt;/dev/event*&lt;/em&gt; devices for both mouse and keyboard.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;sumu-hub-id&lt;/em&gt; script returns the string busX-devY indicating the location of the device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bus&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat &lt;span class="nv"&gt;$1&lt;/span&gt;/busnum&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;-dev&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat &lt;span class="nv"&gt;$1&lt;/span&gt;/devnum&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;USB device numbering is unique per bus and there isn't a global device identifier as far as I know. On systems with 2 or more USB buses this can lead to mismatch between devices/seats.&lt;/p&gt;
&lt;p&gt;For seat/display numbering we use the number of the framebuffer device associated with the seat. This is unique, numbers start from 1 (&lt;em&gt;fb0&lt;/em&gt; is the text console) and are sequential unlike USB device numbers. This also ensures easy match between &lt;em&gt;$DISPLAY&lt;/em&gt; and &lt;em&gt;/dev/fbX&lt;/em&gt; for debugging purposes.&lt;/p&gt;
&lt;p&gt;Our &lt;em&gt;xorg.conf.sed&lt;/em&gt; template uses evdev as the input driver. This driver is the default in RHEL6:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Section &amp;quot;InputDevice&amp;quot;
    Identifier &amp;quot;keyboard&amp;quot;
    Driver      &amp;quot;evdev&amp;quot;
    Option      &amp;quot;CoreKeyboard&amp;quot;
    Option      &amp;quot;Device&amp;quot;        &amp;quot;/dev/usbseat/%SEAT_PATH%/keyboard&amp;quot;
    Option      &amp;quot;XkbModel&amp;quot;      &amp;quot;evdev&amp;quot;
EndSection

Section &amp;quot;InputDevice&amp;quot;
    Identifier &amp;quot;mouse&amp;quot;
    Driver      &amp;quot;evdev&amp;quot;
    Option      &amp;quot;CorePointer&amp;quot;
    Option      &amp;quot;Protocol&amp;quot; &amp;quot;auto&amp;quot;
    Option      &amp;quot;Device&amp;quot;   &amp;quot;/dev/usbseat/%SEAT_PATH%/mouse&amp;quot;
    Option      &amp;quot;Buttons&amp;quot; &amp;quot;5&amp;quot;
    Option      &amp;quot;ZAxisMapping&amp;quot; &amp;quot;4 5&amp;quot;
EndSection
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We also use a custom &lt;em&gt;gdm.conf&lt;/em&gt; file to avoid conflicts with stock packages. Only the important settings are shown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[daemon]&lt;/span&gt;
&lt;span class="na"&gt;AlwaysRestartServer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;false&lt;/span&gt;
&lt;span class="na"&gt;DynamicXServers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;FlexibleXServers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;VTAllocation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;false&lt;/span&gt;

&lt;span class="k"&gt;[servers]&lt;/span&gt;
&lt;span class="na"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;inactive&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;AlwaysRestartServer=false is necessary to avoid a bug in &lt;em&gt;Xorg&lt;/em&gt;. See below for issues description.&lt;/p&gt;
&lt;p&gt;Audio is supported by setting $PULSE_SINK/$PULSE_SOURCE environment variables using a script in &lt;em&gt;/etc/profile.d&lt;/em&gt; which executes after login.&lt;/p&gt;
&lt;h2&gt;SCALABILITY AND PERFORMANCE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Maximum seats&lt;/strong&gt;:&lt;br /&gt;
The USB standard specifies a maximum of 127 USB devices connected to a single host controller. This means around 30 seats per USB controller depending on the number of devices connected to a USB hub. In practice you will have hard time finding a system which has that many port available. I've used Fujitsu's &lt;a href="http://ts.fujitsu.com/products/standard_servers/tower/primergy_tx100s1.html"&gt;TX100 S1&lt;/a&gt; and &lt;a href="http://ts.fujitsu.com/products/standard_servers/tower/primergy_tx100s2.html"&gt;TX100 S2&lt;/a&gt; which can be expanded to 15 or 16 USB ports using all external and internal ports and additional PCI-USB extension card.&lt;/p&gt;
&lt;p&gt;While larger configuration are possible by using more PCI cards or intermediate hubs those are limited by the USB 2.0 transfer speed (more devices on a single hub, slower graphics) and a &lt;a href="https://bugzilla.kernel.org/show_bug.cgi?id=28682"&gt;bug&lt;/a&gt; in the Linux kernel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Space and cable length&lt;/strong&gt;:&lt;br /&gt;
USB 2.0 limits the cable length to 5 meters. On the market I've found good quality cables running 4.5 meters. This means that your multiseat system needs to be confined is small physical space due to these limitations. In practice using medium sized multiseat system in a 30 square meters space is doable and fits into these limits. This is roughly the size of a class-room in a school.&lt;/p&gt;
&lt;p&gt;You can of course use daisy chaining (up to 5 hubs) and active USB extension cords (11 meters) or USB over CAT5 cables (up to 45 meters) but all of these interfere with USB signal strength and can lead to unpredictable behavior. For example I've see errors opening USB devices when power is not sufficient or too high. Modern computer systems have built in hardware protection and shut off USB ports or randomly reboot when the current on the wire is too strong. I've seen this on a number of occasions and the fix was to completely power off and unplug the system then power it on again.&lt;/p&gt;
&lt;p&gt;Also don't forget that USB video consumes a great deal of the limited USB 2.0 bandwidth. Depending on the workload of the system (e.g. office applications vs. multimedia) you could experience slow graphical response if using extension cords and daisy chaining.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt;:&lt;br /&gt;
For regular desktop use (i.e. nothing in particular) I'd recommend using 32bit operating system. On 64bit systems objects take a lot more memory and you'll need 3-4 times more for the same workload as on 32bit. For example 16 users running Eclipse, gnome-terminal and Firefox will need less that 8GB of memory on 32bit and more than 16GB on 64bit. Python and Java are particularly known to use much more memory on 64bit.&lt;/p&gt;
&lt;p&gt;Regular desktop usage is not CPU intensive and a modern Xeon CPU has no issues with it. One exception is Flash which always causes your CPU to choke. On multiseat that becomes even a bigger problem. If possible disable/remove Flash from the system.&lt;/p&gt;
&lt;p&gt;Multiseat doesn't make any difference when browsing, sending e-mail, etc. You shouldn't experience issues with networking unless your workload doesn't require hi-speed connection or your bandwidth is too low. If this is the case you'd better use the USB NICs available in the docking stations and bond them together, add external PCI NICs or upgrade your networking infrastructure.&lt;/p&gt;
&lt;p&gt;Disk performance is critical in multiseat especially because it affects the look and feel of the system and is visible by the end users. It is usually good practice to place /home on a separate partition and even on a separate disk. Also consider disabling unnecessary caching in user space applications such as Firefox and Nautilus (thumbnails and cache). &lt;/p&gt;
&lt;p&gt;On a system with 2 x 7,2K RPM disks in BIOS RAID1 configuration and a standard RHEL6 installation (i.e. no optimizations configured) where /, swap and /home are on the same RAID array we have 15 users using GNOME, gedit, Firefox, gnome-terminal and gcc. The performance is comparable to stand alone desktop with occasional spikes which cause GNOME to freeze for a second or two. It is expected that disabling unnecessary caching will make things better.&lt;/p&gt;
&lt;p&gt;Depending on the workload (reads vs. writes) you should consider different RAID levels, file system types and settings and changing disk parameters. A good place to start is the "Storage Administration Guide" and "I/O Tuning Guide" at http://docs.redhat.com.&lt;/p&gt;
&lt;h2&gt;KNOWN ISSUES&lt;/h2&gt;
&lt;ul&gt;
 &lt;li&gt;
&lt;a href="https://bugzilla.kernel.org/show_bug.cgi?id=28682"&gt;Bug 28682 - input drivers support limited device numbers (EVDEV_MINORS is 32)&lt;/a&gt; - this bug will block you from adding more than 32 input devices of the same type. For multiseat that means 32 devices which are handled by the event driver which includes mice, keyboards, joystick and special platform events such as the Reboot/Poweroff buttons. This limits the available seats to around 15.
 &lt;/li&gt;

 &lt;li&gt;
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=679122"&gt;Bug 679122 - gnome-volume-control: Sound at 100% and no sound output&lt;/a&gt; - upon first login the user will not hear any sound regardless of the fact that the volume control application shows volume is at 100%.
 &lt;/li&gt;

 &lt;li&gt;
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=682562"&gt;Bug 682562 - gnome-volume-control doesn't respect PULSE_SINK/PULSE_SOURCE&lt;/a&gt; - the volume control application will not behave correctly and may confuse users.
 &lt;/li&gt;

 &lt;li&gt;
Xorg will cause 100% CPU usage after logout - this is due to several factors. The &lt;a href="http://plugable.com/2009/11/16/setting-up-usb-multiseat-with-displaylink-on-linux-gdm-up-to-2-20/"&gt;initial multiseat configuration&lt;/a&gt; had a problem with input duplication. This was fixed by removing "-sharevts -novtswitch" from the X start line and substituting a specific VT - "vt07". 

This works fine unless one of the users logs out of their GNOME session. After that GDM will kill and restart it's process and new Xorg process will be spawned. The restarted instance will loop endlessly executing the following code:


wzxhzdk:4


If you search on the Internet you will find plenty of bug reports related to this code block. The problem is in &lt;em&gt;Xorg&lt;/em&gt; which doesn't properly handle the situation where it can't take control over the terminal. The solution is to not restart &lt;em&gt;Xorg&lt;/em&gt; after user session ends. This is done by setting AlwaysRestartServer=false in &lt;em&gt;gdm.conf&lt;/em&gt;.
 &lt;/li&gt;

 &lt;li&gt;
No integration with &lt;em&gt;SELinux&lt;/em&gt; and &lt;em&gt;ConsoleKit&lt;/em&gt; - while configuring &lt;em&gt;SELinux&lt;/em&gt; in Permissive mode is easy workaround there's no easy workaround for &lt;em&gt;ConsoleKit&lt;/em&gt;. 

Newer &lt;em&gt;GDM&lt;/em&gt; versions register the user session with &lt;em&gt;ConsoleKit&lt;/em&gt; and integrate that into the desktop. Missing integration means that some things will fail. For example &lt;em&gt;NetworkManager&lt;/em&gt; will not allow the user to connect to a VPN connection because it thinks this user is not logged in:


wzxhzdk:5

&lt;/li&gt;

 &lt;li&gt;
No ACLs for external USB flash drives - this is missing upstream and is supposed to land in &lt;em&gt;ConsoleKit&lt;/em&gt;. When a user plugs their USB flash drive on a multiseat system GNOME will try to mount it automatically. If there are multiple users logged in this will either fail or all of them will be able to access the flash drive. 
 &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;PICTURES AND VIDEO&lt;/h2&gt;
&lt;p&gt;Pictures from one of our deployments can be found on Facebook (no login required):
&lt;a href="http://www.facebook.com/album.php?aid=54571&amp;amp;id=180150925328433"&gt;http://www.facebook.com/album.php?aid=54571&amp;amp;id=180150925328433&lt;/a&gt;.
A demonstration video from the same deployment can be found at &lt;a href="http://www.youtube.com/watch?v=7GYbCDGTz-4"&gt;http://www.youtube.com/watch?v=7GYbCDGTz-4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are interested in commercial support please contact me!&lt;/p&gt;
&lt;h2&gt;FUTURE&lt;/h2&gt;
&lt;p&gt;In the open source world everything is changing and multiseat is no exception. While &lt;em&gt;GDM&lt;/em&gt; and &lt;em&gt;ConsoleKit&lt;/em&gt; patches are not yet integrated upstream there's a new project called &lt;a href="http://www.freedesktop.org/wiki/Software/systemd"&gt;systemd&lt;/a&gt; which aims at replacing the SysV init scripts system. It already has several configuration files for multiseat and I expect it will influence multiseat deployments in the future. Systemd will be available in Fedora 15.&lt;/p&gt;</summary><category term="RHEL"></category></entry></feed>