Title: IT Weekend Highlights
Headline: Pt.3 leadership skills, Oct 28-30
date: 2016-11-02 09:48
comments: true
Tags: events, QA
og_image: images/itweekend_cake.jpg
twitter_image: images/itweekend_cake.jpg

![IT Weekend](/images/itweekend_cake.jpg "IT Weekend")

Last weekend I attended the third [IT Weekend](http://it-weekend.com).
It's like a training camp for athletes but for QA engineers. While during the
[first week]({filename}2016-10-08-it-weekend-1.markdown) the crowd was more in
the junior to mid level range now the crowd was more into the senior level range
which made for better talks and discussions. The most interesting sessions
for me were *On-boarding of New Team Members* by Nikola Naidenov and
*Agile Leadership* by Bogoi Bogdanov. Here are some of the highlights
that I wrote down:

* On-boarding of new team members is very important. You need to have a plan for
their first 6 months at the company. This plan needs to have clearly defined tasks
and expectations;
* When a person becomes productive for their team/company it means they have been
on-boarded successfully;
* A company provided trainer is a good thing but they tend to focus on broader
knowledge, they don't cover team specific domain knowledge;
* Some companies provide both technical and business trainers for their teams;
* It is very important to get timely feedback when you are the one providing training.
However feedback isn't always easy to get and we don't always receive sincere feedback;
* If the team is swamped with work tasks you need to provide 10-20% of the time
for learning and experimenting with new technologies. IMO this is best done by
filing tickets in your bug/task tracking system and prioritizing them together with
the rest of the tasks;
* It is also important to have an individual training plan for each team member
and review this on a regular basis;
* We should strive to use unified terminology and jargon as to not confuse
people. IMO it is usually the new hires who are likely to get confused because they
are not familiar with the history of the terms used;


In an agile environment we calculate productivity using the formula

    Productivity = Effort * Competence * Environment * Motivation^2

There are 3 important factors that drive motivation

* to have a **Purpose**
* to feel **Autonomy**
* to be able to achieve **Mastery** in your skills

It is also important to note that autonomy is not the opposite of alignment
as depicted by the image below.

![Alignment and autonomy](/images/alignment_autonomy.jpg "alignment and autonomy")

In agile environment control is a function of trust. To be able to trust people we
need to give them autonomy, transparency and short feedback loop!

* Manage for the normal treat exceptions as exceptional;
* Failure recovery is more important than failure avoidance;
* Fail fast means learning fast and improving fast.


Thanks for reading and happy testing!

*Photo credit: Rayna Stankova*
